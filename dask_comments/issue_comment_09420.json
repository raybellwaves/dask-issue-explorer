[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1224219212",
        "html_url": "https://github.com/dask/dask/issues/9420#issuecomment-1224219212",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9420",
        "id": 1224219212,
        "node_id": "IC_kwDOAbcwm85I-BpM",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-08-23T15:15:51Z",
        "updated_at": "2022-08-23T15:15:51Z",
        "author_association": "MEMBER",
        "body": "I think the things to consider here are\r\n\r\n1. The maintenance burden and code complexity of trying to support multiple versions of pandas. It can be quite complicated to correctly forward the appropriate keywords depending on the pandas version available at runtime. Supporting more versions  means more maintenance.\r\n2. The benefit to the user of supporting multiple versions of pandas (Dask might be one part of a larger system, which might not be able to easily support newer versions of pandas). Supporting more versions means the latest version of dask can be used by more users.\r\n\r\nIn general, my goal when I was doing pandas compatibility was to match latest version of pandas (matching the method signatures and behavior, warnings and all). If a user calls a deprecated method in pandas, they should see a warning (ideally at *before* graph computation). And user shouldn't see warnings from Dask's internal usage of pandas.\r\n\r\nWe didn't have an official policy on when to bump the minimum required version of pandas. Roughly, it happened when there was a particularly tricky bit of compatibility code that didn't seem worth doing.\r\n\r\nI've been out of the loop for a bit, so I'd be curious to hear from @jsignell about how things are going.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1224219212/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1225898443",
        "html_url": "https://github.com/dask/dask/issues/9420#issuecomment-1225898443",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9420",
        "id": 1225898443,
        "node_id": "IC_kwDOAbcwm85JEbnL",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-08-24T15:41:15Z",
        "updated_at": "2022-08-24T15:41:15Z",
        "author_association": "MEMBER",
        "body": "Thanks for writing this up Tom! I agree with the two contradictory goals. \r\n\r\n\r\n> In general, my goal when I was doing pandas compatibility was to match latest version of pandas (matching the method signatures and behavior, warnings and all).\r\n\r\nThis is really helpful context. I think we have (kind of inadvertently) moved to matching the user's version of pandas particularly when it comes little differences like changes to kwarg defaults. At the time this felt like the best thing to do, the principle being: \"dask matches pandas\", but the code branching can get a little wacky. So I think you are right that matching latest pandas is the way forward. \r\n\r\n> If a user calls a deprecated method in pandas, they should see a warning (ideally at before graph computation). And user shouldn't see warnings from Dask's internal usage of pandas.\r\n\r\nThese both align with what I've been trying to do, with the slight note that the warning probably depends on the user's pandas version. Based on the comment above it seems like we should feel free to warn regardless of pandas version.\r\n\r\n> We didn't have an official policy on when to bump the minimum required version of pandas. Roughly, it happened when there was a particularly tricky bit of compatibility code that didn't seem worth doing.\r\n\r\nI think we are doing a lazy [NEP29](https://numpy.org/neps/nep-0029-deprecation_policy.html) on this now. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1225898443/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]