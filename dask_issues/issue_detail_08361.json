{
    "url": "https://api.github.com/repos/dask/dask/issues/8361",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/8361/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/8361/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/8361/events",
    "html_url": "https://github.com/dask/dask/issues/8361",
    "id": 1047842440,
    "node_id": "I_kwDOAbcwm84-dM6I",
    "number": 8361,
    "title": "Optimized groupby aggregations when grouping by a sorted index",
    "user": {
        "login": "gjoseph92",
        "id": 3309802,
        "node_id": "MDQ6VXNlcjMzMDk4MDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gjoseph92",
        "html_url": "https://github.com/gjoseph92",
        "followers_url": "https://api.github.com/users/gjoseph92/followers",
        "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
        "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
        "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
        "repos_url": "https://api.github.com/users/gjoseph92/repos",
        "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "jcrist",
        "id": 2783717,
        "node_id": "MDQ6VXNlcjI3ODM3MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jcrist",
        "html_url": "https://github.com/jcrist",
        "followers_url": "https://api.github.com/users/jcrist/followers",
        "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
        "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
        "organizations_url": "https://api.github.com/users/jcrist/orgs",
        "repos_url": "https://api.github.com/users/jcrist/repos",
        "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jcrist/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "jcrist",
            "id": 2783717,
            "node_id": "MDQ6VXNlcjI3ODM3MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcrist",
            "html_url": "https://github.com/jcrist",
            "followers_url": "https://api.github.com/users/jcrist/followers",
            "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
            "organizations_url": "https://api.github.com/users/jcrist/orgs",
            "repos_url": "https://api.github.com/users/jcrist/repos",
            "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcrist/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 11,
    "created_at": "2021-11-08T19:33:20Z",
    "updated_at": "2022-03-24T16:02:37Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Similar request to https://github.com/dask/dask/issues/2999\r\n\r\nWhen grouping by the index, and the index has known divisions, most aggregations could be a simple `map_partitions`. Since each partition already contains all the values for an output group[^1], there's no need to exchange data between partitions.\r\n\r\nHowever in these cases, we still do `apply_concat_apply`, `_cum_agg`, etc. and generate complex graphs that involve a lot of data transfer.\r\n\r\nIn normal pandas use, I'm not sure how common it is to groupby the index versus a column. However, in dask, using the known divisions of the index is highly recommended (see [best practices](https://docs.dask.org/en/stable/dataframe-best-practices.html#use-the-index)) and something users should try to do, especially with large datasets. In particular, once shuffling performs better (xref https://github.com/dask/distributed/pull/5435), a pattern of doing one `set_index` up front (or using a partitioned data format like Parquet) and then many fast operations on that should be effective.\r\n\r\nI'd want something like this to involve minimal data transfer after the `set_index` step:\r\n```python\r\nimport dask.dataframe as dd\r\ndf = dd.read_parquet(...)\r\n# a savvy user recognizes this is worthwhile since there are multiple date ops to do next\r\ndf_by_day = df.set_index(\"date\")\r\n\r\ndaily_users = df_by_day.groupby([\"date\", \"user_id\"]).count()\r\ndaily_sales = df_by_day.groupby([\"date\", \"sale_amt\"]).sum()\r\n\r\ndaily_summary = daily_counts.merge(daily_sales, on=\"date\")\r\n# ^ this should be fast since both groupbys have retained their `divisions`\r\n```\r\n\r\nSomeday, it might be nice if users didn't even have to do the `set_index`, and we had an optimization that could recognize that multiple groupbys would benefit from a pre-shuffle and insert one automatically. However, that's a hard optimization to implement (might require HLEs https://github.com/dask/dask/issues/7933) and a ways off. Getting users to understand that they should use `set_index` more carefully than in pandas, and its importance as a performance tool, seems easier. As we do that, let's make sure we're taking as much advantage of it as possible.\r\n\r\n[^1] When all the rows in a partition have the same index value, then you do need to combine partitions. For example: in `divisions=[0, 1, 2, 2, 4, 5]`, the partitions containing 1-2, 2-2, and 2-4 would need to be combined, probably using the normal `apply_concat_apply` logic. However, since we know the divisions, we can be more selective about where we do this and reduce some transfer. With well-balanced partitions, this should be a relatively rare case, and there usually shouldn't be more than a handful of consecutive partitions with the same value.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/8361/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/8361/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}