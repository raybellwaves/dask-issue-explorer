[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1552344275",
        "html_url": "https://github.com/dask/dask/issues/10238#issuecomment-1552344275",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10238",
        "id": 1552344275,
        "node_id": "IC_kwDOAbcwm85chuTT",
        "user": {
            "login": "j-bennet",
            "id": 637013,
            "node_id": "MDQ6VXNlcjYzNzAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/637013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-bennet",
            "html_url": "https://github.com/j-bennet",
            "followers_url": "https://api.github.com/users/j-bennet/followers",
            "following_url": "https://api.github.com/users/j-bennet/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-bennet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-bennet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-bennet/subscriptions",
            "organizations_url": "https://api.github.com/users/j-bennet/orgs",
            "repos_url": "https://api.github.com/users/j-bennet/repos",
            "events_url": "https://api.github.com/users/j-bennet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-bennet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-18T03:11:27Z",
        "updated_at": "2023-05-18T03:11:27Z",
        "author_association": "MEMBER",
        "body": "cc @crusaderky",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1552344275/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1557093100",
        "html_url": "https://github.com/dask/dask/issues/10238#issuecomment-1557093100",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10238",
        "id": 1557093100,
        "node_id": "IC_kwDOAbcwm85cz1rs",
        "user": {
            "login": "crusaderky",
            "id": 6213168,
            "node_id": "MDQ6VXNlcjYyMTMxNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6213168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crusaderky",
            "html_url": "https://github.com/crusaderky",
            "followers_url": "https://api.github.com/users/crusaderky/followers",
            "following_url": "https://api.github.com/users/crusaderky/following{/other_user}",
            "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions",
            "organizations_url": "https://api.github.com/users/crusaderky/orgs",
            "repos_url": "https://api.github.com/users/crusaderky/repos",
            "events_url": "https://api.github.com/users/crusaderky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crusaderky/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-22T12:00:38Z",
        "updated_at": "2023-05-22T12:01:07Z",
        "author_association": "MEMBER",
        "body": "lock=True works exclusively with the threaded scheduler. It will work with neither multiprocessing nor distributed. At the very least, the documentation of da.store should clarify that.\r\n\r\nIt looks like you can pass [`lock=distributed.Lock()`](https://distributed.dask.org/en/stable/api.html#distributed.Lock) instead to fix the problem. However, it works only fortuitously - I can't find any unit tests for it.\r\n\r\nThis said - from my understanding, zarr shouldn't even need locks? At which point passing the lock parameter should be invalid. Could somebody more knowledgeable of zarr chime in? ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1557093100/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1559397928",
        "html_url": "https://github.com/dask/dask/issues/10238#issuecomment-1559397928",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10238",
        "id": 1559397928,
        "node_id": "IC_kwDOAbcwm85c8oYo",
        "user": {
            "login": "d-v-b",
            "id": 3805136,
            "node_id": "MDQ6VXNlcjM4MDUxMzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3805136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/d-v-b",
            "html_url": "https://github.com/d-v-b",
            "followers_url": "https://api.github.com/users/d-v-b/followers",
            "following_url": "https://api.github.com/users/d-v-b/following{/other_user}",
            "gists_url": "https://api.github.com/users/d-v-b/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/d-v-b/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/d-v-b/subscriptions",
            "organizations_url": "https://api.github.com/users/d-v-b/orgs",
            "repos_url": "https://api.github.com/users/d-v-b/repos",
            "events_url": "https://api.github.com/users/d-v-b/events{/privacy}",
            "received_events_url": "https://api.github.com/users/d-v-b/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-23T13:43:01Z",
        "updated_at": "2023-05-23T13:43:01Z",
        "author_association": "MEMBER",
        "body": "> This said - from my understanding, zarr shouldn't even need locks? At which point passing the lock parameter should be invalid. Could somebody more knowledgeable of zarr chime in?\r\n\r\nIn principle, one could use locks in zarr to guard access to individual chunks. There's a [synchronization api](https://zarr.readthedocs.io/en/stable/api/sync.html), but I've never used it because I do most of my work on a file system that doesn't support file locking.\r\n\r\nAs I understand it, in da.store, dask [locks the entire array-like object](https://github.com/dask/dask/blob/260e633c0ec709d283f3463aef391cece6febba3/dask/array/core.py#L4376), which is almost certainly the wrong behavior for a zarr array. But I could be wrong about what dask is doing here.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1559397928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]