{
    "url": "https://api.github.com/repos/dask/dask/issues/2225",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/2225/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/2225/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/2225/events",
    "html_url": "https://github.com/dask/dask/issues/2225",
    "id": 221981022,
    "node_id": "MDU6SXNzdWUyMjE5ODEwMjI=",
    "number": 2225,
    "title": "Optimize tensordot with rechunk",
    "user": {
        "login": "mrocklin",
        "id": 306380,
        "node_id": "MDQ6VXNlcjMwNjM4MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mrocklin",
        "html_url": "https://github.com/mrocklin",
        "followers_url": "https://api.github.com/users/mrocklin/followers",
        "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
        "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
        "organizations_url": "https://api.github.com/users/mrocklin/orgs",
        "repos_url": "https://api.github.com/users/mrocklin/repos",
        "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mrocklin/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 28,
    "created_at": "2017-04-16T00:19:39Z",
    "updated_at": "2021-10-12T02:48:09Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Dask.array tensordot operations can be made significantly faster by doing an initial rechunk pass, making all axes over which we intend to contract single-chunked.  \r\n\r\nFor example, if we have the following block-chunked arrays:\r\n\r\n```python\r\nimport dask.array as da\r\nx = da.random.random((500, 500, 500), chunks=(50, 50, 50))\r\ny = da.random.random((500, 100), chunks=(50, 50))\r\n```\r\n\r\nAnd we want to contract over the 1st and 0th dimensions respectively\r\n\r\n```python\r\nda.tensordot(x, y, axes=[1, 0]).visualize()\r\n```\r\n\r\nThen we may want to preemptively rechunk so that those axes have only one chunk as follows:\r\n\r\n```python\r\nx2 = x.rechunk((..., 500, ...)).persist()\r\ny2 = y.rechunk((500, ...)).persist()\r\n```\r\n\r\nWe may want to contract other axes while we expand these ones to make sure that we don't produce chunks that are too large (and to ensure that the resulting tensordot chunks are not too large).  In this case though the outputs are small enough even with a 10x increase in size, so we leave the other dimensions as-is.\r\n\r\n```python\r\nx2 = x.rechunk((50, 500, 50)).persist()\r\ny2 = y.rechunk((500, 50)).persist()\r\n```\r\n\r\nThis does incur some communication costs up front, but it will generally save us more communication down the line.\r\n\r\nSo I think the question here is the following:\r\n\r\n*Given the chunks of both arrays and the `axis=` argument, how should we rechunk these arrays prior to the normal tensordot call.  This should both increase the chunksize in the contracted axes to the full extent and possibly reduce the chunksize of the other dimension based on the expected nbytes of out output of the tensordot call.*\r\n\r\nSnagged this trick from this talk: https://youtu.be/dcT6c-PrloE?t=1584\r\n\r\ncc @jcrist and @shoyer who might find this interesting.  cc @pitrou who did the rechunk logic and might be able to recommend something.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/2225/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/2225/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}