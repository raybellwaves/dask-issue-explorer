[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396326482",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396326482",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396326482,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjMyNjQ4Mg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T17:44:15Z",
        "updated_at": "2018-06-11T17:44:15Z",
        "author_association": "MEMBER",
        "body": "The `map_blocks` function expects numpy arrays back that have the same dimensions as the input.\r\n\r\n```python\r\nIn [1]: import numpy as np\r\n\r\nIn [2]: import dask.array as da\r\n\r\nIn [3]: x = da.ones((100, 100), chunks=(20, 20))\r\n\r\nIn [4]: x.map_blocks(np.sum)\r\nOut[4]: dask.array<sum, shape=(100, 100), dtype=float64, chunksize=(20, 20)>\r\n\r\nIn [5]: x.map_blocks(np.sum).compute()\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-5-558fdb092b63> in <module>()\r\n----> 1 x.map_blocks(np.sum).compute()\r\n\r\n~/workspace/dask/dask/base.py in compute(self, **kwargs)\r\n    154         dask.base.compute\r\n    155         \"\"\"\r\n--> 156         (result,) = compute(self, traverse=False, **kwargs)\r\n    157         return result\r\n    158 \r\n\r\n~/workspace/dask/dask/base.py in compute(*args, **kwargs)\r\n    399     postcomputes = [x.__dask_postcompute__() for x in collections]\r\n    400     results = schedule(dsk, keys, **kwargs)\r\n--> 401     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    402 \r\n    403 \r\n\r\n~/workspace/dask/dask/base.py in <listcomp>(.0)\r\n    399     postcomputes = [x.__dask_postcompute__() for x in collections]\r\n    400     results = schedule(dsk, keys, **kwargs)\r\n--> 401     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    402 \r\n    403 \r\n\r\n~/workspace/dask/dask/array/core.py in finalize(results)\r\n    995     while isinstance(results2, (tuple, list)):\r\n    996         if len(results2) > 1:\r\n--> 997             return concatenate3(results)\r\n    998         else:\r\n    999             results2 = results2[0]\r\n\r\n~/workspace/dask/dask/array/core.py in concatenate3(arrays)\r\n   3678     if not ndim:\r\n   3679         return arrays\r\n-> 3680     chunks = chunks_from_arrays(arrays)\r\n   3681     shape = tuple(map(sum, chunks))\r\n   3682 \r\n\r\n~/workspace/dask/dask/array/core.py in chunks_from_arrays(arrays)\r\n   3504 \r\n   3505     while isinstance(arrays, (list, tuple)):\r\n-> 3506         result.append(tuple([shape(deepfirst(a))[dim] for a in arrays]))\r\n   3507         arrays = arrays[0]\r\n   3508         dim += 1\r\n\r\n~/workspace/dask/dask/array/core.py in <listcomp>(.0)\r\n   3504 \r\n   3505     while isinstance(arrays, (list, tuple)):\r\n-> 3506         result.append(tuple([shape(deepfirst(a))[dim] for a in arrays]))\r\n   3507         arrays = arrays[0]\r\n   3508         dim += 1\r\n\r\nIndexError: tuple index out of range\r\n\r\nIn [6]: \r\n\r\nIn [6]: def f(block):\r\n   ...:     return np.array([[block.sum()]])\r\n   ...: \r\n   ...: \r\n\r\nIn [7]: x.map_blocks(f, chunks=(1, 1)).compute()\r\nOut[7]: \r\narray([[400., 400., 400., 400., 400.],\r\n       [400., 400., 400., 400., 400.],\r\n       [400., 400., 400., 400., 400.],\r\n       [400., 400., 400., 400., 400.],\r\n       [400., 400., 400., 400., 400.]])\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396326482/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396326878",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396326878",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396326878,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjMyNjg3OA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T17:45:31Z",
        "updated_at": "2018-06-11T17:45:31Z",
        "author_association": "MEMBER",
        "body": "It would be great to improve the usability here, either by automatically expanding arrays to the full dimension if necessary at runtime, or by providing a very informative error.  (I slightly prefer the first solution).  \r\n\r\nIf you have any interest in contributing this @tjcrone that would be most welcome.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396326878/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396331933",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396331933",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396331933,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjMzMTkzMw==",
        "user": {
            "login": "tjcrone",
            "id": 5667194,
            "node_id": "MDQ6VXNlcjU2NjcxOTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5667194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjcrone",
            "html_url": "https://github.com/tjcrone",
            "followers_url": "https://api.github.com/users/tjcrone/followers",
            "following_url": "https://api.github.com/users/tjcrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjcrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjcrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjcrone/subscriptions",
            "organizations_url": "https://api.github.com/users/tjcrone/orgs",
            "repos_url": "https://api.github.com/users/tjcrone/repos",
            "events_url": "https://api.github.com/users/tjcrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjcrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T18:00:52Z",
        "updated_at": "2018-06-11T18:00:52Z",
        "author_association": "NONE",
        "body": "Thanks @mrocklin! Changing the output of my function to an numpy array with the shape of (1,) worked. I would be happy to take a look at making this automatic.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396331933/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396351567",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396351567",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396351567,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM1MTU2Nw==",
        "user": {
            "login": "tjcrone",
            "id": 5667194,
            "node_id": "MDQ6VXNlcjU2NjcxOTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5667194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjcrone",
            "html_url": "https://github.com/tjcrone",
            "followers_url": "https://api.github.com/users/tjcrone/followers",
            "following_url": "https://api.github.com/users/tjcrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjcrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjcrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjcrone/subscriptions",
            "organizations_url": "https://api.github.com/users/tjcrone/orgs",
            "repos_url": "https://api.github.com/users/tjcrone/repos",
            "events_url": "https://api.github.com/users/tjcrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjcrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T19:04:55Z",
        "updated_at": "2018-06-11T19:04:55Z",
        "author_association": "NONE",
        "body": "@mrocklin, so you would prefer a PR that converts function output to arrays with the correct dims, after drop_axis and new_axis are applied, rather than one that states in the docstring that the function must return a numpy array?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396351567/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396352668",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396352668",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396352668,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM1MjY2OA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T19:08:36Z",
        "updated_at": "2018-06-11T19:08:36Z",
        "author_association": "MEMBER",
        "body": "I think it's a reasonable transformation to make for users, but lets check with someone else, perhaps @jakirkham or @shoyer to make sure that this is a sensible idea.  I can imagine valid counter-arguments. \r\n\r\nIt's a contest between predictability and ease-of-use.  It's subjective which way to go.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396352668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396364360",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396364360",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396364360,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM2NDM2MA==",
        "user": {
            "login": "tjcrone",
            "id": 5667194,
            "node_id": "MDQ6VXNlcjU2NjcxOTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5667194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjcrone",
            "html_url": "https://github.com/tjcrone",
            "followers_url": "https://api.github.com/users/tjcrone/followers",
            "following_url": "https://api.github.com/users/tjcrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjcrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjcrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjcrone/subscriptions",
            "organizations_url": "https://api.github.com/users/tjcrone/orgs",
            "repos_url": "https://api.github.com/users/tjcrone/repos",
            "events_url": "https://api.github.com/users/tjcrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjcrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T19:48:58Z",
        "updated_at": "2018-06-11T19:48:58Z",
        "author_association": "NONE",
        "body": "Since the user doesn't see this intermediate value/array, and is expecting to get a Dask array back, I am leaning toward just making it work for users whenever possible.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396364360/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396365477",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396365477",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396365477,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM2NTQ3Nw==",
        "user": {
            "login": "tjcrone",
            "id": 5667194,
            "node_id": "MDQ6VXNlcjU2NjcxOTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5667194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjcrone",
            "html_url": "https://github.com/tjcrone",
            "followers_url": "https://api.github.com/users/tjcrone/followers",
            "following_url": "https://api.github.com/users/tjcrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjcrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjcrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjcrone/subscriptions",
            "organizations_url": "https://api.github.com/users/tjcrone/orgs",
            "repos_url": "https://api.github.com/users/tjcrone/repos",
            "events_url": "https://api.github.com/users/tjcrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjcrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T19:52:39Z",
        "updated_at": "2018-06-11T19:52:39Z",
        "author_association": "NONE",
        "body": "It seems that it is only very non-intuitive when the function returns a scalar, but should return an array of shape (1,). What if we just made the transformation in this one case? And then when the function returns an array, indicate in the docstring that functions that return arrays must return numpy arrays that have the correct dims after drop_axis and new_axis are applied.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396365477/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396376955",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396376955",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396376955,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM3Njk1NQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T20:31:33Z",
        "updated_at": "2018-06-11T20:31:33Z",
        "author_association": "MEMBER",
        "body": "I'm also inclined towards making it just work.  However I'd be more\ncomfortable if one of the other devs with a wide variety of exposure to\ndask array problems had a chance to chime in as well.\n\nOn Mon, Jun 11, 2018 at 3:52 PM, Tim Crone <notifications@github.com> wrote:\n\n> It seems that it is only very non-intuitive when the function returns a\n> scalar, but should return an array of shape (1,). What if we just made the\n> transformation in this one case? And then when the function returns an\n> array, indicate in the docstring that functions that return arrays must\n> return numpy arrays that have the correct dims after drop_axis and new_axis\n> are applied.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3590#issuecomment-396365477>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AASszIBQsBSiJaYQlVbeuW2HDtzXTGfyks5t7sqHgaJpZM4UjGvH>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396376955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396387034",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396387034",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396387034,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM4NzAzNA==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T21:05:17Z",
        "updated_at": "2018-06-11T21:05:52Z",
        "author_association": "MEMBER",
        "body": "I'm not sure how it's possible in general to expand an array to the \"right number of dimensions\". I guess this could be done with broadcasting, always inserting new dimensions on the left, but this could be surprising and potentially make bugs harder to diagnose.\r\n\r\nThere is also the related problem of chunk sizes: `map_blocks` creates an array with fixed chunk sizes, which might change when the array is evaluated. So automatically expanding dimension wouldn't work in general.\r\n\r\nI think my preference would be for the informative error, with a compute-time check that verifies that each output has the expected shape based on chunks/drop_axis/new_axis. We could add an optional flag for disabling the check in performance critical code and tested library routines, e.g., `check_output=False`.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396387034/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396389069",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396389069",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396389069,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM4OTA2OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T21:12:53Z",
        "updated_at": "2018-06-11T21:12:53Z",
        "author_association": "MEMBER",
        "body": "> always inserting new dimensions on the left\r\n\r\nYes, that is how I imagine it would be done\r\n\r\n> but this could be surprising and potentially make bugs harder to diagnose\r\n\r\nIn principle I agree, however this function gets enough use by novices that some magic might be welcome.  I think that the closest analog is Pandas' groupby.apply, which magically coerces the user-defined-function's result to the right form.  While groupby.apply is a PITA for maintainers (though mostly for performance reasons), it also serves as an excellent catch-all API endpoint for users.  I don't expect groupby-apply style users to understand the need to manually pad their results.\r\n\r\n> There is also the related problem of chunk sizes: map_blocks creates an array with fixed chunk sizes, which might change when the array is evaluated. So automatically expanding dimension wouldn't work in general\r\n\r\nRight, we can be wrong in the chunk sizes (this is also true today), but I think that we can make it so that we're always correct in chunk dimensions reliably.  ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396389069/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396390745",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396390745",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396390745,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM5MDc0NQ==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T21:19:08Z",
        "updated_at": "2018-06-11T21:19:08Z",
        "author_association": "MEMBER",
        "body": "OK, I'm not strongly opposed to automatic dimension insertion, in the case that the relevant chunk sizes are already of shape 1. I'd love to see informative error messages for the other cases, though :).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396390745/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396391369",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396391369",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396391369,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM5MTM2OQ==",
        "user": {
            "login": "tjcrone",
            "id": 5667194,
            "node_id": "MDQ6VXNlcjU2NjcxOTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5667194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjcrone",
            "html_url": "https://github.com/tjcrone",
            "followers_url": "https://api.github.com/users/tjcrone/followers",
            "following_url": "https://api.github.com/users/tjcrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjcrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjcrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjcrone/subscriptions",
            "organizations_url": "https://api.github.com/users/tjcrone/orgs",
            "repos_url": "https://api.github.com/users/tjcrone/repos",
            "events_url": "https://api.github.com/users/tjcrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjcrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T21:21:36Z",
        "updated_at": "2018-06-11T21:21:36Z",
        "author_association": "NONE",
        "body": "I think we would be surprised how far it would go to place something like \"The function must return a numpy array with the expected/correct shape. When the function is to return a scalar, instead return a numpy array of shape (1,)\" in the docstring and docs. This would have helped me a lot.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396391369/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396391774",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396391774",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396391774,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM5MTc3NA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T21:23:01Z",
        "updated_at": "2018-06-11T21:23:01Z",
        "author_association": "MEMBER",
        "body": "You're also more adept than most dask.array users.  In answering stack overflow questions I often wish that map_blocks was trivial to use.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396391774/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396392112",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396392112",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396392112,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM5MjExMg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T21:24:20Z",
        "updated_at": "2018-06-11T21:24:20Z",
        "author_association": "MEMBER",
        "body": "> in the case that the relevant chunk sizes are already of shape 1.\r\n\r\n@shoyer are you suggesting that users must provide array-like objects that have a shape attribute?\r\n\r\nSo the following wouldn't work\r\n\r\n```python\r\nx.map_blocks(lambda x: x.nbytes)\r\n```\r\n\r\nBut the following would\r\n\r\n```python\r\nx.map_blocks(lambda x: np.array([x.nbytes]))\r\n```\r\n\r\n?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396392112/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396397014",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396397014",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396397014,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM5NzAxNA==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T21:43:43Z",
        "updated_at": "2018-06-11T21:43:43Z",
        "author_association": "MEMBER",
        "body": "> are you suggesting that users must provide array-like objects that have a shape attribute?\r\n\r\nNo, I'm fine with promoting scalars to 0-dimensional arrays.\r\n\r\nMy concern is if the input array has larger blocks, e.g., the example above but with input array `dask.array<stack, shape=(120, 1080, 1920), dtype=uint16, chunksize=(10, 1080, 1920)>`. The result from `map_blocks` would have shape `(120,)` as a dask array but shape `(12,)` when computed. That definitely seems like a bug to me.\r\n\r\nIn theory, you could broadcast the scalars to arrays of shape `(10,)`. But I'm pretty sure that would actually be hiding a programming error most of the time, which is that the input array doesn't have the expected chunks.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396397014/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396397833",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396397833",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396397833,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM5NzgzMw==",
        "user": {
            "login": "tjcrone",
            "id": 5667194,
            "node_id": "MDQ6VXNlcjU2NjcxOTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5667194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjcrone",
            "html_url": "https://github.com/tjcrone",
            "followers_url": "https://api.github.com/users/tjcrone/followers",
            "following_url": "https://api.github.com/users/tjcrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjcrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjcrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjcrone/subscriptions",
            "organizations_url": "https://api.github.com/users/tjcrone/orgs",
            "repos_url": "https://api.github.com/users/tjcrone/repos",
            "events_url": "https://api.github.com/users/tjcrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjcrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T21:46:47Z",
        "updated_at": "2018-06-11T21:46:47Z",
        "author_association": "NONE",
        "body": "I think it is reasonable to require the user function to return an array with the correct dimensions based on chunks/drop/new. At the same time, I think it is reasonable to expect map_blocks to handle functions that return scalar values. So the docstring could read \"Functions must return scalar values or numpy arrays with the correct shape according to chunks/drop/new.\"",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396397833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396398200",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396398200",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396398200,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM5ODIwMA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T21:48:19Z",
        "updated_at": "2018-06-11T21:48:19Z",
        "author_association": "MEMBER",
        "body": "> That definitely seems like a bug to me.\r\n\r\nYeah, I agree.  It's unfortunately also the way things work now.  People abuse map_blocks shapes all the time.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396398200/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396398360",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396398360",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396398360,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM5ODM2MA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T21:49:03Z",
        "updated_at": "2018-06-11T21:49:03Z",
        "author_association": "MEMBER",
        "body": "> I think it is reasonable to require the user function to return an array with the correct dimensions based on chunks/drop/new\r\n\r\nI think it's a reasonable expectation to have, but I also expect to be disappointed when I have this expectation :)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396398360/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396399539",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396399539",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396399539,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM5OTUzOQ==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T21:53:56Z",
        "updated_at": "2018-06-11T21:53:56Z",
        "author_association": "MEMBER",
        "body": "> Yeah, I agree. It's unfortunately also the way things work now. People abuse map_blocks shapes all the time.\r\n\r\nMaybe this something that we could at least start issuing a warning for, or it's worth causing some breakage here? The fix would be pretty straightforward: either specify `chunks` or setting `check_outputs=False`.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396399539/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396400417",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396400417",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396400417,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQwMDQxNw==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T21:57:12Z",
        "updated_at": "2018-06-11T21:57:12Z",
        "author_association": "MEMBER",
        "body": "> I think it is reasonable to require the user function to return an array with the correct dimensions based on chunks/drop/new. At the same time, I think it is reasonable to expect map_blocks to handle functions that return scalar values. \r\n\r\nIt is somewhat counter-intuitive, but these are actually contradictory statements :).\r\n\r\nThe current version of `map_blocks` can only correctly handle functions returning scalar values if the full array consists of a single chunk. You can't `concatenate` scalars along existing dimensions to form the result array, because they don't have any existing dimensions!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396400417/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396401024",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396401024",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396401024,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQwMTAyNA==",
        "user": {
            "login": "tjcrone",
            "id": 5667194,
            "node_id": "MDQ6VXNlcjU2NjcxOTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5667194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjcrone",
            "html_url": "https://github.com/tjcrone",
            "followers_url": "https://api.github.com/users/tjcrone/followers",
            "following_url": "https://api.github.com/users/tjcrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjcrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjcrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjcrone/subscriptions",
            "organizations_url": "https://api.github.com/users/tjcrone/orgs",
            "repos_url": "https://api.github.com/users/tjcrone/repos",
            "events_url": "https://api.github.com/users/tjcrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjcrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T21:59:47Z",
        "updated_at": "2018-06-11T21:59:47Z",
        "author_association": "NONE",
        "body": "What I mean is, if the function returns an array, it would seem obvious that it should be the right shape. However if it returns a scalar, it is not obvious why map_blocks cannot shoehorn the scalar into an array with ndims=1.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396401024/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396404848",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396404848",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396404848,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQwNDg0OA==",
        "user": {
            "login": "tjcrone",
            "id": 5667194,
            "node_id": "MDQ6VXNlcjU2NjcxOTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5667194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjcrone",
            "html_url": "https://github.com/tjcrone",
            "followers_url": "https://api.github.com/users/tjcrone/followers",
            "following_url": "https://api.github.com/users/tjcrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjcrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjcrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjcrone/subscriptions",
            "organizations_url": "https://api.github.com/users/tjcrone/orgs",
            "repos_url": "https://api.github.com/users/tjcrone/repos",
            "events_url": "https://api.github.com/users/tjcrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjcrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T22:17:00Z",
        "updated_at": "2018-06-11T22:17:00Z",
        "author_association": "NONE",
        "body": "My recommendation is to promote scalars, give a more informative error otherwise, and have some verbiage on what the function should return in the docstring. Regardless of what you decide, I'm happy to provide a PR if there is interest.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396404848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396406513",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396406513",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396406513,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQwNjUxMw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-11T22:24:50Z",
        "updated_at": "2018-06-11T22:24:50Z",
        "author_association": "MEMBER",
        "body": "> Maybe this something that we could at least start issuing a warning for, or it's worth causing some breakage here? \r\n\r\nNo objection to warning.  Presumably in order to achieve the features above we would need to have some wrapping function anyway to expand things out to the right number of dimensions.  That would be a good place to issue a warning.\r\n\r\nI'm disinclined to start erring by default.  We haven't gotten much user signal that this function causes confusion.  Of course, people may silently be getting wrong results if they do things like slice afterwards, which is concerning.  One approach (which I think should be considered separately from this conversation) would be to use unknown chunk shapes with `map_blocks` by default.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396406513/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396428293",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396428293",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396428293,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQyODI5Mw==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T00:31:42Z",
        "updated_at": "2018-06-12T00:31:42Z",
        "author_association": "MEMBER",
        "body": "I'm on the fence.\r\n\r\nOn the one hand, I'm a little hesitant to add too much functionality to `map_blocks`. While it might help some specific cases, it will generally make this function harder for new users to understand as they try to determine what arguments are relevant. Not to mention the current formulation of `map_blocks` makes it easier to accidentally step on other functions toes. ( https://github.com/dask/dask/issues/3437 ) Feel similarly about magic as it is less clear what is happening or why things went wrong.\r\n\r\nThat said, reducing blocks to scalar values does seem useful and have reached for such functionality before. More generally it is not uncommon when using `map_blocks` to need to write a \"kernel function\" that does the right amount of tweaking around a NumPy or other function to get it to agree with `map_blocks`. This is generally needed to format the arguments in a way that `map_blocks` likes so they can be passed on and/or because there needs to be some looping over the chunk to actually apply the function in question. It would be good to handle both of those needs by some `map_blocks`-like function. As a step in this direction, [`apply_along_axis`]( http://dask.pydata.org/en/latest/array-api.html#dask.array.apply_along_axis ) was added to try to help a limited form of this use case. Though this is still IMHO an unresolved issue worthy of further exploration.\r\n\r\nThough I think the pain point for this specific issue is less about whether `map_blocks` does or does not do a reasonable thing here and more that the error message was confusing. It's just not clear what it means (unless you are already familiar :). Since we are already generating an error message, generating a better one doesn't break anything and would improve the user experience.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396428293/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396568241",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396568241",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396568241,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjU2ODI0MQ==",
        "user": {
            "login": "tjcrone",
            "id": 5667194,
            "node_id": "MDQ6VXNlcjU2NjcxOTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5667194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjcrone",
            "html_url": "https://github.com/tjcrone",
            "followers_url": "https://api.github.com/users/tjcrone/followers",
            "following_url": "https://api.github.com/users/tjcrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjcrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjcrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjcrone/subscriptions",
            "organizations_url": "https://api.github.com/users/tjcrone/orgs",
            "repos_url": "https://api.github.com/users/tjcrone/repos",
            "events_url": "https://api.github.com/users/tjcrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjcrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T12:16:02Z",
        "updated_at": "2018-06-12T12:16:16Z",
        "author_association": "NONE",
        "body": "I appreciate that this is not a simple issue and may need more discussion. In the mean time, perhaps it would be worthwhile to include the following in the docs: \"This function should return a numpy array.\"",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396568241/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396575187",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396575187",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396575187,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjU3NTE4Nw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T12:41:43Z",
        "updated_at": "2018-06-12T12:41:43Z",
        "author_association": "MEMBER",
        "body": "No objection to adding to the docstring or improving the error message.  However depending on how this conversation goes we may also end up removing that fix immediately afterwards.  Up to you if you want to expend the effort.\r\n\r\nIn this conversation people have listed a number of concerns and benefits from automatic coercion, but we are currently light on concrete proposals.  I'm going to propose that for now we wrap map_blocks functions in a cleanup function that does the following:\r\n\r\n1.  promote all inputs to the correct dimension\r\n2.  warn if the dimension or shape is not as expected\r\n\r\nI think that this is likely to improve user experience overall, while also pointing users towards correct behavior.  @shoyer @jakirkham how do you feel about this?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396575187/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396623535",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396623535",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396623535,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjYyMzUzNQ==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T15:06:12Z",
        "updated_at": "2018-06-12T15:06:12Z",
        "author_association": "MEMBER",
        "body": "That would certainly be an improvement over the current state of affairs\nOn Tue, Jun 12, 2018 at 5:41 AM Matthew Rocklin <notifications@github.com>\nwrote:\n\n> No objection to adding to the docstring or improving the error message.\n> However depending on how this conversation goes we may also end up removing\n> that fix immediately afterwards. Up to you if you want to expend the effort.\n>\n> In this conversation people have listed a number of concerns and benefits\n> from automatic coercion, but we are currently light on concrete proposals.\n> I'm going to propose that for now we wrap map_blocks functions in a cleanup\n> function that does the following:\n>\n>    1. promote all inputs to the correct dimension\n>    2. warn if the dimension or shape is not as expected\n>\n> I think that this is likely to improve user experience overall, while also\n> pointing users towards correct behavior. @shoyer\n> <https://github.com/shoyer> @jakirkham <https://github.com/jakirkham> how\n> do you feel about this?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3590#issuecomment-396575187>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABKS1mD6OINHMvWjSy26nT2jPwH78Kwjks5t77cJgaJpZM4UjGvH>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396623535/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396982469",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396982469",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396982469,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njk4MjQ2OQ==",
        "user": {
            "login": "tjcrone",
            "id": 5667194,
            "node_id": "MDQ6VXNlcjU2NjcxOTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5667194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjcrone",
            "html_url": "https://github.com/tjcrone",
            "followers_url": "https://api.github.com/users/tjcrone/followers",
            "following_url": "https://api.github.com/users/tjcrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjcrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjcrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjcrone/subscriptions",
            "organizations_url": "https://api.github.com/users/tjcrone/orgs",
            "repos_url": "https://api.github.com/users/tjcrone/repos",
            "events_url": "https://api.github.com/users/tjcrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjcrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T15:35:52Z",
        "updated_at": "2018-06-13T15:35:52Z",
        "author_association": "NONE",
        "body": "I would be willing to take a crack at this as I have been interested in learning more about how Dask works under the hood. @mrocklin, can you provide a quick suggestion on the best way to make this happen? As I skim the code, what stands out is that, unless I am mistaken, map_blocks does not ever evaluate the user function and could not promote anything. So it would seem that this fix would better go in compute, but that also really doesn't seem like the right place for this. But maybe it is if compute knows that map_blocks is involved. Any thoughts?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396982469/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396984246",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396984246",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396984246,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njk4NDI0Ng==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T15:40:26Z",
        "updated_at": "2018-06-13T15:40:26Z",
        "author_association": "MEMBER",
        "body": "You will need to either wrap the user-provided function with a function\nthat does the checks, or map another function over each element in the dask\ngraph. The computation itself gets saved as the \"dsk\" dictionary in\nmap_blocks (based to sharedict at the end), so that's what you'll need to\nchange.\n\nOn Wed, Jun 13, 2018 at 8:35 AM Tim Crone <notifications@github.com> wrote:\n\n> I would be willing to take a crack at this as I have been interested in\n> learning more about how Dask works under the hood. @mrocklin\n> <https://github.com/mrocklin>, can you provide a quick suggestion on the\n> best way to make this happen? As I skim the code, what stands out is that,\n> unless I am mistaken, map_blocks does not ever evaluate the user function\n> and could not promote anything. So it would seem that this fix would better\n> go in compute, but that also really doesn't seem like the right place for\n> this. But maybe it is if compute knows that map_blocks is involved. Any\n> thoughts?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3590#issuecomment-396982469>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABKS1hkB9SLlXzUwnaTcInjffZfQsqwQks5t8TFegaJpZM4UjGvH>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396984246/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396984624",
        "html_url": "https://github.com/dask/dask/issues/3590#issuecomment-396984624",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3590",
        "id": 396984624,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njk4NDYyNA==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T15:41:24Z",
        "updated_at": "2018-06-13T15:41:24Z",
        "author_association": "MEMBER",
        "body": "It's probably worth reading the docs on graphs:\nhttp://dask.pydata.org/en/latest/graphs.html\n\nOn Wed, Jun 13, 2018 at 8:40 AM Stephan Hoyer <shoyer@gmail.com> wrote:\n\n> You will need to either wrap the user-provided function with a function\n> that does the checks, or map another function over each element in the dask\n> graph. The computation itself gets saved as the \"dsk\" dictionary in\n> map_blocks (based to sharedict at the end), so that's what you'll need to\n> change.\n>\n> On Wed, Jun 13, 2018 at 8:35 AM Tim Crone <notifications@github.com>\n> wrote:\n>\n>> I would be willing to take a crack at this as I have been interested in\n>> learning more about how Dask works under the hood. @mrocklin\n>> <https://github.com/mrocklin>, can you provide a quick suggestion on the\n>> best way to make this happen? As I skim the code, what stands out is that,\n>> unless I am mistaken, map_blocks does not ever evaluate the user function\n>> and could not promote anything. So it would seem that this fix would better\n>> go in compute, but that also really doesn't seem like the right place for\n>> this. But maybe it is if compute knows that map_blocks is involved. Any\n>> thoughts?\n>>\n>> \u2014\n>> You are receiving this because you were mentioned.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/dask/dask/issues/3590#issuecomment-396982469>, or mute\n>> the thread\n>> <https://github.com/notifications/unsubscribe-auth/ABKS1hkB9SLlXzUwnaTcInjffZfQsqwQks5t8TFegaJpZM4UjGvH>\n>> .\n>>\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396984624/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]