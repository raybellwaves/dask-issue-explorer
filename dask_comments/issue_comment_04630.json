[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/476253497",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-476253497",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 476253497,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjI1MzQ5Nw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-25T15:40:27Z",
        "updated_at": "2019-03-25T15:40:27Z",
        "author_association": "MEMBER",
        "body": "Two questions:\r\n\r\n1.  Have high level expression graphs had an impact on your work?  This came about in https://github.com/dask/dask/issues/4038 as a result of issues that you were having.  It would be good to hear if that had any effect.\r\n2.  What would you want to happen if a worker goes down holding the last copy of some data?  Currently we need the task graph in order to provide resilience.  Would we want to duplicate all data a few times to different workers to ensure resilence?\r\n\r\nAnother approach would be to store your data onto some persistent store like GCS, perhaps using the `da.store(..., return_stored=True)` function (though this lacks the ephemeral nature that you're probably looking for). ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/476253497/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/476339078",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-476339078",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 476339078,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjMzOTA3OA==",
        "user": {
            "login": "rabernat",
            "id": 1197350,
            "node_id": "MDQ6VXNlcjExOTczNTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1197350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rabernat",
            "html_url": "https://github.com/rabernat",
            "followers_url": "https://api.github.com/users/rabernat/followers",
            "following_url": "https://api.github.com/users/rabernat/following{/other_user}",
            "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions",
            "organizations_url": "https://api.github.com/users/rabernat/orgs",
            "repos_url": "https://api.github.com/users/rabernat/repos",
            "events_url": "https://api.github.com/users/rabernat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rabernat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-25T19:14:14Z",
        "updated_at": "2019-03-25T19:14:14Z",
        "author_association": "MEMBER",
        "body": "@mrocklin - thanks for your quick response.\r\n\r\n> 1. Have high level expression graphs had an impact on your work?\r\n\r\nI have not seen any measurable effect from this. Here is the simplest benchmark I can think of with real data.\r\n\r\n```python\r\nimport intake\r\nimport xarray as xr\r\ncatalog_url = 'https://github.com/pangeo-data/pangeo/raw/master/gce/catalog.yaml'\r\nds = intake.Catalog(catalog_url).LLC4320_SSU.to_dask()\r\n\r\n# simple dummy calculation I thought would be able to target high-level graphs\r\nuf = (5*ds.U**2 + 1).mean()\r\n# I assume this is the low level graph? It's the same in all dask versions\r\nassert len(uf.data.dask) == 630981\r\n# time how long it takes to send the graph to the scheduler\r\n%time uf.persist()\r\n```\r\n\r\nDask 1.0.0 (before #4092): \r\n```\r\nCPU times: user 36.5 s, sys: 1.57 s, total: 38.1 s\r\nWall time: 37.3 s\r\n```\r\n\r\nDask 1.1.4\r\n```\r\nCPU times: user 46.1 s, sys: 2.05 s, total: 48.2 s\r\nWall time: 46.9 s\r\n```\r\n\r\nAm I doing something wrong? Bottom line is that we are still waiting a long time for large graphs, even with very simple calculations.\r\n\r\n> 2\\. What would you want to happen if a worker goes down holding the last copy of some data?\r\n\r\nVery good point. I had not thought about that. As long as it were explicit, I would be willing to live with the risk of losing my data and having to start over.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/476339078/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/476681942",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-476681942",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 476681942,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjY4MTk0Mg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-26T14:49:03Z",
        "updated_at": "2019-03-26T14:49:03Z",
        "author_association": "MEMBER",
        "body": "```python\r\nassert len(uf.data.dask) == 630981\r\n```\r\n\r\nYou would need to do something like \r\n\r\n```python\r\n(uf2,) = dask.optimize(uf)\r\nlen(uf2.data.dask)\r\n```\r\n\r\nI tried the minimal example, but ran into not having the zarr plugin.  I'm not sure how best to install plugins in intake.  Moving on this morning.  I'll try to get back to this in a while (no promises though).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/476681942/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/476682446",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-476682446",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 476682446,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjY4MjQ0Ng==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-26T14:50:07Z",
        "updated_at": "2019-03-26T14:50:07Z",
        "author_association": "MEMBER",
        "body": "> Very good point. I had not thought about that. As long as it were explicit, I would be willing to live with the risk of losing my data and having to start over.\r\n\r\nThat seems in scope then.  If someone wanted to try this out they would probably look at how scattered futures are handled in terms of dependencies and such, and then figure out how to get to the same state with other futures.  ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/476682446/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/476682675",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-476682675",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 476682675,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjY4MjY3NQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-26T14:50:33Z",
        "updated_at": "2019-03-26T14:50:33Z",
        "author_association": "MEMBER",
        "body": "This would require diving into Scheduler state a bit.  It's highly unlikely that I'll get to this this week or next, but perhaps the future will be easier.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/476682675/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/476684154",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-476684154",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 476684154,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjY4NDE1NA==",
        "user": {
            "login": "rabernat",
            "id": 1197350,
            "node_id": "MDQ6VXNlcjExOTczNTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1197350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rabernat",
            "html_url": "https://github.com/rabernat",
            "followers_url": "https://api.github.com/users/rabernat/followers",
            "following_url": "https://api.github.com/users/rabernat/following{/other_user}",
            "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions",
            "organizations_url": "https://api.github.com/users/rabernat/orgs",
            "repos_url": "https://api.github.com/users/rabernat/repos",
            "events_url": "https://api.github.com/users/rabernat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rabernat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-26T14:53:02Z",
        "updated_at": "2019-03-26T14:53:02Z",
        "author_association": "MEMBER",
        "body": "@mrocklin - I really appreciate your response on this.\r\n\r\nAlso, I should have learned by now to never try to use real data in an example!\r\n\r\nThe data in question can be recreated at the dask level as\r\n```python\r\nimport dask.array as ds\r\ndsa.random.random((9000, 13, 4320, 4320), chunks=(1, 1, 4320, 4320))\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/476684154/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/476686913",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-476686913",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 476686913,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjY4NjkxMw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-26T14:57:32Z",
        "updated_at": "2019-03-26T14:57:32Z",
        "author_association": "MEMBER",
        "body": "So the number of tasks definitely shrinks\r\n\r\n```python\r\nIn [1]: import dask\r\n\r\nIn [2]: import dask.array as da\r\n   ...: x = da.random.random((9000, 13, 4320, 4320), chunks=(1, 1, 4320, 4320))\r\n\r\nIn [3]: y = (5*x**2 + 1).mean()\r\n\r\nIn [4]: yy, = dask.optimize(y)\r\n\r\nIn [5]: len(y.dask)\r\nOut[5]: 628881\r\n\r\nIn [6]: len(yy.dask)\r\nOut[6]: 277875\r\n```\r\n\r\nBut this doesn't address the fact that you're seeing increased compute times.  It would be useful to dive into the difference here and profile things.  I would probably start with profiling with the single-threaded scheduler, and see what is taking up the most time.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/476686913/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/476690893",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-476690893",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 476690893,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjY5MDg5Mw==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-26T15:04:31Z",
        "updated_at": "2019-03-26T15:04:31Z",
        "author_association": "MEMBER",
        "body": "> ran into not having the zarr plugin\r\n\r\nPackage intake-xarray\r\nIn the current master, you get a message when the plugin isn't found, pointing you to the page where all the plugins of all the packages are listed. Can you think of a better way? Plugins can be referred to by simple string name or by python import, but in neither case would Intake know where to actually get that thing from.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/476690893/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/476700352",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-476700352",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 476700352,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjcwMDM1Mg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-03-26T15:23:27Z",
        "updated_at": "2019-03-26T15:23:27Z",
        "author_association": "MEMBER",
        "body": "No particular thoughts.  I as a user didn't know how to find the right\npackage other than you telling it to me now, or doing a web search (which\nis fine).  Not a huge deal for this issue though.  @rabernat was kind\nenough to provide an example that was simpler.\n\nOn Tue, Mar 26, 2019 at 8:04 AM Martin Durant <notifications@github.com>\nwrote:\n\n> ran into not having the zarr plugin\n>\n> Package intake-xarray\n> In the current master, you get a message when the plugin isn't found,\n> pointing you to the page where all the plugins of all the packages are\n> listed. Can you think of a better way? Plugins can be referred to by simple\n> string name or by python import, but in neither case would Intake know\n> where to actually get that thing from.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/4630#issuecomment-476690893>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AASszJU6JTBRm3Dii_bIWWTqi4UtfWu3ks5vajcAgaJpZM4cHFJ1>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/476700352/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/484145642",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-484145642",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 484145642,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDE0NTY0Mg==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-17T15:43:08Z",
        "updated_at": "2019-04-17T15:43:08Z",
        "author_association": "MEMBER",
        "body": "snakeviz rendering of the persist line:\r\n\r\n![Screen Shot 2019-04-17 at 11 42 33](https://user-images.githubusercontent.com/6042212/56301511-f5517d80-6105-11e9-96a3-b2face76dc75.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/484145642/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/484178220",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-484178220",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 484178220,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDE3ODIyMA==",
        "user": {
            "login": "rabernat",
            "id": 1197350,
            "node_id": "MDQ6VXNlcjExOTczNTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1197350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rabernat",
            "html_url": "https://github.com/rabernat",
            "followers_url": "https://api.github.com/users/rabernat/followers",
            "following_url": "https://api.github.com/users/rabernat/following{/other_user}",
            "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions",
            "organizations_url": "https://api.github.com/users/rabernat/orgs",
            "repos_url": "https://api.github.com/users/rabernat/repos",
            "events_url": "https://api.github.com/users/rabernat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rabernat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-17T17:06:44Z",
        "updated_at": "2019-04-17T17:06:44Z",
        "author_association": "MEMBER",
        "body": "@martindurant - am I correct in interpreting your benchmark that most of the time is spent on communication, i.e. serialization and transmission of the graph?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/484178220/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/484186625",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-484186625",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 484186625,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDE4NjYyNQ==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-17T17:29:20Z",
        "updated_at": "2019-04-17T17:29:20Z",
        "author_association": "MEMBER",
        "body": "```\r\nLine #      Hits         Time  Per Hit   % Time  Line Contents\r\n==============================================================\r\n  2196                                               def _graph_to_futures(self, dsk, keys, restrictions=None,\r\n  2197                                                                     loose_restrictions=None, priority=None,\r\n  2198                                                                     user_priority=0, resources=None, retries=None,\r\n  2199                                                                     fifo_timeout=0, actors=None):\r\n  2200         1        462.0    462.0      0.0          with self._refcount_lock:\r\n  2201         1         16.0     16.0      0.0              if resources:\r\n  2202                                                           resources = self._expand_resources(resources,\r\n  2203                                                                                              all_keys=itertools.chain(dsk, keys))\r\n  2204\r\n  2205         1          4.0      4.0      0.0              if retries:\r\n  2206                                                           retries = self._expand_retries(retries,\r\n  2207                                                                                          all_keys=itertools.chain(dsk, keys))\r\n  2208\r\n  2209         1          4.0      4.0      0.0              if actors is not None and actors is not True and actors is not False:\r\n  2210                                                           actors = list(self._expand_key(actors))\r\n  2211\r\n  2212         1          6.0      6.0      0.0              keyset = set(keys)\r\n  2213         1         20.0     20.0      0.0              flatkeys = list(map(tokey, keys))\r\n  2214         1         64.0     64.0      0.0              futures = {key: Future(key, self, inform=False) for key in keyset}\r\n  2215\r\n  2216         1      70769.0  70769.0      0.1              values = {k for k, v in dsk.items() if isinstance(v, Future)\r\n  2217                                                                 and k not in keyset}\r\n  2218         1          3.0      3.0      0.0              if values:\r\n  2219                                                           dsk = dask.optimization.inline(dsk, keys=values)\r\n  2220\r\n  2221         1   46136777.0 46136777.0     58.3              d = {k: unpack_remotedata(v, byte_keys=True) for k, v in dsk.items()}\r\n  2222         1      62375.0  62375.0      0.1              extra_futures = set.union(*[v[1] for v in d.values()]) if d else set()\r\n  2223         1          6.0      6.0      0.0              extra_keys = {tokey(future.key) for future in extra_futures}\r\n  2224         1    5802807.0 5802807.0      7.3              dsk2 = str_graph({k: v[0] for k, v in d.items()}, extra_keys)\r\n  2225         1     107090.0 107090.0      0.1              dsk3 = {k: v for k, v in dsk2.items() if k is not v}\r\n  2226         1          3.0      3.0      0.0              for future in extra_futures:\r\n  2227                                                           if future.client is not self:\r\n  2228                                                               msg = (\"Inputs contain futures that were created by \"\r\n  2229                                                                      \"another client.\")\r\n  2230                                                               raise ValueError(msg)\r\n  2231\r\n  2232         1          2.0      2.0      0.0              if restrictions:\r\n  2233                                                           restrictions = keymap(tokey, restrictions)\r\n  2234                                                           restrictions = valmap(list, restrictions)\r\n  2235\r\n  2236         1          2.0      2.0      0.0              if loose_restrictions is not None:\r\n  2237         1          6.0      6.0      0.0                  loose_restrictions = list(map(tokey, loose_restrictions))\r\n  2238\r\n  2239         1     918094.0 918094.0      1.2              future_dependencies = {tokey(k): {tokey(f.key) for f in v[1]} for k, v in d.items()}\r\n  2240\r\n  2241    278805     557658.0      2.0      0.7              for s in future_dependencies.values():\r\n  2242    278804     589462.0      2.1      0.7                  for v in s:\r\n  2243                                                               if v not in self.futures:\r\n  2244                                                                   raise CancelledError(v)\r\n  2245\r\n  2246         1    2917822.0 2917822.0      3.7              dependencies = {k: get_dependencies(dsk, k) for k in dsk}\r\n  2247\r\n  2248         1          3.0      3.0      0.0              if priority is None:\r\n  2249         1   12015141.0 12015141.0     15.2                  priority = dask.order.order(dsk, dependencies=dependencies)\r\n  2250         1     526902.0 526902.0      0.7                  priority = keymap(tokey, priority)\r\n  2251\r\n  2252         1          4.0      4.0      0.0              dependencies = {tokey(k): [tokey(dep) for dep in deps]\r\n  2253         1    1889848.0 1889848.0      2.4                              for k, deps in dependencies.items()}\r\n  2254    278805     549853.0      2.0      0.7              for k, deps in future_dependencies.items():\r\n  2255    278804     534366.0      1.9      0.7                  if deps:\r\n  2256                                                               dependencies[k] = list(set(dependencies.get(k, ())) | deps)\r\n  2257\r\n  2258         1         21.0     21.0      0.0              if isinstance(retries, Number) and retries > 0:\r\n  2259                                                           retries = {k: retries for k in dsk3}\r\n  2260\r\n  2261         1          4.0      4.0      0.0              self._send_to_scheduler({'op': 'update-graph',\r\n  2262         1    6404836.0 6404836.0      8.1                                       'tasks': valmap(dumps_task, dsk3),\r\n  2263         1          2.0      2.0      0.0                                       'dependencies': dependencies,\r\n  2264         1          3.0      3.0      0.0                                       'keys': list(flatkeys),\r\n  2265         1          2.0      2.0      0.0                                       'restrictions': restrictions or {},\r\n  2266         1          2.0      2.0      0.0                                       'loose_restrictions': loose_restrictions,\r\n  2267         1          2.0      2.0      0.0                                       'priority': priority,\r\n  2268         1          2.0      2.0      0.0                                       'user_priority': user_priority,\r\n  2269         1          2.0      2.0      0.0                                       'resources': resources,\r\n  2270         1          4.0      4.0      0.0                                       'submitting_task': getattr(thread_state, 'key', None),\r\n  2271         1          2.0      2.0      0.0                                       'retries': retries,\r\n  2272         1          2.0      2.0      0.0                                       'fifo_timeout': fifo_timeout,\r\n  2273         1         87.0     87.0      0.0                                       'actors': actors})\r\n  2274         1          3.0      3.0      0.0              return futures\r\n```\r\n\r\n`unpack_remotedata` is the major culprit (not the communication, at least not with a local scheduler) - I don't understand what it does. Quite a few iterations over all tasks in the graph here, perhaps a chance to fuse them.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/484186625/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/484216504",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-484216504",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 484216504,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDIxNjUwNA==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-17T18:52:02Z",
        "updated_at": "2019-04-17T18:52:30Z",
        "author_association": "MEMBER",
        "body": "Specific answer, @rabernat , is that the time is spent mostly in the one method above, but I don't really know what the specific lines do - @mrocklin probably does, not sure who else. Since this is all about looping over an awful lot of python objects multiple times plus a little logic, it may be an excellent case for cythonization - or perhaps there are simpler things that could be done.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/484216504/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/484218623",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-484218623",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 484218623,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDIxODYyMw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-17T18:58:20Z",
        "updated_at": "2019-04-17T18:58:20Z",
        "author_association": "MEMBER",
        "body": "A lot of this is just general dask optimization and graph manipulation.  My knowledge of the distributed scheduler isn't strictly required here.  Someone like @jcrist or @eriknw would have good experience here.\r\n\r\nIn general, it would be good for someone to take another look at our overhead.  We've done some biggish changes over the last several months and haven't revisted this topic.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/484218623/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/486813250",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-486813250",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 486813250,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjgxMzI1MA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-25T19:47:51Z",
        "updated_at": "2019-04-25T19:47:51Z",
        "author_association": "MEMBER",
        "body": "For my understanding, there are two potential issues here:\r\n\r\n1. High-level graph fusion (maybe?) not helping as much as expected. Something like https://github.com/dask/dask/issues/4630#issuecomment-476686913.\r\n2. An API for persisting just data, without the task graph. This is likely a keyword to persist?\r\n\r\nI can start to poke at these issues, and will take them up when I'm back full time (~2 weeks away).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/486813250/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/486815726",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-486815726",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 486815726,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjgxNTcyNg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-25T19:55:59Z",
        "updated_at": "2019-04-25T19:55:59Z",
        "author_association": "MEMBER",
        "body": "Agreed with the separation.  I think that both fixes are good generally.  \r\n\r\nI recommend prioritizing looking at task overhead, and high level graph fusion in particular.  I expect it to be more wide-reaching, and probably more straightforward to investigate.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/486815726/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/487021375",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-487021375",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 487021375,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzAyMTM3NQ==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-26T11:14:42Z",
        "updated_at": "2019-04-26T11:14:42Z",
        "author_association": "MEMBER",
        "body": "@rabernat when you have time, can you check double-check some timings for me?\r\n\r\nUsing an example like https://github.com/dask/dask/issues/4630#issuecomment-476686913, I don't see a slowdown from dask 1.0 -> dask master.\r\n\r\n```python\r\nfrom time import perf_counter as clock\r\n\r\nimport dask\r\nimport dask.array as da\r\nfrom distributed import Client\r\n\r\nA = 200  # 9_000\r\nB = 13\r\nC = 1000  # 4320\r\nD = 1000  # 4320\r\n\r\n\r\ndef main():\r\n    client = Client(n_workers=8, threads_per_worker=1)  # noqa\r\n    x = da.random.random((A, B, C, D), chunks=(1, 1, C, D))\r\n    y = (5*x**2 + 1).mean()\r\n    t0 = clock()\r\n    y.compute()\r\n    t1 = clock()\r\n\r\n    print('{}: {:0.2f}'.format(dask.__version__, t1 - t0))\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nI get the following times:\r\n\r\n\r\nDask Version | Distributed Version | Time\r\n------------ | ------------------- | ----\r\n1.0.0        | 1.27.0              | 25.93\r\n1.2.0+21.g20 | 1.27.0+0.g8c07c878  | 21.71\r\n\r\nSo the post-HLG version is slightly faster. I had to scale the problem down for my laptop, so I wouldn't expect a large improvement. Hopefully the smaller scale didn't fundamentally change the performance characteristics.\r\n\r\nI'm trying out the intake-based example now.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/487021375/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/487023260",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-487023260",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 487023260,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzAyMzI2MA==",
        "user": {
            "login": "rabernat",
            "id": 1197350,
            "node_id": "MDQ6VXNlcjExOTczNTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1197350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rabernat",
            "html_url": "https://github.com/rabernat",
            "followers_url": "https://api.github.com/users/rabernat/followers",
            "following_url": "https://api.github.com/users/rabernat/following{/other_user}",
            "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions",
            "organizations_url": "https://api.github.com/users/rabernat/orgs",
            "repos_url": "https://api.github.com/users/rabernat/repos",
            "events_url": "https://api.github.com/users/rabernat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rabernat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-26T11:22:58Z",
        "updated_at": "2019-04-26T11:22:58Z",
        "author_association": "MEMBER",
        "body": "Thanks for looking into this @TomAugspurger! (Shouldn't you be changing diapers, not hacking dask! \ud83d\ude09)\r\n\r\nI will try to find time later today to run this test again with your sample code.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/487023260/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/487024073",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-487024073",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 487024073,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzAyNDA3Mw==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-26T11:26:28Z",
        "updated_at": "2019-04-26T11:26:28Z",
        "author_association": "MEMBER",
        "body": "> Shouldn't you be changing diapers\r\n\r\nThe sleep schedules occasionally align :)\r\n\r\n> I will try to find time later today to run this test again with your sample code.\r\n\r\nThanks, no rush though since I likely won't be able to put together a fix for a week or two.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/487024073/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/487719304",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-487719304",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 487719304,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzcxOTMwNA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-29T19:52:28Z",
        "updated_at": "2019-04-29T19:52:28Z",
        "author_association": "MEMBER",
        "body": "I may be missing something, but isn't the main issue here\r\n\r\n> However, the problem is that .persist() doesn't seem to reduce the number of tasks in the scheduler's memory.\r\n\r\nalready how `persist` works with distributed?\r\n\r\n```python\r\nimport dask\r\nimport dask.array as da\r\nimport numpy as np\r\n\r\nN = 1_000\r\nK = 250\r\n\r\nX = da.random.random((N, K), chunks=(K, K))\r\n\r\nY = np.sin((X + 1) ** 2).dot(X.T)\r\nY.visualize(filename=\"before\", rankdir='LR')\r\n\r\nfrom distributed import Client\r\nclient = Client()\r\n\r\nY2 = Y.persist()\r\nY2.visualize(filename=\"after\", rankdir=\"LR\")\r\n```\r\n\r\n![before](https://user-images.githubusercontent.com/1312546/56922638-4cecd300-6a8e-11e9-8a7f-36dc07ba5479.png)\r\n![after](https://user-images.githubusercontent.com/1312546/56922643-4f4f2d00-6a8e-11e9-889d-adc953d1a00c.png)\r\n\r\n\r\n```\r\n>>> len(Y.dask), len(Y2.dask)\r\n(68, 16)\r\n```\r\n\r\nSo does changing the line\r\n\r\n```\r\nintermediate_result.persist(forget=True)\r\n```\r\n\r\nto \r\n\r\n\r\n```\r\nintermediate_result = intermediate_result.persist()\r\n```\r\n\r\nsolve this?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/487719304/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/492738081",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-492738081",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 492738081,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjczODA4MQ==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-15T17:00:27Z",
        "updated_at": "2019-05-15T17:00:27Z",
        "author_association": "MEMBER",
        "body": "@rabernat when you get a chance, can you check on https://github.com/dask/dask/issues/4630#issuecomment-487719304? Specifically, in your pseudocode, does changing\r\n\r\n```python\r\nintermediate_result.persist(forget=True)\r\n...\r\n```\r\n\r\nto \r\n\r\n```python\r\nintermediate_result = intermediate_result.persist()\r\n```\r\n\r\nfix things? https://github.com/dask/dask/issues/4630#issuecomment-487719304 shows that after the persist we end up with one task per chunk.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/492738081/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/655815302",
        "html_url": "https://github.com/dask/dask/issues/4630#issuecomment-655815302",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4630",
        "id": 655815302,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTgxNTMwMg==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-08T23:50:15Z",
        "updated_at": "2020-07-08T23:50:15Z",
        "author_association": "MEMBER",
        "body": "@rabernat, did you have a chance to try Tom's suggestion?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/655815302/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]