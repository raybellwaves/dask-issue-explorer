{
    "url": "https://api.github.com/repos/dask/dask/issues/6884",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/6884/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/6884/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/6884/events",
    "html_url": "https://github.com/dask/dask/issues/6884",
    "id": 749589639,
    "node_id": "MDU6SXNzdWU3NDk1ODk2Mzk=",
    "number": 6884,
    "title": "Very uneven load distribution",
    "user": {
        "login": "icfly2",
        "id": 7895513,
        "node_id": "MDQ6VXNlcjc4OTU1MTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7895513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/icfly2",
        "html_url": "https://github.com/icfly2",
        "followers_url": "https://api.github.com/users/icfly2/followers",
        "following_url": "https://api.github.com/users/icfly2/following{/other_user}",
        "gists_url": "https://api.github.com/users/icfly2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/icfly2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/icfly2/subscriptions",
        "organizations_url": "https://api.github.com/users/icfly2/orgs",
        "repos_url": "https://api.github.com/users/icfly2/repos",
        "events_url": "https://api.github.com/users/icfly2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/icfly2/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2020-11-24T10:41:08Z",
    "updated_at": "2022-03-28T21:51:44Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "This issue is similar to [this issue](https://github.com/dask/dask/issues/5158). I have a setup as described in [this SO post](https://stackoverflow.com/questions/64911735/dask-scheduler-empty-graph-not-showing). But the essence is:\r\n\r\n```python\r\nfrom dask.distributed import Client\r\nimport dask\r\nfrom tasks import task1, task2, task3\r\nfrom conf import con\r\n\r\ndef runall(**kwargs):\r\n    print(\"done\")\r\n\r\n\r\ndef task(table_name, depends_on=None):\r\n    df = pd.read_sql(con=con, query=f\"select * from {table_name}\") # read some data from sql, depends on the table how much it is.\r\n    out = df.mean() # some computation of varying expense\r\n    out.to_sql(con=con) \r\n    return True\r\n\r\ndef etl():\r\n    client = Client()\r\n\r\n    tasks = {}\r\n    tasks['task1'] = dask.delayed(task)('table_1')\r\n    tasks['task2'] = dask.delayed(task)('table_2')\r\n    tasks['task3'] = dask.delayed(task)('table_3', depends_on=tasks['task2'])\r\n\r\n     out = dask.delayed(runall)(**tasks)\r\n     out.compute()\r\n\r\n```\r\nI've used pandas read and write to sql here,  but in reality these are highly custom functions for talking to oracle and other sql dbs with upserts and what not. They are as fast as sql can be, so there is no gain from switching to the dask dataframe loading style. In the long run we are looking at using parquet or similar but for now this is not an option.\r\n\r\nThe issue is that all work concentrates on one worker. How can the workers be encouraged to steal from each other. In this case task3 can operate on another worker as the output of task 2 is actually minimal, just a bool to confirm it worked (This can be removed if it solves the problem, I haven't found that it does though).\r\n\r\nIf not stealing, how else can more equal sharing be encouraged? I don't really want to go and assign tasks to workers as the docs seam to discourage it and it introduces a brittleness that I don't desire.\r\n\r\n- Dask version: dask==2.30.0\r\n- Python version: 3.7\r\n- Operating System: python:3.7 Docker image derivative, running on Oracle enterprise linux\r\n- Install method (conda, pip, source): from pip\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/6884/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/6884/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}