{
    "url": "https://api.github.com/repos/dask/dask/issues/9996",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9996/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9996/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9996/events",
    "html_url": "https://github.com/dask/dask/issues/9996",
    "id": 1598210496,
    "node_id": "I_kwDOAbcwm85fQsHA",
    "number": 9996,
    "title": "P2P shuffling without a distributed scheduler?",
    "user": {
        "login": "fjetter",
        "id": 8629629,
        "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjetter",
        "html_url": "https://github.com/fjetter",
        "followers_url": "https://api.github.com/users/fjetter/followers",
        "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
        "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
        "organizations_url": "https://api.github.com/users/fjetter/orgs",
        "repos_url": "https://api.github.com/users/fjetter/repos",
        "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fjetter/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 386719400,
            "node_id": "MDU6TGFiZWwzODY3MTk0MDA=",
            "url": "https://api.github.com/repos/dask/dask/labels/scheduler",
            "name": "scheduler",
            "color": "D10945",
            "default": false,
            "description": ""
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3798450420,
            "node_id": "LA_kwDOAbcwm87iZ8D0",
            "url": "https://api.github.com/repos/dask/dask/labels/feature",
            "name": "feature",
            "color": "b0f0fa",
            "default": false,
            "description": "Something is missing"
        },
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-02-24T08:59:53Z",
    "updated_at": "2023-03-27T01:53:28Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "The current architecture of P2P shuffling would allow for it being used even outside of the distributed scheduler. To make this smooth, it would require a bit of cleaning up but the fundamental core should be working just fine.\r\n\r\nSpecifically, the class [`ShuffleRun`](https://github.com/dask/distributed/blob/8d239e91f6b61bd2b0048d373b20879ac88d2584/distributed/shuffle/_worker_extension.py#L49-L321) implements most of the logic. Typically this class is instantiated once on every worker but this is not strictly necessary. A single instance can perform the entire shuffle in theory.\r\nThere exist already tests that show how such a shuffle would look like using just this object, see https://github.com/dask/distributed/blob/8d239e91f6b61bd2b0048d373b20879ac88d2584/distributed/shuffle/tests/test_shuffle.py#L1153-L1231\r\n\r\nEmbedding this into dask/dask would likely even be even more trivial since I would expect there to only exit one instance and all threads would write to the same instance (the object is thread safe, of course).\r\n\r\nThis would effectively act as a replacement for partd.\r\n\r\nThe reason why this might be interesting is because we have some indication that this implementation is not working optimally either, see\r\n- https://github.com/dask/distributed/issues/5554\r\n- https://github.com/dask/distributed/issues/5502\r\n\r\nAt this stage I would not expect us to pull the trigger on this but I'd be more interested in running a couple of experiments and see if there are any performance gains to be had. _Eventually_ I would expect P2P to be sufficiently optimized to beat partd and `tasks` even in a memory-only, threaded environment. I doubt we're there yet but I don't know.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9996/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9996/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}