[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/674924896",
        "html_url": "https://github.com/dask/dask/issues/6511#issuecomment-674924896",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6511",
        "id": 674924896,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDkyNDg5Ng==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-17T14:45:35Z",
        "updated_at": "2020-08-17T14:45:35Z",
        "author_association": "MEMBER",
        "body": "Dask arrays aren't totally immutable though. You can do things like:\r\n\r\n```python\r\nimport dask.array as da\r\n\r\nd = da.empty((3,5))\r\nd[d == 0] = 3\r\nd.compute()\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/674924896/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/674971248",
        "html_url": "https://github.com/dask/dask/issues/6511#issuecomment-674971248",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6511",
        "id": 674971248,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDk3MTI0OA==",
        "user": {
            "login": "Carreau",
            "id": 335567,
            "node_id": "MDQ6VXNlcjMzNTU2Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Carreau",
            "html_url": "https://github.com/Carreau",
            "followers_url": "https://api.github.com/users/Carreau/followers",
            "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
            "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
            "organizations_url": "https://api.github.com/users/Carreau/orgs",
            "repos_url": "https://api.github.com/users/Carreau/repos",
            "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Carreau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-17T16:09:42Z",
        "updated_at": "2020-08-17T16:09:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "Sorry I misexpressed myself.\r\n\r\nI don't think the memory that backs d here: `d = da.empty((3,5))` \r\nand _after_ `d[d == 0] = 3` is the same, is it ? \r\n\r\nI understand `d[d == 0] = 3` as adding a step to the graph; so the definition of \"After\" is weird, but still; I don't think the memory location of the original empty can be modified. \r\n\r\nSo If my understanding is correct I don't believe there implementations that can rely on creating a `empty()` array for memory efficiency, keep reference to it and then mutate the internal memory state, they will end up allocating anyway. And in the case like you show above, comparing values of an `empty()` array to a set value is recipe for bugs, so they should use `full(Nan)`, `ones()`, or `zeros()`\r\n\r\nWhat make we think that the memory is untouched is the following master, ones/zeros are backed by broadcast trick and this underlying data store should be immutable (x.flags.writable == 0 in numpy land), though you can still do:\r\n\r\n\r\n```\r\nimport dask.array as da\r\nd = da.zeros((3,5))\r\nd[d == 0] = 3\r\n```\r\n\r\nAnd this works well. If this was a real assignment, it would raise an error. \r\n\r\nIs that a better explanation of what I am trying to express ?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/674971248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/675054187",
        "html_url": "https://github.com/dask/dask/issues/6511#issuecomment-675054187",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6511",
        "id": 675054187,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTA1NDE4Nw==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-17T18:56:41Z",
        "updated_at": "2020-08-17T18:56:41Z",
        "author_association": "MEMBER",
        "body": "Thanks for explaining that. I think what you are saying makes sense. And agree that I don't know of a time when empty is a better choice than zeros. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/675054187/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/943438050",
        "html_url": "https://github.com/dask/dask/issues/6511#issuecomment-943438050",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6511",
        "id": 943438050,
        "node_id": "IC_kwDOAbcwm844O7ji",
        "user": {
            "login": "jcrist",
            "id": 2783717,
            "node_id": "MDQ6VXNlcjI3ODM3MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcrist",
            "html_url": "https://github.com/jcrist",
            "followers_url": "https://api.github.com/users/jcrist/followers",
            "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
            "organizations_url": "https://api.github.com/users/jcrist/orgs",
            "repos_url": "https://api.github.com/users/jcrist/repos",
            "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcrist/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-14T14:55:07Z",
        "updated_at": "2021-10-14T14:55:07Z",
        "author_association": "MEMBER",
        "body": "I'm not sure we should warn on `empty`, as it's nice to have it for full compatibility with the numpy api. And since they're all backed by stride tricks now, I'm not sure if there's really a cost to using `da.empty` this way? I'd opt to close this and leave things as is.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/943438050/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/943673680",
        "html_url": "https://github.com/dask/dask/issues/6511#issuecomment-943673680",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6511",
        "id": 943673680,
        "node_id": "IC_kwDOAbcwm844P1FQ",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-14T19:47:12Z",
        "updated_at": "2021-10-14T19:47:12Z",
        "author_association": "MEMBER",
        "body": "Yeah that seems ok to me as well. Increasingly the community is working on making sure different arrays can be used easily in downstream code. So having warnings pop-up for some APIs might confuse people.\r\n\r\nThat said, I understand what Matthias is getting at. Most of the reason people use `np.empty` (or similar) is to do an `malloc` instead of a `calloc` for example (avoiding the cost of initializing that array). This is a weird thing to do in a lazy array library and could cause issues if these uninitialized values are used in downstream computations (often if not always a mistake?). Idk if warning is the answer (as mentioned above), but maybe documenting best practices with Arrays and/or data initialization in Dask would be helpful?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/943673680/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]