{
    "url": "https://api.github.com/repos/dask/dask/issues/10339",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10339/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10339/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10339/events",
    "html_url": "https://github.com/dask/dask/pull/10339",
    "id": 1747951643,
    "node_id": "PR_kwDOAbcwm85She-R",
    "number": 10339,
    "title": "Improve performance of histogram when using scalar_bins",
    "user": {
        "login": "tmillenaar",
        "id": 45204355,
        "node_id": "MDQ6VXNlcjQ1MjA0MzU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/45204355?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tmillenaar",
        "html_url": "https://github.com/tmillenaar",
        "followers_url": "https://api.github.com/users/tmillenaar/followers",
        "following_url": "https://api.github.com/users/tmillenaar/following{/other_user}",
        "gists_url": "https://api.github.com/users/tmillenaar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tmillenaar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tmillenaar/subscriptions",
        "organizations_url": "https://api.github.com/users/tmillenaar/orgs",
        "repos_url": "https://api.github.com/users/tmillenaar/repos",
        "events_url": "https://api.github.com/users/tmillenaar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tmillenaar/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2023-06-08T13:58:39Z",
    "updated_at": "2024-01-29T01:45:05Z",
    "closed_at": null,
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
        "url": "https://api.github.com/repos/dask/dask/pulls/10339",
        "html_url": "https://github.com/dask/dask/pull/10339",
        "diff_url": "https://github.com/dask/dask/pull/10339.diff",
        "patch_url": "https://github.com/dask/dask/pull/10339.patch",
        "merged_at": null
    },
    "body": "Hey all,\r\n\r\nI did not first make this an issue for I feel I could provide a possible solution.\r\nIf it is better etiquette to first make an issue before creating a pull request, let me know and I will do so in the future.\r\n\r\n~~- [ ] Closes #xxxx~~\r\n- [x] Tests added / passed\r\n- [x] Passes `pre-commit run --all-files`\r\n\r\nThis pull request is inspired by this forum post:\r\nhttps://dask.discourse.group/t/how-does-da-histogram-work/1907\r\n\r\nThe performance of `dask.array.histogram` is significantly worse than that of `numpy.histogram` when a scalar is supplied as the `bins`argument. I am assuming a single threaded case here, since the difference in performance can be overcome by solving lots of tasks in parallel.\r\n\r\nIt seems to me this difference in performance between scalars and arrays relates to an array being able have bins that are not equally spaced, though I am not familiar with the details of the Numpy implementation and I could be wrong about the reason. \r\n\r\nIn the dask implementation any scalar is turned int an array at this line:\r\nhttps://github.com/dask/dask/blob/453bd7031828f72e4602498c1a1f776280794bea/dask/array/routines.py#L1002\r\nThis happens before `_block_hist` is called. Therefore Dask always provides `_block_hist` (and thus by extension `numpy.histogram`) with an array, even when initially presented with a scalar.\r\n\r\nIn this pull request I move the call to `_linspace_from_delayed` after the call to `_block_hist`. The aim of this change is to provide a scalar to the Numpy implementation of `histogram` if a scalar was provided to the Dask implementation of histogram, but still return `bins` as an array from the `dask.array.histogram` function.\r\n\r\nThis seems to improve the performance. I ran a simple benchmark where I plot the number of samples vs the duration.\r\nThe Dask runs had access to 12 cores.\r\n![image](https://github.com/dask/dask/assets/45204355/85a6eaac-7c98-4866-8e82-c5a169218730)\r\n\r\nI understand a risk of my implementation is that the bins estimated by `_linspace_from_delayed` could be different than those estimated by Numpy when presented with a scalar. I would argue that the unit tests in dask/array/tests/test_routines.py are sufficient to verify this.\r\n\r\nThis is my first pull request and I am open to any feedback.\r\n\r\nCheers,\r\nTimo\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10339/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10339/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}