[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/517335320",
        "html_url": "https://github.com/dask/dask/issues/5199#issuecomment-517335320",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5199",
        "id": 517335320,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzMzNTMyMA==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-01T15:24:29Z",
        "updated_at": "2019-08-01T15:24:29Z",
        "author_association": "MEMBER",
        "body": "Truly in-place operations would not be appropriate, since Dask tasks are functional, and tokenized, you do not want inputs changing. Consider, how would you make this work when you have workers in different processes/machines, you might modify the in-memory version, but that would have no effect on copies of the data held elsewhere, or if the worker went down.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/517335320/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/517342934",
        "html_url": "https://github.com/dask/dask/issues/5199#issuecomment-517342934",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5199",
        "id": 517342934,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzM0MjkzNA==",
        "user": {
            "login": "ivirshup",
            "id": 8238804,
            "node_id": "MDQ6VXNlcjgyMzg4MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8238804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ivirshup",
            "html_url": "https://github.com/ivirshup",
            "followers_url": "https://api.github.com/users/ivirshup/followers",
            "following_url": "https://api.github.com/users/ivirshup/following{/other_user}",
            "gists_url": "https://api.github.com/users/ivirshup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ivirshup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ivirshup/subscriptions",
            "organizations_url": "https://api.github.com/users/ivirshup/orgs",
            "repos_url": "https://api.github.com/users/ivirshup/repos",
            "events_url": "https://api.github.com/users/ivirshup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ivirshup/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-01T15:42:25Z",
        "updated_at": "2019-08-01T15:42:25Z",
        "author_association": "NONE",
        "body": "Does the current implementation of `__setitem__` avoid these issues?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/517342934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/517346182",
        "html_url": "https://github.com/dask/dask/issues/5199#issuecomment-517346182",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5199",
        "id": 517346182,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzM0NjE4Mg==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-01T15:50:33Z",
        "updated_at": "2019-08-01T15:50:33Z",
        "author_association": "MEMBER",
        "body": "Yes, exactly\r\n\r\n```\r\nIn [14]: dict(x.dask)\r\nOut[14]:\r\n{('ones-c4a83f4b990021618d55e0fa61a351d6',\r\n  0): (functools.partial(<function ones at 0x10871a2f0>, dtype=dtype('float64')), (5,)),\r\n ('ones-c4a83f4b990021618d55e0fa61a351d6',\r\n  1): (functools.partial(<function ones at 0x10871a2f0>, dtype=dtype('float64')), (5,))}\r\n\r\nIn [15]: x[x] =5\r\n\r\nIn [16]: dict(x.dask)\r\nOut[16]:\r\n{('where-fc316acce29c6d2b5cef2f2593835bd6', 0): (subgraph_callable,\r\n  ('ones-c4a83f4b990021618d55e0fa61a351d6', 0),\r\n  5,\r\n  ('ones-c4a83f4b990021618d55e0fa61a351d6', 0)),\r\n ('where-fc316acce29c6d2b5cef2f2593835bd6', 1): (subgraph_callable,\r\n  ('ones-c4a83f4b990021618d55e0fa61a351d6', 1),\r\n  5,\r\n  ('ones-c4a83f4b990021618d55e0fa61a351d6', 1)),\r\n ('ones-c4a83f4b990021618d55e0fa61a351d6',\r\n  0): (functools.partial(<function ones at 0x10871a2f0>, dtype=dtype('float64')), (5,)),\r\n ('ones-c4a83f4b990021618d55e0fa61a351d6',\r\n  1): (functools.partial(<function ones at 0x10871a2f0>, dtype=dtype('float64')), (5,))}\r\n```\r\n\r\nNote how the \"ones\" remain in the graph.\r\n\r\nOf, with concrete values, see how below the dask array's values change, but the original array is not\r\n```\r\nIn [19]: inarr = np.ones(10)\r\nIn [20]: x = da.from_array(inarr, chunks=5)\r\nIn [22]: x[x] = 5\r\nIn [23]: x.compute()\r\nOut[23]: array([5., 5., 5., 5., 5., 5., 5., 5., 5., 5.])\r\n\r\nIn [24]: inarr\r\nOut[24]: array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/517346182/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/517412604",
        "html_url": "https://github.com/dask/dask/issues/5199#issuecomment-517412604",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5199",
        "id": 517412604,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzQxMjYwNA==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-01T18:50:16Z",
        "updated_at": "2019-08-01T18:50:16Z",
        "author_association": "MEMBER",
        "body": "OK to close?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/517412604/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/517524086",
        "html_url": "https://github.com/dask/dask/issues/5199#issuecomment-517524086",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5199",
        "id": 517524086,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzUyNDA4Ng==",
        "user": {
            "login": "ivirshup",
            "id": 8238804,
            "node_id": "MDQ6VXNlcjgyMzg4MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8238804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ivirshup",
            "html_url": "https://github.com/ivirshup",
            "followers_url": "https://api.github.com/users/ivirshup/followers",
            "following_url": "https://api.github.com/users/ivirshup/following{/other_user}",
            "gists_url": "https://api.github.com/users/ivirshup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ivirshup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ivirshup/subscriptions",
            "organizations_url": "https://api.github.com/users/ivirshup/orgs",
            "repos_url": "https://api.github.com/users/ivirshup/repos",
            "events_url": "https://api.github.com/users/ivirshup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ivirshup/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-02T02:30:59Z",
        "updated_at": "2019-08-02T02:30:59Z",
        "author_association": "NONE",
        "body": "I'm not sure I understand your point. Aren't in-place operators equivalent to something like this?\r\n\r\n```python\r\na = da.ones(5)\r\nb = a\r\nb[da.ones(5, dtype=bool)] = b + 1\r\n```\r\n\r\nI think I may not have been clear in my meaning of \"in-place operators\". I don't think that the actual computation has to happen in place, that is totally up to the execution engine. I meant the semantics of augmented assignment operators as used by numpy and, more broadly, mutable objects in python aren't being followed by dask arrays, though I think they could be.\r\n\r\nIn the issues I referenced, it sounded like this was a goal which dask was pursuing. I would be happy to make a PR implementing these.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/517524086/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1076577762",
        "html_url": "https://github.com/dask/dask/issues/5199#issuecomment-1076577762",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5199",
        "id": 1076577762,
        "node_id": "IC_kwDOAbcwm85AK0Xi",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-23T17:02:09Z",
        "updated_at": "2022-03-23T17:02:09Z",
        "author_association": "MEMBER",
        "body": "I was looking at this and trying to figure out what the intention of those linked PRs was. My read is that they were more focused on allowing easy assignment patterns and less concerned with modifying dask collections in-place. That being said, I don't see a good reason why the behavior that you are talking about here and that you sketched out in your original post couldn't be supported.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1076577762/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]