{
    "url": "https://api.github.com/repos/dask/dask/issues/3864",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/3864/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/3864/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/3864/events",
    "html_url": "https://github.com/dask/dask/issues/3864",
    "id": 349088950,
    "node_id": "MDU6SXNzdWUzNDkwODg5NTA=",
    "number": 3864,
    "title": "Support for array chunking 'strategies'",
    "user": {
        "login": "ptooley",
        "id": 32297355,
        "node_id": "MDQ6VXNlcjMyMjk3MzU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/32297355?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ptooley",
        "html_url": "https://github.com/ptooley",
        "followers_url": "https://api.github.com/users/ptooley/followers",
        "following_url": "https://api.github.com/users/ptooley/following{/other_user}",
        "gists_url": "https://api.github.com/users/ptooley/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ptooley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ptooley/subscriptions",
        "organizations_url": "https://api.github.com/users/ptooley/orgs",
        "repos_url": "https://api.github.com/users/ptooley/repos",
        "events_url": "https://api.github.com/users/ptooley/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ptooley/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 1372867996,
            "node_id": "MDU6TGFiZWwxMzcyODY3OTk2",
            "url": "https://api.github.com/repos/dask/dask/labels/discussion",
            "name": "discussion",
            "color": "bebaf4",
            "default": false,
            "description": "Discussing a topic with no specific actions yet"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-08-09T11:32:50Z",
    "updated_at": "2021-10-12T04:23:01Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have an approach to this working for myself but I am raising it as I have a suspicion I am not the only one who might find this useful:\r\n\r\nI am currently using dask to write data parallel versions of several custom algorithms, which is making heavy use of `map_blocks` over custom numba functions usually dropping and adding axes along the way.  Something that has come up quite a few times through this is the need to rechunk with a specific strategy, usually one of \"ensure chunks don't break up a specific axis\" or \"ensure chunks are contiguous when unravelled\".\r\n\r\nI currently have (slightly hackish) solutions that work for me, but I wonder if there is scope for dask supporting certain chunking strategies more formally, perhaps extending the current 'auto' keyword to allowing hinting of the desirable chunking strategy?  This might have knock on benefits for the discussion about rechunking going on in #3587.\r\n\r\nI would be open to helping develop this if there was appetite for it.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/3864/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/3864/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}