[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/399078701",
        "html_url": "https://github.com/dask/dask/issues/3650#issuecomment-399078701",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3650",
        "id": 399078701,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA3ODcwMQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-21T11:58:53Z",
        "updated_at": "2018-06-21T11:58:53Z",
        "author_association": "MEMBER",
        "body": "I recommend looking at\n\n    b[0].visualize('mypicture.png', optimize_graph=True)\n\nYou'll find that to produce the first chunk Dask now needs to create and\ncollect many other chunks, leading to an increased compute time.\n\nOn Thu, Jun 21, 2018 at 3:24 AM, Noah D Brenowitz <notifications@github.com>\nwrote:\n\n> I ran into a performance issue with related to reshaped dask arrays while\n> using xarray (pydata/xarray#2241\n> <https://github.com/pydata/xarray/issues/2241>). I opened an issue there,\n> but I think this is actually more of a dask issue. Here is some example\n> code which demonstrates the slow down\n>\n> >>> a = da.random.random((64, 64, 64), (8,8,-1))>>> b = a.reshape((64**2, 64))>>> %timeit b[0].compute()3.2 ms \u00b1 13 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)>>> %timeit a[0,0].compute()628 \u00b5s \u00b1 13.8 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n>\n> b[0] and a[0,0] should in principle refer to the same data, but the\n> reshaped values take almost 4 times as long to compute.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3650>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AASszAWVVCWWSrNRj553B9Hsq7rind6kks5t-0o7gaJpZM4Uxh52>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/399078701/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/399189195",
        "html_url": "https://github.com/dask/dask/issues/3650#issuecomment-399189195",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3650",
        "id": 399189195,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTE4OTE5NQ==",
        "user": {
            "login": "nbren12",
            "id": 1386642,
            "node_id": "MDQ6VXNlcjEzODY2NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1386642?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nbren12",
            "html_url": "https://github.com/nbren12",
            "followers_url": "https://api.github.com/users/nbren12/followers",
            "following_url": "https://api.github.com/users/nbren12/following{/other_user}",
            "gists_url": "https://api.github.com/users/nbren12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nbren12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nbren12/subscriptions",
            "organizations_url": "https://api.github.com/users/nbren12/orgs",
            "repos_url": "https://api.github.com/users/nbren12/repos",
            "events_url": "https://api.github.com/users/nbren12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nbren12/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-21T17:51:05Z",
        "updated_at": "2018-06-21T17:58:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "Ok. thanks for tips. I am surprised that dask needs to do all that work since the first chunk of `b` *should* just be a reshaped version of the first chunk of `a`.\r\n\r\nEdit:\r\n\r\nadded *should*.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/399189195/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/399261171",
        "html_url": "https://github.com/dask/dask/issues/3650#issuecomment-399261171",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3650",
        "id": 399261171,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTI2MTE3MQ==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-21T22:18:49Z",
        "updated_at": "2018-06-21T22:18:49Z",
        "author_association": "MEMBER",
        "body": "Note the chunksizes of this arrays:\r\n```\r\n>>> a\r\ndask.array<random_sample, shape=(64, 64, 64), dtype=float64, chunksize=(8, 8, 64)>\r\n>>> b\r\ndask.array<reshape, shape=(4096, 64), dtype=float64, chunksize=(64, 64)>\r\n```\r\n\r\nWhen you reshape the first dimensions from `(64, 64)` to `(64**2,)`, your chunks actually get scrambled: the first 64 elements of `b` (in its first chunk) read off the first row of the `a`, which includes 8 different chunks.\r\n\r\nWhen computations are involved, dask doesn't have any way of telling the original `da.random.random()` that you're indexing out part of the result and it doesn't need to compute full chunks. So considerably more work is done.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/399261171/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/399279846",
        "html_url": "https://github.com/dask/dask/issues/3650#issuecomment-399279846",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3650",
        "id": 399279846,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTI3OTg0Ng==",
        "user": {
            "login": "nbren12",
            "id": 1386642,
            "node_id": "MDQ6VXNlcjEzODY2NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1386642?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nbren12",
            "html_url": "https://github.com/nbren12",
            "followers_url": "https://api.github.com/users/nbren12/followers",
            "following_url": "https://api.github.com/users/nbren12/following{/other_user}",
            "gists_url": "https://api.github.com/users/nbren12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nbren12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nbren12/subscriptions",
            "organizations_url": "https://api.github.com/users/nbren12/orgs",
            "repos_url": "https://api.github.com/users/nbren12/repos",
            "events_url": "https://api.github.com/users/nbren12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nbren12/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T00:02:21Z",
        "updated_at": "2018-06-22T00:02:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "> your chunks actually get scrambled\r\n\r\nThanks for pointing that out. Now it makes sense to me. I guess the the problem is that the chunks have to be contiguous in the new shape. In principal, I guess strided chunks would fix this performance issue, but I would never expect for such a thing to be implemented in dask. Maybe this could be addressed in `xarray` by using some smart indexing tricks.\r\n\r\n@mrocklin Feel free to close this issue if you want. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/399279846/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/399510447",
        "html_url": "https://github.com/dask/dask/issues/3650#issuecomment-399510447",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3650",
        "id": 399510447,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTUxMDQ0Nw==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T16:56:59Z",
        "updated_at": "2018-06-22T16:56:59Z",
        "author_association": "MEMBER",
        "body": "Haven't given this a lot of thought. So this suggestion might not work, but have you explored doing rechunking first? If you expand the \"fast axes\" to the length of the shape first, things might be a bit better. Again haven't test this, but would be curious to hear what you learn from this experiment.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/399510447/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/557237026",
        "html_url": "https://github.com/dask/dask/issues/3650#issuecomment-557237026",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3650",
        "id": 557237026,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzIzNzAyNg==",
        "user": {
            "login": "tlambert03",
            "id": 1609449,
            "node_id": "MDQ6VXNlcjE2MDk0NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tlambert03",
            "html_url": "https://github.com/tlambert03",
            "followers_url": "https://api.github.com/users/tlambert03/followers",
            "following_url": "https://api.github.com/users/tlambert03/following{/other_user}",
            "gists_url": "https://api.github.com/users/tlambert03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tlambert03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tlambert03/subscriptions",
            "organizations_url": "https://api.github.com/users/tlambert03/orgs",
            "repos_url": "https://api.github.com/users/tlambert03/repos",
            "events_url": "https://api.github.com/users/tlambert03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tlambert03/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-21T19:30:27Z",
        "updated_at": "2019-11-21T19:31:30Z",
        "author_association": "NONE",
        "body": "I know it's been a long time since this topic, but I recently ran into unexpected `reshape` behavior while using `dask.delayed` or `dask-image` to load a folder of tiffs and then trying to reshape that folder to reflect the dimensions in the underlying dataset.  For instance:\r\n\r\n```python\r\nfrom dask_image.imread import imread\r\nstack = imread('/data/*.tif') \r\nstack.reshape(600, 2, 64, 256, 280)[0, 0].compute()  # triggers 2 file read events\r\n# this is what I actually need to do to separate dims\r\nstack.reshape(2, 600, 64, 256, 280)[0, 0].compute()  # triggers 600 file read events\r\n```\r\n\r\nAs @mrocklin pointed out, using `.visualize()` is useful to see why...  here's a minimal example with reduced array size:\r\n\r\n```python\r\nfrom dask import delayed\r\nimport dask.array as da\r\n\r\n@delayed\r\ndef f(a,b):\r\n    # simulating a file-read event\r\n    return np.zeros((10, 10))\r\n\r\narr = da.stack(\r\n    [\r\n        da.from_delayed(f(a, b), shape=(10, 10), dtype=\"float64\")\r\n        for a in range(10)\r\n        for b in range(2)\r\n    ]\r\n)\r\narr.shape  # (20, 10, 10)\r\n\r\narr.reshape(10, 2, 10, 10)[0, 0].visualize()  # 2 calls to f()\r\n```\r\n![69357424-0f7eab80-0c53-11ea-8bdc-3fb6f738eb53](https://user-images.githubusercontent.com/1609449/69368651-82dee800-0c68-11ea-8370-feeb055bdf22.png)\r\n\r\n```python\r\narr.reshape(2, 10, 10, 10)[0, 0].visualize()  # 10 calls to f()\r\n```\r\n![69349145-48178880-0c45-11ea-99ec-91776ddbd336](https://user-images.githubusercontent.com/1609449/69368659-8a05f600-0c68-11ea-8fc4-347e0b249a93.png)\r\n\r\nI thought rechunking might help... but it doesn't:\r\n```python\r\nrechunked = arr.reshape(2, 10, 10, 10).rechunk((1, 1, 10, 10))\r\nrechunked\r\n# dask.array<rechunk-merge, shape=(2, 10, 10, 10), dtype=float64, chunksize=(1, 1, 10, 10)>\r\n\r\nrechunked[0, 0].compute()  # still calls f() 10 times with or without optimize_graph=True\r\n```\r\n\r\nThe only way I can think of to avoid this is to avoid using reshape altogether by manually constructing dask arrays for each dimension, and then stacking them.  As an example for my `dask-image` use case:\r\n```python\r\nfrom dask_image.imread import imread\r\nstack = da.stack([imread(f\"data/*ch{i}*.tif\") for i in range(nchannels)])\r\n# then calling stack[0,0].compute() only incurs one read\r\n```\r\nthat seems a bit harder to scale to more dimensions... so just wanted to make sure that's the recommended approach?  thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/557237026/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/558943392",
        "html_url": "https://github.com/dask/dask/issues/3650#issuecomment-558943392",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3650",
        "id": 558943392,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODk0MzM5Mg==",
        "user": {
            "login": "jni",
            "id": 492549,
            "node_id": "MDQ6VXNlcjQ5MjU0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/492549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jni",
            "html_url": "https://github.com/jni",
            "followers_url": "https://api.github.com/users/jni/followers",
            "following_url": "https://api.github.com/users/jni/following{/other_user}",
            "gists_url": "https://api.github.com/users/jni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jni/subscriptions",
            "organizations_url": "https://api.github.com/users/jni/orgs",
            "repos_url": "https://api.github.com/users/jni/repos",
            "events_url": "https://api.github.com/users/jni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jni/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-27T06:02:28Z",
        "updated_at": "2019-11-27T06:02:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "@shoyer I don't understand why chunks are getting \"consolidated\" in @tlambert03's example:\r\n\r\n```python\r\nIn [4]: arr.chunks\r\nOut[4]: ((1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1), (10,), (10,))\r\n\r\nIn [5]: arr.reshape(2, 10, 10, 10).chunks\r\nOut[5]: ((1, 1), (10,), (10,), (10,))\r\n```\r\n\r\nThe chunksize goes from (1, 10, 10) to (1, 10, 10, 10), so stacking of the chunks is happening automatically and, in this case, with a detrimental effect on performance. Unless I'm misunderstanding what's happening, it seems to me that reshape and other functions should gain the ability to turn off automatic rechunking, and this problem would then go away?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/558943392/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/558952936",
        "html_url": "https://github.com/dask/dask/issues/3650#issuecomment-558952936",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3650",
        "id": 558952936,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODk1MjkzNg==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-27T06:40:50Z",
        "updated_at": "2019-11-27T06:40:50Z",
        "author_association": "MEMBER",
        "body": "Yeah, I don\u2019t understand what is going on in that example. It looks like a bit of a different situation than what is described in the original issue here.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/558952936/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/685172416",
        "html_url": "https://github.com/dask/dask/issues/3650#issuecomment-685172416",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3650",
        "id": 685172416,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTE3MjQxNg==",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-01T22:41:55Z",
        "updated_at": "2020-09-01T22:41:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "The rehsape algorithm is setup to rechunk into singleton chunks along all but the first dimension.\r\n\r\nI created an example PR to show a shortcut when collapsing chunksize=1 reshaping:\r\nhttps://github.com/deisseroth-lab/dask/commit/39d56b91a016edbcbf01b281da2ba433915ee23a\r\n\r\nThere has been discussion on this topic here, too\r\nhttps://github.com/dask/dask/issues/5544\r\n\r\nI think getting this optimal in the general case is tricky, but perhaps someone has a slick algorithm.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/685172416/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]