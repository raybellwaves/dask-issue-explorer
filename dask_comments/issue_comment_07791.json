[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/988673559",
        "html_url": "https://github.com/dask/dask/issues/7791#issuecomment-988673559",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7791",
        "id": 988673559,
        "node_id": "IC_kwDOAbcwm8467fYX",
        "user": {
            "login": "GenevieveBuckley",
            "id": 30920819,
            "node_id": "MDQ6VXNlcjMwOTIwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenevieveBuckley",
            "html_url": "https://github.com/GenevieveBuckley",
            "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
            "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
            "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
            "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
            "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-08T10:09:40Z",
        "updated_at": "2021-12-08T10:09:40Z",
        "author_association": "MEMBER",
        "body": "I worked some more on this in the last two days, here is a summary of where we are at.\r\n\r\nFirst I focused on counting the number of tasks without materializing the graph (a slightly easier task than generating all the output keys). Then I can extend the idea to generating the full output keys without materializing it.\r\n\r\nI sent this in email to Ian and Gabe earlier:\r\n> I did some more work on how we could implement ``len`` (i.e. count the number of tasks) for the ArrayOverlapLayer.\r\n> \r\n> Like we discussed, the tricky part is working out how many chunks are on the vertices, edges, faces, cells, etc. This hypercube table didn't help as much as I'd hoped, because there can be different numbers of chunks along each dimension.\r\n> \r\n> What I tried instead was:\r\n> 1. Generating a numpy ones array  (so there is a \"1\" value representing the position of each Dask array chunk from the big Dask array).\r\n> 2. Convolving that with a 3^ndim kernel gives us an array where each value represents the count of the chunk itself plus every touching neighbor.\r\n> 3. The sum of all these values is the total number of \"getitem\" tasks in the map_overlap task graph.\r\n> \r\n> The other types of tasks are generally much easier to count. I haven't played around too much with different boundary conditions, but given that next March the default boundary condition will change to \"none\" I don't think it's too much of a worry if we don't figure them all out immediately.\r\n> \r\n> There are two flaws with this method:\r\n> 1. It uses numpy, which will be a problem given our serialization constraints, and\r\n> 2. For really huge Dask arrays with really huge chunk numbers, (I mean, I guess I could try to put the smaller array into its own Dask array, but then you need map_overlap to do the convolution, and it all gets a bit inception-y. I'd expect recursion errors if we tried that).\r\n\r\nAs described above this idea is flawed, and I've abandoned it in favour of a better approach (see comments below).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/988673559/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]