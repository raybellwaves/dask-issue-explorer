[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/703825182",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-703825182",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 703825182,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzgyNTE4Mg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-05T18:57:45Z",
        "updated_at": "2020-10-05T18:57:45Z",
        "author_association": "MEMBER",
        "body": "I recommend using the dask.distributed scheduler for this.  It will route\ndask calls back to the main scheduler when they are run, so everything will\nshare resources.\n\nOn Mon, Oct 5, 2020 at 11:54 AM gioxc88 <notifications@github.com> wrote:\n\n> I couldn't find any satisfactory question (and answer) either in the\n> opened issues or on stackoverflow, so I thought I might as well open an\n> issue myself.\n>\n> I'll illustrate the problem with my use-case (which is oversimplified\n> below).\n>\n>    1. My dataset contains 30 observations which I divide in 3 subsamples\n>    of 10 observation each.\n>    (the real dataset is much bigger and the number of subsamples is much\n>    higher)\n>\n> >>> print(len(X))\n> >>> 30\n>\n>      subsample1            subsample2            subsample3\n> x x x x x x x x x x | x x x x x x x x x x | x x x x x x x x x x |\n> 0 1 2 3 4 5 6 7 8 9 | 0 1 2 3 4 5 6 7 8 9 | 0 1 2 3 4 5 6 7 8 9 |\n>\n>\n>\n>    1. For each subsample I train a model which needs to be tuned via\n>    cross-validation, for example using GridSearchCV or HyperbandSearchCV.\n>    Say that I want to validate the l1 penalty of a Lasso regressor using\n>    a grid of 50 points, such that I train 50 models for every subsample.\n>\n> from dask import compute, delayed\n> from dask_ml.model_selection import GridSearchCV\n> from sklearn.linear_model import Lasso\n>\n> reg = Lasso()\n> param_space = np.logspace(1, -9, num=50)\n> param_grid ={'alpha': param_space}\n> model = GridSearchCV(reg)\n>\n> In this case the schema would look something like:\n>\n>               | model0\n>               | model1\n> subsample3 -> | ...\n>               | model49\n> ------------------------\n>               | model0\n>               | model1\n> subsample3 -> | ...\n>               | model49\n> ------------------------\n>               | model0\n>               | model1\n> subsample3 -> | ...\n>               | model49\n>\n> As I said, in the real world application I have more than 100 subsamples\n> on which I cross validate the model by training 50 different hyperparameter\n> combinations for each subsample.\n>\n> I could easily write a code like this:\n>\n> from dask import compute, delayed\n> from . import load_data, get_subsample\n>\n> X, y = load_dada()  # load_data is an imaginary function for loading the data\n> n_subsample = 100\n>\n> results = []\n> for subsample in range(n_subsamples):\n>     X_train, y_train = get_subsample(X, y, subsample)  # get_subsample is an imaginary function which slices X and y\n>     results.append(delayed(model.fit)(X_train, y_train))\n> results = compute(*results)\n>\n> To summarize:\n>\n>    1. Since I parallelized computations across subsamples dask is\n>    spawning one process for each subsample.\n>    2. Since within each subsample I use GridSearchCV, which also makes\n>    use of multiprocessing, this will also try to spawn processes within the\n>    process.\n>\n> In this case we could talk about nested processes.\n> My questions are:\n>\n>    1. How does dask handle this? If it doesn't handle it already, should\n>    it be able to?\n>    2. Is this a bad design and does not have anything to do with dask in\n>    the first place?\n>\n> Many thanks\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/6705>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AACKZTDI7VUFQBQYJ6NA3MLSJII7LANCNFSM4SFBZROQ>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/703825182/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/705868298",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-705868298",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 705868298,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTg2ODI5OA==",
        "user": {
            "login": "gioxc88",
            "id": 41852601,
            "node_id": "MDQ6VXNlcjQxODUyNjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/41852601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gioxc88",
            "html_url": "https://github.com/gioxc88",
            "followers_url": "https://api.github.com/users/gioxc88/followers",
            "following_url": "https://api.github.com/users/gioxc88/following{/other_user}",
            "gists_url": "https://api.github.com/users/gioxc88/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gioxc88/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gioxc88/subscriptions",
            "organizations_url": "https://api.github.com/users/gioxc88/orgs",
            "repos_url": "https://api.github.com/users/gioxc88/repos",
            "events_url": "https://api.github.com/users/gioxc88/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gioxc88/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-08T23:07:04Z",
        "updated_at": "2020-10-08T23:07:57Z",
        "author_association": "NONE",
        "body": "> I recommend using the dask.distributed scheduler for this. It will route dask calls back to the main scheduler when they are run, so everything will share resources.\r\n\r\nThanks so much for taking the time for looking into this.\r\nI tried the approach you suggested but unfortunately it does not work.\r\n\r\nFor testing  I used `dask_ml.model_selection.GridSearchCV` as described above\r\nBefore that I started a local cluster by doing \r\n```\r\nfrom dask.distributed import Client\r\nclient = Client()\r\n```\r\n\r\nWhat happens is that the graph is computed but then the tasks never starts, they hang indefinitely. Below the screen of what I see in the dashboard. \r\n\r\n![image](https://user-images.githubusercontent.com/41852601/95522161-41ac0f80-09c3-11eb-86b7-871903da22b6.png)\r\n\r\nDo you think I can provide any additional information to help identify what causes the problem?\r\n\r\nMany thanks\r\nGio",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/705868298/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/707276562",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-707276562",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 707276562,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzI3NjU2Mg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-12T18:22:52Z",
        "updated_at": "2020-10-12T18:22:52Z",
        "author_association": "MEMBER",
        "body": "Hrm, that's odd.  To aid figuring out what's going on are you able to provide a minimal reproducer?  That would let maintainers run into the same problem that you're running into and more easily be able to see what is going on without guessing.  You might want to use some of the sklearn datasets to assist here.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/707276562/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/707338784",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-707338784",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 707338784,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzMzODc4NA==",
        "user": {
            "login": "gioxc88",
            "id": 41852601,
            "node_id": "MDQ6VXNlcjQxODUyNjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/41852601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gioxc88",
            "html_url": "https://github.com/gioxc88",
            "followers_url": "https://api.github.com/users/gioxc88/followers",
            "following_url": "https://api.github.com/users/gioxc88/following{/other_user}",
            "gists_url": "https://api.github.com/users/gioxc88/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gioxc88/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gioxc88/subscriptions",
            "organizations_url": "https://api.github.com/users/gioxc88/orgs",
            "repos_url": "https://api.github.com/users/gioxc88/repos",
            "events_url": "https://api.github.com/users/gioxc88/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gioxc88/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-12T20:49:32Z",
        "updated_at": "2020-10-12T20:49:32Z",
        "author_association": "NONE",
        "body": "> Hrm, that's odd. To aid figuring out what's going on are you able to provide a minimal reproducer? That would let maintainers run into the same problem that you're running into and more easily be able to see what is going on without guessing. You might want to use some of the sklearn datasets to assist here.\r\n\r\nI am very happy to provide a reproducible example.\r\nI just tested this on  JupyterLab with:\r\npython 3.8.6\r\ndask 2.29.0\r\ndask-ml 1.7.0\r\n(even though I got the same problem with previous versions)\r\n\r\n```\r\nimport numpy as np\r\nimport pandas as pd\r\n\r\nfrom dask import compute, delayed\r\nfrom dask.distributed import Client\r\nfrom dask_ml.model_selection import GridSearchCV\r\nfrom sklearn.linear_model import Lasso\r\n\r\n# random number generator\r\nrng = np.random.default_rng(7)\r\n\r\n# client\r\nclient = Client()\r\nclient\r\n\r\n# data\r\nn_obs = 1000\r\nn_features = 10\r\nX = pd.DataFrame(rng.normal(size=(n_obs, n_features)))\r\ny = pd.Series(rng.normal(size=(n_obs, )))\r\n\r\n# estimators \r\nestimator = Lasso()\r\nparam_grid = {'alpha': np.logspace(1, -5, num=10)}\r\nsearch = GridSearchCV(estimator, param_grid=param_grid)\r\n\r\n# subsamples \r\nn_subsamples = 10\r\nsubsample_size = n_obs // n_subsamples\r\nsubsamples_starts = range(0, n_obs, subsample_size)\r\n\r\n# parallel computation\r\nresults = []\r\nfor subsample_start in subsamples_starts:\r\n    X_train = X[subsample_start:subsample_start+subsample_size]\r\n    y_train = y[subsample_start:subsample_start+subsample_size]\r\n    results.append(delayed(search.fit)(X_train, y_train))\r\nresults = compute(*results)\r\n```\r\nAnd this is what is shown on the dashboard. It's stuck and I need to interrupt the kernel as the cell never gets executed. The same behavior is present if I use PyCharm (just to say I don't think it is related to JupyterLab)\r\n\r\n![image](https://user-images.githubusercontent.com/41852601/95788946-d45af000-0cdc-11eb-9d59-c935060dca6e.png)\r\n\r\nThank you very much to anyone who will look into this.\r\nGio\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/707338784/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/707345571",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-707345571",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 707345571,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzM0NTU3MQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-12T21:05:34Z",
        "updated_at": "2020-10-12T21:05:34Z",
        "author_association": "MEMBER",
        "body": "Hrm, on a first attempt this unfortunately ran fine for me.\r\n\r\n```python\r\nIn [1]: import numpy as np\r\n   ...: import pandas as pd\r\n   ...: \r\n   ...: from dask import compute, delayed\r\n   ...: from dask.distributed import Client\r\n   ...: from dask_ml.model_selection import GridSearchCV\r\n   ...: from sklearn.linear_model import Lasso\r\n   ...: \r\n   ...: # random number generator\r\n   ...: rng = np.random.default_rng(7)\r\n   ...: \r\n   ...: # client\r\n   ...: client = Client()\r\n   ...: client\r\n   ...: \r\n   ...: # data\r\n   ...: n_obs = 1000\r\n   ...: n_features = 10\r\n   ...: X = pd.DataFrame(rng.normal(size=(n_obs, n_features)))\r\n   ...: y = pd.Series(rng.normal(size=(n_obs, )))\r\n   ...: \r\n   ...: # estimators \r\n   ...: estimator = Lasso()\r\n   ...: param_grid = {'alpha': np.logspace(1, -5, num=10)}\r\n   ...: search = GridSearchCV(estimator, param_grid=param_grid)\r\n   ...: \r\n   ...: # subsamples \r\n   ...: n_subsamples = 10\r\n   ...: subsample_size = n_obs // n_subsamples\r\n   ...: subsamples_starts = range(0, n_obs, subsample_size)\r\n   ...: \r\n   ...: # parallel computation\r\n   ...: results = []\r\n   ...: for subsample_start in subsamples_starts:\r\n   ...:     X_train = X[subsample_start:subsample_start+subsample_size]\r\n   ...:     y_train = y[subsample_start:subsample_start+subsample_size]\r\n   ...:     results.append(delayed(search.fit)(X_train, y_train))\r\n   ...: results = compute(*results)\r\n   ...: \r\n\r\nIn [2]: results\r\nOut[2]: \r\n(GridSearchCV(estimator=Lasso(),\r\n              param_grid={'alpha': array([1.00000000e+01, 2.15443469e+00, 4.64158883e-01, 1.00000000e-01,\r\n        2.15443469e-02, 4.64158883e-03, 1.00000000e-03, 2.15443469e-04,\r\n        4.64158883e-05, 1.00000000e-05])}),\r\n GridSearchCV(estimator=Lasso(),\r\n              param_grid={'alpha': array([1.00000000e+01, 2.15443469e+00, 4.64158883e-01, 1.00000000e-01,\r\n        2.15443469e-02, 4.64158883e-03, 1.00000000e-03, 2.15443469e-04,\r\n        4.64158883e-05, 1.00000000e-05])}),\r\n GridSearchCV(estimator=Lasso(),\r\n              param_grid={'alpha': array([1.00000000e+01, 2.15443469e+00, 4.64158883e-01, 1.00000000e-01,\r\n        2.15443469e-02, 4.64158883e-03, 1.00000000e-03, 2.15443469e-04,\r\n        4.64158883e-05, 1.00000000e-05])}),\r\n GridSearchCV(estimator=Lasso(),\r\n              param_grid={'alpha': array([1.00000000e+01, 2.15443469e+00, 4.64158883e-01, 1.00000000e-01,\r\n        2.15443469e-02, 4.64158883e-03, 1.00000000e-03, 2.15443469e-04,\r\n        4.64158883e-05, 1.00000000e-05])}),\r\n GridSearchCV(estimator=Lasso(),\r\n              param_grid={'alpha': array([1.00000000e+01, 2.15443469e+00, 4.64158883e-01, 1.00000000e-01,\r\n        2.15443469e-02, 4.64158883e-03, 1.00000000e-03, 2.15443469e-04,\r\n        4.64158883e-05, 1.00000000e-05])}),\r\n GridSearchCV(estimator=Lasso(),\r\n              param_grid={'alpha': array([1.00000000e+01, 2.15443469e+00, 4.64158883e-01, 1.00000000e-01,\r\n        2.15443469e-02, 4.64158883e-03, 1.00000000e-03, 2.15443469e-04,\r\n        4.64158883e-05, 1.00000000e-05])}),\r\n GridSearchCV(estimator=Lasso(),\r\n              param_grid={'alpha': array([1.00000000e+01, 2.15443469e+00, 4.64158883e-01, 1.00000000e-01,\r\n        2.15443469e-02, 4.64158883e-03, 1.00000000e-03, 2.15443469e-04,\r\n        4.64158883e-05, 1.00000000e-05])}),\r\n GridSearchCV(estimator=Lasso(),\r\n              param_grid={'alpha': array([1.00000000e+01, 2.15443469e+00, 4.64158883e-01, 1.00000000e-01,\r\n        2.15443469e-02, 4.64158883e-03, 1.00000000e-03, 2.15443469e-04,\r\n        4.64158883e-05, 1.00000000e-05])}),\r\n GridSearchCV(estimator=Lasso(),\r\n              param_grid={'alpha': array([1.00000000e+01, 2.15443469e+00, 4.64158883e-01, 1.00000000e-01,\r\n        2.15443469e-02, 4.64158883e-03, 1.00000000e-03, 2.15443469e-04,\r\n        4.64158883e-05, 1.00000000e-05])}),\r\n GridSearchCV(estimator=Lasso(),\r\n              param_grid={'alpha': array([1.00000000e+01, 2.15443469e+00, 4.64158883e-01, 1.00000000e-01,\r\n        2.15443469e-02, 4.64158883e-03, 1.00000000e-03, 2.15443469e-04,\r\n        4.64158883e-05, 1.00000000e-05])}))\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/707345571/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/707357209",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-707357209",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 707357209,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzM1NzIwOQ==",
        "user": {
            "login": "gioxc88",
            "id": 41852601,
            "node_id": "MDQ6VXNlcjQxODUyNjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/41852601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gioxc88",
            "html_url": "https://github.com/gioxc88",
            "followers_url": "https://api.github.com/users/gioxc88/followers",
            "following_url": "https://api.github.com/users/gioxc88/following{/other_user}",
            "gists_url": "https://api.github.com/users/gioxc88/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gioxc88/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gioxc88/subscriptions",
            "organizations_url": "https://api.github.com/users/gioxc88/orgs",
            "repos_url": "https://api.github.com/users/gioxc88/repos",
            "events_url": "https://api.github.com/users/gioxc88/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gioxc88/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-12T21:35:36Z",
        "updated_at": "2020-10-12T22:11:58Z",
        "author_association": "NONE",
        "body": "That is super strange.\r\nBoth on my workstation and on my notebook the behavior is the same when I execute the code above. Maybe the problem is python 3.8?\r\n\r\n### EDIT:\r\ntried with a fresh python 3.7 installation but still same problem for me\r\n\r\nIs there any other thing I can do to help you identify the problem?\r\nMany thanks \r\n\r\nGio",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/707357209/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/707746414",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-707746414",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 707746414,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzc0NjQxNA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-13T13:40:56Z",
        "updated_at": "2020-10-13T13:40:56Z",
        "author_association": "MEMBER",
        "body": "I also saw he computation hanging. A couple things stand out:\r\n\r\n1. You're delaying `dask_ml.model_selection.GridSearchCV.fit`. It's strange to wrap task-generating things like dask-ml's GridSearchCV inside a `delayed` object. Does just using `sklearn.model_selection.GridSearchCV` work?\r\n2. Scikit-Learn's `.fit` API relies on mutation of the object to propagate return values. So `delayed(search.fit)` is delaying a reference to an object `search` that's mutated in each fit call. I'd recommend delaying `fit` on a cloned version\r\n\r\n```python\r\n# parallel computation\r\nresults = []\r\nfor subsample_start in subsamples_starts:\r\n    X_train = X[subsample_start:subsample_start+subsample_size]\r\n    y_train = y[subsample_start:subsample_start+subsample_size]\r\n    results.append(delayed(sklearn.base.clone(search).fit)(X_train, y_train))\r\nresults = compute(*results)\r\n```\r\n\r\nThat completes for me.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/707746414/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/707755647",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-707755647",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 707755647,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzc1NTY0Nw==",
        "user": {
            "login": "gioxc88",
            "id": 41852601,
            "node_id": "MDQ6VXNlcjQxODUyNjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/41852601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gioxc88",
            "html_url": "https://github.com/gioxc88",
            "followers_url": "https://api.github.com/users/gioxc88/followers",
            "following_url": "https://api.github.com/users/gioxc88/following{/other_user}",
            "gists_url": "https://api.github.com/users/gioxc88/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gioxc88/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gioxc88/subscriptions",
            "organizations_url": "https://api.github.com/users/gioxc88/orgs",
            "repos_url": "https://api.github.com/users/gioxc88/repos",
            "events_url": "https://api.github.com/users/gioxc88/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gioxc88/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-13T13:55:30Z",
        "updated_at": "2020-10-13T13:55:30Z",
        "author_association": "NONE",
        "body": "> I also saw he computation hanging. A couple things stand out:\r\n> \r\n> 1. You're delaying `dask_ml.model_selection.GridSearchCV.fit`. It's strange to wrap task-generating things like dask-ml's GridSearchCV inside a `delayed` object. Does just using `sklearn.model_selection.GridSearchCV` work?\r\n> 2. Scikit-Learn's `.fit` API relies on mutation of the object to propagate return values. So `delayed(search.fit)` is delaying a reference to an object `search` that's mutated in each fit call. I'd recommend delaying `fit` on a cloned version\r\n\r\nDear @TomAugspurger, thank you very much for looking into this. I am aware of both points and I have an answer for all of them.\r\n\r\nI'll address 2 first: very simply, for the sake of keeping the example minimal I did not clone the estimator here but in the original code it is deepcopied, but thanks for bringing that up.\r\n\r\n1. The only difference in using `dask GridSearchCV` instead of `sklearn GridSearchCV` is that in the first case the process never starts (it hangs) in the second case it starts with a warning though:\r\n\r\n`loky-backed parallel loops cannot be called in a multiprocessing setting n_jobs=1`\r\n\r\nthis means that effectively multiporcessing is not used even if I use `sklearn GridSearchCV`. Furthermore, I would prefer using  `dask GridSearchCV` because on the dashboard I got much more details about what task is being executed. \r\n\r\nThe reason why I want to do parallel computation both on the subsamples and on the parameter space is that in many case I could have a lot of subsamples but a parameter space which is not very broad so GridSeachCV or any other SearchCV instances might end up not using 100% of cpu for a single subsample.\r\n\r\nGio",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/707755647/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/721225592",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-721225592",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 721225592,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTIyNTU5Mg==",
        "user": {
            "login": "gioxc88",
            "id": 41852601,
            "node_id": "MDQ6VXNlcjQxODUyNjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/41852601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gioxc88",
            "html_url": "https://github.com/gioxc88",
            "followers_url": "https://api.github.com/users/gioxc88/followers",
            "following_url": "https://api.github.com/users/gioxc88/following{/other_user}",
            "gists_url": "https://api.github.com/users/gioxc88/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gioxc88/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gioxc88/subscriptions",
            "organizations_url": "https://api.github.com/users/gioxc88/orgs",
            "repos_url": "https://api.github.com/users/gioxc88/repos",
            "events_url": "https://api.github.com/users/gioxc88/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gioxc88/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-11-03T16:11:12Z",
        "updated_at": "2020-11-03T16:11:12Z",
        "author_association": "NONE",
        "body": "any news on this?\r\nMany thanks\r\n\r\nGio",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/721225592/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/721697244",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-721697244",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 721697244,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTY5NzI0NA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-11-04T12:13:53Z",
        "updated_at": "2020-11-04T12:13:53Z",
        "author_association": "MEMBER",
        "body": "I'm not sure, but the strangest thing I see is the `delayed(search).fit(X, y)`. Typically you don't delay things that are already using dask.\r\n\r\nIf you're interested, you could try to get the raw dask graph out of https://github.com/dask/dask-ml/blob/master/dask_ml/model_selection/_search.py#L1230 to avoid the delay. And then do one big compute at the end on all of those.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/721697244/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/721880405",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-721880405",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 721880405,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTg4MDQwNQ==",
        "user": {
            "login": "gioxc88",
            "id": 41852601,
            "node_id": "MDQ6VXNlcjQxODUyNjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/41852601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gioxc88",
            "html_url": "https://github.com/gioxc88",
            "followers_url": "https://api.github.com/users/gioxc88/followers",
            "following_url": "https://api.github.com/users/gioxc88/following{/other_user}",
            "gists_url": "https://api.github.com/users/gioxc88/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gioxc88/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gioxc88/subscriptions",
            "organizations_url": "https://api.github.com/users/gioxc88/orgs",
            "repos_url": "https://api.github.com/users/gioxc88/repos",
            "events_url": "https://api.github.com/users/gioxc88/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gioxc88/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-11-04T17:50:03Z",
        "updated_at": "2020-11-04T17:50:03Z",
        "author_association": "NONE",
        "body": "> I'm not sure, but the strangest thing I see is the `delayed(search).fit(X, y)`. Typically you don't delay things that are already using dask.\r\n> \r\n> If you're interested, you could try to get the raw dask graph out of https://github.com/dask/dask-ml/blob/master/dask_ml/model_selection/_search.py#L1230 to avoid the delay. And then do one big compute at the end on all of those.\r\n\r\nThank you for the answer\r\nIf you look carefully I am delaying `search.fit` and not `search` as your code implies.\r\n\r\nAfter running additional tests I think I found a hint on what could be the cause of the problem.\r\nBasically today I tested the code on linux and if works fine, whereas on Windows it hangs as described above.\r\n\r\nSince @mrocklin you tested the code and it worked fine for you could you please confirm that you actually tested it on a linux machine?\r\n\r\nalso @TomAugspurger you said it was hanging for you, could you please confirm that you tested it on windows?\r\n\r\nIf that's the case I am afraid my knowledge is too limited to open on PR which could fix the problem on windows and I would ask help from the community to fix it.\r\n\r\nMany thanks ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/721880405/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/723108802",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-723108802",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 723108802,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzEwODgwMg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-11-06T14:27:28Z",
        "updated_at": "2020-11-06T14:27:28Z",
        "author_association": "MEMBER",
        "body": "> Since @mrocklin you tested the code and it worked fine for you could you please confirm that you actually tested it on a linux machine?\r\n\r\nYes, I run Ubuntu 20.04 on a Lenovo Thinkpad.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/723108802/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/723974326",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-723974326",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 723974326,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzk3NDMyNg==",
        "user": {
            "login": "gioxc88",
            "id": 41852601,
            "node_id": "MDQ6VXNlcjQxODUyNjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/41852601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gioxc88",
            "html_url": "https://github.com/gioxc88",
            "followers_url": "https://api.github.com/users/gioxc88/followers",
            "following_url": "https://api.github.com/users/gioxc88/following{/other_user}",
            "gists_url": "https://api.github.com/users/gioxc88/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gioxc88/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gioxc88/subscriptions",
            "organizations_url": "https://api.github.com/users/gioxc88/orgs",
            "repos_url": "https://api.github.com/users/gioxc88/repos",
            "events_url": "https://api.github.com/users/gioxc88/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gioxc88/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-11-09T12:10:14Z",
        "updated_at": "2020-11-09T12:10:14Z",
        "author_association": "NONE",
        "body": "any idea of why it hangs on windows?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/723974326/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/725577164",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-725577164",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 725577164,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTU3NzE2NA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-11-11T18:08:06Z",
        "updated_at": "2020-11-11T18:08:06Z",
        "author_association": "MEMBER",
        "body": "I do not right now have such an idea.  It is unlikely that I personally\nwill test this out immediately.  I encourage others to though.\n\nOn Mon, Nov 9, 2020 at 4:10 AM gioxc88 <notifications@github.com> wrote:\n\n> any idea of why it hangs on windows?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/6705#issuecomment-723974326>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AACKZTGQBNUMPRVHO54QWPLSO7L3JANCNFSM4SFBZROQ>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/725577164/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/746902356",
        "html_url": "https://github.com/dask/dask/issues/6705#issuecomment-746902356",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6705",
        "id": 746902356,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjkwMjM1Ng==",
        "user": {
            "login": "gioxc88",
            "id": 41852601,
            "node_id": "MDQ6VXNlcjQxODUyNjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/41852601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gioxc88",
            "html_url": "https://github.com/gioxc88",
            "followers_url": "https://api.github.com/users/gioxc88/followers",
            "following_url": "https://api.github.com/users/gioxc88/following{/other_user}",
            "gists_url": "https://api.github.com/users/gioxc88/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gioxc88/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gioxc88/subscriptions",
            "organizations_url": "https://api.github.com/users/gioxc88/orgs",
            "repos_url": "https://api.github.com/users/gioxc88/repos",
            "events_url": "https://api.github.com/users/gioxc88/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gioxc88/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-16T19:43:54Z",
        "updated_at": "2020-12-16T19:43:54Z",
        "author_association": "NONE",
        "body": "@mrocklin I doing tests using nested calls to delayed and compute and I also came across the problem of [work stealing](http://distributed.dask.org/en/latest/work-stealing.html).\r\nThis results in errors and the overall job fails with a traceback because some process has been closed. And I think is related to work stealing.\r\n\r\nI wonder though can this be because I also call compute on multiple times so the scheduler is not able to make the whole computation graph in advance?\r\n\r\nWould something returning the futures object for each nested function and then calling compute once solve the problem?\r\n\r\nI was wondering if this nested problem can be attacked by using async def or using coroutines.\r\n\r\nThis would change my implementation by a lot so I wanted your opinion on this before diving into deep waters \r\n\r\nThanks\r\nGio\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/746902356/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]