[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1653386296",
        "html_url": "https://github.com/dask/dask/issues/10431#issuecomment-1653386296",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10431",
        "id": 1653386296,
        "node_id": "IC_kwDOAbcwm85ijKw4",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-27T10:58:46Z",
        "updated_at": "2023-07-27T10:58:46Z",
        "author_association": "MEMBER",
        "body": "Well, generating a random array without knowing it's shape is difficult. At least right now we don't have a concept that does this. If the shape is known, that's a different story.\r\n\r\nIf it's just about multiplying a random distribution of the same length, I would probably recommend using [map_blocks](https://docs.dask.org/en/latest/generated/dask.array.map_blocks.html#dask.array.map_blocks) instead of generating another array. This would look roughly like... (not tested)\r\n\r\n```python\r\narr_orig = da.from_foo(...)\r\n\r\ndef multiply_rand(block):\r\n    import numpy as np\r\n    # randn is normal distributed, see https://numpy.org/doc/stable/reference/random/generated/numpy.random.randn.html\r\n    return block * np.random.randn(*block.shape)\r\n\r\nnew_arr = arr_orig.map_blocks(multiply_rand)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1653386296/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]