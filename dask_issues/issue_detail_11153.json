{
    "url": "https://api.github.com/repos/dask/dask/issues/11153",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/11153/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/11153/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/11153/events",
    "html_url": "https://github.com/dask/dask/issues/11153",
    "id": 2323604866,
    "node_id": "I_kwDOAbcwm86Kf2WC",
    "number": 11153,
    "title": "`dask/dataframe/tests/test_indexing.py::test_getitem_integer_slice` failing with nightly `pandas`",
    "user": {
        "login": "jrbourbeau",
        "id": 11656932,
        "node_id": "MDQ6VXNlcjExNjU2OTMy",
        "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrbourbeau",
        "html_url": "https://github.com/jrbourbeau",
        "followers_url": "https://api.github.com/users/jrbourbeau/followers",
        "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
        "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
        "repos_url": "https://api.github.com/users/jrbourbeau/repos",
        "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 2949860090,
            "node_id": "MDU6TGFiZWwyOTQ5ODYwMDkw",
            "url": "https://api.github.com/repos/dask/dask/labels/upstream",
            "name": "upstream",
            "color": "DDF8B0",
            "default": false,
            "description": ""
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-05-29T15:25:06Z",
    "updated_at": "2024-05-29T15:25:06Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "`dask/dataframe/tests/test_indexing.py::test_getitem_integer_slice` has been failing against nightly `pandas` for a while now. Looks like https://github.com/pandas-dev/pandas/pull/58646 is related upstream. @phofl do you have bandwidth to look into this one? \r\n\r\n```\r\n__________________________ test_getitem_integer_slice __________________________\r\n[gw2] linux -- Python 3.12.3 /home/runner/miniconda3/envs/test-environment/bin/python3.12\r\n\r\n    def test_getitem_integer_slice():\r\n        df = pd.DataFrame({\"A\": range(6)})\r\n        ddf = dd.from_pandas(df, 2)\r\n        # integer slicing is iloc based\r\n        with pytest.raises(NotImplementedError):\r\n            ddf[1:3]\r\n    \r\n        df = pd.DataFrame({\"A\": range(6)}, index=[1.0, 2.0, 3.0, 5.0, 10.0, 11.0])\r\n        ddf = dd.from_pandas(df, 2)\r\n        # except for float dtype indexes\r\n        ctx = contextlib.nullcontext()\r\n        if PANDAS_GE_210:\r\n            ctx = pytest.warns(FutureWarning, match=\"float-dtype index\")\r\n        with ctx:\r\n>           assert_eq(ddf[2:8], df[2:8])\r\n\r\ndask/dataframe/tests/test_indexing.py:357: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\na =      A\r\n2.0  1\r\n3.0  2\r\n5.0  3, b =       A\r\n3.0   2\r\n5.0   3\r\n10.0  4\r\n11.0  5\r\ncheck_names = True, check_dtype = True, check_divisions = True\r\ncheck_index = True, sort_results = True, scheduler = 'sync', kwargs = {}\r\n\r\n    def assert_eq(\r\n        a,\r\n        b,\r\n        check_names=True,\r\n        check_dtype=True,\r\n        check_divisions=True,\r\n        check_index=True,\r\n        sort_results=True,\r\n        scheduler=\"sync\",\r\n        **kwargs,\r\n    ):\r\n        if check_divisions:\r\n            assert_divisions(a, scheduler=scheduler)\r\n            assert_divisions(b, scheduler=scheduler)\r\n            if hasattr(a, \"divisions\") and hasattr(b, \"divisions\"):\r\n                at = type(np.asarray(a.divisions).tolist()[0])  # numpy to python\r\n                bt = type(np.asarray(b.divisions).tolist()[0])  # scalar conversion\r\n                assert at == bt, (at, bt)\r\n        assert_sane_keynames(a)\r\n        assert_sane_keynames(b)\r\n        a = _check_dask(\r\n            a, check_names=check_names, check_dtypes=check_dtype, scheduler=scheduler\r\n        )\r\n        b = _check_dask(\r\n            b, check_names=check_names, check_dtypes=check_dtype, scheduler=scheduler\r\n        )\r\n        if hasattr(a, \"to_pandas\"):\r\n            a = a.to_pandas()\r\n        if hasattr(b, \"to_pandas\"):\r\n            b = b.to_pandas()\r\n    \r\n        a, b = _maybe_convert_string(a, b)\r\n    \r\n        if isinstance(a, (pd.DataFrame, pd.Series)) and sort_results:\r\n            a = _maybe_sort(a, check_index)\r\n            b = _maybe_sort(b, check_index)\r\n        if not check_index:\r\n            a = a.reset_index(drop=True)\r\n            b = b.reset_index(drop=True)\r\n        if isinstance(a, pd.DataFrame):\r\n>           tm.assert_frame_equal(\r\n                a, b, check_names=check_names, check_dtype=check_dtype, **kwargs\r\nE               AssertionError: DataFrame are different\r\nE               \r\nE               DataFrame shape mismatch\r\nE               [left]:  (3, 1)\r\nE               [right]: (4, 1)\r\n\r\ndask/dataframe/utils.py:603: AssertionError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n    def test_getitem_integer_slice():\r\n        df = pd.DataFrame({\"A\": range(6)})\r\n        ddf = dd.from_pandas(df, 2)\r\n        # integer slicing is iloc based\r\n        with pytest.raises(NotImplementedError):\r\n            ddf[1:3]\r\n    \r\n        df = pd.DataFrame({\"A\": range(6)}, index=[1.0, 2.0, 3.0, 5.0, 10.0, 11.0])\r\n        ddf = dd.from_pandas(df, 2)\r\n        # except for float dtype indexes\r\n        ctx = contextlib.nullcontext()\r\n        if PANDAS_GE_210:\r\n            ctx = pytest.warns(FutureWarning, match=\"float-dtype index\")\r\n>       with ctx:\r\nE       Failed: DID NOT WARN. No warnings of type (<class 'FutureWarning'>,) were emitted.\r\nE        Emitted warnings: [].\r\n\r\ndask/dataframe/tests/test_indexing.py:356: Failed\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/11153/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/11153/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}