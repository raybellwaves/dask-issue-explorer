[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1521468154",
        "html_url": "https://github.com/dask/dask/issues/10217#issuecomment-1521468154",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10217",
        "id": 1521468154,
        "node_id": "IC_kwDOAbcwm85ar8L6",
        "user": {
            "login": "phofl",
            "id": 61934744,
            "node_id": "MDQ6VXNlcjYxOTM0NzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61934744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phofl",
            "html_url": "https://github.com/phofl",
            "followers_url": "https://api.github.com/users/phofl/followers",
            "following_url": "https://api.github.com/users/phofl/following{/other_user}",
            "gists_url": "https://api.github.com/users/phofl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phofl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phofl/subscriptions",
            "organizations_url": "https://api.github.com/users/phofl/orgs",
            "repos_url": "https://api.github.com/users/phofl/repos",
            "events_url": "https://api.github.com/users/phofl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phofl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-25T09:27:35Z",
        "updated_at": "2023-04-25T09:27:35Z",
        "author_association": "MEMBER",
        "body": "Hi, thanks for your report. I can't reproduce on arm Mac. Do you have access to another machine?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1521468154/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1521762417",
        "html_url": "https://github.com/dask/dask/issues/10217#issuecomment-1521762417",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10217",
        "id": 1521762417,
        "node_id": "IC_kwDOAbcwm85atEBx",
        "user": {
            "login": "mueslo",
            "id": 847751,
            "node_id": "MDQ6VXNlcjg0Nzc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mueslo",
            "html_url": "https://github.com/mueslo",
            "followers_url": "https://api.github.com/users/mueslo/followers",
            "following_url": "https://api.github.com/users/mueslo/following{/other_user}",
            "gists_url": "https://api.github.com/users/mueslo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mueslo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mueslo/subscriptions",
            "organizations_url": "https://api.github.com/users/mueslo/orgs",
            "repos_url": "https://api.github.com/users/mueslo/repos",
            "events_url": "https://api.github.com/users/mueslo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mueslo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-25T13:08:06Z",
        "updated_at": "2023-04-25T21:07:55Z",
        "author_association": "NONE",
        "body": "Yes, I just tried it on a remote compute node (intel x86_64) and a different python version (3.9) and the same thing occurs. My local machine is AMD x86_64. Added those details.\r\n\r\nJust found that my minimal example works correctly in `dask==2020.12.0`! I am now bisecting. \r\n\r\n**Edit:** Offending commit is https://github.com/dask/dask/commit/51add4e5c07fd0deb1b8cc179c7d66db9f8cc063 (PR: https://github.com/dask/dask/pull/7000)\r\n\r\nNote that I do not really know if #7000 is truly the cause, since there is also a small speed improvement. It is possible that this only brought to light some underlying multi-threaded race condition. The reported bug above does not occur below some sort of chunk size threshold, presumably because the hypothetical race condition does not occur if synchronization dominates. However, I have tried on the pre-regression commit with various chunk and array sizes and have not been able to produce a single failure.\r\n\r\n**Edit2:** slightly more simplified failing example, but produces wrong results less frequently, so additionally here.\r\n\r\n<details>\r\n  <summary>Code</summary>\r\n\r\n```python\r\nimport numpy as np\r\nimport dask.array as da\r\n\r\nm1 = np.random.random((3, 3))\r\nm2 = np.asfortranarray(np.random.random((3,3)))\r\nprint(np.isfortran(m1), np.isfortran(m2))\r\n\r\nx = da.random.random((400, 400, 47, 3), chunks=(100, 400, 47, 3))\r\nb = x.reshape(-1, 3)\r\nb2 = (b @ m1) @ m2\r\n\r\nprint('[BUG] MT / ST')\r\nwhile True:\r\n    try:\r\n        mt, st = b2.max().compute(), b2.max().compute(scheduler='single-threaded')\r\n        print(f\"[{'X' if mt != st else ' '}] {mt} / {st}\")\r\n    except KeyboardInterrupt:\r\n        break\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n  <summary>Task visualisation</summary>\r\n\r\n![dask_bug_simpler](https://user-images.githubusercontent.com/847751/234311487-dac208e6-c37d-4fc0-876a-38e61a7c097d.svg)\r\n\r\n</details>\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1521762417/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1522274802",
        "html_url": "https://github.com/dask/dask/issues/10217#issuecomment-1522274802",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10217",
        "id": 1522274802,
        "node_id": "IC_kwDOAbcwm85avBHy",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-25T19:02:31Z",
        "updated_at": "2023-04-25T19:02:31Z",
        "author_association": "MEMBER",
        "body": "cc @ravwojdyla who authored https://github.com/dask/dask/pull/7000",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1522274802/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1529278426",
        "html_url": "https://github.com/dask/dask/issues/10217#issuecomment-1529278426",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10217",
        "id": 1529278426,
        "node_id": "IC_kwDOAbcwm85bJu_a",
        "user": {
            "login": "ravwojdyla",
            "id": 1419010,
            "node_id": "MDQ6VXNlcjE0MTkwMTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1419010?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravwojdyla",
            "html_url": "https://github.com/ravwojdyla",
            "followers_url": "https://api.github.com/users/ravwojdyla/followers",
            "following_url": "https://api.github.com/users/ravwojdyla/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravwojdyla/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravwojdyla/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravwojdyla/subscriptions",
            "organizations_url": "https://api.github.com/users/ravwojdyla/orgs",
            "repos_url": "https://api.github.com/users/ravwojdyla/repos",
            "events_url": "https://api.github.com/users/ravwojdyla/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravwojdyla/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-01T02:42:45Z",
        "updated_at": "2023-05-01T02:42:45Z",
        "author_association": "MEMBER",
        "body": "> The reported bug above does not occur below some sort of chunk size threshold, presumably because the hypothetical race condition does not occur if synchronization dominates. \r\n\r\n\ud83d\udc4b @mueslo can you share some more on this please?\r\n\r\n<hr>\r\n\r\nI can reproduce this on Mac/M2 and Linux/Intel x86_64. #7000 `matmul` implementation follows the \"tensordot trick\" https://github.com/dask/dask/issues/6874#issuecomment-735944467, and turns out that this issue also affects `tensordot`:\r\n\r\n<details>\r\n\r\n<summary> Code w/ tensordot</summary>\r\n\r\n```py\r\nimport numpy as np\r\nimport dask.array as da\r\nm1 = np.random.random((3, 3))\r\nm2 = np.asfortranarray(np.random.random((3,3)))\r\nprint(np.isfortran(m1), np.isfortran(m2))\r\n\r\nx = da.random.random((400, 400, 47, 3), chunks=(100, 400, 47, 3))\r\nb = x.reshape(-1, 3)\r\n# NOTE: dot is implemented via tensordot \r\nb2 = np.dot(np.dot(b, m1), m2)\r\n\r\nprint('[BUG] MT / ST')\r\nwhile True:\r\n    try:\r\n        mt, st = b2.max().compute(), b2.max().compute(scheduler='single-threaded')\r\n        print(f\"[{'X' if mt != st else ' '}] {mt} / {st}\")\r\n    except KeyboardInterrupt:\r\n        break\r\n\r\n```\r\n</details>\r\n\r\nI can't reproduce this issue using einsum (matrix multiplication). Based on this I suspect the issue is likely related to the \"tensordot trick\" used in both `tensordot` and `matmul` (maybe others, that I don't know about). Maybe some kind of optimization kicks in with certain expectation on the intermediate results(?)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1529278426/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1533516007",
        "html_url": "https://github.com/dask/dask/issues/10217#issuecomment-1533516007",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10217",
        "id": 1533516007,
        "node_id": "IC_kwDOAbcwm85bZ5jn",
        "user": {
            "login": "mueslo",
            "id": 847751,
            "node_id": "MDQ6VXNlcjg0Nzc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mueslo",
            "html_url": "https://github.com/mueslo",
            "followers_url": "https://api.github.com/users/mueslo/followers",
            "following_url": "https://api.github.com/users/mueslo/following{/other_user}",
            "gists_url": "https://api.github.com/users/mueslo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mueslo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mueslo/subscriptions",
            "organizations_url": "https://api.github.com/users/mueslo/orgs",
            "repos_url": "https://api.github.com/users/mueslo/repos",
            "events_url": "https://api.github.com/users/mueslo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mueslo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-03T18:32:30Z",
        "updated_at": "2023-05-03T18:32:49Z",
        "author_association": "NONE",
        "body": "> > The reported bug above does not occur below some sort of chunk size threshold, presumably because the hypothetical race condition does not occur if synchronization dominates.\r\n> \r\n> wave @mueslo can you share some more on this please?\r\n\r\nHi @ravwojdyla, thanks for looking into it and sorry for the delay. What I mean by that is that if you e.g. decrease the chunk size from my examples above (e.g. chunks=(10, 400, 47, 3)), then the error will occur much less frequently. Make them small enough, and you basically cannot get the error to pop up. Since qualitatively exactly the same thing should be happening as for my failing example, I assumed there must be some race condition somewhere. But I have absolutely no prior experience with dask (I encountered and opened this issue within 24h of first trying it), so I have no idea how the multithreaded scheduling internals actually look like.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1533516007/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1533853201",
        "html_url": "https://github.com/dask/dask/issues/10217#issuecomment-1533853201",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10217",
        "id": 1533853201,
        "node_id": "IC_kwDOAbcwm85bbL4R",
        "user": {
            "login": "ravwojdyla",
            "id": 1419010,
            "node_id": "MDQ6VXNlcjE0MTkwMTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1419010?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravwojdyla",
            "html_url": "https://github.com/ravwojdyla",
            "followers_url": "https://api.github.com/users/ravwojdyla/followers",
            "following_url": "https://api.github.com/users/ravwojdyla/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravwojdyla/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravwojdyla/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravwojdyla/subscriptions",
            "organizations_url": "https://api.github.com/users/ravwojdyla/orgs",
            "repos_url": "https://api.github.com/users/ravwojdyla/repos",
            "events_url": "https://api.github.com/users/ravwojdyla/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravwojdyla/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-03T22:51:41Z",
        "updated_at": "2023-05-03T22:51:41Z",
        "author_association": "MEMBER",
        "body": "@mueslo thanks for the extra context! To summarize there seems to be some kind of bug that affects at least `tensordot` and `matmul` for that specific scenario, and it's likely (at least that's my theory) related to the \"tensordot trick\".",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1533853201/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1534796617",
        "html_url": "https://github.com/dask/dask/issues/10217#issuecomment-1534796617",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10217",
        "id": 1534796617,
        "node_id": "IC_kwDOAbcwm85beyNJ",
        "user": {
            "login": "mueslo",
            "id": 847751,
            "node_id": "MDQ6VXNlcjg0Nzc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/847751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mueslo",
            "html_url": "https://github.com/mueslo",
            "followers_url": "https://api.github.com/users/mueslo/followers",
            "following_url": "https://api.github.com/users/mueslo/following{/other_user}",
            "gists_url": "https://api.github.com/users/mueslo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mueslo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mueslo/subscriptions",
            "organizations_url": "https://api.github.com/users/mueslo/orgs",
            "repos_url": "https://api.github.com/users/mueslo/repos",
            "events_url": "https://api.github.com/users/mueslo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mueslo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-04T13:37:12Z",
        "updated_at": "2023-05-04T22:21:05Z",
        "author_association": "NONE",
        "body": "I have another small update, the reshape operation is actually not important, but rather the resulting shape itself somehow.\r\n\r\nUsing \r\n```python\r\nb = da.random.random((400*400*47, 3), chunks=(100*400*47, 3))\r\nb2 = (b @ m1) @ m2\r\n```\r\nAlso produces the bug, an equivalent \r\n\r\n```python\r\nn = 1\r\nb = da.random.random((400*(400//n)*47, n, 3), chunks=(100*(400//n)*47, n, 3))\r\nb2 = (b @ m1) @ m2\r\n# (+ optional reshape to (-1, 3) afterwards)\r\n```\r\nhowever, does not, for any `n` even when `n == 1`!\r\n\r\nWhen ordered differently\r\n```python\r\nn = 1\r\nb = da.random.random((n, 400*(400//n)*47, 3), chunks=(n, 100*(400//n)*47, 3))\r\nb2 = (b @ m1) @ m2\r\n# (+ optional reshape to (-1, 3) afterwards)\r\n```\r\n\r\nThe bug *does* occur for sufficiently small n. So it seems to possibly depend on the second-to-last axis.\r\n\r\n<hr>\r\n\r\nAlso, if I add a `time.sleep(0.5)` in array.routines._matmul, the bug does not occur. This really makes it seem like some sort of race condition somewhere.\r\n\r\n**Edit**: This bug seems to be directly related to blockwise's `concatenate=False`, otherwise it doesn't occur (or more accurately: is hidden). I rewrote `dask.array.routines.matmul`/`_matmul` in two equivalent ways, and it only occurs for `concatenate=False`. \r\n\r\nBasically once with the previous way, and once with the previous way but concatenate=False and a simple `a=a[0];b=b[0]` in `_matmul` to get rid of the lists. I then investigated further and found that all `_matmul` inputs with `concatenate=True` are in C order and are data copies of the previous output. That's why it did not occur. With concatenate=False, they are pointers to the same output as the previous task. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1534796617/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]