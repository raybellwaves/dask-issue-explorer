{
    "url": "https://api.github.com/repos/dask/dask/issues/7218",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/7218/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/7218/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/7218/events",
    "html_url": "https://github.com/dask/dask/issues/7218",
    "id": 808634071,
    "node_id": "MDU6SXNzdWU4MDg2MzQwNzE=",
    "number": 7218,
    "title": "Should dask.array.name be a settable property?",
    "user": {
        "login": "jsignell",
        "id": 4806877,
        "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsignell",
        "html_url": "https://github.com/jsignell",
        "followers_url": "https://api.github.com/users/jsignell/followers",
        "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
        "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
        "organizations_url": "https://api.github.com/users/jsignell/orgs",
        "repos_url": "https://api.github.com/users/jsignell/repos",
        "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jsignell/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 20,
    "created_at": "2021-02-15T15:34:32Z",
    "updated_at": "2021-04-27T22:46:37Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "I am wondering whether `dask.Array.name` should be a settable property. Given the relationship between the task graph and `name`, it feels like `name` is a special property that should be protected. \r\n\r\nConsider the following case:\r\n\r\n```python\r\nimport numpy as np\r\nimport dask.array as da\r\n\r\ndarr = da.from_array(np.arange(1, 10))\r\ndarr.name = \"foo\"\r\ndarr.compute()\r\n```\r\n\r\n<details><summary>Output </summary>\r\n\r\n```python-traceback\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-2-0163ab538b86> in <module>\r\n      5 print(darr.name)\r\n      6 darr.name = \"foo\"\r\n----> 7 darr.compute()\r\n\r\n~/dask/dask/base.py in compute(self, **kwargs)\r\n    280         dask.base.compute\r\n    281         \"\"\"\r\n--> 282         (result,) = compute(self, traverse=False, **kwargs)\r\n    283         return result\r\n    284 \r\n\r\n~/dask/dask/base.py in compute(*args, **kwargs)\r\n    562         postcomputes.append(x.__dask_postcompute__())\r\n    563 \r\n--> 564     results = schedule(dsk, keys, **kwargs)\r\n    565     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    566 \r\n\r\n~/dask/dask/threaded.py in get(dsk, result, cache, num_workers, pool, **kwargs)\r\n     74                 pools[thread][num_workers] = pool\r\n     75 \r\n---> 76     results = get_async(\r\n     77         pool.apply_async,\r\n     78         len(pool._pool),\r\n\r\n~/dask/dask/local.py in get_async(apply_async, num_workers, dsk, result, cache, get_id, rerun_exceptions_locally, pack_exception, raise_exception, callbacks, dumps, loads, **kwargs)\r\n    502                     finish(dsk, state, not succeeded)\r\n    503 \r\n--> 504     return nested_get(result, state[\"cache\"])\r\n    505 \r\n    506 \r\n\r\n~/dask/dask/local.py in nested_get(ind, coll)\r\n    298     \"\"\"\r\n    299     if isinstance(ind, list):\r\n--> 300         return tuple([nested_get(i, coll) for i in ind])\r\n    301     else:\r\n    302         return coll[ind]\r\n\r\n~/dask/dask/local.py in <listcomp>(.0)\r\n    298     \"\"\"\r\n    299     if isinstance(ind, list):\r\n--> 300         return tuple([nested_get(i, coll) for i in ind])\r\n    301     else:\r\n    302         return coll[ind]\r\n\r\n~/dask/dask/local.py in nested_get(ind, coll)\r\n    298     \"\"\"\r\n    299     if isinstance(ind, list):\r\n--> 300         return tuple([nested_get(i, coll) for i in ind])\r\n    301     else:\r\n    302         return coll[ind]\r\n\r\n~/dask/dask/local.py in <listcomp>(.0)\r\n    298     \"\"\"\r\n    299     if isinstance(ind, list):\r\n--> 300         return tuple([nested_get(i, coll) for i in ind])\r\n    301     else:\r\n    302         return coll[ind]\r\n\r\n~/dask/dask/local.py in nested_get(ind, coll)\r\n    300         return tuple([nested_get(i, coll) for i in ind])\r\n    301     else:\r\n--> 302         return coll[ind]\r\n    303 \r\n    304 \r\n\r\nKeyError: ('foo', 0)\r\n```\r\n</details>\r\n\r\nThis is an especially confusing behavior since other libraries (like xarray and pandas) use name in a much more user-facing way (xref #7209)\r\n\r\n**Proposal**\r\nIf I am right in my understanding that name is intentionally tied to the task graph, then I think the setter for `name` should be made to raise an error, and downstream libraries should use `self._name` instead. ",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/7218/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/7218/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}