{
    "url": "https://api.github.com/repos/dask/dask/issues/5021",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/5021/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/5021/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/5021/events",
    "html_url": "https://github.com/dask/dask/issues/5021",
    "id": 462086739,
    "node_id": "MDU6SXNzdWU0NjIwODY3Mzk=",
    "number": 5021,
    "title": "Convenience function to create Dask DataFrame from a mapping of sliceables",
    "user": {
        "login": "alimanfoo",
        "id": 703554,
        "node_id": "MDQ6VXNlcjcwMzU1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/703554?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alimanfoo",
        "html_url": "https://github.com/alimanfoo",
        "followers_url": "https://api.github.com/users/alimanfoo/followers",
        "following_url": "https://api.github.com/users/alimanfoo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alimanfoo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alimanfoo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alimanfoo/subscriptions",
        "organizations_url": "https://api.github.com/users/alimanfoo/orgs",
        "repos_url": "https://api.github.com/users/alimanfoo/repos",
        "events_url": "https://api.github.com/users/alimanfoo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alimanfoo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2019-06-28T15:22:20Z",
    "updated_at": "2021-10-12T08:49:06Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I have a common use case where I have an h5py or zarr group, which contains arrays that I would like to use as columns of a dataframe. Each array (column) is one-dimensional and may have a different dtype. In some cases an array might have two dimensions where the second dimension is very short, in which case I'd like to break out this second dimension as separate columns. E.g.:\r\n\r\n```python\r\nIn [7]: variants\r\nOut[7]: <zarr.hierarchy.Group '/3L/variants'>\r\n\r\nIn [8]: variants['POS']\r\nOut[8]: <zarr.core.Array '/3L/variants/POS' (18167056,) int32>\r\n\r\nIn [9]: variants['DP']\r\nOut[9]: <zarr.core.Array '/3L/variants/DP' (18167056,) int32>\r\n\r\nIn [10]: variants['AC']\r\nOut[10]: <zarr.core.Array '/3L/variants/AC' (18167056, 3) int32>\r\n```\r\n\r\nI can create the dataframe I want with the following:\r\n\r\n```python\r\nIn [22]: df = dd.concat([\r\n    ...:    da.from_zarr(variants['POS']).to_dask_dataframe(columns='POS'),\r\n    ...:    da.from_zarr(variants['DP']).to_dask_dataframe(columns='DP'),\r\n    ...:    da.from_zarr(variants['AC']).to_dask_dataframe(columns=['AC_1', 'AC_2', 'AC_3'])],\r\n    ...:    axis=1)\r\n\r\nIn [23]: df.head()\r\nOut[23]:\r\n   POS  DP  AC_1  AC_2  AC_3\r\n0   15   1     2    -1    -1\r\n1   19   2     2    -1    -1\r\n2   20   2     2    -1    -1\r\n3   23   2     2    -1    -1\r\n4   24   2     2    -1    -1\r\n```\r\n\r\nHowever, it would be handy if there was a convenience function for this in dask dataframe, e.g., so I could just call something like `df = dd.from_dict(variants)`, although \"from_dict\" is possibly not the right name here as this doesn't exactly follow the pandas API. If this is too specialised then no problem to close, but if this is something more broadly useful then happy to submit a PR with some advice on function naming.\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/5021/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/5021/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}