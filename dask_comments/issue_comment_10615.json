[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1798265239",
        "html_url": "https://github.com/dask/dask/issues/10615#issuecomment-1798265239",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10615",
        "id": 1798265239,
        "node_id": "IC_kwDOAbcwm85rL1mX",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-07T10:50:47Z",
        "updated_at": "2023-11-07T10:50:47Z",
        "author_association": "MEMBER",
        "body": "Thank you @ivirshup for your report. This is indeed unfortunate. I don't have a strong preference but I think the ellipsis version sounds like the nicest one. Are you interested in contributing a patch?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1798265239/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1811499988",
        "html_url": "https://github.com/dask/dask/issues/10615#issuecomment-1811499988",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10615",
        "id": 1811499988,
        "node_id": "IC_kwDOAbcwm85r-UvU",
        "user": {
            "login": "ivirshup",
            "id": 8238804,
            "node_id": "MDQ6VXNlcjgyMzg4MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8238804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ivirshup",
            "html_url": "https://github.com/ivirshup",
            "followers_url": "https://api.github.com/users/ivirshup/followers",
            "following_url": "https://api.github.com/users/ivirshup/following{/other_user}",
            "gists_url": "https://api.github.com/users/ivirshup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ivirshup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ivirshup/subscriptions",
            "organizations_url": "https://api.github.com/users/ivirshup/orgs",
            "repos_url": "https://api.github.com/users/ivirshup/repos",
            "events_url": "https://api.github.com/users/ivirshup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ivirshup/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-14T22:34:35Z",
        "updated_at": "2023-11-14T22:34:35Z",
        "author_association": "NONE",
        "body": "Sure. It looks like `textwrap` can do this.\n\nAny suggestions on when to shorten the repr?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1811499988/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1812469804",
        "html_url": "https://github.com/dask/dask/issues/10615#issuecomment-1812469804",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10615",
        "id": 1812469804,
        "node_id": "IC_kwDOAbcwm85sCBgs",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-15T12:41:57Z",
        "updated_at": "2023-11-15T12:41:57Z",
        "author_association": "MEMBER",
        "body": "https://github.com/fjetter/dask/blob/0a823ad99f63a16af627b97a377fdc33843e87bd/dask/array/core.py#L1606 is implementing the array repr. That would be my starting point",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1812469804/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1951091923",
        "html_url": "https://github.com/dask/dask/issues/10615#issuecomment-1951091923",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10615",
        "id": 1951091923,
        "node_id": "IC_kwDOAbcwm850S0zT",
        "user": {
            "login": "thisisamardeep",
            "id": 35621214,
            "node_id": "MDQ6VXNlcjM1NjIxMjE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35621214?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thisisamardeep",
            "html_url": "https://github.com/thisisamardeep",
            "followers_url": "https://api.github.com/users/thisisamardeep/followers",
            "following_url": "https://api.github.com/users/thisisamardeep/following{/other_user}",
            "gists_url": "https://api.github.com/users/thisisamardeep/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thisisamardeep/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thisisamardeep/subscriptions",
            "organizations_url": "https://api.github.com/users/thisisamardeep/orgs",
            "repos_url": "https://api.github.com/users/thisisamardeep/repos",
            "events_url": "https://api.github.com/users/thisisamardeep/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thisisamardeep/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-18T10:22:50Z",
        "updated_at": "2024-02-18T10:22:50Z",
        "author_association": "NONE",
        "body": "Can i pick up this issue if no one else is  working on it.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1951091923/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1966726734",
        "html_url": "https://github.com/dask/dask/issues/10615#issuecomment-1966726734",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10615",
        "id": 1966726734,
        "node_id": "IC_kwDOAbcwm851Od5O",
        "user": {
            "login": "ivirshup",
            "id": 8238804,
            "node_id": "MDQ6VXNlcjgyMzg4MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8238804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ivirshup",
            "html_url": "https://github.com/ivirshup",
            "followers_url": "https://api.github.com/users/ivirshup/followers",
            "following_url": "https://api.github.com/users/ivirshup/following{/other_user}",
            "gists_url": "https://api.github.com/users/ivirshup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ivirshup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ivirshup/subscriptions",
            "organizations_url": "https://api.github.com/users/ivirshup/orgs",
            "repos_url": "https://api.github.com/users/ivirshup/repos",
            "events_url": "https://api.github.com/users/ivirshup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ivirshup/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-27T14:52:41Z",
        "updated_at": "2024-02-27T14:52:41Z",
        "author_association": "NONE",
        "body": "Happy to let it go if you want to pick it up! I'll share where I've gotten so far.\r\n\r\nI have an implementation (well, 2), but have some lingering design questions.\r\n\r\n* The parameter displayed in the `repr` is `chunksize`, which is also an attribute.\r\n  * Do we replace this with `chunks`? Either way, we're not giving an accurate representation of either attribute's values.\r\n* What info should we be showing in the shortened value? Is it first, last? Max, min?\r\n\r\nBelow is a demo implementation with some examples. I've included an example where chunk size is shown as range, or as order.\r\n\r\n<details>\r\n<summary> current </summary>\r\n\r\n```python\r\nimport textwrap\r\nimport dask.array as da\r\nimport numpy as np\r\nimport itertools\r\n\r\n\r\nrng = np.random.default_rng()\r\n\r\nchunkings = [\r\n    5,\r\n    tuple(rng.integers(1, 10, size=5)),\r\n    tuple(rng.integers(1, 30, size=5)),\r\n]\r\n\r\ndef set_unknown_chunk(chunks: tuple, idx: int) -> tuple:\r\n    mutable_chunks = list(chunks)\r\n    mutable_chunks[idx] = np.nan\r\n    return tuple(mutable_chunks)\r\n\r\ndef set_unknown_chunk_on_array(a: da.Array, axis: int, idx: int) -> da.Array:\r\n    chunks = list(a.chunks)\r\n    chunks[axis] = set_unknown_chunk(chunks[axis], idx)\r\n    a = a.copy()\r\n    a._chunks = tuple(chunks)\r\n    return a\r\n\r\n\r\nsingle_constant = da.ones(100, chunks=5)\r\nsingle_variable = single_constant.rechunk((3, 2, 20, 70 , 5))\r\ndouble_constant = da.from_array(np.arange(250).reshape(50, 5), chunks=(5, 5))\r\ndouble_variable = double_constant.rechunk(((3, 2, 2, 1, 2, 40), 5))\r\ndouble_variable2 = double_constant.rechunk(((13, 10, 2, 10, 2, 1, 2, 10), 5))\r\n\r\narrays = [single_constant, single_variable, double_constant, double_variable, double_variable2]\r\n\r\ndef fmt_order(chunks: tuple) -> str:\r\n    \"\"\"Format the chunksize of a dimension for display.\"\"\"\r\n    if len(set(chunks)) == 1:\r\n        return str(chunks[0])\r\n    else:\r\n        full_chunk_str = str(chunks)\r\n        if len(full_chunk_str) < 10:\r\n            return full_chunk_str\r\n        return textwrap.shorten(str(chunks), width=10, placeholder=\" ...\") + \")\"\r\n    \r\ndef fmt_range(chunks: tuple) -> str:\r\n    \"\"\"Format the chunksize of a dimension for display.\"\"\"\r\n    if len(set(chunks)) == 1:\r\n        return str(chunks[0])\r\n    else:\r\n        return str(min(chunks)) + \"-\" + str(max(chunks))\r\n    \r\n\r\ndef repr_chunk(self, chunk_func: callable) -> str:\r\n    chunksize = \"(\" + \", \".join(map(chunk_func, self.chunks)) + \")\"\r\n    name = self.name.rsplit(\"-\", 1)[0]\r\n    return (\r\n        \"dask.array<{}, shape={}, dtype={}, chunksize={}, chunktype={}.{}>\".format(\r\n            name,\r\n            self.shape,\r\n            self.dtype,\r\n            chunksize,\r\n            type(self._meta).__module__.split(\".\")[0],\r\n            type(self._meta).__name__,\r\n        )\r\n    )\r\n    \r\n\r\nfor c in itertools.combinations(chunkings, 2):\r\n    size = tuple(x if isinstance(x, int) else sum(x) for x in c)\r\n    a = da.random.random(size, chunks=c)\r\n    print(repr_chunk(a, fmt_order))\r\n    print(repr_chunk(a, fmt_range))\r\n```\r\n\r\noutput:\r\n\r\n```\r\ndask.array<random_sample, shape=(5, 27), dtype=float64, chunksize=(5, (4, 9, ...)), chunktype=numpy.ndarray>\r\ndask.array<random_sample, shape=(5, 27), dtype=float64, chunksize=(5, 1-9), chunktype=numpy.ndarray>\r\ndask.array<random_sample, shape=(5, 61), dtype=float64, chunksize=(5, (5, ...)), chunktype=numpy.ndarray>\r\ndask.array<random_sample, shape=(5, 61), dtype=float64, chunksize=(5, 3-23), chunktype=numpy.ndarray>\r\ndask.array<random_sample, shape=(27, 61), dtype=float64, chunksize=((4, 9, ...), (5, ...)), chunktype=numpy.ndarray>\r\ndask.array<random_sample, shape=(27, 61), dtype=float64, chunksize=(1-9, 3-23), chunktype=numpy.ndarray>\r\n```\r\n\r\n</details>",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1966726734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]