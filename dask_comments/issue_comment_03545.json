[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393285059",
        "html_url": "https://github.com/dask/dask/issues/3545#issuecomment-393285059",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3545",
        "id": 393285059,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzI4NTA1OQ==",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-30T19:19:26Z",
        "updated_at": "2018-05-30T19:19:26Z",
        "author_association": "MEMBER",
        "body": "\r\nThanks for opening up this issue @luizberti! I was able to reproduce your issue using the current dask `master` (i.e. version `0.17.4+38.ge1c48e0c.dirty`) with Python 3.6.4. \r\n\r\nModifying your example slightly, it looks like the dask bag `map` method ignores just the single function call that raises a `StopIteration`, while the builtin `map` function is truncated after the `StopIteration` exception is raised. \r\n\r\n<details>\r\n<summary> Code snippet:</summary>\r\n\r\n```python \r\nfrom dask import bag\r\n\r\nbins = [10, 40, 100, 1000]\r\ndiscretize = lambda price: next(i for i, v in enumerate(bins) if v > price)\r\n\r\nseq = [12.49, 22.19, 39.99, 49.00, 1000.00, 50.55, 220.00]\r\nprint('len(seq) = {}'.format(len(seq)))\r\n\r\n# Using dask bag map\r\ndb = bag.from_sequence(seq)\r\ndask_map_discretize = db.map(discretize).compute()\r\nprint('\\ndask_map_discretize = {}'.format(dask_map_discretize))\r\nprint('len(dask_map_discretize) = {}'.format(len(dask_map_discretize)))\r\n\r\n# Using builtin Python map\r\nmap_discretize = list(map(discretize, seq))\r\nprint('\\nmap_discretize = {}'.format(map_discretize))\r\nprint('len(map_discretize) = {}'.format(len(map_discretize)))\r\n```\r\n\r\n</details>\r\n\r\n<br>\r\n\r\n<details>\r\n\r\n<summary>Python 3.6.4 output: </summary>\r\n\r\n```\r\nlen(seq) = 7\r\n\r\ndask_map_discretize = [1, 1, 1, 2, 2, 3]\r\nlen(dask_map_discretize) = 6\r\n\r\nmap_discretize = [1, 1, 1, 2]\r\nlen(map_discretize) = 4\r\n```\r\n</details>\r\n\r\n<br>\r\n\r\nI'm not exactly sure how this should be addressed. Perhaps a try-except to catch if a mapped function call raises a `StopIteration`? Maybe others can comment on what they think should be done here. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393285059/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393319733",
        "html_url": "https://github.com/dask/dask/issues/3545#issuecomment-393319733",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3545",
        "id": 393319733,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzMxOTczMw==",
        "user": {
            "login": "luizberti",
            "id": 1904278,
            "node_id": "MDQ6VXNlcjE5MDQyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1904278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luizberti",
            "html_url": "https://github.com/luizberti",
            "followers_url": "https://api.github.com/users/luizberti/followers",
            "following_url": "https://api.github.com/users/luizberti/following{/other_user}",
            "gists_url": "https://api.github.com/users/luizberti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luizberti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luizberti/subscriptions",
            "organizations_url": "https://api.github.com/users/luizberti/orgs",
            "repos_url": "https://api.github.com/users/luizberti/repos",
            "events_url": "https://api.github.com/users/luizberti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luizberti/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-30T21:07:42Z",
        "updated_at": "2018-05-30T21:07:42Z",
        "author_association": "NONE",
        "body": "Well, my opinion is that Dask should adhere to it's standard behavior of propagating exceptions from user-provided functions up the call-stack. It was quite a daunting experience to have Dask just silently eat away items from the bag, after a long chain of commands, with no insight as to why this is happening.\r\n\r\nThe issue was discovered by accident and only because the result was obscenely wrong (returned 60 items instead of 11k), it would be very hard to detect this on a standard test case, and even harder to debug.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393319733/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/394387787",
        "html_url": "https://github.com/dask/dask/issues/3545#issuecomment-394387787",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3545",
        "id": 394387787,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDM4Nzc4Nw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-04T15:04:49Z",
        "updated_at": "2018-06-04T15:04:49Z",
        "author_association": "MEMBER",
        "body": "I agree that this is a bug and should be resolved.  If anyone has time to look into this that would be quite welcome.  @jrbourbeau @luizberti do either of you have time to contribute here?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/394387787/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/394392656",
        "html_url": "https://github.com/dask/dask/issues/3545#issuecomment-394392656",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3545",
        "id": 394392656,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDM5MjY1Ng==",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-04T15:18:22Z",
        "updated_at": "2018-06-04T15:18:22Z",
        "author_association": "MEMBER",
        "body": "@mrocklin I'd be happy to help out with this :)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/394392656/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/394393574",
        "html_url": "https://github.com/dask/dask/issues/3545#issuecomment-394393574",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3545",
        "id": 394393574,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDM5MzU3NA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-04T15:20:50Z",
        "updated_at": "2018-06-04T15:20:50Z",
        "author_association": "MEMBER",
        "body": "I've really appreciated you stepping up recently to help answer questions\nlike this.  Please let me know if there is anything I can do to encourage\nyour involvement in the future :)\n\nOn Mon, Jun 4, 2018 at 11:18 AM, James Bourbeau <notifications@github.com>\nwrote:\n\n> @mrocklin <https://github.com/mrocklin> I'd be happy to help out with\n> this :)\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3545#issuecomment-394392656>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AASszCdlCCWFFGGex8rRRhN9yUzN_r2yks5t5U-_gaJpZM4UTlgL>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/394393574/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/394495330",
        "html_url": "https://github.com/dask/dask/issues/3545#issuecomment-394495330",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3545",
        "id": 394495330,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDQ5NTMzMA==",
        "user": {
            "login": "luizberti",
            "id": 1904278,
            "node_id": "MDQ6VXNlcjE5MDQyNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1904278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luizberti",
            "html_url": "https://github.com/luizberti",
            "followers_url": "https://api.github.com/users/luizberti/followers",
            "following_url": "https://api.github.com/users/luizberti/following{/other_user}",
            "gists_url": "https://api.github.com/users/luizberti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luizberti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luizberti/subscriptions",
            "organizations_url": "https://api.github.com/users/luizberti/orgs",
            "repos_url": "https://api.github.com/users/luizberti/repos",
            "events_url": "https://api.github.com/users/luizberti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luizberti/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-04T20:52:19Z",
        "updated_at": "2018-06-04T20:52:19Z",
        "author_association": "NONE",
        "body": "My guess as to what this is is probably Dask using the `StopIteration` internally to signal that the bag is done processing. If you guys need any help let me know, as long as I can get a kickstart as to where I should start looking at.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/394495330/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/488077024",
        "html_url": "https://github.com/dask/dask/issues/3545#issuecomment-488077024",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3545",
        "id": 488077024,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODA3NzAyNA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-30T19:08:16Z",
        "updated_at": "2019-04-30T19:08:16Z",
        "author_association": "MEMBER",
        "body": "Is this a non-issue for Python 3.7 and above, due to https://www.python.org/dev/peps/pep-0479/?\r\n\r\nWith the original code, I get\r\n\r\n```python\r\nIn [4]: >>> len(db.map(discretize).compute())  # notice how length changes\r\n   ...:\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-4-6e1c9c9c3bf9> in <module>\r\n----> 1 len(db.map(discretize).compute())  # notice how length changes\r\n\r\n~/sandbox/dask/dask/base.py in compute(self, **kwargs)\r\n    154         dask.base.compute\r\n    155         \"\"\"\r\n--> 156         (result,) = compute(self, traverse=False, **kwargs)\r\n    157         return result\r\n    158\r\n\r\n~/sandbox/dask/dask/base.py in compute(*args, **kwargs)\r\n    396     keys = [x.__dask_keys__() for x in collections]\r\n    397     postcomputes = [x.__dask_postcompute__() for x in collections]\r\n--> 398     results = schedule(dsk, keys, **kwargs)\r\n    399     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    400\r\n\r\n~/sandbox/dask/dask/multiprocessing.py in get(dsk, keys, num_workers, func_loads, func_dumps, optimize_graph, pool, **kwargs)\r\n    190                            get_id=_process_get_id, dumps=dumps, loads=loads,\r\n    191                            pack_exception=pack_exception,\r\n--> 192                            raise_exception=reraise, **kwargs)\r\n    193     finally:\r\n    194         if cleanup:\r\n\r\n~/sandbox/dask/dask/local.py in get_async(apply_async, num_workers, dsk, result, cache, get_id, rerun_exceptions_locally, pack_exception, raise_exception, callbacks, dumps, loads, **kwargs)\r\n    460                         _execute_task(task, data)  # Re-execute locally\r\n    461                     else:\r\n--> 462                         raise_exception(exc, tb)\r\n    463                 res, worker_id = loads(res_info)\r\n    464                 state['cache'][key] = res\r\n\r\n~/sandbox/dask/dask/compatibility.py in reraise(exc, tb)\r\n    109     def reraise(exc, tb=None):\r\n    110         if exc.__traceback__ is not tb:\r\n--> 111             raise exc.with_traceback(tb)\r\n    112         raise exc\r\n    113\r\n\r\n~/sandbox/dask/dask/local.py in execute_task()\r\n    228     try:\r\n    229         task, data = loads(task_info)\r\n--> 230         result = _execute_task(task, data)\r\n    231         id = get_id()\r\n    232         result = dumps((result, id))\r\n\r\n~/sandbox/dask/dask/core.py in _execute_task()\r\n    117         func, args = arg[0], arg[1:]\r\n    118         args2 = [_execute_task(a, cache) for a in args]\r\n--> 119         return func(*args2)\r\n    120     elif not ishashable(arg):\r\n    121         return arg\r\n\r\n~/sandbox/dask/dask/bag/core.py in reify()\r\n   1589 def reify(seq):\r\n   1590     if isinstance(seq, Iterator):\r\n-> 1591         seq = list(seq)\r\n   1592     if seq and isinstance(seq[0], Iterator):\r\n   1593         seq = list(map(list, seq))\r\n\r\nRuntimeError: generator raised StopIteration\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/488077024/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]