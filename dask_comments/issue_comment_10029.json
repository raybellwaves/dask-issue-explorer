[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1467133408",
        "html_url": "https://github.com/dask/dask/issues/10029#issuecomment-1467133408",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10029",
        "id": 1467133408,
        "node_id": "IC_kwDOAbcwm85Xcq3g",
        "user": {
            "login": "j-bennet",
            "id": 637013,
            "node_id": "MDQ6VXNlcjYzNzAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/637013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-bennet",
            "html_url": "https://github.com/j-bennet",
            "followers_url": "https://api.github.com/users/j-bennet/followers",
            "following_url": "https://api.github.com/users/j-bennet/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-bennet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-bennet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-bennet/subscriptions",
            "organizations_url": "https://api.github.com/users/j-bennet/orgs",
            "repos_url": "https://api.github.com/users/j-bennet/repos",
            "events_url": "https://api.github.com/users/j-bennet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-bennet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-13T23:54:28Z",
        "updated_at": "2023-03-14T00:01:05Z",
        "author_association": "MEMBER",
        "body": "## Tests not requiring a follow-up\r\n\r\nThese have been skipped or xfailed with pyarrow strings, but will likely not need a fix or a follow up. They are cases where using a `string` instead of `object` contradicts the purpose of the test, most notably, when exploding arrays.\r\n\r\n```python\r\n# need an object to store a dict\r\ndask/dataframe/io/tests/test_parquet.py::test_append_dict_column\r\n\r\n# don't want to convert binary data to pyarrow strings\r\ndask/dataframe/io/tests/test_parquet.py::test_roundtrip\r\n\r\n# need object columns to store arrays\r\ndask/dataframe/io/tests/test_parquet.py::test_to_parquet_pyarrow_w_inconsistent_schema_by_partition_succeeds_w_manual_schema\r\n\r\n# has to be array to explode\r\ndask/dataframe/tests/test_groupby.py::test_groupby_unique\r\n\r\n# has to be array to explode\r\ndask/dataframe/tests/test_dataframe.py::test_dataframe_explode\r\n\r\n# has to be array to explode\r\ndask/dataframe/tests/test_dataframe.py::test_series_explode\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1467133408/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1467135726",
        "html_url": "https://github.com/dask/dask/issues/10029#issuecomment-1467135726",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10029",
        "id": 1467135726,
        "node_id": "IC_kwDOAbcwm85Xcrbu",
        "user": {
            "login": "j-bennet",
            "id": 637013,
            "node_id": "MDQ6VXNlcjYzNzAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/637013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-bennet",
            "html_url": "https://github.com/j-bennet",
            "followers_url": "https://api.github.com/users/j-bennet/followers",
            "following_url": "https://api.github.com/users/j-bennet/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-bennet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-bennet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-bennet/subscriptions",
            "organizations_url": "https://api.github.com/users/j-bennet/orgs",
            "repos_url": "https://api.github.com/users/j-bennet/repos",
            "events_url": "https://api.github.com/users/j-bennet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-bennet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-13T23:57:36Z",
        "updated_at": "2023-03-24T16:11:01Z",
        "author_association": "MEMBER",
        "body": "## Test that may need a follow-up and a fix in dask and upstream\r\n\r\nThese are skipped or xfailed because the functionality is not supported, either in `dask` or upstream, but we may go back and fix them when support is added.\r\n\r\n```python\r\n# pyspark doesn't support pandas 2.0\r\ndask/tests/test_spark_compat.py\r\n\r\n# no support for hdf yet\r\ndask/dataframe/io/tests/test_hdf.py\r\ndask/tests/test_distributed.py::test_to_hdf_distributed\r\ndask/tests/test_distributed.py::test_to_hdf_scheduler_distributed\r\n\r\n# DateOffset has to be an object\r\ndask/dataframe/tests/test_dataframe.py::test_meta_nonempty_uses_meta_value_if_provided\r\n\r\n# fastparquet-related tests\r\ndask/tests/test_distributed.py\r\ndask/bytes/tests/test_http.py\r\ndask/bytes/tests/test_s3.py\r\n\r\n# https://github.com/apache/arrow/issues/33727\r\ndask/dataframe/io/tests/test_parquet.py::test_categories\r\n\r\n# https://github.com/apache/arrow/issues/33727\r\ndask/dataframe/io/tests/test_parquet.py::test_categories_unnamed_index\r\n\r\n# sum reduction\r\ndask/dataframe/tests/test_groupby.py::test_std_object_dtype\r\ndask/dataframe/tests/test_arithmetics_reduction.py::test_reductions_non_numeric_dtypes\r\n\r\n# https://github.com/pandas-dev/pandas/issues/51939\r\ndask/dataframe/tests/test_arithmetics_reduction.py::test_allany\r\n\r\n# this optimization can't deal with an additional layer converting dataframe to pyarrow strings.\r\n# not sure whether it should.\r\ndask/dataframe/io/tests/test_csv.py::test_getitem_optimization_after_filter\r\n\r\n# same issue with optimize_dataframe_getitem\r\ndask/dataframe/io/tests/test_demo.py::test_make_timeseries_blockwise\r\n```\r\n\r\n- [x] PR: https://github.com/dask/dask/pull/10108\r\n\r\n```\r\n# partitioning is done before conversion, and so chunk sizes don't\r\n# correspond to what the user specified\r\ndask/dataframe/io/tests/test_sql.py::test_division_or_partition\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1467135726/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1467137899",
        "html_url": "https://github.com/dask/dask/issues/10029#issuecomment-1467137899",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10029",
        "id": 1467137899,
        "node_id": "IC_kwDOAbcwm85Xcr9r",
        "user": {
            "login": "j-bennet",
            "id": 637013,
            "node_id": "MDQ6VXNlcjYzNzAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/637013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-bennet",
            "html_url": "https://github.com/j-bennet",
            "followers_url": "https://api.github.com/users/j-bennet/followers",
            "following_url": "https://api.github.com/users/j-bennet/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-bennet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-bennet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-bennet/subscriptions",
            "organizations_url": "https://api.github.com/users/j-bennet/orgs",
            "repos_url": "https://api.github.com/users/j-bennet/repos",
            "events_url": "https://api.github.com/users/j-bennet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-bennet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-14T00:00:00Z",
        "updated_at": "2023-03-23T00:58:53Z",
        "author_association": "MEMBER",
        "body": "## Tests that need a different expected value for pyarrow strings\r\n\r\nThese are easy to fix, but the value in fixing them is not high, and they are not a priority.\r\n\r\n- [x] PR: https://github.com/dask/dask/pull/10066\r\n\r\n```\r\n# checks graph layers\r\ndask/dataframe/io/tests/test_io.py::test_from_map_simple\r\n\r\n# with pyarrow strings, dask name is different\r\ndask/dataframe/io/tests/test_io.py::test_from_map_custom_name\r\n\r\n# formatting results differ\r\ndask/dataframe/tests/test_format.py\r\n\r\n# expected is different\r\ndask/dataframe/tests/test_dataframe.py::test_categorize_info\r\n\r\n# memory usage is different\r\ndask/dataframe/tests/test_dataframe.py::test_memory_usage_dataframe\r\n\r\n# memory usage is different\r\ndask/dataframe/tests/test_dataframe.py::test_memory_usage_series\r\n\r\n# memory usage is different\r\ndask/dataframe/tests/test_dataframe.py::test_memory_usage_index\r\n\r\n# test checks dask layers\r\ndask/dataframe/tests/test_multi.py::test_cheap_single_partition_merge\r\n```\r\n\r\n- [x] PR: https://github.com/dask/dask/pull/10087\r\n\r\n```\r\n# test checks graph layers\r\ndask/bag/tests/test_bag.py::test_to_dataframe_optimize_graph\r\n```\r\n\r\n- [x] PR: https://github.com/dask/dask/pull/10088\r\n\r\n```\r\n# test checks dask layers\r\ndask/tests/test_layers.py::test_dataframe_cull_key_dependencies_materialized\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1467137899/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]