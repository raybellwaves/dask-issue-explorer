[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/86962848",
        "html_url": "https://github.com/dask/dask/issues/97#issuecomment-86962848",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/97",
        "id": 86962848,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTYyODQ4",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2015-03-27T14:51:53Z",
        "updated_at": "2015-03-27T14:51:53Z",
        "author_association": "MEMBER",
        "body": "Hrm, so the very easy thing to do is to assert the result of a python function onto each block without the barrier.  Although in multi-threaded contexts this might get weird.\n\n```\nx = da.assert_(x, lambda block: block > 0, ValueError('x must be positive'))\n```\n\nDoing general full-array assertions is also doable (with a bit more complex graph magic) but would probably fill up cache space with the intermediate variables.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/86962848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/646117043",
        "html_url": "https://github.com/dask/dask/issues/97#issuecomment-646117043",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/97",
        "id": 646117043,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjExNzA0Mw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-18T15:52:15Z",
        "updated_at": "2020-06-18T15:52:15Z",
        "author_association": "MEMBER",
        "body": "@eric-czech brought this up today in a call.  CC'ing him here.\r\n\r\n@shoyer do you have any thoughts on how we would do this today?  FWIW I think taht @eric-czech is operating on Dask under Xarray.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/646117043/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/646138954",
        "html_url": "https://github.com/dask/dask/issues/97#issuecomment-646138954",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/97",
        "id": 646138954,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjEzODk1NA==",
        "user": {
            "login": "eric-czech",
            "id": 6130352,
            "node_id": "MDQ6VXNlcjYxMzAzNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6130352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-czech",
            "html_url": "https://github.com/eric-czech",
            "followers_url": "https://api.github.com/users/eric-czech/followers",
            "following_url": "https://api.github.com/users/eric-czech/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-czech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-czech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-czech/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-czech/orgs",
            "repos_url": "https://api.github.com/users/eric-czech/repos",
            "events_url": "https://api.github.com/users/eric-czech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-czech/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-18T16:20:34Z",
        "updated_at": "2020-06-18T16:20:34Z",
        "author_association": "MEMBER",
        "body": "\ud83d\udc4d  \r\n\r\nYep, using Xarray over Dask.  I'd love to be able to use lazy, runtime checks like that.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/646138954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/646140505",
        "html_url": "https://github.com/dask/dask/issues/97#issuecomment-646140505",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/97",
        "id": 646140505,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjE0MDUwNQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-18T16:22:28Z",
        "updated_at": "2020-06-18T16:22:28Z",
        "author_association": "MEMBER",
        "body": "Can you say a bit more about your needs @eric-czech ?  Do you mostly need elementwise checks, or something more complicated?  How would you like to spell these checks?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/646140505/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/646195491",
        "html_url": "https://github.com/dask/dask/issues/97#issuecomment-646195491",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/97",
        "id": 646195491,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjE5NTQ5MQ==",
        "user": {
            "login": "eric-czech",
            "id": 6130352,
            "node_id": "MDQ6VXNlcjYxMzAzNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6130352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-czech",
            "html_url": "https://github.com/eric-czech",
            "followers_url": "https://api.github.com/users/eric-czech/followers",
            "following_url": "https://api.github.com/users/eric-czech/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-czech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-czech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-czech/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-czech/orgs",
            "repos_url": "https://api.github.com/users/eric-czech/repos",
            "events_url": "https://api.github.com/users/eric-czech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-czech/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-18T17:23:02Z",
        "updated_at": "2020-06-18T17:23:02Z",
        "author_association": "MEMBER",
        "body": "Elementwise checks would cover the majority of cases I can think of as being useful.  Checks on reductions would also be nice (i.e. sums along an axis equal 1), but not critical.  I can see some value in making the assertion a terminal task as well, e.g.:\r\n\r\n```python\r\ndata = da.array(..., dtype=int)\r\nmask = da.array(..., dtype=bool)\r\nda.assertion(\r\n  data[mask].min(), \r\n  lambda v: v >= 0, \r\n  lambda v: ValueError(f'Data values must be >= 0 (found min value {v})')\r\n) \r\n# do stuff with data and mask but not data[mask]\r\n```\r\n\r\nas opposed to:\r\n\r\n```python\r\nres = da.assertion(\r\n  data[mask].min(), \r\n  lambda v: v >= 0, \r\n  lambda v: ValueError(f'Data values must be >= 0 (found min value {v})')\r\n) \r\n# now I need to use `res` elsewhere in the graph for the \r\n# assertion to fire, but I don't necessarily want to\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/646195491/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]