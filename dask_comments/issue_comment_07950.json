[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/888049780",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-888049780",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 888049780,
        "node_id": "IC_kwDOAbcwm8407pB0",
        "user": {
            "login": "GenevieveBuckley",
            "id": 30920819,
            "node_id": "MDQ6VXNlcjMwOTIwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenevieveBuckley",
            "html_url": "https://github.com/GenevieveBuckley",
            "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
            "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
            "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
            "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
            "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-28T06:33:02Z",
        "updated_at": "2021-07-28T06:33:02Z",
        "author_association": "MEMBER",
        "body": "Note: this seemed to work well for the 2D array examples I had, but is not so hot for 3D arrays.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/888049780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/888167788",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-888167788",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 888167788,
        "node_id": "IC_kwDOAbcwm8408F1s",
        "user": {
            "login": "GenevieveBuckley",
            "id": 30920819,
            "node_id": "MDQ6VXNlcjMwOTIwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenevieveBuckley",
            "html_url": "https://github.com/GenevieveBuckley",
            "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
            "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
            "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
            "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
            "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-28T09:42:20Z",
        "updated_at": "2021-07-28T09:42:20Z",
        "author_association": "MEMBER",
        "body": "Now I'm getting more weird memory problems, even using the same exact example & code from yesterday. Maybe I should do a restart and see if that's helpful",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/888167788/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/889748905",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-889748905",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 889748905,
        "node_id": "IC_kwDOAbcwm841CH2p",
        "user": {
            "login": "GenevieveBuckley",
            "id": 30920819,
            "node_id": "MDQ6VXNlcjMwOTIwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenevieveBuckley",
            "html_url": "https://github.com/GenevieveBuckley",
            "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
            "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
            "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
            "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
            "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-30T09:00:24Z",
        "updated_at": "2021-07-30T09:00:24Z",
        "author_association": "MEMBER",
        "body": "I gave this a spin on the motivating example from https://github.com/dask/dask/issues/2225#issue-221981022\r\n\r\n```python\r\nimport dask.array as da\r\nx = da.random.random((500, 500, 500), chunks=(50, 50, 50))\r\ny = da.random.random((500, 100), chunks=(50, 50))\r\naxes = (1, 0)\r\n```\r\n\r\nBaseline result (equivalent to the current method in the main branch):\r\n```python\r\nz1 = da.tensordot(x, y, axes=axes, rechunk=False)\r\n%timeit z1.compute()\r\n# 3.34 s \u00b1 147 ms per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\r\n```\r\n\r\nManual rechunk example:\r\n```python\r\nx2 = x.rechunk((50, 500, 50))\r\ny2 = y.rechunk((500, 50))\r\nz2 = da.tensordot(x2, y2, axes=axes, rechunk=False)\r\n%timeit z2.compute()\r\n```\r\n\r\nResult with auto rechunking from this PR:\r\n```python\r\nz3 = da.tensordot(x, y, axes=axes, rechunk=True)\r\n%timeit z3.compute()\r\n```\r\n\r\nThis was on my laptop, so nothing special, but it gives you an idea.\r\n\r\nVisually, the task stream for the last, auto-rechunked example does look nice. There is still a little bit of red and white space in there, but it is less than in the other two examples.\r\n\r\nIt's 1.17 seconds (around 35%) faster than the baseline. If I persist the input arrays before passing them to tensordot (I think maybe this will isolate the computation time a bit better?) then there's a ~10% speedup. The \"manual rechunking\" example given was very similar in time to the un-rechunked original - the big difference is probably because the auto rechunking is giving us larger chunks to work with than both those examples.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/889748905/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/889774520",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-889774520",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 889774520,
        "node_id": "IC_kwDOAbcwm841COG4",
        "user": {
            "login": "GenevieveBuckley",
            "id": 30920819,
            "node_id": "MDQ6VXNlcjMwOTIwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenevieveBuckley",
            "html_url": "https://github.com/GenevieveBuckley",
            "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
            "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
            "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
            "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
            "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-30T09:44:18Z",
        "updated_at": "2021-07-30T09:45:54Z",
        "author_association": "MEMBER",
        "body": "> Also, any thoughts on testing? \r\n\r\nI've been thinking about it, but haven't come up with any good ideas (maybe benchmark speed with & without automatic rechunking for an example where we know it should help? That's not a great idea though, because it would be too time consuming to put in the regular CI tests, and nobody is active on the benchmarks repository so a regression there would be unlikely to be noticed).\r\n\r\nWe could also test \"are the chunks under this limit after automatic rechunking\", which is a bit of circular logic...\r\n\r\n> I'm thinking that maybe the number of dependencies has shurnk considerably? If so we could maybe do something like ...\r\n> \r\n> ```python\r\n> def test_tensordot_rechunk():\r\n>     x = da.ones((10000, 10000), chunks=(1000, 1000))\r\n>     y = x.dot(x.T)\r\n>     dependencies, dependents = dask.core.get_deps(y.__dask_graph__())\r\n>     assert sum(v for v in dependencies.values()) < some magic number\r\n> ```\r\n\r\nJust checking I understand the intention of this code snippet. Each dependency value is a set. Are you trying to count how many items are in all those sets? If so, we'll need to check the length and sum that, I think.\r\n\r\n```python\r\nx = da.ones((10000, 10000), chunks=(1000, 1000))\r\ny = da.tensordot(x, x.T, axes=(1, 0), rechunk=False)\r\ndependencies, dependents = dask.core.get_deps(y.__dask_graph__())\r\nsum([len(v) for v in dependencies.values()])\r\n# 2100  (no rechunking)\r\n```\r\n\r\n```python\r\nx = da.ones((10000, 10000), chunks=(1000, 1000))\r\ny = da.tensordot(x, x.T, axes=(1, 0), rechunk=True)\r\ndependencies, dependents = dask.core.get_deps(y.__dask_graph__())\r\nsum([len(v) for v in dependencies.values()])\r\n# 500 (automatic rechunking)\r\n```\r\n\r\nIf there is a magic number, it will depend heavily on what the input chunk sizes are.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/889774520/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/889780223",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-889780223",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 889780223,
        "node_id": "IC_kwDOAbcwm841CPf_",
        "user": {
            "login": "GenevieveBuckley",
            "id": 30920819,
            "node_id": "MDQ6VXNlcjMwOTIwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenevieveBuckley",
            "html_url": "https://github.com/GenevieveBuckley",
            "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
            "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
            "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
            "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
            "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-30T09:54:41Z",
        "updated_at": "2021-07-30T09:54:41Z",
        "author_association": "MEMBER",
        "body": "## Summarizing work to date\r\n\r\n* Where this works well: if the output array is such that the dimensions are smaller than the input arrays\r\n* Where this works poorly: if the output array is such that the dimensions are larger than the input arrays (might need to add in some logic from my first approach, which revolved around checking the output chunk sizes won't be too large)\r\n* Next up: I need some better examples that more thoroughly cover the space of possible input & output shapes. I've just been randomly changing numbers and I think I need a better approach for this.\r\n\r\nWorst case scenario: even if this is only helpful in a very limited set of circumstances... we can just check if we're in that case or not within tensordot and skip rechunking if it wouldn't work well. So that's reassuring.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/889780223/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/889868106",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-889868106",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 889868106,
        "node_id": "IC_kwDOAbcwm841Ck9K",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-30T12:44:37Z",
        "updated_at": "2021-07-30T12:44:37Z",
        "author_association": "MEMBER",
        "body": "cc @tomwhite ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/889868106/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/889868392",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-889868392",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 889868392,
        "node_id": "IC_kwDOAbcwm841ClBo",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-30T12:45:13Z",
        "updated_at": "2021-07-30T12:45:13Z",
        "author_association": "MEMBER",
        "body": "  >     assert sum(v for v in dependencies.values()) < some magic number\r\n\r\nYes, I meant to add a len(v) call in there",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/889868392/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/890703766",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-890703766",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 890703766,
        "node_id": "IC_kwDOAbcwm841Fw-W",
        "user": {
            "login": "GPUtester",
            "id": 38199262,
            "node_id": "MDQ6VXNlcjM4MTk5MjYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/38199262?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GPUtester",
            "html_url": "https://github.com/GPUtester",
            "followers_url": "https://api.github.com/users/GPUtester/followers",
            "following_url": "https://api.github.com/users/GPUtester/following{/other_user}",
            "gists_url": "https://api.github.com/users/GPUtester/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GPUtester/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GPUtester/subscriptions",
            "organizations_url": "https://api.github.com/users/GPUtester/orgs",
            "repos_url": "https://api.github.com/users/GPUtester/repos",
            "events_url": "https://api.github.com/users/GPUtester/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GPUtester/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-02T04:26:35Z",
        "updated_at": "2021-08-02T04:26:35Z",
        "author_association": "COLLABORATOR",
        "body": "Can one of the admins verify this patch?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/890703766/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/891066114",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-891066114",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 891066114,
        "node_id": "IC_kwDOAbcwm841HJcC",
        "user": {
            "login": "quasiben",
            "id": 1403768,
            "node_id": "MDQ6VXNlcjE0MDM3Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1403768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quasiben",
            "html_url": "https://github.com/quasiben",
            "followers_url": "https://api.github.com/users/quasiben/followers",
            "following_url": "https://api.github.com/users/quasiben/following{/other_user}",
            "gists_url": "https://api.github.com/users/quasiben/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quasiben/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quasiben/subscriptions",
            "organizations_url": "https://api.github.com/users/quasiben/orgs",
            "repos_url": "https://api.github.com/users/quasiben/repos",
            "events_url": "https://api.github.com/users/quasiben/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quasiben/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-02T14:17:44Z",
        "updated_at": "2021-08-02T14:17:44Z",
        "author_association": "MEMBER",
        "body": "add to allowlist",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/891066114/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/891123818",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-891123818",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 891123818,
        "node_id": "IC_kwDOAbcwm841HXhq",
        "user": {
            "login": "tomwhite",
            "id": 85085,
            "node_id": "MDQ6VXNlcjg1MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/85085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomwhite",
            "html_url": "https://github.com/tomwhite",
            "followers_url": "https://api.github.com/users/tomwhite/followers",
            "following_url": "https://api.github.com/users/tomwhite/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomwhite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomwhite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomwhite/subscriptions",
            "organizations_url": "https://api.github.com/users/tomwhite/orgs",
            "repos_url": "https://api.github.com/users/tomwhite/repos",
            "events_url": "https://api.github.com/users/tomwhite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomwhite/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-02T15:34:54Z",
        "updated_at": "2021-08-02T15:34:54Z",
        "author_association": "MEMBER",
        "body": "Thanks for working on this @GenevieveBuckley.\r\n\r\n> I need some better examples that more thoroughly cover the space of possible input & output shapes.\r\n\r\nThe example I mentioned in https://github.com/dask/dask/issues/7847#issuecomment-874749110 might be a good one to try out here. The linked notebook shows the effect with and without a manual rechunk - I would hope the change in this PR would avoid the need for a manual rechunk.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/891123818/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/897230869",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-897230869",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 897230869,
        "node_id": "IC_kwDOAbcwm841eqgV",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-11T23:37:38Z",
        "updated_at": "2021-08-11T23:37:38Z",
        "author_association": "MEMBER",
        "body": "I suggest the following strategy:\r\n\r\n1.  Choose chunking such that the intermediate chunks are as large as possible.  This helps us to reduce replicas of the input data across the cluster\r\n2. However, we need to keep the intermediate chunks small enough so that they fit comfortably in memory.  In addition we'll probably want several of them to fit in memory at once because we'll have at least a couple for every thread.\r\n3. Even then, we may need replicas.  I recommend that we try some of the new active memory management work happening in https://github.com/dask/distributed/pull/5111 .  That PR actually has a notebook gist I think that includes an experiment showing lower memory use in tensordot\r\n\r\n    In https://github.com/dask/distributed/pull/5111#issuecomment-885988003 I propose an experiemnt where we change the heuristics in the ReduceReplicas class to not keep around as many replicas as we have waiting tasks, but maybe something like *half* as many as we have waiting tasks.  This might be a bit more aggressive.  I'm curious how far we can take this.\r\n\r\n4.  Additionally, we might consider situations where one of the arrays is highly asymmetric, such that we might be able to rechunk one entire axis to a single chunk.  Are there special cases like this that result in streaming behavior?  Maybe not, but it might be worth thinking about.  Multiplying a tall-and-skinny matrix against a small matrix is relatively common.  We should verify that that case works reliably in small memory.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/897230869/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/897235157",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-897235157",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 897235157,
        "node_id": "IC_kwDOAbcwm841erjV",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-11T23:49:38Z",
        "updated_at": "2021-08-11T23:49:38Z",
        "author_association": "MEMBER",
        "body": "So to be clear, barring any asymmetry in the input array shapes (and maybe asymmetry is common and we should really think about this) I think that we should choose input chunks such that the intermediate chunks are as large as we can make them without crashing the system.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/897235157/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/897237192",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-897237192",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 897237192,
        "node_id": "IC_kwDOAbcwm841esDI",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-11T23:55:07Z",
        "updated_at": "2021-08-11T23:55:07Z",
        "author_association": "MEMBER",
        "body": "Some concrete steps and experiments to run:\r\n\r\n1.  Find a few representative cases to test.  Maybe five.  These would represent cases that we expect to be common.  I'll suggest a few here:\r\n    - Vector-vector multiply\r\n    - tall and skinny against small row\r\n    - tall and skinny against small square\r\n    - tall and skinny against short and fat\r\n    - large square against large square\r\n    - short and fat against tall and skinny\r\n    \r\n2.  For each of these see how \"auto\" rechunking does.  Also for each of these make a recommendation for what ideal chunking strategy would be (try three strategies on each, report what does best)\r\n3. Run the notebook in Guido's PR.  Adjust the ReduceReplicas class to see if we can make the policy more aggressive without breaking things.  Does this have an effect?\r\n4. If so, run the computations above but with Guido's PR.  See if it has an effect in each case\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/897237192/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/900138417",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-900138417",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 900138417,
        "node_id": "IC_kwDOAbcwm841pwWx",
        "user": {
            "login": "GenevieveBuckley",
            "id": 30920819,
            "node_id": "MDQ6VXNlcjMwOTIwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenevieveBuckley",
            "html_url": "https://github.com/GenevieveBuckley",
            "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
            "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
            "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
            "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
            "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-17T09:24:43Z",
        "updated_at": "2021-08-17T09:24:43Z",
        "author_association": "MEMBER",
        "body": "I've been trying out the active memory management framework from https://github.com/dask/distributed/pull/5111\r\n\r\nNotes:\r\n* I had to scale stuff down to run it on my machine. I picked settings based on having the dashboard worker memory plots go orange fairly frequently (and also spill to disk occasionally).\r\n* In general, no active memory manager + persisting dask arrays leads to high cluster memory overall. This is not surprising, and is expected based on Guido's demo notebook results.\r\n* More surprising: Guido's notebook results showed that no active memory manager + not persisting dask arrays also resulted in high overall cluster memory. I only infrequently saw this happen.\r\n\r\nI was going to suggest that maybe we could use the active memory management as a tool to make long and skinny chunk shapes more feasible (good for keeping individual worker memory low, but bad for duplicating lots of data across the cluster). But I'm not sure if it's super clear cut that it's worthwhile, based on my experiments so far. \r\n\r\nI haven't played around much adjusting the replicas settings to be more aggressive yet, mostly because I wanted a better understanding of what factors led to different results first. I plan to try this next. My main worry with this is that I might find some general rule like \"we can be X% more aggressive\" but only have that hold true for my specific laptop hardware. I could possibly try to avoid this pitfall by changing the resources I give the dask cluster/client. Other suggestions are welcome.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/900138417/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/900257718",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-900257718",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 900257718,
        "node_id": "IC_kwDOAbcwm841qNe2",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-17T12:33:22Z",
        "updated_at": "2021-08-17T12:33:22Z",
        "author_association": "MEMBER",
        "body": "This was only something to try.  I wouldn't bet the farm on this approach.\nif it's not paying off then we don't need to pursue it.\n\nOn Tue, Aug 17, 2021 at 4:24 AM Genevieve Buckley ***@***.***>\nwrote:\n\n> I've been trying out the active memory management framework from\n> dask/distributed#5111 <https://github.com/dask/distributed/pull/5111>\n>\n> Notes:\n>\n>    - I had to scale stuff down to run it on my machine. I picked settings\n>    based on having the dashboard worker memory plots go orange fairly\n>    frequently (and also spill to disk occasionally).\n>    - In general, no active memory manager + persisting dask arrays leads\n>    to high cluster memory overall. This is not surprising, and is expected\n>    based on Guido's demo notebook results.\n>    - More surprising: Guido's notebook results showed that no active\n>    memory manager + not persisting dask arrays also resulted in high overall\n>    cluster memory. I only infrequently saw this happen.\n>\n> I was going to suggest that maybe we could use the active memory\n> management as a tool to make long and skinny chunk shapes more feasible\n> (good for keeping individual worker memory low, but bad for duplicating\n> lots of data across the cluster). But I'm not sure if it's super clear cut\n> that it's worthwhile, based on my experiments so far.\n>\n> I haven't played around much adjusting the replicas settings to be more\n> aggressive yet, mostly because I wanted a better understanding of what\n> factors led to different results first. I plan to try this next. My main\n> worry with this is that I might find some general rule like \"we can be X%\n> more aggressive\" but only have that hold true for my specific laptop\n> hardware. I could possibly try to avoid this pitfall by changing the\n> resources I give the dask cluster/client. Other suggestions are welcome.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/pull/7950#issuecomment-900138417>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AACKZTDY7L3Q5A6UERNVXPTT5ITGLANCNFSM5BDU6LEQ>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/900257718/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/900733470",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-900733470",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 900733470,
        "node_id": "IC_kwDOAbcwm841sBoe",
        "user": {
            "login": "GenevieveBuckley",
            "id": 30920819,
            "node_id": "MDQ6VXNlcjMwOTIwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenevieveBuckley",
            "html_url": "https://github.com/GenevieveBuckley",
            "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
            "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
            "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
            "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
            "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-18T00:58:57Z",
        "updated_at": "2021-08-18T02:47:42Z",
        "author_association": "MEMBER",
        "body": "> This was only something to try. I wouldn't bet the farm on this approach. if it's not paying off then we don't need to pursue it.\r\n\r\nWell it certainly hasn't hurt, even if it hasn't helped much. Since I had to scale down my examples, I think it will be informative to make the time between active memory manager sweeps shorter too. If there's not a great deal of change we'll just continue on.\r\n\r\nEDIT: Update to add that there isn't a huge difference when I run the active memory manager at different frequencies. So, it seems active memory management can be helpful in some circumstances, but it's no silver bullet. (Which means I don't have changes to make to [these comments](https://github.com/dask/dask/issues/2225#issuecomment-898260705) from earlier)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/900733470/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/910042156",
        "html_url": "https://github.com/dask/dask/pull/7950#issuecomment-910042156",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7950",
        "id": 910042156,
        "node_id": "IC_kwDOAbcwm842PiQs",
        "user": {
            "login": "GenevieveBuckley",
            "id": 30920819,
            "node_id": "MDQ6VXNlcjMwOTIwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenevieveBuckley",
            "html_url": "https://github.com/GenevieveBuckley",
            "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
            "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
            "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
            "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
            "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-01T08:04:53Z",
        "updated_at": "2021-09-01T08:04:53Z",
        "author_association": "MEMBER",
        "body": "Been spending some time today looking at greater than two dimensional cases, with fairly disappointing results (even in combination with the quick fix for unbounded memory use https://github.com/dask/dask/pull/7980)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/910042156/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]