{
    "url": "https://api.github.com/repos/dask/dask/issues/7686",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/7686/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/7686/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/7686/events",
    "html_url": "https://github.com/dask/dask/pull/7686",
    "id": 897998223,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ5OTI1Njc0",
    "number": 7686,
    "title": "Use BlockwiseDep for map_blocks with block_id or block_info",
    "user": {
        "login": "bmerry",
        "id": 1963944,
        "node_id": "MDQ6VXNlcjE5NjM5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1963944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bmerry",
        "html_url": "https://github.com/bmerry",
        "followers_url": "https://api.github.com/users/bmerry/followers",
        "following_url": "https://api.github.com/users/bmerry/following{/other_user}",
        "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions",
        "organizations_url": "https://api.github.com/users/bmerry/orgs",
        "repos_url": "https://api.github.com/users/bmerry/repos",
        "events_url": "https://api.github.com/users/bmerry/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bmerry/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2021-05-21T12:29:15Z",
    "updated_at": "2021-07-04T15:54:19Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
        "url": "https://api.github.com/repos/dask/dask/pulls/7686",
        "html_url": "https://github.com/dask/dask/pull/7686",
        "diff_url": "https://github.com/dask/dask/pull/7686.diff",
        "patch_url": "https://github.com/dask/dask/pull/7686.patch",
        "merged_at": null
    },
    "body": "When the `map_blocks` function has `block_id` or `block_info` arguments, it is populated with information about the current block. Previously this was done by synthesizing all the information at the time `map_blocks` was called and stored in a da.Array of objects. Now that Blockwise supports I/O-deps, it's feasible to defer this work until the Blockwise is materialised.\r\n\r\nI've made this a draft PR because I have no idea what I'm doing with the serialization and need some advice. I've made a distributed test pass, but after seeing some comments in other PRs I'm aware that there are some subtleties about what may be deserialized on the scheduler (in this case I think an np.ndarray is getting deserialized there).\r\n\r\nMaybe a solution would be to have `_BlockInfo.__getitem__` generate a task to generate the block_info, rather than generating it itself? That would also have the advantage that constructing the block info would be left to the workers.\r\n\r\nI've extended `da.blockwise` to accept BlockwiseDep arguments (and documented it), so that `map_blocks` can pass them through (since `map_blocks` calls `da.blockwise` rather than `dask.blockwise`). I probably still need to add some direct tests, rather than relying on the coverage from `map_blocks`.\r\n\r\nThe performance looks good. Here's some benchmark code:\r\n```\r\n#!/usr/bin/env python3\r\n\r\nfrom time import monotonic\r\n\r\nimport dask.array as da\r\nimport numpy as np\r\n\r\n\r\ndef func(a, b, block_info=None):\r\n    return a + b\r\n\r\n\r\na = da.from_array(np.arange(200)[np.newaxis, :], chunks=1)\r\nb = da.from_array(np.arange(200)[:, np.newaxis], chunks=1)\r\nt0 = monotonic()\r\nc = da.map_blocks(func, a, b)\r\nt1 = monotonic()\r\nc.compute()\r\nt2 = monotonic()\r\nprint(f'Prepare: {t1 - t0:.3f}')\r\nprint(f'Compute: {t2 - t1:.3f}')\r\n```\r\n\r\nBefore:\r\n```\r\nPrepare: 0.446\r\nCompute: 7.457\r\n```\r\n\r\nAfter:\r\n```\r\nPrepare: 0.001\r\nCompute: 6.715\r\n```\r\n\r\n- [x] Tests added / passed\r\n- [x] Passes `black dask` / `flake8 dask` / `isort dask`\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/7686/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/7686/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}