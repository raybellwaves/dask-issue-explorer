[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/232662261",
        "html_url": "https://github.com/dask/dask/issues/1353#issuecomment-232662261",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1353",
        "id": 232662261,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjY2MjI2MQ==",
        "user": {
            "login": "alberthdev",
            "id": 1274384,
            "node_id": "MDQ6VXNlcjEyNzQzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1274384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alberthdev",
            "html_url": "https://github.com/alberthdev",
            "followers_url": "https://api.github.com/users/alberthdev/followers",
            "following_url": "https://api.github.com/users/alberthdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/alberthdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alberthdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alberthdev/subscriptions",
            "organizations_url": "https://api.github.com/users/alberthdev/orgs",
            "repos_url": "https://api.github.com/users/alberthdev/repos",
            "events_url": "https://api.github.com/users/alberthdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alberthdev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-14T13:17:02Z",
        "updated_at": "2016-07-14T13:17:02Z",
        "author_association": "NONE",
        "body": "To add on, I think the major cause of the slowdown is the .keys() call on the internal HDFStore, e.g. https://github.com/dask/dask/blob/d546af029368e1b99e8a45f014185870a8582318/dask/dataframe/io.py#L497. Regardless of the fnmatch, this seems to be the most time-consuming of all. (This might be something to bring up to the PyTables people as well\u2026?)\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/232662261/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/232816116",
        "html_url": "https://github.com/dask/dask/issues/1353#issuecomment-232816116",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1353",
        "id": 232816116,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjgxNjExNg==",
        "user": {
            "login": "nirizr",
            "id": 3631703,
            "node_id": "MDQ6VXNlcjM2MzE3MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3631703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nirizr",
            "html_url": "https://github.com/nirizr",
            "followers_url": "https://api.github.com/users/nirizr/followers",
            "following_url": "https://api.github.com/users/nirizr/following{/other_user}",
            "gists_url": "https://api.github.com/users/nirizr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nirizr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nirizr/subscriptions",
            "organizations_url": "https://api.github.com/users/nirizr/orgs",
            "repos_url": "https://api.github.com/users/nirizr/repos",
            "events_url": "https://api.github.com/users/nirizr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nirizr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-14T22:56:02Z",
        "updated_at": "2016-07-17T08:30:39Z",
        "author_association": "CONTRIBUTOR",
        "body": "I tend to agree with @alberthdev, the slowness seems to be related to pytable's `walk_nodes` called by pandas' `HDFStore.groups` method.\nFurther more it looks like it's an inherent and known drawback with the hdf format, focusing on data rather than metadata and accepting relatively slow metadata acquisition.\nThere also seems to be some caching involved.\n\nI did see someone recommend storing the needed metadata in it's own hdf node, but we might find other ways to optimize, ~~such as avoiding the 2nd read of each (accepted) node in `get_storer` a couple lines below by calling `hdf.items()` instead of `hdf.keys()`.~~ I tried using a single iteration on a ~10gig hdf with more than 15k nodes, I experienced no improvement.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/232816116/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/236278922",
        "html_url": "https://github.com/dask/dask/issues/1353#issuecomment-236278922",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1353",
        "id": 236278922,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI3ODkyMg==",
        "user": {
            "login": "nirizr",
            "id": 3631703,
            "node_id": "MDQ6VXNlcjM2MzE3MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3631703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nirizr",
            "html_url": "https://github.com/nirizr",
            "followers_url": "https://api.github.com/users/nirizr/followers",
            "following_url": "https://api.github.com/users/nirizr/following{/other_user}",
            "gists_url": "https://api.github.com/users/nirizr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nirizr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nirizr/subscriptions",
            "organizations_url": "https://api.github.com/users/nirizr/orgs",
            "repos_url": "https://api.github.com/users/nirizr/repos",
            "events_url": "https://api.github.com/users/nirizr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nirizr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-07-29T19:59:16Z",
        "updated_at": "2016-07-29T19:59:16Z",
        "author_association": "CONTRIBUTOR",
        "body": "The only solution I can think of for this is embedding needed data inside hdf files as a metadata-like dataset.\n\nThis will require quite a bit of considerations regarding multiple files. Is the metadata stored in the first file? each file contains it's own? will reading only some of the files be possible?\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/236278922/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/236465863",
        "html_url": "https://github.com/dask/dask/issues/1353#issuecomment-236465863",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1353",
        "id": 236465863,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjQ2NTg2Mw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-01T00:13:53Z",
        "updated_at": "2016-08-01T00:13:53Z",
        "author_association": "MEMBER",
        "body": "Well, we call `hdf.keys()` many times in a single call to read_hdf.  I wonder if perhaps most of the cost here can be avoided by moving this call outside of the `get_keys_and_stops` function within the `_read_single_hdf` function.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/236465863/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/236465911",
        "html_url": "https://github.com/dask/dask/issues/1353#issuecomment-236465911",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1353",
        "id": 236465911,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjQ2NTkxMQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-01T00:14:53Z",
        "updated_at": "2016-08-01T00:14:53Z",
        "author_association": "MEMBER",
        "body": "Oh, never-mind, it appears that neither of these functions get called multiple times unnecessarily.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/236465911/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/236466613",
        "html_url": "https://github.com/dask/dask/issues/1353#issuecomment-236466613",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1353",
        "id": 236466613,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjQ2NjYxMw==",
        "user": {
            "login": "nirizr",
            "id": 3631703,
            "node_id": "MDQ6VXNlcjM2MzE3MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3631703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nirizr",
            "html_url": "https://github.com/nirizr",
            "followers_url": "https://api.github.com/users/nirizr/followers",
            "following_url": "https://api.github.com/users/nirizr/following{/other_user}",
            "gists_url": "https://api.github.com/users/nirizr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nirizr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nirizr/subscriptions",
            "organizations_url": "https://api.github.com/users/nirizr/orgs",
            "repos_url": "https://api.github.com/users/nirizr/repos",
            "events_url": "https://api.github.com/users/nirizr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nirizr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-01T00:27:18Z",
        "updated_at": "2016-08-01T00:27:18Z",
        "author_association": "CONTRIBUTOR",
        "body": "I think I tried something similar, with no improvement:\n\n> such as avoiding the 2nd read of each (accepted) node in get_storer a couple lines below by calling hdf.items() instead of hdf.keys(). I tried using a single iteration on a ~10gig hdf with more than 15k nodes, I experienced no improvement.\n\nMore specifically, I wrote a helper function that directly uses pandas' internals to get node names and nrows in one go. It had to improvement, probably due to caching making the second iteration fast.\nI can probably dig up the code, if anyone's interested.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/236466613/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/236588346",
        "html_url": "https://github.com/dask/dask/issues/1353#issuecomment-236588346",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1353",
        "id": 236588346,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjU4ODM0Ng==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-01T14:00:05Z",
        "updated_at": "2016-08-01T14:00:05Z",
        "author_association": "MEMBER",
        "body": "OK, so if a single call to `.keys` is expensive then is there a way to get the necessary group information without calling `.keys`?  This would be doable (I think) with h5py.  Does PyTables offer an internal API that is less expensive?\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/236588346/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/236611831",
        "html_url": "https://github.com/dask/dask/issues/1353#issuecomment-236611831",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1353",
        "id": 236611831,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjYxMTgzMQ==",
        "user": {
            "login": "nirizr",
            "id": 3631703,
            "node_id": "MDQ6VXNlcjM2MzE3MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3631703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nirizr",
            "html_url": "https://github.com/nirizr",
            "followers_url": "https://api.github.com/users/nirizr/followers",
            "following_url": "https://api.github.com/users/nirizr/following{/other_user}",
            "gists_url": "https://api.github.com/users/nirizr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nirizr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nirizr/subscriptions",
            "organizations_url": "https://api.github.com/users/nirizr/orgs",
            "repos_url": "https://api.github.com/users/nirizr/repos",
            "events_url": "https://api.github.com/users/nirizr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nirizr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-01T15:18:34Z",
        "updated_at": "2016-08-01T15:18:34Z",
        "author_association": "CONTRIBUTOR",
        "body": "As I understand it this is a design choice by the HDF group. Reading attributes requires walking the hdf tree, and reading all keys of a group can become a bit heavy. As far as I understand it (and I'd gladly be corrected) there's no easy way around it (except storing the metadata in a separate dataset).\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/236611831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/236917031",
        "html_url": "https://github.com/dask/dask/issues/1353#issuecomment-236917031",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1353",
        "id": 236917031,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjkxNzAzMQ==",
        "user": {
            "login": "alberthdev",
            "id": 1274384,
            "node_id": "MDQ6VXNlcjEyNzQzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1274384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alberthdev",
            "html_url": "https://github.com/alberthdev",
            "followers_url": "https://api.github.com/users/alberthdev/followers",
            "following_url": "https://api.github.com/users/alberthdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/alberthdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alberthdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alberthdev/subscriptions",
            "organizations_url": "https://api.github.com/users/alberthdev/orgs",
            "repos_url": "https://api.github.com/users/alberthdev/repos",
            "events_url": "https://api.github.com/users/alberthdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alberthdev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-02T14:13:42Z",
        "updated_at": "2016-08-02T14:13:42Z",
        "author_association": "NONE",
        "body": "I think there may potentially be some optimizations when parsing the pattern format. With H5py, I can potentially take a pattern format and do some tweaking to get the keys faster. For instance, if I have something like `BigGroup/SubGroup/*/TinyTable`, with some careful parsing, I can grab the `BigGroup/SubGroup` group, call `.keys()` on it, and then iterate through it to match `TinyTable`.\n\n@nirizr Storing metadata is definitely an option - but I think we should also aim to be able to read \"raw\" HDF5 files (e.g. non-Pandas created HDF5 files). This would allow us to be able to read other HDF5 files out there, especially those generated by others and by other programs.\n\nOn the topic of H5py, I've definitely noticed that using H5py to get the keys tends to be much faster than fetching keys from PyTables. Is PyTables doing something extra that prevents us from getting the tables/groups faster?\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/236917031/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/236935740",
        "html_url": "https://github.com/dask/dask/issues/1353#issuecomment-236935740",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1353",
        "id": 236935740,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjkzNTc0MA==",
        "user": {
            "login": "nirizr",
            "id": 3631703,
            "node_id": "MDQ6VXNlcjM2MzE3MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3631703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nirizr",
            "html_url": "https://github.com/nirizr",
            "followers_url": "https://api.github.com/users/nirizr/followers",
            "following_url": "https://api.github.com/users/nirizr/following{/other_user}",
            "gists_url": "https://api.github.com/users/nirizr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nirizr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nirizr/subscriptions",
            "organizations_url": "https://api.github.com/users/nirizr/orgs",
            "repos_url": "https://api.github.com/users/nirizr/repos",
            "events_url": "https://api.github.com/users/nirizr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nirizr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-02T15:12:03Z",
        "updated_at": "2016-08-02T15:12:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "I tend to think handling specific cases like `BigGroup/SubGroup/*/TinyTable` is not something we'll want to pursue, but that's just my opinion. \n\nI did not try removing the pandas/pytables layers while listing the keys. It sounds good but i'm not familiar with h5py enough.\n\n@alberthdev do you think you can work out a small example?\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/236935740/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/236952617",
        "html_url": "https://github.com/dask/dask/issues/1353#issuecomment-236952617",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1353",
        "id": 236952617,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjk1MjYxNw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-02T16:03:11Z",
        "updated_at": "2016-08-02T16:03:11Z",
        "author_association": "MEMBER",
        "body": "The case of `group/group//*/table` seems somewhat common to me.  Finding the relevant part of the hierarchy and only iterating through that seems nice.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/236952617/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/519560546",
        "html_url": "https://github.com/dask/dask/issues/1353#issuecomment-519560546",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1353",
        "id": 519560546,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTU2MDU0Ng==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-08T15:10:36Z",
        "updated_at": "2019-08-08T15:10:36Z",
        "author_association": "MEMBER",
        "body": "In h5py there is the visitor pattern that could be used to do something like this more efficiently. In particular see the [`visit` method of `Group`]( http://docs.h5py.org/en/latest/high/group.html#Group.visit ). Is there something similar that could be done with PyTables or Pandas?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/519560546/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]