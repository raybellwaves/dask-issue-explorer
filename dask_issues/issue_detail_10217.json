{
    "url": "https://api.github.com/repos/dask/dask/issues/10217",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10217/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10217/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10217/events",
    "html_url": "https://github.com/dask/dask/issues/10217",
    "id": 1681038631,
    "node_id": "I_kwDOAbcwm85kMp0n",
    "number": 10217,
    "title": "matmul producing wrong results in local threaded mode in combination with Fortran-ordered arrays.",
    "user": {
        "login": "mueslo",
        "id": 847751,
        "node_id": "MDQ6VXNlcjg0Nzc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/847751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mueslo",
        "html_url": "https://github.com/mueslo",
        "followers_url": "https://api.github.com/users/mueslo/followers",
        "following_url": "https://api.github.com/users/mueslo/following{/other_user}",
        "gists_url": "https://api.github.com/users/mueslo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mueslo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mueslo/subscriptions",
        "organizations_url": "https://api.github.com/users/mueslo/orgs",
        "repos_url": "https://api.github.com/users/mueslo/repos",
        "events_url": "https://api.github.com/users/mueslo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mueslo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2023-04-24T11:24:56Z",
    "updated_at": "2023-06-05T02:04:48Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the issue**:\r\nWhile trying to dask-ify a somewhat complex memory-intensive numpy+scipy calculation which in theory is easily parallelizable into chunks (since it is basically rastering over the first two dimensions), I have found a bug leading to wrong and non-reproducible results.\r\n\r\n It works perfectly fine:\r\n* without dask (pure numpy)\r\n* with dask in the single-threaded scheduler. \r\n* with dask, but without without this particular operation\r\n\r\nBased on my tests, it seems to be related to the numpy Fortran ordering of arrays (`inv_`)`matrix` below. The modulo operation is not important, you can also replace it with addition/subtraction. The error occurs if `inv_matrix` is Fortran-ordered, but `matrix` is not (or the other way around). If both are Fortran-ordered, it is also fine. However, the bug also only occurs if the previous reshape occurs.\r\n\r\n```python\r\n>>> b\r\n<<< dask.array<reshape, shape=(7520000, 3), dtype=float64, chunksize=(2801200, 3), chunktype=numpy.ndarray>\r\n>>> b2 = ((b @ inv_matrix) % 1 ) @ matrix  # modulo in a different basis, i.e. matrix, inv_matrix 3x3 numpy arrays with matrix @ inv_matrix ~= np.eye(3)\r\n>>> b2 \r\n<<< dask.array<getitem, shape=(7520000, 3), dtype=float64, chunksize=(2801200, 3), chunktype=numpy.ndarray>\r\n```\r\nlo and behold, calculations related to b2 start to give a different result each time:\r\n```python\r\n>>> ((b2)**2).sum(axis=1).max().compute()\r\n<<< 9.46157028666362\r\n>>> ((b2)**2).sum(axis=1).max().compute()\r\n<<< 9.46157028666362\r\n>>> ((b2)**2).sum(axis=1).max().compute()\r\n<<< 470.2506360498207\r\n```\r\n<details>\r\n  <summary>Computation visualisation of `b2` from minimum example below</summary>\r\n\r\n![dask_bug2](https://user-images.githubusercontent.com/847751/234230336-4f8ab696-e20b-46c2-8789-15512ac8b6ba.svg)\r\n\r\n</details>\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport numpy as np\r\nimport dask.array as da\r\n\r\nmat = np.random.random((3, 3))\r\nmat = np.asfortranarray(mat) # equivalently: mat = mat.T\r\nmat_inv = np.linalg.inv(mat)\r\nprint(np.isfortran(mat), np.isfortran(mat_inv))\r\n\r\nx = da.random.random((400, 400, 47, 3), chunks=(100, 400, 47, 3))\r\nb = x.reshape(-1, 3)\r\nb2 = ((b @ mat_inv) - 1) @ mat\r\n\r\nprint('[BUG] MT / ST')\r\nwhile True:\r\n    try:\r\n        mt, st = b2.max().compute(), b2.max().compute(scheduler='single-threaded')\r\n        print(f\"[{'X' if mt != st else ' '}] {mt} / {st}\")\r\n    except KeyboardInterrupt:\r\n        break\r\n```\r\n\r\nOutput\r\n```\r\nTrue False\r\n[BUG] MT / ST\r\n[ ] 0.010136448680771069 / 0.010136448680771069\r\n[ ] 0.010136448680771069 / 0.010136448680771069\r\n[X] 6.638389266935541 / 0.010136448680771069\r\n[X] 6.5967108497788045 / 0.010136448680771069\r\n[X] 6.527028598487698 / 0.010136448680771069\r\n[X] 6.728268876668261 / 0.010136448680771069\r\n[ ] 0.010136448680771069 / 0.010136448680771069\r\n[X] 5.017877123758413 / 0.010136448680771069\r\n[X] 3.729966956737955 / 0.010136448680771069\r\n[X] 7.1588990147215075 / 0.010136448680771069\r\n[ ] 0.010136448680771069 / 0.010136448680771069\r\n\r\nProcess finished with exit code 0\r\n\r\n\r\n```\r\n\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n\r\nTested configurations:\r\n\r\n**bold** == no bug\r\n\r\n- Dask version: **2.23.0**, **2020.12.0**, **2020.12.0+32.gff6c197f**, [2020.12.0+33.g51add4e5](https://github.com/dask/dask/commit/51add4e5c07fd0deb1b8cc179c7d66db9f8cc063), 2021.1.0, 2021.1.1, 2021.3.1, 2021.6.0, 2021.12.0, 2022.12.1, 2023.3.2, 2023.4.0\r\n- Numpy Version: 1.17.5, 1.23.5, 1.24.0\r\n- Install method (conda, pip, source): pip (in venv)\r\n\r\nSystem 1:\r\n- Python version: 3.11.2\r\n- Operating System: Debian 12 (bookworm), Linux kernel 6.1.0\r\n- CPU arch: x86_64 (AMD Ryzen 2200G)\r\n\r\nSystem 2:\r\n- Python version: 3.9.9\r\n- Operating System: OpenSUSE Leap 15.4, Linux kernel 5.14.21\r\n- CPU arch: x86_64 (Intel Xeon Gold 6244)",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10217/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10217/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}