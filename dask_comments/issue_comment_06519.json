[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/674503163",
        "html_url": "https://github.com/dask/dask/issues/6519#issuecomment-674503163",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6519",
        "id": 674503163,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDUwMzE2Mw==",
        "user": {
            "login": "mshaikh786",
            "id": 3212475,
            "node_id": "MDQ6VXNlcjMyMTI0NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3212475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mshaikh786",
            "html_url": "https://github.com/mshaikh786",
            "followers_url": "https://api.github.com/users/mshaikh786/followers",
            "following_url": "https://api.github.com/users/mshaikh786/following{/other_user}",
            "gists_url": "https://api.github.com/users/mshaikh786/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mshaikh786/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mshaikh786/subscriptions",
            "organizations_url": "https://api.github.com/users/mshaikh786/orgs",
            "repos_url": "https://api.github.com/users/mshaikh786/repos",
            "events_url": "https://api.github.com/users/mshaikh786/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mshaikh786/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-16T09:23:09Z",
        "updated_at": "2020-08-16T09:23:09Z",
        "author_association": "NONE",
        "body": "Just to add more information:\r\n\r\n- I tried the above example with N=100000 and works perfectly fine.\r\n- I also tried using dask.bag instead of futures and see the same issue when using N=1000000\r\n\r\n```\r\n#!/usr/env/bin python\r\nimport time,os\r\nfrom dask.distributed import Client, progress\r\nclient= Client(scheduler_file='scheduler_%s.json' %(os.getenv('SLURM_JOBID')))\r\nclient\r\n\r\n\r\nimport dask.bag as db\r\nimport numpy as np\r\n\r\ndef sim(x):\r\n    return np.linalg.inv(x)\r\n\r\n\r\nn = np.random.randint(0, 100, size=(1000000, 100, 100))\r\n\r\ns = time.time()\r\nb = db.from_sequence(n,npartitions=7)\r\nprint(\"Elapsed time in from_sequence: \",time.time() - s)\r\n\r\ns = time.time()\r\nresults=b.map(sim).compute()\r\nprint(\"Elapsed time in map and compute: \",time.time() - s)\r\n\r\nprint(\"Length of results : \",len(results))\r\nprint(\"Last element\")\r\nprint(results[-1])\r\nclient.close()\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/674503163/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/674536975",
        "html_url": "https://github.com/dask/dask/issues/6519#issuecomment-674536975",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6519",
        "id": 674536975,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDUzNjk3NQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-16T14:59:35Z",
        "updated_at": "2020-08-16T14:59:35Z",
        "author_association": "MEMBER",
        "body": "If you there aren't any errors then I'm not sure that there is much that I\npersonally can do here.  You might want to try producing a slimmer example\nand seeing if there is some boundary where things crash/don't-crash.  You\nmight also want to take a look at these links:\n\nhttps://examples.dask.org/applications/embarrassingly-parallel.html\nhttps://docs.dask.org/en/latest/best-practices.html#avoid-very-large-graphs\n\nOn Sat, Aug 15, 2020 at 7:49 AM Mohsin Ahmed Shaikh <\nnotifications@github.com> wrote:\n\n> I am trying to run the following dask script stops and crashes with no\n> errors.\n>\n> #!/usr/bin/env python\n>\n> import time\n> import random\n> import numpy as np\n> import os\n> from dask.distributed import Client, progress\n> jobid=os.getenv('SLURM_JOBID')\n> client= Client(scheduler_file='scheduler_%s.json' %jobid,direct_to_workers=True)\n> print(client)\n>\n> def sim(x):\n>     return np.linalg.inv(x)\n>\n> N=1000000\n> C=15000\n> print(\"Creating parameter set\")\n> input_params=np.random.randint(0, 100, size=(N,100, 100))\n> print(\"Starting computation\")\n> futures = client.map(sim,input_params,batch_size=C)\n> print(\"Futures length \",len(futures))\n> client.close()\n>\n> Some information about the system and the SLURM jobscript to launch the\n> above python script:\n>\n> #!/bin/bash -l\n> #SBATCH --ntasks=64\n> #SBATCH --ntasks-per-node=32\n> #SBATCH --cpus-per-task=1\n> #SBATCH --partition=workq\n> #SBATCH --time=02:00:00\n>\n> module load dask/2.22.0\n> srun -u --hint=nomultithread -n ${SLURM_NTASKS} --ntasks-per-node=${SLURM_NTASKS_PER_NODE} -c ${SLURM_CPUS_PER_TASK} dask-mpi --no-nanny --nthreads=${SLURM_CPUS_PER_TASK} --memory-limit='4GB' --local-directory=workers${SLURM_JOBID} --scheduler-file=scheduler_${SLURM_JOBID}.json --interface=ipogif0 --scheduler-port=6192 --dashboard-address=${node}:8787 &\n>\n> The jobscript was submitted on CrayXC40 (--interface=ipogif0 for Cray\n> Aries interconnect) but a similar test was also run on a non-Cray machine,\n> (with --interface=ib0). I am launching dask-mpi on multiple nodes to\n> increase the total memory (each node has 128 GB). With --memory-limit=4GB,\n> I can see that Dask Dashboard shows me a total of ~ 4GB * 64 workers\n> (223GB) memory.\n>\n> Version of software are as follows:\n>\n>    - Dask version: 2.22.0\n>    - Python version: 3.8.0\n>    - Operating System: Cray Linux Environment 7.01 ( also tested on a\n>    different machine with CentOS 7.7)\n>    - Install method (conda, pip, source): pip install --no-cache-dir\n>    dask[complete] dask-mpi dask-jobqueue dask-ml\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/6519>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AACKZTAEZSODTNVQV3UGQRLSA2N67ANCNFSM4QAJ3DMA>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/674536975/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/674550022",
        "html_url": "https://github.com/dask/dask/issues/6519#issuecomment-674550022",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6519",
        "id": 674550022,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDU1MDAyMg==",
        "user": {
            "login": "mshaikh786",
            "id": 3212475,
            "node_id": "MDQ6VXNlcjMyMTI0NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3212475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mshaikh786",
            "html_url": "https://github.com/mshaikh786",
            "followers_url": "https://api.github.com/users/mshaikh786/followers",
            "following_url": "https://api.github.com/users/mshaikh786/following{/other_user}",
            "gists_url": "https://api.github.com/users/mshaikh786/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mshaikh786/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mshaikh786/subscriptions",
            "organizations_url": "https://api.github.com/users/mshaikh786/orgs",
            "repos_url": "https://api.github.com/users/mshaikh786/repos",
            "events_url": "https://api.github.com/users/mshaikh786/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mshaikh786/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-16T16:51:38Z",
        "updated_at": "2020-08-16T16:51:38Z",
        "author_association": "NONE",
        "body": "Thanks Mathew, \r\nThe boundary was N=100,000. When set to N=1,000,000 then the issue appears.\r\nI notice a few INFO messages which may be pointing to excessive wait by the workers:\r\n`distributed.core - INFO - Event loop was unresponsive in Worker for 19.20s.  This is often caused by long-running GIL-holding functions or moving large chunks of data. This can cause timeouts and instability.`\r\n\r\nDoes this highlight the possibility of drop off of a TCP connection (e.g. due to timeout) between workers?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/674550022/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/674550796",
        "html_url": "https://github.com/dask/dask/issues/6519#issuecomment-674550796",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6519",
        "id": 674550796,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDU1MDc5Ng==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-16T16:58:50Z",
        "updated_at": "2020-08-16T16:58:50Z",
        "author_association": "MEMBER",
        "body": "> The boundary was N=100,000. When set to N=1,000,000 then the issue\nappears.\n\nThere are many numbers in between 100,000 and 1,000,000 :)\n\n> Does this highlight the possibility of drop off of a TCP connection (e.g.\ndue to timeout) between workers?\n\nNo, I don't think so.\n\n\nOn Sun, Aug 16, 2020 at 9:51 AM Mohsin Ahmed Shaikh <\nnotifications@github.com> wrote:\n\n> Thanks Mathew,\n> The boundary was N=100,000. When set to N=1,000,000 then the issue appears.\n> I notice a few INFO messages which may be pointing to excessive wait by\n> the workers:\n> distributed.core - INFO - Event loop was unresponsive in Worker for\n> 19.20s. This is often caused by long-running GIL-holding functions or\n> moving large chunks of data. This can cause timeouts and instability.\n>\n> Does this highlight the possibility of drop off of a TCP connection (e.g.\n> due to timeout) between workers?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/6519#issuecomment-674550022>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AACKZTG4ZSAW5SCGIUW5OTTSBAFCNANCNFSM4QAJ3DMA>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/674550796/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/675092454",
        "html_url": "https://github.com/dask/dask/issues/6519#issuecomment-675092454",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6519",
        "id": 675092454,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTA5MjQ1NA==",
        "user": {
            "login": "mshaikh786",
            "id": 3212475,
            "node_id": "MDQ6VXNlcjMyMTI0NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3212475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mshaikh786",
            "html_url": "https://github.com/mshaikh786",
            "followers_url": "https://api.github.com/users/mshaikh786/followers",
            "following_url": "https://api.github.com/users/mshaikh786/following{/other_user}",
            "gists_url": "https://api.github.com/users/mshaikh786/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mshaikh786/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mshaikh786/subscriptions",
            "organizations_url": "https://api.github.com/users/mshaikh786/orgs",
            "repos_url": "https://api.github.com/users/mshaikh786/repos",
            "events_url": "https://api.github.com/users/mshaikh786/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mshaikh786/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-17T20:19:13Z",
        "updated_at": "2020-08-17T20:30:47Z",
        "author_association": "NONE",
        "body": "> There are many numbers in between 100,000 and 1,000,000\r\n\r\nWell said :) \r\nI can see the job failing with error at 425,000 tasks (slurm output is attached)\r\n[slurm-15435477.txt](https://github.com/dask/dask/files/5086593/slurm-15435477.txt)\r\nAlso attached is the python script and SLURM jobscript launching the job.\r\n\r\n[bag_example_py.txt](https://github.com/dask/dask/files/5086639/bag_example_py.txt)\r\n[dask_script_slurm.txt](https://github.com/dask/dask/files/5086640/dask_script_slurm.txt)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/675092454/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/678678684",
        "html_url": "https://github.com/dask/dask/issues/6519#issuecomment-678678684",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6519",
        "id": 678678684,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODY3ODY4NA==",
        "user": {
            "login": "mshaikh786",
            "id": 3212475,
            "node_id": "MDQ6VXNlcjMyMTI0NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3212475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mshaikh786",
            "html_url": "https://github.com/mshaikh786",
            "followers_url": "https://api.github.com/users/mshaikh786/followers",
            "following_url": "https://api.github.com/users/mshaikh786/following{/other_user}",
            "gists_url": "https://api.github.com/users/mshaikh786/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mshaikh786/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mshaikh786/subscriptions",
            "organizations_url": "https://api.github.com/users/mshaikh786/orgs",
            "repos_url": "https://api.github.com/users/mshaikh786/repos",
            "events_url": "https://api.github.com/users/mshaikh786/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mshaikh786/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-22T18:59:01Z",
        "updated_at": "2020-08-22T18:59:01Z",
        "author_association": "NONE",
        "body": "Hi @mrocklin ,\r\nAny suggestions?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/678678684/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1293940819",
        "html_url": "https://github.com/dask/dask/issues/6519#issuecomment-1293940819",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6519",
        "id": 1293940819,
        "node_id": "IC_kwDOAbcwm85NH_hT",
        "user": {
            "login": "guziy",
            "id": 900941,
            "node_id": "MDQ6VXNlcjkwMDk0MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/900941?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guziy",
            "html_url": "https://github.com/guziy",
            "followers_url": "https://api.github.com/users/guziy/followers",
            "following_url": "https://api.github.com/users/guziy/following{/other_user}",
            "gists_url": "https://api.github.com/users/guziy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guziy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guziy/subscriptions",
            "organizations_url": "https://api.github.com/users/guziy/orgs",
            "repos_url": "https://api.github.com/users/guziy/repos",
            "events_url": "https://api.github.com/users/guziy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guziy/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-27T18:58:44Z",
        "updated_at": "2022-10-27T19:16:05Z",
        "author_association": "NONE",
        "body": "Hi:\r\n\r\nSorry to comment on this 2 years later, but I confirm the observation. I have a simple script squaring a list of numbers which breaks if I use a list of `1000_000`, `500_000` but worked for `200_000` elements (I use `mpirun -np python...` to run the script ). \r\n\r\n\r\n\r\n```python\r\nfrom dask_mpi import initialize\r\nfrom distributed import Client\r\nimport dask\r\nfrom dask.distributed import progress\r\n\r\n\r\nimport os\r\nfrom pathlib import Path\r\nimport logging\r\n\r\ndef square(x):\r\n    return x ** 2\r\n\r\n\r\ndef main():\r\n    dask.config.set({\r\n        \"distributed.worker.use-file-locking\": False,\r\n    })\r\n\r\n    logging.getLogger(\"distributed.batched\").setLevel(logging.CRITICAL)\r\n    logging.getLogger(\"distributed.core\").setLevel(logging.CRITICAL)\r\n    logging.getLogger(\"distributed.worker\").setLevel(logging.CRITICAL)\r\n    logging.getLogger(\"distributed.scheduler\").setLevel(logging.CRITICAL)\r\n\r\n    local_dir = Path(os.environ[\"TMPDIR\"]) / \"dask-work-dir-multinode\"\r\n    \r\n    initialize(nthreads=1, dashboard=False, \r\n               interface=\"ib0\", local_directory=str(local_dir))\r\n\r\n    with Client() as client:\r\n        n_list = 1_000_000\r\n        futures = client.map(square, range(n_list))\r\n        progress(futures)\r\n        results = client.gather(futures)\r\n        # client.shutdown()\r\n\r\n    print(\"\")\r\n    print(\"==\" * 10)\r\n    print(\"Results = \", results[:20])\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\n\r\n\r\n\r\nBelow are the exceptions:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/fs/ssm/eccc/cmd/cmds/env/python/py39_2022.09.29_all/lib/python3.9/site-packages/distributed/comm/tcp.py\", line 225, in read\r\n    frames_nbytes = await stream.read_bytes(fmt_size)\r\nasyncio.exceptions.CancelledError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/fs/ssm/eccc/cmd/cmds/env/python/py39_2022.09.29_all/lib/python3.9/asyncio/tasks.py\", line 490, in wait_for\r\n    return fut.result()\r\nasyncio.exceptions.CancelledError\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/fs/ssm/eccc/cmd/cmds/env/python/py39_2022.09.29_all/lib/python3.9/site-packages/distributed/comm/core.py\", line 328, in connect\r\n    handshake = await asyncio.wait_for(comm.read(), time_left())\r\n  File \"/fs/ssm/eccc/cmd/cmds/env/python/py39_2022.09.29_all/lib/python3.9/asyncio/tasks.py\", line 492, in wait_for\r\n    raise exceptions.TimeoutError() from exc\r\nasyncio.exceptions.TimeoutError\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/fs/homeu2/eccc/cmd/cmde/olh001/Python/test/dask-multi-node/test.py\", line 44, in <module>\r\n    main()\r\n  File \"/fs/homeu2/eccc/cmd/cmde/olh001/Python/test/dask-multi-node/test.py\", line 34, in main\r\n    progress(futures)\r\n  File \"/fs/ssm/eccc/cmd/cmds/env/python/py39_2022.09.29_all/lib/python3.9/site-packages/distributed/diagnostics/progressbar.py\", line 475, in progress\r\n    TextProgressBar(futures, complete=complete, **kwargs)\r\n  File \"/fs/ssm/eccc/cmd/cmds/env/python/py39_2022.09.29_all/lib/python3.9/site-packages/distributed/diagnostics/progressbar.py\", line 134, in __init__\r\n    loop_runner.run_sync(self.listen)\r\n  File \"/fs/ssm/eccc/cmd/cmds/env/python/py39_2022.09.29_all/lib/python3.9/site-packages/distributed/utils.py\", line 581, in run_sync\r\n    return sync(self.loop, func, *args, **kwargs)\r\n  File \"/fs/ssm/eccc/cmd/cmds/env/python/py39_2022.09.29_all/lib/python3.9/site-packages/distributed/utils.py\", line 406, in sync\r\n    raise exc.with_traceback(tb)\r\n  File \"/fs/ssm/eccc/cmd/cmds/env/python/py39_2022.09.29_all/lib/python3.9/site-packages/distributed/utils.py\", line 379, in f\r\n    result = yield future\r\n  File \"/fs/ssm/eccc/cmd/cmds/env/python/py39_2022.09.29_all/lib/python3.9/site-packages/tornado/gen.py\", line 762, in run\r\n    value = future.result()\r\n  File \"/fs/ssm/eccc/cmd/cmds/env/python/py39_2022.09.29_all/lib/python3.9/site-packages/distributed/diagnostics/progressbar.py\", line 75, in listen\r\n    self.comm = await connect(\r\n  File \"/fs/ssm/eccc/cmd/cmds/env/python/py39_2022.09.29_all/lib/python3.9/site-packages/distributed/comm/core.py\", line 333, in connect\r\n    raise OSError(\r\nOSError: Timed out during handshake while connecting to tcp://10.102.8.135:17351 after 30 s\r\n                                                                                                                                                                                 \r\n```\r\n\r\n\r\nversions:\r\n\r\n```\r\n\r\nIn [2]: dask_mpi.__version__\r\nOut[2]: '2022.4.0'\r\n\r\nIn [4]: distributed.__version__\r\nOut[4]: '2022.10.0'\r\n\r\nIn [7]: dask.__version__\r\nOut[7]: '2022.10.0'\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1293940819/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]