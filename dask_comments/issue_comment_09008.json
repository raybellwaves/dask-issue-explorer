[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1114979540",
        "html_url": "https://github.com/dask/dask/issues/9008#issuecomment-1114979540",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9008",
        "id": 1114979540,
        "node_id": "IC_kwDOAbcwm85CdTzU",
        "user": {
            "login": "pavithraes",
            "id": 33131404,
            "node_id": "MDQ6VXNlcjMzMTMxNDA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/33131404?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pavithraes",
            "html_url": "https://github.com/pavithraes",
            "followers_url": "https://api.github.com/users/pavithraes/followers",
            "following_url": "https://api.github.com/users/pavithraes/following{/other_user}",
            "gists_url": "https://api.github.com/users/pavithraes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pavithraes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pavithraes/subscriptions",
            "organizations_url": "https://api.github.com/users/pavithraes/orgs",
            "repos_url": "https://api.github.com/users/pavithraes/repos",
            "events_url": "https://api.github.com/users/pavithraes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pavithraes/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-02T14:43:36Z",
        "updated_at": "2022-05-02T14:43:36Z",
        "author_association": "MEMBER",
        "body": "@multimeric Welcome to Dask!\r\n\r\nI believe this is expected by design, see [this best practice](https://docs.dask.org/en/stable/delayed-best-practices.html#avoid-global-state) that recommends not using global variables. :)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1114979540/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1115109633",
        "html_url": "https://github.com/dask/dask/issues/9008#issuecomment-1115109633",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9008",
        "id": 1115109633,
        "node_id": "IC_kwDOAbcwm85CdzkB",
        "user": {
            "login": "multimeric",
            "id": 5019367,
            "node_id": "MDQ6VXNlcjUwMTkzNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5019367?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/multimeric",
            "html_url": "https://github.com/multimeric",
            "followers_url": "https://api.github.com/users/multimeric/followers",
            "following_url": "https://api.github.com/users/multimeric/following{/other_user}",
            "gists_url": "https://api.github.com/users/multimeric/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/multimeric/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/multimeric/subscriptions",
            "organizations_url": "https://api.github.com/users/multimeric/orgs",
            "repos_url": "https://api.github.com/users/multimeric/repos",
            "events_url": "https://api.github.com/users/multimeric/events{/privacy}",
            "received_events_url": "https://api.github.com/users/multimeric/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-02T16:43:45Z",
        "updated_at": "2022-05-02T16:43:45Z",
        "author_association": "CONTRIBUTOR",
        "body": "I see your point, but it seems to me that this is one case where there's a fairly easy solution, which is just to call `list()` on the input column list, to shallow copy the data.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1115109633/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1115180404",
        "html_url": "https://github.com/dask/dask/issues/9008#issuecomment-1115180404",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9008",
        "id": 1115180404,
        "node_id": "IC_kwDOAbcwm85CeE10",
        "user": {
            "login": "bryanwweber",
            "id": 4396228,
            "node_id": "MDQ6VXNlcjQzOTYyMjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4396228?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bryanwweber",
            "html_url": "https://github.com/bryanwweber",
            "followers_url": "https://api.github.com/users/bryanwweber/followers",
            "following_url": "https://api.github.com/users/bryanwweber/following{/other_user}",
            "gists_url": "https://api.github.com/users/bryanwweber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bryanwweber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bryanwweber/subscriptions",
            "organizations_url": "https://api.github.com/users/bryanwweber/orgs",
            "repos_url": "https://api.github.com/users/bryanwweber/repos",
            "events_url": "https://api.github.com/users/bryanwweber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bryanwweber/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-02T17:52:48Z",
        "updated_at": "2022-05-02T17:52:48Z",
        "author_association": "CONTRIBUTOR",
        "body": "@multimeric out of curiosity, what does pandas do in this case? ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1115180404/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1115515043",
        "html_url": "https://github.com/dask/dask/issues/9008#issuecomment-1115515043",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9008",
        "id": 1115515043,
        "node_id": "IC_kwDOAbcwm85CfWij",
        "user": {
            "login": "multimeric",
            "id": 5019367,
            "node_id": "MDQ6VXNlcjUwMTkzNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5019367?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/multimeric",
            "html_url": "https://github.com/multimeric",
            "followers_url": "https://api.github.com/users/multimeric/followers",
            "following_url": "https://api.github.com/users/multimeric/following{/other_user}",
            "gists_url": "https://api.github.com/users/multimeric/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/multimeric/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/multimeric/subscriptions",
            "organizations_url": "https://api.github.com/users/multimeric/orgs",
            "repos_url": "https://api.github.com/users/multimeric/repos",
            "events_url": "https://api.github.com/users/multimeric/events{/privacy}",
            "received_events_url": "https://api.github.com/users/multimeric/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-03T01:04:10Z",
        "updated_at": "2022-05-03T01:04:10Z",
        "author_association": "CONTRIBUTOR",
        "body": "Well pandas is not lazy, so it evaluates it immediately and therefore uses the initial value of the columns array.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1115515043/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1116674242",
        "html_url": "https://github.com/dask/dask/issues/9008#issuecomment-1116674242",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9008",
        "id": 1116674242,
        "node_id": "IC_kwDOAbcwm85CjxjC",
        "user": {
            "login": "bryanwweber",
            "id": 4396228,
            "node_id": "MDQ6VXNlcjQzOTYyMjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4396228?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bryanwweber",
            "html_url": "https://github.com/bryanwweber",
            "followers_url": "https://api.github.com/users/bryanwweber/followers",
            "following_url": "https://api.github.com/users/bryanwweber/following{/other_user}",
            "gists_url": "https://api.github.com/users/bryanwweber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bryanwweber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bryanwweber/subscriptions",
            "organizations_url": "https://api.github.com/users/bryanwweber/orgs",
            "repos_url": "https://api.github.com/users/bryanwweber/repos",
            "events_url": "https://api.github.com/users/bryanwweber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bryanwweber/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-03T21:25:08Z",
        "updated_at": "2022-05-03T21:25:08Z",
        "author_association": "CONTRIBUTOR",
        "body": "@multimeric Right, that was a silly question, thanks.\r\n\r\nI can see both sides here. On the one hand, it might be convenient to compute the list value at `.compute()` time to allow modifications like this. On the other hand, allowing this type of modification seems similar in spirit to the [mutable arguments](https://florimond.dev/en/posts/2018/08/python-mutable-defaults-are-the-source-of-all-evil/) anti-pattern, insofar as users may modify a global variable accidentally and have unexpected results.\r\n\r\nCan you talk more about your use case, to better be able to evaluate the trade-off here? Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1116674242/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1116867121",
        "html_url": "https://github.com/dask/dask/issues/9008#issuecomment-1116867121",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9008",
        "id": 1116867121,
        "node_id": "IC_kwDOAbcwm85Ckgox",
        "user": {
            "login": "multimeric",
            "id": 5019367,
            "node_id": "MDQ6VXNlcjUwMTkzNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5019367?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/multimeric",
            "html_url": "https://github.com/multimeric",
            "followers_url": "https://api.github.com/users/multimeric/followers",
            "following_url": "https://api.github.com/users/multimeric/following{/other_user}",
            "gists_url": "https://api.github.com/users/multimeric/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/multimeric/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/multimeric/subscriptions",
            "organizations_url": "https://api.github.com/users/multimeric/orgs",
            "repos_url": "https://api.github.com/users/multimeric/repos",
            "events_url": "https://api.github.com/users/multimeric/events{/privacy}",
            "received_events_url": "https://api.github.com/users/multimeric/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-04T02:13:40Z",
        "updated_at": "2022-05-04T02:13:40Z",
        "author_association": "CONTRIBUTOR",
        "body": "Okay so I this was used in a function where I was iterating over DataFrames and keeping a running list of columns I'd already seen, so I could overwrite them:\r\n```python\r\ndef join(frames: list[pd.DataFrame | dd.DataFrame]):\r\n    \"\"\"\r\n    Stacks a number of data frames horizontally, but columns in later data frames override those in\r\n    earlier data frames\r\n    \"\"\"\r\n    head, *tail = reversed(frames)\r\n    ret = head.to_frame() if isinstance(head, (pd.Series, dd.Series)) else head\r\n    cols = set(ret.columns)\r\n    for df in tail:\r\n        df = df.to_frame() if isinstance(df, (pd.Series, dd.Series)) else df\r\n        ret = ret.join(\r\n            df.drop(columns=list(cols), errors=\"ignore\")\r\n        )\r\n        cols.update(ret.columns)\r\n    return ret\r\n```\r\n\r\nAs you can see, I now call `list(cols)`, but initial I didn't, which triggered this error.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1116867121/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1117534705",
        "html_url": "https://github.com/dask/dask/issues/9008#issuecomment-1117534705",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9008",
        "id": 1117534705,
        "node_id": "IC_kwDOAbcwm85CnDnx",
        "user": {
            "login": "pavithraes",
            "id": 33131404,
            "node_id": "MDQ6VXNlcjMzMTMxNDA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/33131404?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pavithraes",
            "html_url": "https://github.com/pavithraes",
            "followers_url": "https://api.github.com/users/pavithraes/followers",
            "following_url": "https://api.github.com/users/pavithraes/following{/other_user}",
            "gists_url": "https://api.github.com/users/pavithraes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pavithraes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pavithraes/subscriptions",
            "organizations_url": "https://api.github.com/users/pavithraes/orgs",
            "repos_url": "https://api.github.com/users/pavithraes/repos",
            "events_url": "https://api.github.com/users/pavithraes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pavithraes/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-04T16:05:33Z",
        "updated_at": "2022-05-04T16:05:33Z",
        "author_association": "MEMBER",
        "body": "@multimeric Thanks for sharing your use case! I spoke with `@jrbourbeau` about this. Many Dask functions/methods have a `columns` (or similar) keyword argument and follow this pattern, so I don't think it makes sense to change it everywhere. But if `drop` in particular is a big blocker for you, please feel free to open a PR. :)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1117534705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1729540266",
        "html_url": "https://github.com/dask/dask/issues/9008#issuecomment-1729540266",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9008",
        "id": 1729540266,
        "node_id": "IC_kwDOAbcwm85nFrCq",
        "user": {
            "login": "bavincen",
            "id": 8401561,
            "node_id": "MDQ6VXNlcjg0MDE1NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8401561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bavincen",
            "html_url": "https://github.com/bavincen",
            "followers_url": "https://api.github.com/users/bavincen/followers",
            "following_url": "https://api.github.com/users/bavincen/following{/other_user}",
            "gists_url": "https://api.github.com/users/bavincen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bavincen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bavincen/subscriptions",
            "organizations_url": "https://api.github.com/users/bavincen/orgs",
            "repos_url": "https://api.github.com/users/bavincen/repos",
            "events_url": "https://api.github.com/users/bavincen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bavincen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-09-21T13:10:25Z",
        "updated_at": "2023-09-21T13:10:25Z",
        "author_association": "NONE",
        "body": "are we still considering this feature request?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1729540266/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]