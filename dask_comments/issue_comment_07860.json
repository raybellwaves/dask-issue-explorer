[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/873239356",
        "html_url": "https://github.com/dask/dask/issues/7860#issuecomment-873239356",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7860",
        "id": 873239356,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzIzOTM1Ng==",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-02T20:23:14Z",
        "updated_at": "2021-07-02T20:23:14Z",
        "author_association": "MEMBER",
        "body": "Thanks for the clear writeup @rikturr! Indeed it looks like we're underestimating the size of the `RandomForestClassifier` model in your example:\r\n\r\n```python\r\nIn [1]: from sklearn.ensemble import RandomForestClassifier\r\n\r\nIn [2]: rf = RandomForestClassifier(n_estimators=100, random_state=42, n_jobs=-1)\r\n\r\nIn [3]: from dask.sizeof import sizeof\r\n\r\nIn [4]: sizeof(rf)\r\nOut[4]: 48\r\n```\r\n\r\nOne way to improve the situation is to register a custom `sizeof` implementation in [`dask/sizeof.py`](https://github.com/dask/dask/blob/965e35fe5a9423f550991bde08116a4984498e68/dask/sizeof.py) for scikit-learn estimators which more accurately captures the memory footprint of an estimator. \r\n\r\nOne thing that comes to mind is to include information from `estimator.get_params()`\r\n\r\n```python\r\nIn [5]: rf.get_params()\r\nOut[5]:\r\n{'bootstrap': True,\r\n 'ccp_alpha': 0.0,\r\n 'class_weight': None,\r\n 'criterion': 'gini',\r\n 'max_depth': None,\r\n 'max_features': 'auto',\r\n 'max_leaf_nodes': None,\r\n 'max_samples': None,\r\n 'min_impurity_decrease': 0.0,\r\n 'min_impurity_split': None,\r\n 'min_samples_leaf': 1,\r\n 'min_samples_split': 2,\r\n 'min_weight_fraction_leaf': 0.0,\r\n 'n_estimators': 100,\r\n 'n_jobs': -1,\r\n 'oob_score': False,\r\n 'random_state': 42,\r\n 'verbose': 0,\r\n 'warm_start': False}\r\n\r\nIn [6]: sizeof(rf.get_params())\r\nOut[6]: 2604\r\n```\r\n\r\nthough there may be other attributes which are stored on the class, but not captured by `get_params`. \r\n\r\ncc @thomasjpfan as you might find this interesting ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/873239356/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/873242607",
        "html_url": "https://github.com/dask/dask/issues/7860#issuecomment-873242607",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7860",
        "id": 873242607,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzI0MjYwNw==",
        "user": {
            "login": "rikturr",
            "id": 8964039,
            "node_id": "MDQ6VXNlcjg5NjQwMzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8964039?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rikturr",
            "html_url": "https://github.com/rikturr",
            "followers_url": "https://api.github.com/users/rikturr/followers",
            "following_url": "https://api.github.com/users/rikturr/following{/other_user}",
            "gists_url": "https://api.github.com/users/rikturr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rikturr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rikturr/subscriptions",
            "organizations_url": "https://api.github.com/users/rikturr/orgs",
            "repos_url": "https://api.github.com/users/rikturr/repos",
            "events_url": "https://api.github.com/users/rikturr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rikturr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-02T20:31:12Z",
        "updated_at": "2021-07-02T20:32:31Z",
        "author_association": "NONE",
        "body": "That would be great! I think there is more than in `get_params`, if you train the model then pickle the object and check that size it is much larger:\r\n\r\n```python\r\nIn [2]: sys.getsizeof(rf), sys.getsizeof(pickle.dumps(rf))\r\nOut[2]: (64, 115509472)\r\n```\r\n\r\nAnother place this comes up is with xgboost and lightgbm, so would want to consider models from those libraries also\r\n\r\nSpeaking of pickle, one idea might be to check the size of `pickle.dumps(obj)`",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/873242607/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/873259109",
        "html_url": "https://github.com/dask/dask/issues/7860#issuecomment-873259109",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7860",
        "id": 873259109,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzI1OTEwOQ==",
        "user": {
            "login": "stsievert",
            "id": 1320475,
            "node_id": "MDQ6VXNlcjEzMjA0NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1320475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stsievert",
            "html_url": "https://github.com/stsievert",
            "followers_url": "https://api.github.com/users/stsievert/followers",
            "following_url": "https://api.github.com/users/stsievert/following{/other_user}",
            "gists_url": "https://api.github.com/users/stsievert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stsievert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stsievert/subscriptions",
            "organizations_url": "https://api.github.com/users/stsievert/orgs",
            "repos_url": "https://api.github.com/users/stsievert/repos",
            "events_url": "https://api.github.com/users/stsievert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stsievert/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-02T21:13:10Z",
        "updated_at": "2021-07-02T21:13:10Z",
        "author_association": "MEMBER",
        "body": "I think https://github.com/scikit-learn/scikit-learn/issues/8642 tracks this issue for Scikit-Learn.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/873259109/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/873289755",
        "html_url": "https://github.com/dask/dask/issues/7860#issuecomment-873289755",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7860",
        "id": 873289755,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzI4OTc1NQ==",
        "user": {
            "login": "thomasjpfan",
            "id": 5402633,
            "node_id": "MDQ6VXNlcjU0MDI2MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5402633?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thomasjpfan",
            "html_url": "https://github.com/thomasjpfan",
            "followers_url": "https://api.github.com/users/thomasjpfan/followers",
            "following_url": "https://api.github.com/users/thomasjpfan/following{/other_user}",
            "gists_url": "https://api.github.com/users/thomasjpfan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thomasjpfan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thomasjpfan/subscriptions",
            "organizations_url": "https://api.github.com/users/thomasjpfan/orgs",
            "repos_url": "https://api.github.com/users/thomasjpfan/repos",
            "events_url": "https://api.github.com/users/thomasjpfan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thomasjpfan/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-02T22:44:00Z",
        "updated_at": "2021-07-03T03:09:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "`get_params` only shows the parameters in `__init__` which does not contain the fitted attributes in an estimator.\r\n\r\nI see a possible way forward to resolve this issue:\r\n\r\n1. Ensure all C/C++ objects in scikit-learn defines a `__sizeof__`. For this specific issue, define it for scikit-learn's tree data structure.\r\n2. **Option 2a**: Add a special case for `BaseEstimator` in https://github.com/dask/dask/blob/main/dask/sizeof.py with a `register_lazy` that calls `sizeof` on `vars(estimator)`.\r\n3. **Extra**: The booster objects in xgboost and lightgbm would also need to define a `__sizeof__`. Since both libraries have a soft dependency on scikit-learn, they will get the benefit from **Option 2a** only when scikit-learn is installed.\r\n\r\n**Option 2b**: To support xgboost/lightgbm better, a more generic solution would be to ducktype the estimator:\r\n\r\n```python\r\n@sizeof.register(object)\r\ndef sizeof_default(o):\r\n    if hasattr(o, \"get_params\") and callable(o.get_params):\r\n        # \"estimator-like\"\r\n        return sizeof(vars(o))\r\n    return getsizeof(o)\r\n```\r\n\r\n(Would have been a little easier with [Protocol](https://docs.python.org/3/library/typing.html#typing.runtime_checkable) but that requires Python>=3.8)\r\n\r\nWhat does everyone think of either **Option 2a** or **2b**?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/873289755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/882639914",
        "html_url": "https://github.com/dask/dask/issues/7860#issuecomment-882639914",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7860",
        "id": 882639914,
        "node_id": "IC_kwDOAbcwm840nAQq",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-19T15:25:08Z",
        "updated_at": "2021-07-19T15:25:08Z",
        "author_association": "MEMBER",
        "body": "I prefer **Option 2b**. It seems like a good idea to do as well as we can with the `sizeof` estimation.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/882639914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]