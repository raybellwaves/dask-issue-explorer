{
    "url": "https://api.github.com/repos/dask/dask/issues/8635",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/8635/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/8635/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/8635/events",
    "html_url": "https://github.com/dask/dask/issues/8635",
    "id": 1117844117,
    "node_id": "I_kwDOAbcwm85CoPKV",
    "number": 8635,
    "title": "Blockwise optimization doesn't combine task names, like low-level fusion does",
    "user": {
        "login": "gjoseph92",
        "id": 3309802,
        "node_id": "MDQ6VXNlcjMzMDk4MDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gjoseph92",
        "html_url": "https://github.com/gjoseph92",
        "followers_url": "https://api.github.com/users/gjoseph92/followers",
        "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
        "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
        "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
        "repos_url": "https://api.github.com/users/gjoseph92/repos",
        "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2156573524,
            "node_id": "MDU6TGFiZWwyMTU2NTczNTI0",
            "url": "https://api.github.com/repos/dask/dask/labels/highlevelgraph",
            "name": "highlevelgraph",
            "color": "8c24d6",
            "default": false,
            "description": "Issues relating to HighLevelGraphs."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2022-01-28T21:01:36Z",
    "updated_at": "2023-01-31T11:32:19Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Users may be confused why tasks that they expect to run don't show up on the dashboard.\r\n\r\nWith low-level fusion, we concatenate the names of all the tasks together, so at least the name of the task (like `read_csv-assign-getitem-add`) gives you some hint that all those things are still happening. But with blockwise fusion, that same task would just be named `add`, which gives you no indication that your `read_csv`, `assign`, or `getitem` are contained within it.\r\n\r\n```python\r\nIn [1]: import dask.dataframe as dd\r\n\r\n# long, all-blockwise operation\r\nIn [2]: df = dd.demo.make_timeseries().assign(z=lambda df: df.x + df.y).pipe(lambda df: df[[\"x\", \"y\", \"z\"]] + 1)\r\n\r\nIn [3]: import distributed\r\nIn [4]: client = distributed.Client()\r\n\r\nIn [4]: pdf = df.persist()\r\n```\r\n![Screen Shot 2022-01-28 at 1 33 53 PM](https://user-images.githubusercontent.com/3309802/151618248-1a677fc1-5e4b-447b-a3da-e143fc5b8335.png)\r\n\r\nOn the dashboard, the tasks just show up as `add`, so you might be confused what happened to all the other operations.\r\n\r\nThis could arguably be solved with better documentation (xref https://github.com/dask/dask/issues/8627), but I do think having the concatenated names is more user-friendly than having to find some obscure docs to understand this.\r\n\r\nHowever, I recognize that if you change the name of the layer, you also have to change the names referenced in the dependent layers. That's just not currently possible with HLG layers\u2014we could feasibly do it to MaterializedLayers, but in general, there's no `rename_input_key` interface on a Layer.\r\n\r\nFurthermore, this is actually slightly violating the scheduler's assumptions about TaskPrefix keys. In my example above, the scheduler is going to learn a duration estimate for `add` tasks which actually includes that whole chain of operations, and will be quite wrong if I later submit `(df + 1).compute()`.\r\n\r\nMaybe we could add a `task-group-key` and `task-prefix-key` annotation to the rewritten layer, which the scheduler would recognize and use instead of `key_split` and `key_split_group` (and would ultimately be displayed on the dashboard)?\r\n\r\ncc @rjzamora @jrbourbeau",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/8635/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/8635/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}