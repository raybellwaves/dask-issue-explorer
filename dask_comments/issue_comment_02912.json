[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/345602004",
        "html_url": "https://github.com/dask/dask/issues/2912#issuecomment-345602004",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2912",
        "id": 345602004,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTYwMjAwNA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-20T06:19:39Z",
        "updated_at": "2017-11-20T06:19:39Z",
        "author_association": "MEMBER",
        "body": "So at least for me personally, I would expect `asarray` to always return a dask `Array` instance even if it may be a bad decision (e.g. loss of data, weird wrapping, etc.). Am basing this in part on how `asarray` works in NumPy with say a `MaskedArray`. Also basing this on how we have documented it and how it has been used internally before it was exposed in the public API.\r\n\r\nOTOH I would expect `asanyarray` to try to preserve the original type as much as possible. In NumPy, this seems to have been done by inheritance (and we do the same thing here currently). Namely all types inheriting from a dask `Array` would be left unchanged. Admittedly our documentation in dask is a bit unclear on this; so, it could be improved. FWIW we have been trying to make use of `asanyarray` in functions needing to enforce some sort of Dask Array as input, but with the intent of keeping them more flexible.\r\n\r\nNow I know next to nothing about xarray. So please correct me if I speak incorrectly in what follows. For the `DataArray` above, it appears this does not inherit from dask `Array`. So calling `asanyarray` on a `DataArray` instance will give us a dask `Array` that wraps the `DataArray` instance (just like with `asarray`). Ideally `asanyarray` would preserve the `DataArray`. There are two options I can think of and have no idea from the outset which is better and/or more feasible. First `DataArray` (and friends) can inherit from dask `Array`. Second we broaden out `asanyarray` to handle things like `DataArray`. \r\n\r\nThoughts?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/345602004/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/345605688",
        "html_url": "https://github.com/dask/dask/issues/2912#issuecomment-345605688",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2912",
        "id": 345605688,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTYwNTY4OA==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-20T06:45:44Z",
        "updated_at": "2017-11-20T06:45:44Z",
        "author_association": "MEMBER",
        "body": "Since `xarray.DataArray` does not inherit from dask `Array`, both `asarray` and `asanyarray` should convert it in a dask `Array`. That part of the existing functionality is exactly right.\r\n\r\nBut if a `xarray.DataArray` contains a dask graph (via the [custom collections interface](http://dask.pydata.org/en/latest/custom-collections.html)), it would be nice to merge its dask graph directly into the resulting dask Array, instead of having nested dask arrays. The later is pretty messy, and can result in various problems like the inability to optimize and resource contention.\r\n\r\nIt's not entirely clear to me that there is a good way to do this with the current custom collections interface. @mrocklin @jcrist any thoughts?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/345605688/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/345755763",
        "html_url": "https://github.com/dask/dask/issues/2912#issuecomment-345755763",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2912",
        "id": 345755763,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTc1NTc2Mw==",
        "user": {
            "login": "jcrist",
            "id": 2783717,
            "node_id": "MDQ6VXNlcjI3ODM3MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcrist",
            "html_url": "https://github.com/jcrist",
            "followers_url": "https://api.github.com/users/jcrist/followers",
            "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
            "organizations_url": "https://api.github.com/users/jcrist/orgs",
            "repos_url": "https://api.github.com/users/jcrist/repos",
            "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcrist/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-20T16:48:05Z",
        "updated_at": "2017-11-20T16:48:05Z",
        "author_association": "MEMBER",
        "body": "> It's not entirely clear to me that there is a good way to do this with the current custom collections interface.\r\n\r\nA few ideas:\r\n\r\n- Special case xarray for now. This is easy to do correctly, and since it's the only dask array-like thing currently, I see no issue in doing this.\r\n- Look for a specific method on the class, and call that if found. `to_dask_array`? Something else?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/345755763/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/377646840",
        "html_url": "https://github.com/dask/dask/issues/2912#issuecomment-377646840",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2912",
        "id": 377646840,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzY0Njg0MA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-30T23:41:37Z",
        "updated_at": "2018-03-30T23:41:37Z",
        "author_association": "MEMBER",
        "body": "Does `xarray.DataArray` support the custom collections interface currently? If not, is there an open issue/PR that we should be aware of?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/377646840/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/377649822",
        "html_url": "https://github.com/dask/dask/issues/2912#issuecomment-377649822",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2912",
        "id": 377649822,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzY0OTgyMg==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-31T00:08:37Z",
        "updated_at": "2018-03-31T00:08:37Z",
        "author_association": "MEMBER",
        "body": "`xarray.DataArray` does support the custom collections interface.\r\n\r\nBut merely being a dask object isn't enough here. We also need some way to indicate how xarray objects can be converted into dask arrays.\r\n\r\nCoincidentally I've been working this past week with @njsmith on a proposal for how exactly this sort of thing should be done. We'll hopefully be sending it out very soon...",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/377649822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]