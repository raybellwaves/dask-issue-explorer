[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/951367773",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-951367773",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 951367773,
        "node_id": "IC_kwDOAbcwm844tLhd",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-25T22:04:34Z",
        "updated_at": "2021-10-25T22:04:34Z",
        "author_association": "MEMBER",
        "body": "Thanks @chrisroat -- I'm able to confirm the exception you're seeing. Running your example through Dask's `git` history, https://github.com/dask/dask/pull/8174 is where your example started to fail. cc @gjoseph92 for visibility ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/951367773/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/951369019",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-951369019",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 951369019,
        "node_id": "IC_kwDOAbcwm844tL07",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-25T22:06:24Z",
        "updated_at": "2021-10-25T22:06:24Z",
        "author_association": "MEMBER",
        "body": "cc @rjzamora (for awareness)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/951369019/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/951370681",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-951370681",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 951370681,
        "node_id": "IC_kwDOAbcwm844tMO5",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-25T22:08:48Z",
        "updated_at": "2021-10-25T22:08:48Z",
        "author_association": "CONTRIBUTOR",
        "body": "Ah, bummer!  I was a big fan of the PR.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/951370681/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/951372993",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-951372993",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 951372993,
        "node_id": "IC_kwDOAbcwm844tMzB",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-25T22:12:31Z",
        "updated_at": "2021-10-25T22:12:31Z",
        "author_association": "MEMBER",
        "body": "This change sticks out to me ( https://github.com/dask/dask/pull/8174#discussion_r736003401 )",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/951372993/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/959793163",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-959793163",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 959793163,
        "node_id": "IC_kwDOAbcwm845NUgL",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-03T18:09:24Z",
        "updated_at": "2021-11-03T18:09:24Z",
        "author_association": "CONTRIBUTOR",
        "body": "Here is a more simplified version of the above (thank you new BlockView!), where doing a `dd.concat` on some `dd.from_delayed` dataframes is broken, as compared to directly using `dd.from_delayed` on a list of delayed objects.\r\n\r\n```python\r\nimport dask\r\nimport dask.array as da\r\nimport dask.dataframe as dd\r\n\r\nMETA = dd.utils.make_meta([(\"foo\", int)])\r\n\r\nimage = da.zeros((2, 1), chunks=1)\r\n\r\ndef make_ddf_broken():\r\n    return dd.concat([\r\n        dd.from_delayed(dask.delayed(lambda: None)(image.blocks[0]), meta=META),\r\n        dd.from_delayed(dask.delayed(lambda: None)(image.blocks[1]), meta=META),\r\n    ])\r\n\r\ndef make_ddf_works():\r\n    ddf = [\r\n        dask.delayed(lambda: None)(image.blocks[0]),\r\n        dask.delayed(lambda: None)(image.blocks[1]),\r\n    ]\r\n    return dd.from_delayed(ddf, meta=META)\r\n\r\nddf = make_ddf_broken()\r\n#ddf = make_ddf_works()\r\n\r\nddf_final = [\r\n    dask.delayed(lambda: None)(image.blocks[0], ddf),\r\n    dask.delayed(lambda: None)(image.blocks[1], ddf),\r\n]\r\nddf_final = dd.from_delayed(ddf_final, meta=META)\r\nddf_final.__dask_graph__().validate()\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/959793163/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/961476324",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-961476324",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 961476324,
        "node_id": "IC_kwDOAbcwm845Tvbk",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-04T22:19:07Z",
        "updated_at": "2021-11-04T22:19:07Z",
        "author_association": "MEMBER",
        "body": "Thank you for the simplified example @chrisroat. Out of curiosity, does this regression result in your computation failing? Or is it just the `validate()` method that fails? I ask because if I replace `ddf_final.__dask_graph__().validate()` with `ddf_final.compute()` in the second example I get the following error\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/Users/james/projects/dask/dask/foo.py\", line 31, in <module>\r\n    ddf_final.compute()\r\n  File \"/Users/james/projects/dask/dask/dask/base.py\", line 288, in compute\r\n    (result,) = compute(self, traverse=False, **kwargs)\r\n  File \"/Users/james/projects/dask/dask/dask/base.py\", line 570, in compute\r\n    results = schedule(dsk, keys, **kwargs)\r\n  File \"/Users/james/projects/dask/dask/dask/threaded.py\", line 79, in get\r\n    results = get_async(\r\n  File \"/Users/james/projects/dask/dask/dask/local.py\", line 507, in get_async\r\n    raise_exception(exc, tb)\r\n  File \"/Users/james/projects/dask/dask/dask/local.py\", line 315, in reraise\r\n    raise exc\r\n  File \"/Users/james/projects/dask/dask/dask/local.py\", line 220, in execute_task\r\n    result = _execute_task(task, data)\r\n  File \"/Users/james/projects/dask/dask/dask/core.py\", line 119, in _execute_task\r\n    return func(*(_execute_task(a, cache) for a in args))\r\nTypeError: <lambda>() takes 0 positional arguments but 1 was given\r\n```\r\n\r\nwith both the latest `main` branch as well as the 2021.09.1 release",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/961476324/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/961481315",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-961481315",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 961481315,
        "node_id": "IC_kwDOAbcwm845Twpj",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-04T22:28:46Z",
        "updated_at": "2021-11-04T22:28:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "Your error is because the computations are bogus lambda function.  The example provided is simply creating the graph.  My tests fail during `assert_eq` which validates the graph prior to even running compute. \r\n\r\nWhat I am experimenting with is whether the `make_ddf_works` is a valid substitute.  It seems to create a valid graph and passes the unit tests.   I'm trying out our regression tests to be sure the computation is still valid.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/961481315/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/961488265",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-961488265",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 961488265,
        "node_id": "IC_kwDOAbcwm845TyWJ",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-04T22:43:54Z",
        "updated_at": "2021-11-04T22:43:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "So the regression tests are passing, which makes me feel confident the computation isn't screwed up.\r\n\r\nIs it expected that  `dd.from_delayed` on a list of delayed objects should result in a single dataframe, effectively doing a `dd.concat`?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/961488265/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/962057514",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-962057514",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 962057514,
        "node_id": "IC_kwDOAbcwm845V9Uq",
        "user": {
            "login": "gjoseph92",
            "id": 3309802,
            "node_id": "MDQ6VXNlcjMzMDk4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjoseph92",
            "html_url": "https://github.com/gjoseph92",
            "followers_url": "https://api.github.com/users/gjoseph92/followers",
            "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
            "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
            "repos_url": "https://api.github.com/users/gjoseph92/repos",
            "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-05T16:55:04Z",
        "updated_at": "2021-11-05T16:55:04Z",
        "author_association": "MEMBER",
        "body": "> Is it expected that `dd.from_delayed` on a list of delayed objects should result in a single dataframe, effectively doing a `dd.concat`?\r\n\r\nBased on the docs, I think so:\r\n```\r\n    dfs : list of Delayed\r\n        An iterable of ``dask.delayed.Delayed`` objects, such as come from\r\n        ``dask.delayed`` These comprise the individual partitions of the\r\n        resulting dataframe.\r\n```\r\nIs that not what you were expecting?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/962057514/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/962126286",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-962126286",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 962126286,
        "node_id": "IC_kwDOAbcwm845WOHO",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-05T18:35:21Z",
        "updated_at": "2021-11-05T18:35:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "My expectations aside, your read of the documents makes it clear what is correct.  :)  Though technically, I'd be curious what happens if each delayed object is itself multiple partitions.\r\n\r\nFor that part of the example, I had just been doing the from_delayed individually, and then doing a concat.  It's nice to do it with fewer lines of code!  It is interesting that the same graph isn't generated both ways. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/962126286/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/962230062",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-962230062",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 962230062,
        "node_id": "IC_kwDOAbcwm845Wncu",
        "user": {
            "login": "gjoseph92",
            "id": 3309802,
            "node_id": "MDQ6VXNlcjMzMDk4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjoseph92",
            "html_url": "https://github.com/gjoseph92",
            "followers_url": "https://api.github.com/users/gjoseph92/followers",
            "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
            "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
            "repos_url": "https://api.github.com/users/gjoseph92/repos",
            "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-05T21:24:19Z",
        "updated_at": "2021-11-05T21:24:19Z",
        "author_association": "MEMBER",
        "body": "> I'd be curious what happens if each delayed object is itself multiple partitions.\r\n\r\nWhat do you mean? Like if your delayed object referenced a list of pandas DataFrames, like `delayed([pd.DataFrame(...), pd.DataFrame(...)])`? In that case, it would just be invalid.\r\n\r\nIf you think about how `DataFrame.to_delayed()` essentially \"explodes\" the dask DataFrame into a list of `delayed`s, where each partition is its own delayed object, `from_delayed` is the inverse: you give one delayed object per partition, and they're reassembled into a DataFrame.\r\n\r\n> It is interesting that the same graph isn't generated both ways.\r\n\r\nI'm not surprised they're different. `concat` has all sorts of other things to do: joining columns, checking dtypes, etc. It's for combining logically separate DataFrames into one. It's adding actual `pd.conat` tasks to the graph.\r\n\r\n`from_delayed` is saying \"together, these delayed objects comprise one logical DataFrame; I want you to represent them as such. Trust me, they already have the same columns and dytpe and everything.\". It's really just graph-manipulation; no extra tasks (just aliases) get added to the graph.\r\n\r\nNonetheless, `from_delayed` -> `concat` should still produce a _valid_ graph.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/962230062/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/963812850",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-963812850",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 963812850,
        "node_id": "IC_kwDOAbcwm845cp3y",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-09T04:43:52Z",
        "updated_at": "2021-11-09T04:43:52Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for the better understanding of `from_delayed`/`to_delayed`.\r\n\r\n> \r\n> > It is interesting that the same graph isn't generated both ways.\r\n> \r\n> I'm not surprised they're different. `concat` has all sorts of other things to do: joining columns, checking dtypes, etc. It's for combining logically separate DataFrames into one. It's adding actual `pd.conat` tasks to the graph.\r\n\r\nAh, I see.  I would think the metadata would be enough to skip adding tasks that weren't necessary (in this case, all `meta` are identical in columns/types).\r\n\r\n> `from_delayed` is saying \"together, these delayed objects comprise one logical DataFrame; I want you to represent them as such. Trust me, they already have the same columns and dytpe and everything.\". It's really just graph-manipulation; no extra tasks (just aliases) get added to the graph.\r\n> \r\n> Nonetheless, `from_delayed` -> `concat` should still produce a _valid_ graph.\r\n\r\nAgreed.  I will skip using `concat` myself, both because of this possible bug and because I don't need the extra logic.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/963812850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/964378630",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-964378630",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 964378630,
        "node_id": "IC_kwDOAbcwm845e0AG",
        "user": {
            "login": "gjoseph92",
            "id": 3309802,
            "node_id": "MDQ6VXNlcjMzMDk4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjoseph92",
            "html_url": "https://github.com/gjoseph92",
            "followers_url": "https://api.github.com/users/gjoseph92/followers",
            "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
            "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
            "repos_url": "https://api.github.com/users/gjoseph92/repos",
            "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-09T17:36:30Z",
        "updated_at": "2021-11-09T17:36:30Z",
        "author_association": "MEMBER",
        "body": "> I would think the metadata would be enough to skip adding tasks that weren't necessary (in this case, all `meta` are identical in columns/types).\r\n\r\nAh, if only that were the case! That's worth opening an issue for. I wish we more efficiently supported that workflow of explode chunks -> do things to chunks -> combine back into DataFrame/Array.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/964378630/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/964523549",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-964523549",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 964523549,
        "node_id": "IC_kwDOAbcwm845fXYd",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-09T20:38:28Z",
        "updated_at": "2021-11-09T20:38:28Z",
        "author_association": "MEMBER",
        "body": "> I wish we more efficiently supported that workflow of explode chunks -> do things to chunks -> combine back into DataFrame/Array.\r\n\r\nWith Array we have [`.blocks`]( https://github.com/dask/dask/blob/11f52ed453711e7f4e293208083c284fff4b13ba/dask/array/core.py#L1861-L1862 ) and DataFrames we have [`.partitions`]( https://github.com/dask/dask/blob/5b38dda3ff4c2432baa6af8b52ba1572a539548e/dask/dataframe/core.py#L1179-L1180 ).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/964523549/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/998232123",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-998232123",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 998232123,
        "node_id": "IC_kwDOAbcwm847f9A7",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-20T20:05:45Z",
        "updated_at": "2021-12-20T20:05:45Z",
        "author_association": "MEMBER",
        "body": "Is this issue good to close? It seems like the discussion is mostly around building understanding.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/998232123/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/998273389",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-998273389",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 998273389,
        "node_id": "IC_kwDOAbcwm847gHFt",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-20T21:12:27Z",
        "updated_at": "2021-12-20T21:12:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "It seems like a bug (to me) that simple operations lead to invalid graphs.  My concern would be that it could by hiding something subtle.  Of course, I could be wrong, and my repro case may be incorrectly coded: https://github.com/dask/dask/issues/8292#issuecomment-959793163",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/998273389/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/998292473",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-998292473",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 998292473,
        "node_id": "IC_kwDOAbcwm847gLv5",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-20T21:43:43Z",
        "updated_at": "2021-12-20T21:43:43Z",
        "author_association": "MEMBER",
        "body": "I just toyed around with a slightly modified example using `make_df_works`. Some notable differences:\r\n\r\n - delayed functions take inputs and return outputs. \r\n - uses `make_ddf_works` which calls `dd.from_delayed` on a list of delayed objects. Note that this is what the function expects as mentioned in https://github.com/dask/dask/issues/8292#issuecomment-962057514 \r\n\r\n```\r\nimport dask\r\nimport dask.array as da\r\nimport dask.dataframe as dd\r\n\r\nMETA = dd.utils.make_meta([(\"foo\", int)])\r\n\r\nimage = da.zeros((2, 1), chunks=1)\r\n\r\ndef make_ddf_broken():\r\n    return dd.concat([\r\n        dd.from_delayed(dask.delayed(lambda x: x)(image.blocks[0]), meta=META),\r\n        dd.from_delayed(dask.delayed(lambda x: x)(image.blocks[1]), meta=META),\r\n    ])\r\n\r\ndef make_ddf_works():\r\n    ddf = [\r\n        dask.delayed(lambda x: x)(image.blocks[0]),\r\n        dask.delayed(lambda x: x)(image.blocks[1]),\r\n    ]\r\n    return dd.from_delayed(ddf, meta=META)\r\n\r\nddf = make_ddf_broken()\r\nddf = make_ddf_works()\r\n\r\nddf_final = [\r\n    dask.delayed(lambda x: x)(image.blocks[0], ddf),\r\n    dask.delayed(lambda x: x)(image.blocks[1], ddf),\r\n]\r\nddf_final = dd.from_delayed(ddf_final, meta=META)\r\nddf_final.__dask_graph__().validate()\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/998292473/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/998309129",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-998309129",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 998309129,
        "node_id": "IC_kwDOAbcwm847gP0J",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-20T22:12:53Z",
        "updated_at": "2021-12-20T22:12:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "Do you have thoughts on why the graph generated with `make_ddf_broken` does not work?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/998309129/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/999017494",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-999017494",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 999017494,
        "node_id": "IC_kwDOAbcwm847i8wW",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-21T18:55:26Z",
        "updated_at": "2021-12-21T18:55:26Z",
        "author_association": "MEMBER",
        "body": "> Do you have thoughts on why the graph generated with `make_ddf_broken` does not work?\r\n\r\nI have one main thoughtsthat is not totally tested. If it is correct we can do a better job with error handling: `dd.from_delayed` is meant to handle a list of delayed objects. In `make_ddf_broken` you are passing in a single delayed object.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/999017494/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/999022182",
        "html_url": "https://github.com/dask/dask/issues/8292#issuecomment-999022182",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8292",
        "id": 999022182,
        "node_id": "IC_kwDOAbcwm847i95m",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-21T19:03:23Z",
        "updated_at": "2021-12-21T19:03:23Z",
        "author_association": "MEMBER",
        "body": "No that's not it. I just looked and the first thing Dask does if you pass a `Delayed` is just wrap it in a list.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/999022182/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]