{
    "url": "https://api.github.com/repos/dask/dask/issues/8001",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/8001/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/8001/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/8001/events",
    "html_url": "https://github.com/dask/dask/issues/8001",
    "id": 962082339,
    "node_id": "MDU6SXNzdWU5NjIwODIzMzk=",
    "number": 8001,
    "title": "in code suggestion of when to use split_out in dask.dataframe.groupby",
    "user": {
        "login": "raybellwaves",
        "id": 17162724,
        "node_id": "MDQ6VXNlcjE3MTYyNzI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/17162724?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/raybellwaves",
        "html_url": "https://github.com/raybellwaves",
        "followers_url": "https://api.github.com/users/raybellwaves/followers",
        "following_url": "https://api.github.com/users/raybellwaves/following{/other_user}",
        "gists_url": "https://api.github.com/users/raybellwaves/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/raybellwaves/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/raybellwaves/subscriptions",
        "organizations_url": "https://api.github.com/users/raybellwaves/orgs",
        "repos_url": "https://api.github.com/users/raybellwaves/repos",
        "events_url": "https://api.github.com/users/raybellwaves/events{/privacy}",
        "received_events_url": "https://api.github.com/users/raybellwaves/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 386719598,
            "node_id": "MDU6TGFiZWwzODY3MTk1OTg=",
            "url": "https://api.github.com/repos/dask/dask/labels/documentation",
            "name": "documentation",
            "color": "f9d0c4",
            "default": true,
            "description": "Improve or add to documentation"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2021-08-05T18:18:31Z",
    "updated_at": "2021-10-14T07:58:53Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "After spending some time working out why my groupby operation was not working I came across https://examples.dask.org/dataframes/02-groupby.html#Many-groups. If It wasn't for the great docs around dask I would likely to have missed this.\r\n\r\nThe `split_out` arg really helped.\r\n\r\nThis made sense as I had ~500,000,000 groups.\r\n\r\nI know it may not be easy but similar to other warning messages (I believe i've seen a suggestion of using `Client.Scatter` at some point but can't find where it comes from in the codebase) it would be nice to suggest in the code to the user once (if possible) it works out how many groups there are, or even optimize it so it happens under the hood (see https://github.com/dask/dask/issues/7933).\r\n\r\nExample:\r\n\r\n```\r\nimport dask.dataframe as dd\r\nfrom dask.distributed import Client, LocalCluster, performance_report\r\n\r\ncluster = LocalCluster(local_directory=\"/tmp\")\r\nclient = Client(cluster)\r\n\r\ndf = dd.demo.make_timeseries(\r\n    start=\"2000-01-01\",\r\n    end=\"2000-01-04\",\r\n    dtypes={\"x\": float, \"y\": float, \"id\": int},\r\n    freq=\"10ms\",\r\n    partition_freq=\"24h\",\r\n)\r\n\r\n# key of [\"x\", \"y\"] gives ~ 25,920,000 groups\r\n\r\n# Doesn't finish\r\nwith performance_report(filename=\"ddf-too-many-groups.html\"):\r\n    df.groupby([\"x\", \"y\"]).sum().compute()\r\n\r\n# Finishes\r\nwith performance_report(filename=\"ddf-split-out.html\"):\r\n    df.groupby([\"x\", \"y\"]).sum(split_out=4).compute()\r\n```\r\n\r\nPerformance reports:\r\n\r\n- [ddf-too-many-groups.html.zip](https://github.com/dask/dask/files/6940859/ddf-too-many-groups.html.zip)\r\n- [ddf-split-out.html.zip](https://github.com/dask/dask/files/6940857/ddf-split-out.html.zip)\r\n\r\n\r\nTraceback of `df.groupby([\"x\", \"y\"]).sum().compute()`:\r\n\r\n```\r\nKilledWorker                              Traceback (most recent call last)\r\n/var/folders/rf/26llfhwd68x7cftb1z3h000w0000gp/T/ipykernel_39651/3854007570.py in <module>\r\n      1 with performance_report(filename=\"\"):\r\n----> 2     df.groupby([\"x\", \"y\"]).sum().compute()\r\n\r\n~/miniconda3/envs/main/lib/python3.9/site-packages/dask/base.py in compute(self, **kwargs)\r\n    284         dask.base.compute\r\n    285         \"\"\"\r\n--> 286         (result,) = compute(self, traverse=False, **kwargs)\r\n    287         return result\r\n    288 \r\n\r\n~/miniconda3/envs/main/lib/python3.9/site-packages/dask/base.py in compute(*args, **kwargs)\r\n    566         postcomputes.append(x.__dask_postcompute__())\r\n    567 \r\n--> 568     results = schedule(dsk, keys, **kwargs)\r\n    569     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    570 \r\n\r\n~/miniconda3/envs/main/lib/python3.9/site-packages/distributed/client.py in get(self, dsk, keys, workers, allow_other_workers, resources, sync, asynchronous, direct, retries, priority, fifo_timeout, actors, **kwargs)\r\n   2746                     should_rejoin = False\r\n   2747             try:\r\n-> 2748                 results = self.gather(packed, asynchronous=asynchronous, direct=direct)\r\n   2749             finally:\r\n   2750                 for f in futures.values():\r\n\r\n~/miniconda3/envs/main/lib/python3.9/site-packages/distributed/client.py in gather(self, futures, errors, direct, asynchronous)\r\n   2023             else:\r\n   2024                 local_worker = None\r\n-> 2025             return self.sync(\r\n   2026                 self._gather,\r\n   2027                 futures,\r\n\r\n~/miniconda3/envs/main/lib/python3.9/site-packages/distributed/client.py in sync(self, func, asynchronous, callback_timeout, *args, **kwargs)\r\n    864             return future\r\n    865         else:\r\n--> 866             return sync(\r\n    867                 self.loop, func, *args, callback_timeout=callback_timeout, **kwargs\r\n    868             )\r\n\r\n~/miniconda3/envs/main/lib/python3.9/site-packages/distributed/utils.py in sync(loop, func, callback_timeout, *args, **kwargs)\r\n    324     if error[0]:\r\n    325         typ, exc, tb = error[0]\r\n--> 326         raise exc.with_traceback(tb)\r\n    327     else:\r\n    328         return result[0]\r\n\r\n~/miniconda3/envs/main/lib/python3.9/site-packages/distributed/utils.py in f()\r\n    307             if callback_timeout is not None:\r\n    308                 future = asyncio.wait_for(future, callback_timeout)\r\n--> 309             result[0] = yield future\r\n    310         except Exception:\r\n    311             error[0] = sys.exc_info()\r\n\r\n~/miniconda3/envs/main/lib/python3.9/site-packages/tornado/gen.py in run(self)\r\n    760 \r\n    761                     try:\r\n--> 762                         value = future.result()\r\n    763                     except Exception:\r\n    764                         exc_info = sys.exc_info()\r\n\r\n~/miniconda3/envs/main/lib/python3.9/site-packages/distributed/client.py in _gather(self, futures, errors, direct, local_worker)\r\n   1888                             exc = CancelledError(key)\r\n   1889                         else:\r\n-> 1890                             raise exception.with_traceback(traceback)\r\n   1891                         raise exc\r\n   1892                     if errors == \"skip\":\r\n\r\nKilledWorker: (\"('dataframe-groupby-sum-agg-f6215c9bc267c471d79fe7d859ac9f04', 0)\", <WorkerState 'tcp://127.0.0.1:60293', name: 0, memory: 0, processing: 1>)\r\n```\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/8001/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/8001/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}