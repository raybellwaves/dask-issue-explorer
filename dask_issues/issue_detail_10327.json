{
    "url": "https://api.github.com/repos/dask/dask/issues/10327",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10327/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10327/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10327/events",
    "html_url": "https://github.com/dask/dask/issues/10327",
    "id": 1736802481,
    "node_id": "I_kwDOAbcwm85nhYCx",
    "number": 10327,
    "title": "min/max fails arrays with empty chunks that are empty because of boolean selector",
    "user": {
        "login": "TedBrookings",
        "id": 6463752,
        "node_id": "MDQ6VXNlcjY0NjM3NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6463752?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TedBrookings",
        "html_url": "https://github.com/TedBrookings",
        "followers_url": "https://api.github.com/users/TedBrookings/followers",
        "following_url": "https://api.github.com/users/TedBrookings/following{/other_user}",
        "gists_url": "https://api.github.com/users/TedBrookings/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TedBrookings/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TedBrookings/subscriptions",
        "organizations_url": "https://api.github.com/users/TedBrookings/orgs",
        "repos_url": "https://api.github.com/users/TedBrookings/repos",
        "events_url": "https://api.github.com/users/TedBrookings/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TedBrookings/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-06-01T17:50:19Z",
    "updated_at": "2023-07-03T02:07:10Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Presumably this is a missed corner case from handling [Issue #2794](https://github.com/dask/dask/issues/2794)\r\n\r\n**Minimal Complete Verifiable Example**:\r\n```python\r\nimport dask.array\r\n\"\"\"task overview:\r\n- make a simple matrix\r\n- select rows with \"big\" first column\r\n- take the max value from each selected row\r\n\"\"\"\r\n# works if there's NO empty chunks:\r\ndda = dask.array.from_array([[1, 10], [2, 20], [3, 30], [4, 40]], chunks=((3, 1), 2))\r\nbig_dda = dda[dda[:, 0] > 2, :]   # take the two bottom rows, so each chunk has some data\r\nprint(big_dda.max(axis=1).compute())\r\n\r\n# works if you pre-compute the boolean selector array\r\ndda = dask.array.from_array([[1, 10], [2, 20], [3, 30], [4, 40]], chunks=((2, 2), 2))\r\nbig_dda = dda[(dda[:, 0] > 2).compute(), :]  # top chunk is empty, but the selector is computed\r\nprint(big_dda.max(axis=1).compute())\r\n\r\n# fails if there's an empty chunk and you don't pre-compute the boolean selector array\r\ndda = dask.array.from_array([[1, 10], [2, 20], [3, 30], [4, 40]], chunks=((2, 2), 2))\r\nbig_dda = dda[dda[:, 0] > 2, :]  # top chunk is empty\r\nprint(big_dda.max(axis=1).compute())\r\n```\r\n\r\n**Anything else we need to know?**:\r\nI tracked this down when I got a `CancelledError`, because I was doing downstream processing with `delayed`. The CancelledError / exception stack made absolutely no reference to this operation, so it's a real head-scratcher for anyone who encounters it.\r\n\r\n**Environment**:\r\n\r\n- Dask version: 2023.3.0\r\n- Python version: 3.10.6\r\n- Operating System: macos 13.3.1 \r\n- Install method (conda, pip, source): conda\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10327/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10327/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}