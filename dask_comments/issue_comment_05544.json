[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/548099288",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-548099288",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 548099288,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODA5OTI4OA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-30T20:31:07Z",
        "updated_at": "2019-10-30T20:31:07Z",
        "author_association": "MEMBER",
        "body": "I think your intuition that the intermediate rechunk-merge and split / reshape can be avoided is correct. The trick is probably to figure out when the output chunks align with the input chunks.\r\n\r\nIf no one beats me to it, I can take a look next week.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/548099288/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/548173367",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-548173367",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 548173367,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODE3MzM2Nw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-31T00:59:57Z",
        "updated_at": "2019-10-31T00:59:57Z",
        "author_association": "MEMBER",
        "body": "I'm curious, if the order of the dimensions is flipped then does this problem persist?  I.e. (5, 20, 20) -> (5, 400)?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/548173367/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/548173595",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-548173595",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 548173595,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODE3MzU5NQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-31T01:00:59Z",
        "updated_at": "2019-10-31T01:00:59Z",
        "author_association": "MEMBER",
        "body": "My guess is that the implicit C-ordering of data might make the intermediate reshaping actually necessary in some cases, even if we don't care in this case. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/548173595/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/548183700",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-548183700",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 548183700,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODE4MzcwMA==",
        "user": {
            "login": "rabernat",
            "id": 1197350,
            "node_id": "MDQ6VXNlcjExOTczNTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1197350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rabernat",
            "html_url": "https://github.com/rabernat",
            "followers_url": "https://api.github.com/users/rabernat/followers",
            "following_url": "https://api.github.com/users/rabernat/following{/other_user}",
            "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions",
            "organizations_url": "https://api.github.com/users/rabernat/orgs",
            "repos_url": "https://api.github.com/users/rabernat/repos",
            "events_url": "https://api.github.com/users/rabernat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rabernat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-31T01:53:53Z",
        "updated_at": "2019-10-31T01:53:53Z",
        "author_association": "MEMBER",
        "body": "> I'm curious, if the order of the dimensions is flipped then does this problem persist? I.e. (5, 20, 20) -> (5, 400)?\r\n\r\nIt's the same. Same number of tasks and graph structure.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/548183700/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/593723196",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-593723196",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 593723196,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzcyMzE5Ng==",
        "user": {
            "login": "nbren12",
            "id": 1386642,
            "node_id": "MDQ6VXNlcjEzODY2NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1386642?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nbren12",
            "html_url": "https://github.com/nbren12",
            "followers_url": "https://api.github.com/users/nbren12/followers",
            "following_url": "https://api.github.com/users/nbren12/following{/other_user}",
            "gists_url": "https://api.github.com/users/nbren12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nbren12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nbren12/subscriptions",
            "organizations_url": "https://api.github.com/users/nbren12/orgs",
            "repos_url": "https://api.github.com/users/nbren12/repos",
            "events_url": "https://api.github.com/users/nbren12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nbren12/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-03T01:46:43Z",
        "updated_at": "2020-03-03T01:46:43Z",
        "author_association": "CONTRIBUTOR",
        "body": "I have a similar problem, but perhaps even simpler. I just want to reshape an array with chunk sizes of 1 along one dimension. I would like the reshaped array to have chunksize (1,1).\r\n```\r\nIn [31]: a = da.ones((10), chunks=1)                                                                                                                                        \r\n\r\nIn [32]: a                                                                                                                                                                  \r\nOut[32]: dask.array<ones, shape=(10,), dtype=float64, chunksize=(1,), chunktype=numpy.ndarray>\r\n\r\nIn [33]: a.reshape((2, 5))                                                                                                                                                  \r\nOut[33]: dask.array<reshape, shape=(2, 5), dtype=float64, chunksize=(1, 5), chunktype=numpy.ndarray>\r\n```\r\nThis is important to me because I want `xarray` `unstack` to preserve chunking in the trivial case where the chunk size is 1.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/593723196/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/593983092",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-593983092",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 593983092,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5Mzk4MzA5Mg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-03T14:37:37Z",
        "updated_at": "2020-03-03T14:37:37Z",
        "author_association": "MEMBER",
        "body": "cc @TomAugspurger in case he's interested in this from the Anaconda/Pangeo angle",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/593983092/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/594014629",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-594014629",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 594014629,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDAxNDYyOQ==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-03T15:38:36Z",
        "updated_at": "2020-03-03T15:38:36Z",
        "author_association": "MEMBER",
        "body": "@nbren12 to confirm, your ideal chunking in the output of `a.reshape((2, 5))` is `((1, 1), (1, 1, 1, 1, 1))`. Essentially, `a.reshape((2, 5)).rechunk((1, 1))`, without the intermediate merged ``(1, 1), (5,))` chunks? One concern is that this will lead to larger task graphs since you'll have more chunks and tasks. Since not-merging isn't obviously better, we'd need a parameter or config setting to support this.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/594014629/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/594162505",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-594162505",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 594162505,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDE2MjUwNQ==",
        "user": {
            "login": "nbren12",
            "id": 1386642,
            "node_id": "MDQ6VXNlcjEzODY2NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1386642?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nbren12",
            "html_url": "https://github.com/nbren12",
            "followers_url": "https://api.github.com/users/nbren12/followers",
            "following_url": "https://api.github.com/users/nbren12/following{/other_user}",
            "gists_url": "https://api.github.com/users/nbren12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nbren12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nbren12/subscriptions",
            "organizations_url": "https://api.github.com/users/nbren12/orgs",
            "repos_url": "https://api.github.com/users/nbren12/repos",
            "events_url": "https://api.github.com/users/nbren12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nbren12/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-03T20:52:26Z",
        "updated_at": "2020-03-03T20:52:36Z",
        "author_association": "CONTRIBUTOR",
        "body": "@TomAugspurger That is correct. I have been running out of memory due to having too big chunks, and was trying to very carefully ensure that \"chunks in= chunks_out\".",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/594162505/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/594164445",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-594164445",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 594164445,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDE2NDQ0NQ==",
        "user": {
            "login": "nbren12",
            "id": 1386642,
            "node_id": "MDQ6VXNlcjEzODY2NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1386642?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nbren12",
            "html_url": "https://github.com/nbren12",
            "followers_url": "https://api.github.com/users/nbren12/followers",
            "following_url": "https://api.github.com/users/nbren12/following{/other_user}",
            "gists_url": "https://api.github.com/users/nbren12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nbren12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nbren12/subscriptions",
            "organizations_url": "https://api.github.com/users/nbren12/orgs",
            "repos_url": "https://api.github.com/users/nbren12/repos",
            "events_url": "https://api.github.com/users/nbren12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nbren12/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-03T20:56:50Z",
        "updated_at": "2020-03-03T20:56:50Z",
        "author_association": "CONTRIBUTOR",
        "body": "Just to provide some context, my workflow involves open a list of urls as dask delayed objects which are wrapped with xarray. The url string is parsed into dimension information, which I can represent as a stacked \"xarray\" dimension. I want to ensure that `concatenated_url_datasets.unstack('urls')` does not alter the chunking strategy.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/594164445/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/685170409",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-685170409",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 685170409,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTE3MDQwOQ==",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-01T22:36:15Z",
        "updated_at": "2020-09-01T22:36:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "I just ran into this, as well, using chunksize=1 dimensions and seeing my graphs get complex.  In the case of chunksize=1 dimensions, there is the possibility of a shortcut implementation.  It seems pretty thorny to optimally get this optimal for all cases.\r\n\r\nA less trivial case could be demonstrated with:\r\n```\r\narr = da.from_array(np.arange(16).reshape((4,4)), chunks=((1,3),(2,2)))\r\n```\r\n```\r\n00 01|02 03\r\n-----+-----\r\n04 05|06 07\r\n08 09|10 11\r\n12 13|14 16\r\n```\r\nIn this case, the individual chunks are not contiguous and cannot be simply reshaped and stuck end-to-end.\r\n\r\nThat said, the above case gets rechunked in `arr.reshape(16)` as:\r\n```\r\n00 01 02 03|04 05 06 07|08 09 10 11 12 13 14 15\r\n```\r\nwhich I find odd.\r\n\r\nHere's an example of a fastpath implementation for chunksize=1:\r\nhttps://github.com/deisseroth-lab/dask/commit/39d56b91a016edbcbf01b281da2ba433915ee23a\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/685170409/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/685816066",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-685816066",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 685816066,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTgxNjA2Ng==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-02T15:33:14Z",
        "updated_at": "2020-09-02T15:34:51Z",
        "author_association": "MEMBER",
        "body": "@nbren12 I think your use-case would be solved by something like https://github.com/dask/dask/issues/6272. I'll see if I can turn that into a PR today.\r\n\r\n```python\r\nIn [2]: a = da.ones(10, chunks=1)\r\n\r\nIn [3]: o = a.reshape(2, 5, inchunks=a.chunks, outchunks=((1, 1), (1, 1, 1, 1, 1)))\r\n```\r\n\r\n![mydask](https://user-images.githubusercontent.com/1312546/92003677-f12bfd00-ed06-11ea-9af8-73ffc51abe96.png)\r\n\r\n---\r\n\r\n@chrisroat what's your desired output chunking for `arr.reshape(16)`? Maybe something like\r\n\r\n```\r\n00 01 | 02 03 | 04 05 | 06 07 | 08 09 | 10 11 | 12 13 | 14 15\r\n```\r\n\r\nThat would be a \"zero-communication\" reshape / rechunk IIUC.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/685816066/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/685835964",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-685835964",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 685835964,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTgzNTk2NA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-02T16:05:15Z",
        "updated_at": "2020-09-02T16:05:15Z",
        "author_association": "MEMBER",
        "body": "@chrisroat I think this is what you would need for your problem\r\n\r\n```python\r\ninchunks = ((1, 1, 1, 1), (2, 2))\r\noutchunks = (2,) * 8,\r\nout = arr.reshape(16, inchunks=inchunks, outchunks=outchunks)\r\nout.visualize()\r\n```\r\n\r\n![mydask](https://user-images.githubusercontent.com/1312546/92007717-e758c880-ed0b-11ea-9b8b-a6032caefee1.png)\r\n\r\nFiguring out the right inchunks / outchunks isn't the easiest, but I'm not sure how much we can simplify the API while giving total control.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/685835964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686155881",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-686155881",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 686155881,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjE1NTg4MQ==",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T00:23:24Z",
        "updated_at": "2020-09-03T00:23:24Z",
        "author_association": "CONTRIBUTOR",
        "body": "I agree that that looks pretty good.  It seems the method you use here is to find the smallest chunk along a dimension and rechunk that dimension to that chunksize. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686155881/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686495162",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-686495162",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 686495162,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjQ5NTE2Mg==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T13:33:49Z",
        "updated_at": "2020-09-03T13:33:49Z",
        "author_association": "MEMBER",
        "body": ">  It seems the method you use here is to find the smallest chunk along a dimension and rechunk that dimension to that chunksize.\r\n\r\nI think that's right, if you want to minimize communication between chunks. It does result in more chunks / tasks, but that might be a good tradeoff in certain cases.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686495162/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686550232",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-686550232",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 686550232,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjU1MDIzMg==",
        "user": {
            "login": "dcherian",
            "id": 2448579,
            "node_id": "MDQ6VXNlcjI0NDg1Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2448579?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcherian",
            "html_url": "https://github.com/dcherian",
            "followers_url": "https://api.github.com/users/dcherian/followers",
            "following_url": "https://api.github.com/users/dcherian/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcherian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcherian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcherian/subscriptions",
            "organizations_url": "https://api.github.com/users/dcherian/orgs",
            "repos_url": "https://api.github.com/users/dcherian/repos",
            "events_url": "https://api.github.com/users/dcherian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcherian/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T14:57:21Z",
        "updated_at": "2020-09-03T14:57:27Z",
        "author_association": "MEMBER",
        "body": "> the method you use here is to find the smallest chunk along a dimension and rechunk that dimension to that chunksize.\r\n\r\nCould this algorithm be implemented and controlled using a kwarg like `arr.reshape(16, strategy=\"preserve-chunks\")`? It would be friendlier and a lot easier than asking the user to specify `inchunks` and `outchunks`. The existing behaviour could be `strategy=\"minimize-tasks\"`",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686550232/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686620574",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-686620574",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 686620574,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjYyMDU3NA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T16:51:03Z",
        "updated_at": "2020-09-03T16:52:08Z",
        "author_association": "MEMBER",
        "body": "I was considering that. My concerns were\r\n\r\n1. how do we discover the right chunks? This is probably solvable, but could be a bit tricky to write.\r\n2. Would this be flexible enough? Perhaps there are just two strategies, one that preserves chunk sizes and one that doesn't ever merge chunks.\r\n\r\nSo I think that if we think people won't really need complete flexibility in the chunk structure then the `strategy` keyword would be best.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686620574/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686628211",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-686628211",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 686628211,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjYyODIxMQ==",
        "user": {
            "login": "dcherian",
            "id": 2448579,
            "node_id": "MDQ6VXNlcjI0NDg1Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2448579?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcherian",
            "html_url": "https://github.com/dcherian",
            "followers_url": "https://api.github.com/users/dcherian/followers",
            "following_url": "https://api.github.com/users/dcherian/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcherian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcherian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcherian/subscriptions",
            "organizations_url": "https://api.github.com/users/dcherian/orgs",
            "repos_url": "https://api.github.com/users/dcherian/repos",
            "events_url": "https://api.github.com/users/dcherian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcherian/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T17:04:27Z",
        "updated_at": "2020-09-03T17:04:27Z",
        "author_association": "MEMBER",
        "body": "If 1 can be solved then I think the following code isn't too bad. It allows easy opt-in to one of two strategies (default vs \"preserve-chunks\") and is flexible enough to allow motivated users to have full control (this might even lead to discovery of new strategies?)\r\n\r\n``` python\r\ndef reshape(..., inchunks=None, outchunks=None, strategy=None):\r\n    if strategy and any([inchunks, outchunks]):\r\n        raise ValueError\r\n        \r\n    if strategy is not None:\r\n        inchunks, outchunks = get_chunks_from_strategy(strategy)\r\n        \r\n    ...\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686628211/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/711768265",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-711768265",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 711768265,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTc2ODI2NQ==",
        "user": {
            "login": "peterroelants",
            "id": 951093,
            "node_id": "MDQ6VXNlcjk1MTA5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/951093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterroelants",
            "html_url": "https://github.com/peterroelants",
            "followers_url": "https://api.github.com/users/peterroelants/followers",
            "following_url": "https://api.github.com/users/peterroelants/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterroelants/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterroelants/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterroelants/subscriptions",
            "organizations_url": "https://api.github.com/users/peterroelants/orgs",
            "repos_url": "https://api.github.com/users/peterroelants/repos",
            "events_url": "https://api.github.com/users/peterroelants/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterroelants/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-19T07:36:56Z",
        "updated_at": "2020-10-19T07:36:56Z",
        "author_association": "NONE",
        "body": "I'm running into the same issue. Being able to preserve the original chunk size as proposed by @dcherian would solve my problem.\r\n\r\nAfter reading the discussion above I was wondering about the following: Is there a difference in performance when rechunking small blocks by combining them, and rechunking large blocks by splitting them? In the first case the strategy of preserving the chunks might be more flexible then you think because you would still be able to rechunk after the reshape without much overhead.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/711768265/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/712103364",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-712103364",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 712103364,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjEwMzM2NA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-19T11:50:24Z",
        "updated_at": "2020-10-19T11:50:24Z",
        "author_association": "MEMBER",
        "body": "I was looking into this again last week, to implement the `strategy` keyword. I'm hoping to have something soon.\r\n\r\nI don't think that \"just maintain the original chunksize\" will work. There are cases like https://github.com/dask/dask/issues/5544#issuecomment-685835964 where we need to rechunk the input to smaller chunks.\r\n\r\n> After reading the discussion above I was wondering about the following: Is there a difference in performance when rechunking small blocks by combining them, and rechunking large blocks by splitting them?\r\n\r\nI'm not sure offhand, but all else equal the more tasks you have, the slower it'll be. In this case we're trading (some) additional tasks for less communication in the hope that it's faster. But we'll want to avoid doing unnecessary rechunking.\r\n\r\nAt a minimum though, I think we'll have a requirement that the fastest-changing dimension (the last with `order=\"C\"`) have the largest input chunks, and the slowest-changing dimensions (the first) have the smallest.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/712103364/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/712280433",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-712280433",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 712280433,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjI4MDQzMw==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-19T16:24:07Z",
        "updated_at": "2020-10-19T16:24:07Z",
        "author_association": "MEMBER",
        "body": "I've identified one special case: When reshaping from a larger to smaller number of dimensions (e.g. `3d -> 2d`), we're able to avoid rechunking entirely *when the \"early\" axes all have size-1 chunks. For example\r\n\r\n```\r\nCase 1a: (2, 3, 4) -> (6, 4)\r\n\r\n* inchunks=((1, 1), (1, 2, 1, 2), (2, 2))   # self.inchunks\r\n* outchunks=((1, 2, 1, 2), (2, 2))\r\n\r\nCase 1a: (2, 3, 4) -> (6, 4)\r\n\r\n* inchunks=((1, 1), (1, 2), (2, 2))   # self.inchunks\r\n* outchunks=((1, 2, 1, 2), (2, 2))\r\n\r\n00 01 | 02 03\r\n----- | -----\r\n04 05 | 06 07\r\n08 09 | 10 11\r\n\r\n=============\r\n\r\n12 13 | 14 15\r\n----- | -----\r\n16 17 | 18 19\r\n20 21 | 22 23\r\n\r\n-> (3, 4)\r\n\r\n00 01 | 02 03\r\n----- | -----\r\n04 05 | 06 07\r\n08 09 | 10 11\r\n----- | -----\r\n12 13 | 14 15\r\n----- | -----\r\n16 17 | 18 19\r\n20 21 | 22 23\r\n```\r\n\r\nBecause of the \"all low axes have chunksize 1\" property, we avoid needing to rechunk the input and we're merely moving blocks around. So I think that for this special case, not rechunking is the strictly superior strategy.\r\n\r\n---\r\n\r\nFor cases like @chrisroat's in https://github.com/dask/dask/issues/5544#issuecomment-685835964, we need to rechunk the inputs (since the \"early\" axes aren't all chunksize 1) and so the strategy avoiding rechunk-merge isn't necessarily better. I think it'll depend on the overhead of scheduling additional tasks, the cost of moving data around, maximum memory usage, ...",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/712280433/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/712354157",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-712354157",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 712354157,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjM1NDE1Nw==",
        "user": {
            "login": "peterroelants",
            "id": 951093,
            "node_id": "MDQ6VXNlcjk1MTA5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/951093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterroelants",
            "html_url": "https://github.com/peterroelants",
            "followers_url": "https://api.github.com/users/peterroelants/followers",
            "following_url": "https://api.github.com/users/peterroelants/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterroelants/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterroelants/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterroelants/subscriptions",
            "organizations_url": "https://api.github.com/users/peterroelants/orgs",
            "repos_url": "https://api.github.com/users/peterroelants/repos",
            "events_url": "https://api.github.com/users/peterroelants/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterroelants/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-19T18:14:16Z",
        "updated_at": "2020-10-19T18:14:16Z",
        "author_association": "NONE",
        "body": "> I've identified one special case: When reshaping from a larger to smaller number of dimensions (e.g. `3d -> 2d`), we're able to avoid rechunking entirely *when the \"early\" axes all have size-1 chunks. \r\n\r\nThat's great. This seems to align with my use case.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/712354157/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/712366182",
        "html_url": "https://github.com/dask/dask/issues/5544#issuecomment-712366182",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5544",
        "id": 712366182,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjM2NjE4Mg==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-10-19T18:37:24Z",
        "updated_at": "2020-10-19T18:39:41Z",
        "author_association": "MEMBER",
        "body": "Good to hear.\r\n\r\nUnless I'm mistaken, then https://github.com/dask/dask/issues/5544#issuecomment-712280433 indicates the kind of API / implementation we'd need to solve @chrisroat's problem in https://github.com/dask/dask/issues/5544#issuecomment-685170409. To do a \"zero-communication\" / \"no-merge\" reshape, we *need* all the early axes to have a chunksize of 1. So that's necessary and sufficient for this optimization to kick in. That also covers @rabernat's original use-case.\r\n\r\nSo if I'm right that having a chunksize of 1 is *necessary*, then we just need a keyword in `reshape` saying \"I want to rechunk to a chunksize of 1 for all my dimensions being collapsed\". That would make the following two equivalent (with https://github.com/dask/dask/pull/6748/, which disables merging for this special case).\r\n\r\n\r\n```python\r\ndata = da.ones((20, 20, 5), chunks=(10, 10, 5))\r\ndata.rechunk(400, 5), strategy=\"minimize_memory\")  # equivalent to `data.rechunk({0: 1}).rechunk(400, 5)`\r\n```\r\n\r\nWhere `strategy` is something like `strategy=\"minimize_tasks\"` (the default) vs. `\"minimize_memory\"` (rechunk to chunksize=1) or `\"minimize_communication\"`.\r\n\r\nOr we could have a boolean flag like `merge_chunks=True / False`. I think I like `merge_chunks`, but we might not be able to completely disable merging chunks (I haven't looked at the reshape from lower to higher dim case yet).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/712366182/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]