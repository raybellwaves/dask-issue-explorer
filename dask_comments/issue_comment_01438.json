[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/237105438",
        "html_url": "https://github.com/dask/dask/issues/1438#issuecomment-237105438",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1438",
        "id": 237105438,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzEwNTQzOA==",
        "user": {
            "login": "alanhdu",
            "id": 1914111,
            "node_id": "MDQ6VXNlcjE5MTQxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhdu",
            "html_url": "https://github.com/alanhdu",
            "followers_url": "https://api.github.com/users/alanhdu/followers",
            "following_url": "https://api.github.com/users/alanhdu/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhdu/orgs",
            "repos_url": "https://api.github.com/users/alanhdu/repos",
            "events_url": "https://api.github.com/users/alanhdu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhdu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-03T01:31:43Z",
        "updated_at": "2016-08-03T01:31:43Z",
        "author_association": "NONE",
        "body": "I've posted a notebook gist with a more concrete example:\n\nhttps://gist.github.com/alanhdu/4545f306c06206ffa4d8cbe0a42ad2c6\n\nCells 5 and 6 are the important ones.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/237105438/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/237109059",
        "html_url": "https://github.com/dask/dask/issues/1438#issuecomment-237109059",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1438",
        "id": 237109059,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzEwOTA1OQ==",
        "user": {
            "login": "alanhdu",
            "id": 1914111,
            "node_id": "MDQ6VXNlcjE5MTQxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhdu",
            "html_url": "https://github.com/alanhdu",
            "followers_url": "https://api.github.com/users/alanhdu/followers",
            "following_url": "https://api.github.com/users/alanhdu/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhdu/orgs",
            "repos_url": "https://api.github.com/users/alanhdu/repos",
            "events_url": "https://api.github.com/users/alanhdu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhdu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-03T01:50:08Z",
        "updated_at": "2016-08-03T01:50:27Z",
        "author_association": "NONE",
        "body": "So on further investigation, this might just be a problem with `zip`. For some reason, `zip` seems _really_ slow. I have code that roughly looks like:\n\n``` python\nimport json\n\nfrom dask.diagnostics import ProgressBar\nimport dask.bag as db\n\nbag = db.read_text(\"test*\").map(json.loads)\nab = bag.pluck(\"a\").pluck(\"b\").map(some_computation)\nc = bag.pluck(\"c\")\n\nwith ProgressBar():\n    # Computing them separately is pretty fast\n    r1 = ab.compute()   # takes ~30 s\n    r2 = c.compute()     # takes ~10 s\n    results = list(zip(ab, c))\n\n# Doing the zip with dask.bag is really slow\nwith ProgressBar():\n    results = db.zip(ab, c).compute()    # 3 minutes later and still at 0% progress!\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/237109059/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/237109757",
        "html_url": "https://github.com/dask/dask/issues/1438#issuecomment-237109757",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1438",
        "id": 237109757,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzEwOTc1Nw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-03T01:54:05Z",
        "updated_at": "2016-08-03T01:54:05Z",
        "author_association": "MEMBER",
        "body": "Yup, so here's what's going on.\n\nNormally dask.bag partitions are iterators, they stream data if possible.  This means that it's even nicer than normal dask collections like dask.dataframe because we only need to compute a tiny bit of a partition to get something like take 1.  Because of this streaming-within-partitions ability dask.bag.read_text feels free to read each file as one partition by default.\n\nThis is great except when you tee off.  When this happens we no longer trust iterators (because each part of the tee would separately consume the same iterator) so we reify everything into a list.  Now we're still good about only computing the right partitions but we're bad about being lazy within each partition.\n\nUnfortunately now our partition-per-file choice becomes bad, we're reading the entire file.  You can avoid this choice by explicitly sending in a `chunksize=10000000` or something, which will break the file up into 10MB blocks.  Then take(1) will only process 10000000 bytes instead of the entire file.  \n\nDoes this help?\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/237109757/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/237110134",
        "html_url": "https://github.com/dask/dask/issues/1438#issuecomment-237110134",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1438",
        "id": 237110134,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzExMDEzNA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-03T01:55:46Z",
        "updated_at": "2016-08-03T01:55:46Z",
        "author_association": "MEMBER",
        "body": "Hrm, the results from the last zip example do look quite odd to me.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/237110134/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/237155934",
        "html_url": "https://github.com/dask/dask/issues/1438#issuecomment-237155934",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1438",
        "id": 237155934,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzE1NTkzNA==",
        "user": {
            "login": "alanhdu",
            "id": 1914111,
            "node_id": "MDQ6VXNlcjE5MTQxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhdu",
            "html_url": "https://github.com/alanhdu",
            "followers_url": "https://api.github.com/users/alanhdu/followers",
            "following_url": "https://api.github.com/users/alanhdu/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhdu/orgs",
            "repos_url": "https://api.github.com/users/alanhdu/repos",
            "events_url": "https://api.github.com/users/alanhdu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhdu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-03T06:43:55Z",
        "updated_at": "2016-08-03T08:22:39Z",
        "author_association": "NONE",
        "body": "Explanation makes a lot of sense. Do you know if there's a way to tell dask to \"fuse\" operations together? Being able to operate on independent \"columns\" of the bag is a lot easier than always using  `map`. For example, it'd be nice if something like:\n\n``` Python\na = bag.pluck(\"a\").map(something_complicated)\nb = bag.pluck(\"b\").map(something_else_complicated)\ncombined = db.zip(a, b)\n```\n\ndid roughly the same thing as:\n\n``` Python\ncombined = bag.map(lambda x: {\"a\": something_complicated(x[\"a\"]), \n                              \"b\": something_else_complicated(x[\"b\"])})\n```\n\n(I realize they're not exactly the same because one returns a list of tuples while the other's a dictionary, but hopefully you get my point).\n\nI find the first _much_ easier to read and maintain (especially if there are a bunch of chained `map` calls), but it seems like it doesn't play well with iterators (especially for larger-than-memory data).\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/237155934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/237157805",
        "html_url": "https://github.com/dask/dask/issues/1438#issuecomment-237157805",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1438",
        "id": 237157805,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzE1NzgwNQ==",
        "user": {
            "login": "alanhdu",
            "id": 1914111,
            "node_id": "MDQ6VXNlcjE5MTQxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhdu",
            "html_url": "https://github.com/alanhdu",
            "followers_url": "https://api.github.com/users/alanhdu/followers",
            "following_url": "https://api.github.com/users/alanhdu/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhdu/orgs",
            "repos_url": "https://api.github.com/users/alanhdu/repos",
            "events_url": "https://api.github.com/users/alanhdu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhdu/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-03T06:55:39Z",
        "updated_at": "2016-08-03T17:27:39Z",
        "author_association": "NONE",
        "body": "Yeah, the zip is pretty confusing. A more end-to-end example goes like (see profile results http://nbviewer.jupyter.org/gist/alanhdu/6df4f7c64b7930acb29df0067f5bf975)\n\n``` Python\nimport json\n\nfrom bokeh.io import output_notebook\nfrom dask.diagnostics import Profiler, ProgressBar\nimport dask.bag as db\n\nj = json.dumps({\"a\": 1, \"b\": 2})\n\ndata = [j for _ in range(4 * 10 ** 5)]\nbag = db.from_sequence(data, npartitions=4).map(json.loads)\n\nwith Profiler() as prof1, ProgressBar():\n    bag.pluck([\"a\", \"b\"]).count().compute()    # Takes 2.4 s\n\nwith Profiler() as prof2, ProgressBar():\n    db.zip(bag.pluck(\"a\"), bag.pluck(\"b\")).count().compute()  # Takes 11.3 s\n```\n\nI can see possibly a 2x slowdown if the `zip` version has to redo all the json parsing (one for each pluck), but I'm don't see why it's a 5x slowdown (the 5x slowdown is pretty constant across sizes for `data` too). Maybe you see something in the profiling graphs? I'm not really sure how to interpret them.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/237157805/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/237219013",
        "html_url": "https://github.com/dask/dask/issues/1438#issuecomment-237219013",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1438",
        "id": 237219013,
        "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzIxOTAxMw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-08-03T12:06:29Z",
        "updated_at": "2016-08-03T12:06:29Z",
        "author_association": "MEMBER",
        "body": "One could write an optimization around zip that was run automatically.  It would be a function that consumes dask graphs, looks for cases of zip, and fuses them as you've one in your example.  If this is something you're interested in you could look at some of the other optimizations in `dask/optimize.py` and `dask/bag/core.py::optimize()` for examples.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/237219013/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/519567058",
        "html_url": "https://github.com/dask/dask/issues/1438#issuecomment-519567058",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1438",
        "id": 519567058,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTU2NzA1OA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-08T15:26:54Z",
        "updated_at": "2019-08-08T15:26:54Z",
        "author_association": "MEMBER",
        "body": "It seems like it should still be possible (maybe even easier today) to optimize this case. Is there any interest in taking this on?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/519567058/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]