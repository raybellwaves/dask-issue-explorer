[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/600828158",
        "html_url": "https://github.com/dask/dask/issues/6018#issuecomment-600828158",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6018",
        "id": 600828158,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDgyODE1OA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-18T19:53:15Z",
        "updated_at": "2020-03-18T19:53:15Z",
        "author_association": "MEMBER",
        "body": "I'm a bit surprised to see that the pandas version works. Indeed, if you change it to have any missing values, you see the exception that Dask eventually runs into\r\n\r\n```python\r\nIn [12]: df1 = pd.DataFrame({\"A\": pd.array([1, 2, None]), \"B\": [1, 2, 3]})\r\n\r\nIn [13]: df2 = pd.DataFrame({\"A\": [1, 2, 3], \"C\": [1, 2, 3]})\r\n\r\nIn [14]: pd.merge(df1, df2, on=\"A\")\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-14-24d32ed92a0d> in <module>\r\n----> 1 pd.merge(df1, df2, on=\"A\")\r\n\r\n~/Envs/dask-dev/lib/python3.7/site-packages/pandas/core/reshape/merge.py in merge(left, right, how, on, left_on, right_on, left_index, right_index, sort, suffixes, copy, indicator, validate)\r\n     86         validate=validate,\r\n     87     )\r\n---> 88     return op.get_result()\r\n     89\r\n     90\r\n\r\n~/Envs/dask-dev/lib/python3.7/site-packages/pandas/core/reshape/merge.py in get_result(self)\r\n    641             self.left, self.right = self._indicator_pre_merge(self.left, self.right)\r\n    642\r\n--> 643         join_index, left_indexer, right_indexer = self._get_join_info()\r\n    644\r\n    645         ldata, rdata = self.left._data, self.right._data\r\n\r\n~/Envs/dask-dev/lib/python3.7/site-packages/pandas/core/reshape/merge.py in _get_join_info(self)\r\n    860             )\r\n    861         else:\r\n--> 862             (left_indexer, right_indexer) = self._get_join_indexers()\r\n    863\r\n    864             if self.right_index:\r\n\r\n~/Envs/dask-dev/lib/python3.7/site-packages/pandas/core/reshape/merge.py in _get_join_indexers(self)\r\n    839         \"\"\" return the join indexers \"\"\"\r\n    840         return _get_join_indexers(\r\n--> 841             self.left_join_keys, self.right_join_keys, sort=self.sort, how=self.how\r\n    842         )\r\n    843\r\n\r\n~/Envs/dask-dev/lib/python3.7/site-packages/pandas/core/reshape/merge.py in _get_join_indexers(left_keys, right_keys, sort, how, **kwargs)\r\n   1309         for n in range(len(left_keys))\r\n   1310     )\r\n-> 1311     zipped = zip(*mapped)\r\n   1312     llab, rlab, shape = [list(x) for x in zipped]\r\n   1313\r\n\r\n~/Envs/dask-dev/lib/python3.7/site-packages/pandas/core/reshape/merge.py in <genexpr>(.0)\r\n   1307     mapped = (\r\n   1308         _factorize_keys(left_keys[n], right_keys[n], sort=sort)\r\n-> 1309         for n in range(len(left_keys))\r\n   1310     )\r\n   1311     zipped = zip(*mapped)\r\n\r\n~/Envs/dask-dev/lib/python3.7/site-packages/pandas/core/reshape/merge.py in _factorize_keys(lk, rk, sort)\r\n   1899         #  and rk is datetime-dtype\r\n   1900         klass = libhashtable.Int64Factorizer\r\n-> 1901         lk = ensure_int64(com.values_from_object(lk))\r\n   1902         rk = ensure_int64(com.values_from_object(rk))\r\n   1903     elif issubclass(lk.dtype.type, (np.timedelta64, np.datetime64)) and issubclass(\r\n\r\npandas/_libs/algos_common_helper.pxi in pandas._libs.algos.ensure_int64()\r\n\r\n~/Envs/dask-dev/lib/python3.7/site-packages/pandas/core/arrays/masked.py in __array__(self, dtype)\r\n    143         We return an object array here to preserve our scalar values\r\n    144         \"\"\"\r\n--> 145         return self.to_numpy(dtype=dtype)\r\n    146\r\n    147     def __arrow_array__(self, type=None):\r\n\r\n~/Envs/dask-dev/lib/python3.7/site-packages/pandas/core/arrays/masked.py in to_numpy(self, dtype, copy, na_value)\r\n    125             ):\r\n    126                 raise ValueError(\r\n--> 127                     f\"cannot convert to '{dtype}'-dtype NumPy array \"\r\n    128                     \"with missing values. Specify an appropriate 'na_value' \"\r\n    129                     \"for this dtype.\"\r\n\r\nValueError: cannot convert to 'int64'-dtype NumPy array with missing values. Specify an appropriate 'na_value' for this dtype.\r\n```\r\n\r\nThis will likely need to be resolved upstream in pandas. I'm not sure if there's an issue for it.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/600828158/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/802848007",
        "html_url": "https://github.com/dask/dask/issues/6018#issuecomment-802848007",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6018",
        "id": 802848007,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjg0ODAwNw==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-19T13:51:09Z",
        "updated_at": "2021-03-19T13:52:48Z",
        "author_association": "MEMBER",
        "body": "We find that the exception still occurs. It seems that `meta_nonempty`, when presented with an nullable integer, make a column containing one `<NA>`, even though the original data has none. **If** the original data has a <NA>, it fails in the same way.\r\n\r\nSo `meta_nonempty`/`_nonempty_sries` needs to make a decision on when to include NANs, whether this is necessary. This is because we do a `merge` on the nonempties.\r\n\r\nMay be related to https://github.com/dask/dask/pull/7375",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/802848007/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1497110773",
        "html_url": "https://github.com/dask/dask/issues/6018#issuecomment-1497110773",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6018",
        "id": 1497110773,
        "node_id": "IC_kwDOAbcwm85ZPBj1",
        "user": {
            "login": "phofl",
            "id": 61934744,
            "node_id": "MDQ6VXNlcjYxOTM0NzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61934744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phofl",
            "html_url": "https://github.com/phofl",
            "followers_url": "https://api.github.com/users/phofl/followers",
            "following_url": "https://api.github.com/users/phofl/following{/other_user}",
            "gists_url": "https://api.github.com/users/phofl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phofl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phofl/subscriptions",
            "organizations_url": "https://api.github.com/users/phofl/orgs",
            "repos_url": "https://api.github.com/users/phofl/repos",
            "events_url": "https://api.github.com/users/phofl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phofl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-05T08:25:33Z",
        "updated_at": "2023-04-05T08:25:33Z",
        "author_association": "MEMBER",
        "body": "This was fixed in pandas 2.0 and seems to work reliably now.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1497110773/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]