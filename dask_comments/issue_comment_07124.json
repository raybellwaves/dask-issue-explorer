[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/769883958",
        "html_url": "https://github.com/dask/dask/issues/7124#issuecomment-769883958",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7124",
        "id": 769883958,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTg4Mzk1OA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-01-29T15:48:00Z",
        "updated_at": "2021-01-29T15:48:00Z",
        "author_association": "MEMBER",
        "body": "cc @dask/array this issue may interest you",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/769883958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/770209808",
        "html_url": "https://github.com/dask/dask/issues/7124#issuecomment-770209808",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7124",
        "id": 770209808,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3MDIwOTgwOA==",
        "user": {
            "login": "bmerry",
            "id": 1963944,
            "node_id": "MDQ6VXNlcjE5NjM5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1963944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmerry",
            "html_url": "https://github.com/bmerry",
            "followers_url": "https://api.github.com/users/bmerry/followers",
            "following_url": "https://api.github.com/users/bmerry/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions",
            "organizations_url": "https://api.github.com/users/bmerry/orgs",
            "repos_url": "https://api.github.com/users/bmerry/repos",
            "events_url": "https://api.github.com/users/bmerry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmerry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-01-30T13:05:50Z",
        "updated_at": "2021-01-30T13:05:50Z",
        "author_association": "MEMBER",
        "body": "Sounds like a good idea but tricky to get right. On thought that crossed my mind is that `da.blockwise` can already do rechunking if the input arrays don't match (it calls `unify_chunks`); if one adds more rechunking logic into blockwise it would be good to harmonize it with that, so that one doesn't end up with silly situations where an array gets rechunked once to align chunk sizes and then is immediately rechunked differently to control memory usage.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/770209808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/772825148",
        "html_url": "https://github.com/dask/dask/issues/7124#issuecomment-772825148",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7124",
        "id": 772825148,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjgyNTE0OA==",
        "user": {
            "login": "sjperkins",
            "id": 3530212,
            "node_id": "MDQ6VXNlcjM1MzAyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3530212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sjperkins",
            "html_url": "https://github.com/sjperkins",
            "followers_url": "https://api.github.com/users/sjperkins/followers",
            "following_url": "https://api.github.com/users/sjperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/sjperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sjperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sjperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/sjperkins/orgs",
            "repos_url": "https://api.github.com/users/sjperkins/repos",
            "events_url": "https://api.github.com/users/sjperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sjperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-03T21:09:32Z",
        "updated_at": "2021-02-03T21:09:32Z",
        "author_association": "MEMBER",
        "body": "Unexpected changes in chunk sizes can create issues with chunk alignment with other arrays. See https://github.com/dask/dask/issues/6646 for an example of this. I wonder if there's a way to make sure consistent chunking is maintained across multiple blockwise calls.\r\n\r\nPerhaps the presence of \"array.chunksize\" can turn this behaviour on and off?\r\n\r\n/cc @JSKenyon \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/772825148/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/772878714",
        "html_url": "https://github.com/dask/dask/issues/7124#issuecomment-772878714",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7124",
        "id": 772878714,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3Mjg3ODcxNA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-03T22:46:14Z",
        "updated_at": "2021-02-03T22:46:14Z",
        "author_association": "MEMBER",
        "body": "> On thought that crossed my mind is that da.blockwise can already do rechunking if the input arrays don't match (it calls unify_chunks); if one adds more rechunking logic into blockwise it would be good to harmonize it with that\r\n\r\nGood point.  Maybe this logic actually belongs in `unify_chunks`, somehow rolling in the `auto_chunks` capability into that logic.  \r\n\r\nGetting chunking right is, as you both suggest, both very important and very complex.  So far we've been able to represent a surprising amount of logic (blockwise, rechunk, unify_chunks, \"auto\" sizing, ...) in a way that is composable.  I am hopeful that there is a way to combine this logic in a sensible way, but that probably requires deep thought from someone.\r\n\r\nI appreciate the concern about surprising results.  I agree that it should be able to turn automatic rechunking off.  I do think that the default should be \"on\" though.  A decent fraction of performance issues in dask array can be solved with better chunking.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/772878714/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/773046764",
        "html_url": "https://github.com/dask/dask/issues/7124#issuecomment-773046764",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7124",
        "id": 773046764,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzA0Njc2NA==",
        "user": {
            "login": "bmerry",
            "id": 1963944,
            "node_id": "MDQ6VXNlcjE5NjM5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1963944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmerry",
            "html_url": "https://github.com/bmerry",
            "followers_url": "https://api.github.com/users/bmerry/followers",
            "following_url": "https://api.github.com/users/bmerry/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions",
            "organizations_url": "https://api.github.com/users/bmerry/orgs",
            "repos_url": "https://api.github.com/users/bmerry/repos",
            "events_url": "https://api.github.com/users/bmerry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmerry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-04T05:44:27Z",
        "updated_at": "2021-02-04T05:44:27Z",
        "author_association": "MEMBER",
        "body": "> Unexpected changes in chunk sizes can create issues with chunk alignment with other arrays.\r\n\r\nIt can also cause issues with even a single array. I have code that depends on having only a single chunk along a certain dimension (because of the access pattern of the per-block function). I ensure that by rechunking if necessary before calling `da.blockwise`, but if blockwise rechunks under me it will break things.\r\n\r\nHere's an idea for semantics that will be backwards-compatible but still allow automatic rechunking for common usage: add an optional argument to `blockwise` to allow auto-rechunking, with three possible values e.g. True, False, None, with None being the default. True means do rechunking automatically. None means don't do anything, but warn the user if it creates big chunks. False means don't do anything and don't warn. Where `blockwise` is used internally by dask and it's known to be safe (e.g. in da.outer), pass True.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/773046764/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/773208609",
        "html_url": "https://github.com/dask/dask/issues/7124#issuecomment-773208609",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7124",
        "id": 773208609,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzIwODYwOQ==",
        "user": {
            "login": "JSKenyon",
            "id": 6582745,
            "node_id": "MDQ6VXNlcjY1ODI3NDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6582745?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JSKenyon",
            "html_url": "https://github.com/JSKenyon",
            "followers_url": "https://api.github.com/users/JSKenyon/followers",
            "following_url": "https://api.github.com/users/JSKenyon/following{/other_user}",
            "gists_url": "https://api.github.com/users/JSKenyon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JSKenyon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JSKenyon/subscriptions",
            "organizations_url": "https://api.github.com/users/JSKenyon/orgs",
            "repos_url": "https://api.github.com/users/JSKenyon/repos",
            "events_url": "https://api.github.com/users/JSKenyon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JSKenyon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-04T10:37:57Z",
        "updated_at": "2021-02-04T10:38:48Z",
        "author_association": "MEMBER",
        "body": "I think it is important to remember that blockwise doesn't prescribe what the function it is applying can do. From personal experience, I can say that having chunking changed surprisingly can break things. \r\n\r\nI think that the root cause is that not all functions can \"commute\" with a rechunking operation. That is, if a chunk is a specific size for a reason (due to a particular access pattern, or because the function requires the points in that chunk to be processed simultaneously), rechunking is not an option.\r\n\r\nI think @bmerry's suggestion is sound - warn by default, with the option to enable or disable rechunking. From a practical perspective, I can imagine that having rechunking turned on by default will be really confusing for new users.  ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/773208609/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/773238216",
        "html_url": "https://github.com/dask/dask/issues/7124#issuecomment-773238216",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7124",
        "id": 773238216,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzIzODIxNg==",
        "user": {
            "login": "bmerry",
            "id": 1963944,
            "node_id": "MDQ6VXNlcjE5NjM5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1963944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmerry",
            "html_url": "https://github.com/bmerry",
            "followers_url": "https://api.github.com/users/bmerry/followers",
            "following_url": "https://api.github.com/users/bmerry/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions",
            "organizations_url": "https://api.github.com/users/bmerry/orgs",
            "repos_url": "https://api.github.com/users/bmerry/repos",
            "events_url": "https://api.github.com/users/bmerry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmerry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-04T11:28:43Z",
        "updated_at": "2021-02-04T11:28:43Z",
        "author_association": "MEMBER",
        "body": "> I can imagine that having rechunking turned on by default will be really confusing for new users.\r\n\r\nTo be fair, new users are unlikely to be calling blockwise directly, but dask will be calling it under the hood for them, and in those cases it's generally safe to do rechunking.\r\n\r\nIn general, my feeling is that if a dask function directly exposes the chunking to the user (such as `blockwise`, `map_blocks`) it should (by default) respect the input chunking. If the semantics of a function are independent of the chunking (e.g. element-wise operators, `outer`, `sum`, slicing) then the chunking isn't part of the contract and it can legally rechunk if appropriate (although as #6646 revealed, that could still cause performance issues, so shouldn't be done lightly).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/773238216/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/773251096",
        "html_url": "https://github.com/dask/dask/issues/7124#issuecomment-773251096",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7124",
        "id": 773251096,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzI1MTA5Ng==",
        "user": {
            "login": "bmerry",
            "id": 1963944,
            "node_id": "MDQ6VXNlcjE5NjM5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1963944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmerry",
            "html_url": "https://github.com/bmerry",
            "followers_url": "https://api.github.com/users/bmerry/followers",
            "following_url": "https://api.github.com/users/bmerry/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions",
            "organizations_url": "https://api.github.com/users/bmerry/orgs",
            "repos_url": "https://api.github.com/users/bmerry/repos",
            "events_url": "https://api.github.com/users/bmerry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmerry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-04T11:52:17Z",
        "updated_at": "2021-02-04T11:52:44Z",
        "author_association": "MEMBER",
        "body": "It's just occurred to me that `da.blockwise` already has a \"don't-mess-with-chunking\" flag, namely `align_arrays=False`. It's not documented, but it's used by `map_blocks`. When `align_arrays` is True (the default), `blockwise` can already affect the chunking, although I think it won't *currently* affect chunking on dimensions where all the inputs agree. So perhaps rather than adding a new flag as I suggested, we should just document the existing flag and note that users who care about the incoming chunking should manually align their inputs and pass `align_arrays=False` to ensure that it isn't altered. In that case I'd feel slightly more comfortable with automatically splitting large chunks.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/773251096/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/773261811",
        "html_url": "https://github.com/dask/dask/issues/7124#issuecomment-773261811",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7124",
        "id": 773261811,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzI2MTgxMQ==",
        "user": {
            "login": "sjperkins",
            "id": 3530212,
            "node_id": "MDQ6VXNlcjM1MzAyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3530212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sjperkins",
            "html_url": "https://github.com/sjperkins",
            "followers_url": "https://api.github.com/users/sjperkins/followers",
            "following_url": "https://api.github.com/users/sjperkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/sjperkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sjperkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sjperkins/subscriptions",
            "organizations_url": "https://api.github.com/users/sjperkins/orgs",
            "repos_url": "https://api.github.com/users/sjperkins/repos",
            "events_url": "https://api.github.com/users/sjperkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sjperkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-04T12:12:40Z",
        "updated_at": "2021-02-04T12:13:10Z",
        "author_association": "MEMBER",
        "body": "> It's just occurred to me that `da.blockwise` already has a \"don't-mess-with-chunking\" flag, namely `align_arrays=False`. It's not documented, but it's used by `map_blocks`. When `align_arrays` is True (the default), `blockwise` can already affect the chunking, although I think it won't _currently_ affect chunking on dimensions where all the inputs agree.\r\n\r\nI don't believe this is quite accurate.  I've always understood `align_arrays` to be an option that allows blockwise to match arrays with incompatible chunk sizes (but the same number of chunks along the dimension). \r\n\r\n```python\r\nassert x.chunks == ((5, 5, 5, 5),)\r\nassert y.chunks == ((2, 1, 3, 4),)\r\nassert x.numblocks == y.numblocks\r\n\r\n# Fails because chunk sizes differ\r\nz = da.blockwise(fn, \"d\", x, \"d\", y, \"d\", align_arrays=True)\r\n# Succeeds, because numblocks are the same along each dim\r\n# explicitly choose y's chunk sizes for the output\r\nz = da.blockwise(fn, \"d\", x, \"d\", y, \"d\", align_arrays=False,\r\n                 adjust_chunks={\"d\", y.chunks[0]})\r\n```\r\n\r\n`align_chunk_sizes` might be a better name.\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/773261811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/883029221",
        "html_url": "https://github.com/dask/dask/issues/7124#issuecomment-883029221",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7124",
        "id": 883029221,
        "node_id": "IC_kwDOAbcwm840ofTl",
        "user": {
            "login": "GenevieveBuckley",
            "id": 30920819,
            "node_id": "MDQ6VXNlcjMwOTIwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenevieveBuckley",
            "html_url": "https://github.com/GenevieveBuckley",
            "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
            "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
            "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
            "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
            "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-20T03:49:02Z",
        "updated_at": "2021-07-20T04:01:09Z",
        "author_association": "MEMBER",
        "body": "I've tried to piece the discussion together from this thread, and these two related conversations:\r\n* https://github.com/dask/dask/issues/3587\r\n* https://github.com/dask/dask/issues/2225\r\n\r\nTerminology:\r\nWe didn't use these particular phrases in my maths classes, but here's what I think they're being used to mean in these discussions\r\n* inner dimensions <- are summed over by tensordot\r\n* outer dimensions <- not summed over by tensordot\r\n\r\nFor tensordot, it looks like the process should go something like this:\r\n1. Work out which are the outer dimension axes for arrays a and b\r\n2. Use the auto_chunks function to work out what the best chunk size is for the tensordot array output, given the chunk size limit from `dask.config.get('array.chunk-size')`\r\n3. Work backwards from this to figure out how the input tensordot arrays should be rechunked for the outer dimension axes.\r\n4. Inner dimension axes - do we (a) make no change to the chunking here, (b) rechunk all inner dimensions to a chunksize of 1, or (c) rechunk inner dimensions to some smaller chunksize but ?? what size they should be.\r\n5. Rechunk the tensordot input arrays\r\n6. Set kwarg `align_arrays=False` when tensordot hands over to blockwise (might need to double check if there is any extra logic in the `unify_chunks` function we now need to take care of in tensordot?)\r\n\r\nI've written some code for this, while I was trying to work out the process. I'll need a bit more clarity around the questions in point 4 and 6 above. ([Hacky code here](https://gist.github.com/GenevieveBuckley/8a2c5068d065ce81284fe606ac72c77d))\r\n\r\nIt is clear that the rechunking logic is going to have to happen in tensordot before it gets to blockwise, blockwise just doesn't know enough information to do what we want.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/883029221/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/883039063",
        "html_url": "https://github.com/dask/dask/issues/7124#issuecomment-883039063",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7124",
        "id": 883039063,
        "node_id": "IC_kwDOAbcwm840ohtX",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-20T04:18:37Z",
        "updated_at": "2021-07-20T04:18:37Z",
        "author_association": "MEMBER",
        "body": "Most of my comments below are relevant for #2225 rather than this issue (I think that that issue is a bigger deal than this one).  It's worth noting that these are two different concerns and not necessarily fully compatible.\r\n\r\nFirst, I highly recommend multiplying two matrices two-dimensional matrices together and experimenting with chunking structure before trying to generalize any of this.  I also recommend using the dask.distributed scheduler and having the dashboard up.  The chunking structure will make a very large impact on if the computation finishes or not.   I think that you probably need to feel this pain viscerally a bit before these issues make much sense.\r\n\r\nI would also be totally ok with a first pass that only worked in the 2d x 2d case.  This is the common case, probably much easier to get right, and much less likely to stall out with a half-finished PR.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/883039063/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/883041631",
        "html_url": "https://github.com/dask/dask/issues/7124#issuecomment-883041631",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7124",
        "id": 883041631,
        "node_id": "IC_kwDOAbcwm840oiVf",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-20T04:25:32Z",
        "updated_at": "2021-07-20T04:25:32Z",
        "author_association": "MEMBER",
        "body": "I think that if you build up a small set of interesting examples that you'll be able to try out different approaches, like what you propose above, and see how they work.  I think that this will quickly give you more intuition than anyone here has.  The approach that you lay out above sounds sensible to me, but I would bet large amounts of money that it's wrong.  I don't think that anyone today knows enough to be able to tell if any approach is solid or not.  I'm certainly not able to do so.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/883041631/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]