{
    "url": "https://api.github.com/repos/dask/dask/issues/9611",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9611/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9611/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9611/events",
    "html_url": "https://github.com/dask/dask/issues/9611",
    "id": 1430023391,
    "node_id": "I_kwDOAbcwm85VPGzf",
    "number": 9611,
    "title": "GroupBy.cov() when dask SeriesGroupBy object returns unexpected response",
    "user": {
        "login": "hayesgb",
        "id": 12595382,
        "node_id": "MDQ6VXNlcjEyNTk1Mzgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/12595382?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hayesgb",
        "html_url": "https://github.com/hayesgb",
        "followers_url": "https://api.github.com/users/hayesgb/followers",
        "following_url": "https://api.github.com/users/hayesgb/following{/other_user}",
        "gists_url": "https://api.github.com/users/hayesgb/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/hayesgb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hayesgb/subscriptions",
        "organizations_url": "https://api.github.com/users/hayesgb/orgs",
        "repos_url": "https://api.github.com/users/hayesgb/repos",
        "events_url": "https://api.github.com/users/hayesgb/events{/privacy}",
        "received_events_url": "https://api.github.com/users/hayesgb/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3798450413,
            "node_id": "LA_kwDOAbcwm87iZ8Dt",
            "url": "https://api.github.com/repos/dask/dask/labels/bug",
            "name": "bug",
            "color": "faadaf",
            "default": true,
            "description": "Something is broken"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-10-31T15:18:17Z",
    "updated_at": "2022-12-05T01:59:37Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Describe the issue**:\r\n\r\nWhen performing a groupby covariance on a Pandas DataFrame, where the groupby operation returns a `pd.SeriesGroupBy` object, Pandas returns a `TypeError`, which makes sense since there is not a second column.  However, the same operation on a dask dataframe returns a Dask Series\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\n\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\nfrom dask.dataframe.utils import assert_eq\r\n\r\npdf = pd.DataFrame(\r\n{\"a\": [1, 2, 6, 4, 4, 6, 4, 3, 7], \"b\": [4, 2, 7, 3, 3, 1, 1, 1, 2]},\r\nindex=[0, 1, 3, 5, 6, 8, 9, 9, 9],\r\n)\r\nddf = dd.from_pandas(pdf, npartitions=3)\r\nassert_eq(pdf.groupby(\"b\").a.cov(), ddf.groupby(\"b\").a.cov())\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In [1], line 10\r\n      5 pdf = pd.DataFrame(\r\n      6 {\"a\": [1, 2, 6, 4, 4, 6, 4, 3, 7], \"b\": [4, 2, 7, 3, 3, 1, 1, 1, 2]},\r\n      7 index=[0, 1, 3, 5, 6, 8, 9, 9, 9],\r\n      8 )\r\n      9 ddf = dd.from_pandas(pdf, npartitions=3)\r\n---> 10 assert_eq(pdf.groupby(\"b\").a.cov(), ddf.groupby(\"b\").a.cov())\r\n\r\nFile ~/mambaforge/envs/dask/lib/python3.9/site-packages/pandas/core/groupby/groupby.py:950, in GroupBy._make_wrapper.<locals>.wrapper(*args, **kwargs)\r\n    947 if name in base.plotting_methods:\r\n    948     return self.apply(curried)\r\n--> 950 return self._python_apply_general(curried, self._obj_with_exclusions)\r\n\r\nFile ~/mambaforge/envs/dask/lib/python3.9/site-packages/pandas/core/groupby/groupby.py:1464, in GroupBy._python_apply_general(self, f, data, not_indexed_same)\r\n   1438 @final\r\n   1439 def _python_apply_general(\r\n   1440     self,\r\n   (...)\r\n   1443     not_indexed_same: bool | None = None,\r\n   1444 ) -> DataFrame | Series:\r\n   1445     \"\"\"\r\n   1446     Apply function f in python space\r\n   1447 \r\n   (...)\r\n   1462         data after applying f\r\n   1463     \"\"\"\r\n-> 1464     values, mutated = self.grouper.apply(f, data, self.axis)\r\n   1466     if not_indexed_same is None:\r\n   1467         not_indexed_same = mutated or self.mutated\r\n\r\nFile ~/mambaforge/envs/dask/lib/python3.9/site-packages/pandas/core/groupby/ops.py:761, in BaseGrouper.apply(self, f, data, axis)\r\n    759 # group might be modified\r\n    760 group_axes = group.axes\r\n--> 761 res = f(group)\r\n    762 if not mutated and not _is_indexed_like(res, group_axes, axis):\r\n    763     mutated = True\r\n\r\nFile ~/mambaforge/envs/dask/lib/python3.9/site-packages/pandas/core/groupby/groupby.py:939, in GroupBy._make_wrapper.<locals>.wrapper.<locals>.curried(x)\r\n    938 def curried(x):\r\n--> 939     return f(x, *args, **kwargs)\r\n\r\nTypeError: cov() missing 1 required positional argument: 'other'\r\n```\r\nSee:\r\n```\r\nddf.groupby(\"b\").a.cov().compute()\r\nb   \r\n1  a     2.333333\r\n2  a    12.500000\r\n3  a     0.000000\r\n4  a          NaN\r\n7  a          NaN\r\nName: a, dtype: float64\r\n```\r\n```\r\npdf.groupby(\"b\").a.cov().compute()\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In [4], line 1\r\n----> 1 pdf.groupby(\"b\").a.cov()\r\n\r\nFile ~/mambaforge/envs/dask/lib/python3.9/site-packages/pandas/core/groupby/groupby.py:950, in GroupBy._make_wrapper.<locals>.wrapper(*args, **kwargs)\r\n    947 if name in base.plotting_methods:\r\n    948     return self.apply(curried)\r\n--> 950 return self._python_apply_general(curried, self._obj_with_exclusions)\r\n\r\nFile ~/mambaforge/envs/dask/lib/python3.9/site-packages/pandas/core/groupby/groupby.py:1464, in GroupBy._python_apply_general(self, f, data, not_indexed_same)\r\n   1438 @final\r\n   1439 def _python_apply_general(\r\n   1440     self,\r\n   (...)\r\n   1443     not_indexed_same: bool | None = None,\r\n   1444 ) -> DataFrame | Series:\r\n   1445     \"\"\"\r\n   1446     Apply function f in python space\r\n   1447 \r\n   (...)\r\n   1462         data after applying f\r\n   1463     \"\"\"\r\n-> 1464     values, mutated = self.grouper.apply(f, data, self.axis)\r\n   1466     if not_indexed_same is None:\r\n   1467         not_indexed_same = mutated or self.mutated\r\n\r\nFile ~/mambaforge/envs/dask/lib/python3.9/site-packages/pandas/core/groupby/ops.py:761, in BaseGrouper.apply(self, f, data, axis)\r\n    759 # group might be modified\r\n    760 group_axes = group.axes\r\n--> 761 res = f(group)\r\n    762 if not mutated and not _is_indexed_like(res, group_axes, axis):\r\n    763     mutated = True\r\n\r\nFile ~/mambaforge/envs/dask/lib/python3.9/site-packages/pandas/core/groupby/groupby.py:939, in GroupBy._make_wrapper.<locals>.wrapper.<locals>.curried(x)\r\n    938 def curried(x):\r\n--> 939     return f(x, *args, **kwargs)\r\n\r\nTypeError: cov() missing 1 required positional argument: 'other'\r\n```\r\n\r\n**Environment**:\r\n\r\n- Dask version:  2022.10.1\r\n- Python version: 3.9\r\n- Operating System: MacOs\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9611/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9611/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}