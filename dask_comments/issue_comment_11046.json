[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2049827182",
        "html_url": "https://github.com/dask/dask/issues/11046#issuecomment-2049827182",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11046",
        "id": 2049827182,
        "node_id": "IC_kwDOAbcwm856LeFu",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-11T14:29:17Z",
        "updated_at": "2024-04-11T14:29:17Z",
        "author_association": "MEMBER",
        "body": "I strong recommend to not pass the computed array `darr.compute()` to `pairwise_distance`. It should just be `darr`. This will otherwise materialize the entire array into memory and will require you to send all of this over the network.\r\n\r\nI suspect that the bug you are running into is actually already fixed in https://github.com/dask/distributed/pull/8507 but you wouldn't have a good time submitting 12TB from your client to the scheduler.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2049827182/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2049841912",
        "html_url": "https://github.com/dask/dask/issues/11046#issuecomment-2049841912",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11046",
        "id": 2049841912,
        "node_id": "IC_kwDOAbcwm856Lhr4",
        "user": {
            "login": "lsc64",
            "id": 86673488,
            "node_id": "MDQ6VXNlcjg2NjczNDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/86673488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lsc64",
            "html_url": "https://github.com/lsc64",
            "followers_url": "https://api.github.com/users/lsc64/followers",
            "following_url": "https://api.github.com/users/lsc64/following{/other_user}",
            "gists_url": "https://api.github.com/users/lsc64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lsc64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lsc64/subscriptions",
            "organizations_url": "https://api.github.com/users/lsc64/orgs",
            "repos_url": "https://api.github.com/users/lsc64/repos",
            "events_url": "https://api.github.com/users/lsc64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lsc64/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-11T14:35:51Z",
        "updated_at": "2024-04-11T14:38:49Z",
        "author_association": "NONE",
        "body": "> I strong recommend to not pass the computed array `darr.compute()` to `pairwise_distance`. It should just be `darr`. This will otherwise materialize the entire array into memory and will require you to send all of this over the network.\r\n> \r\n> I suspect that the bug you are running into is actually already fixed in [dask/distributed#8507](https://github.com/dask/distributed/pull/8507) but you wouldn't have a good time submitting 12TB from your client to the scheduler.\r\n\r\nUnfortunately that functions requires a dask.array and a numpy.array, otherwise it would of course be nicer to not do that.\r\nhttps://github.com/dask/dask-ml/blob/b95ba909c6dcd37c566f5193ba0b918396edaaee/dask_ml/metrics/pairwise.py#L58\r\n```python\r\nif isinstance(Y, da.Array):\r\n        raise TypeError(\"`Y` must be a numpy array\")\r\n```\r\nIf I batch the materialized array into 100k slices (which reduces the graph size) it works, so you're probably right!\r\n\r\n```python\r\nhists = []\r\nbatch_size = 100000\r\nfor batch in tqdm(range(darr.shape[0] // batch_size)):\r\n    distances = pairwise_distances(\r\n        darr,\r\n        darr[\r\n            batch * batch_size : min((batch + 1) * batch_size, darr.shape[0])\r\n        ].compute(),\r\n        metric=\"cosine\",\r\n    )\r\n    hist, bins = da.histogram(distances, bins=100, range=[0, 2])\r\n    hists.append(hist)\r\nda.compute(hists) # works, still computes everything at once\r\n```\r\n\r\n Do I have the patch if I install from source? ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2049841912/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2049996009",
        "html_url": "https://github.com/dask/dask/issues/11046#issuecomment-2049996009",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11046",
        "id": 2049996009,
        "node_id": "IC_kwDOAbcwm856MHTp",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-11T15:44:06Z",
        "updated_at": "2024-04-11T15:44:06Z",
        "author_association": "MEMBER",
        "body": "> Unfortunately that functions requires a dask.array and a numpy.array,\r\n\r\nSorry, I missed that. I haven't tried to understand your batching code to ensure if it is correct. If it is, maybe you want to contribute this to dask-ml because a \"proper\" dask algorithm works similarly. I don't know enough about the pairwise_distance algorithm to tell\r\n\r\nHowever, what I can tell you is that if you include a 12TB array in the `map_blocks` call of https://github.com/dask/dask-ml/blob/b95ba909c6dcd37c566f5193ba0b918396edaaee/dask_ml/metrics/pairwise.py#L60-L67 this will replicate that array to the scheduler and all dask workers. I doubt this is what you want to do.\r\n\r\n> Do I have the patch if I install from source?\r\n\r\nI just checked and this was already released in 2024.2.1 (the version you are running on). By breaking up the array you are avoiding all sorts of problems so if this is possible, go for it.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2049996009/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2050037792",
        "html_url": "https://github.com/dask/dask/issues/11046#issuecomment-2050037792",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11046",
        "id": 2050037792,
        "node_id": "IC_kwDOAbcwm856MRgg",
        "user": {
            "login": "lsc64",
            "id": 86673488,
            "node_id": "MDQ6VXNlcjg2NjczNDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/86673488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lsc64",
            "html_url": "https://github.com/lsc64",
            "followers_url": "https://api.github.com/users/lsc64/followers",
            "following_url": "https://api.github.com/users/lsc64/following{/other_user}",
            "gists_url": "https://api.github.com/users/lsc64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lsc64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lsc64/subscriptions",
            "organizations_url": "https://api.github.com/users/lsc64/orgs",
            "repos_url": "https://api.github.com/users/lsc64/repos",
            "events_url": "https://api.github.com/users/lsc64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lsc64/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-11T16:06:28Z",
        "updated_at": "2024-04-11T16:06:28Z",
        "author_association": "NONE",
        "body": "> Sorry, I missed that. I haven't tried to understand your batching code to ensure if it is correct. If it is, maybe you want to contribute this to dask-ml because a \"proper\" dask algorithm works similarly. I don't know enough about the pairwise_distance algorithm to tell\r\n\r\nNo worries, I just like to leave code snippets in case anyone has the same issue, so they're not faced the unhelpful \"nvm I solved it\". I can open a PR at some point and discuss this over there.\r\n\r\n> However, what I can tell you is that if you include a 12TB array in the map_blocks call of https://github.com/dask/dask-ml/blob/b95ba909c6dcd37c566f5193ba0b918396edaaee/dask_ml/metrics/pairwise.py#L60-L67 this will replicate that array to the scheduler and all dask workers. I doubt this is what you want to do.\r\n\r\nFor `X.map_blocks(fn, Y)` the array `Y` gets fully replicated, `X` or both? But that array/those arrays are not materialized right?\r\n[The docs](https://docs.dask.org/en/stable/generated/dask.array.Array.map_blocks.html) give an example, which is exactly what I/the function wants to achieve (just for huge arrays and `lambda a,b,: distance(a,b)`)\r\n```python\r\nd = da.arange(5, chunks=2)\r\ne = da.arange(5, chunks=2)\r\nf = da.map_blocks(lambda a, b: a + b**2, d, e)\r\nf.compute()\r\n```\r\n\r\n\r\n> I just checked and this was already released in 2024.2.1 (the version you are running on). By breaking up the array you are avoiding all sorts of problems so if this is possible, go for it.\r\n\r\nWe need bigger graphs!! /s (but maybe actually)\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2050037792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]