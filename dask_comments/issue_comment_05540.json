[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/548123979",
        "html_url": "https://github.com/dask/dask/issues/5540#issuecomment-548123979",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5540",
        "id": 548123979,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODEyMzk3OQ==",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-30T21:38:54Z",
        "updated_at": "2019-10-30T21:38:54Z",
        "author_association": "MEMBER",
        "body": "Thanks for opening up an issue @trexfeathers. Do you have any thoughts on what a general solution may look like? That could be useful in helping guide any further discussion. You may also consider commenting on #3595 to see if others on that thread have made any progress since the original conversation took place",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/548123979/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/548614236",
        "html_url": "https://github.com/dask/dask/issues/5540#issuecomment-548614236",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5540",
        "id": 548614236,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODYxNDIzNg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-31T23:54:30Z",
        "updated_at": "2019-10-31T23:54:30Z",
        "author_association": "MEMBER",
        "body": "One grand solution to this problem is to have a higher level numpy-like library that could capture all of the users operations, and then optimize those calls accordingly for things like chunk structure.  Unfortunately, dask array doesn't have any mechanism for something like this today.  There has been some talk about doing some lightweight version of this with the new [high level graphs](https://docs.dask.org/en/latest/high-level-graphs.html), but even these probably aren't going to be able to solve the larger underlying problem here.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/548614236/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/548614899",
        "html_url": "https://github.com/dask/dask/issues/5540#issuecomment-548614899",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5540",
        "id": 548614899,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODYxNDg5OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-10-31T23:58:03Z",
        "updated_at": "2019-10-31T23:58:03Z",
        "author_association": "MEMBER",
        "body": "If I had a person to work on this problem for six months I would suggest that they make another numpy-like library that captured a call graph of all of the operations, and then a bunch of routines to optimize around that structure.  Users would use that, and that would then lower down to dask array.  \r\n\r\nAt one point I made a small prototype of this, but I can't find it now.  I imagine it's on some github repository somewhere.  It probably isn't of much value though.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/548614899/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/558244141",
        "html_url": "https://github.com/dask/dask/issues/5540#issuecomment-558244141",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5540",
        "id": 558244141,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODI0NDE0MQ==",
        "user": {
            "login": "trexfeathers",
            "id": 40734014,
            "node_id": "MDQ6VXNlcjQwNzM0MDE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/40734014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trexfeathers",
            "html_url": "https://github.com/trexfeathers",
            "followers_url": "https://api.github.com/users/trexfeathers/followers",
            "following_url": "https://api.github.com/users/trexfeathers/following{/other_user}",
            "gists_url": "https://api.github.com/users/trexfeathers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trexfeathers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trexfeathers/subscriptions",
            "organizations_url": "https://api.github.com/users/trexfeathers/orgs",
            "repos_url": "https://api.github.com/users/trexfeathers/repos",
            "events_url": "https://api.github.com/users/trexfeathers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trexfeathers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-25T16:54:26Z",
        "updated_at": "2019-11-25T16:54:26Z",
        "author_association": "NONE",
        "body": "Thanks for your contributions everyone. Knowing the potential scale of the solution has helped my team make time for writing individual workarounds, this being much quicker than understanding and solving the root problem. We've also been able to spread awareness of the situation to colleagues who might encounter something similar.\r\n\r\nIf the individual workarounds become too much we may revisit and attempt to put together a PR for Dask, but we are happy for now. Feel free to close this issue if appropriate.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/558244141/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/600179875",
        "html_url": "https://github.com/dask/dask/issues/5540#issuecomment-600179875",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5540",
        "id": 600179875,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDE3OTg3NQ==",
        "user": {
            "login": "dcherian",
            "id": 2448579,
            "node_id": "MDQ6VXNlcjI0NDg1Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2448579?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcherian",
            "html_url": "https://github.com/dcherian",
            "followers_url": "https://api.github.com/users/dcherian/followers",
            "following_url": "https://api.github.com/users/dcherian/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcherian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcherian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcherian/subscriptions",
            "organizations_url": "https://api.github.com/users/dcherian/orgs",
            "repos_url": "https://api.github.com/users/dcherian/repos",
            "events_url": "https://api.github.com/users/dcherian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcherian/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-17T16:50:09Z",
        "updated_at": "2020-03-17T16:50:09Z",
        "author_association": "MEMBER",
        "body": "@trexfeathers Could you summarize what workarounds you ended up using?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/600179875/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/600192977",
        "html_url": "https://github.com/dask/dask/issues/5540#issuecomment-600192977",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5540",
        "id": 600192977,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMDE5Mjk3Nw==",
        "user": {
            "login": "trexfeathers",
            "id": 40734014,
            "node_id": "MDQ6VXNlcjQwNzM0MDE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/40734014?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trexfeathers",
            "html_url": "https://github.com/trexfeathers",
            "followers_url": "https://api.github.com/users/trexfeathers/followers",
            "following_url": "https://api.github.com/users/trexfeathers/following{/other_user}",
            "gists_url": "https://api.github.com/users/trexfeathers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trexfeathers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trexfeathers/subscriptions",
            "organizations_url": "https://api.github.com/users/trexfeathers/orgs",
            "repos_url": "https://api.github.com/users/trexfeathers/repos",
            "events_url": "https://api.github.com/users/trexfeathers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trexfeathers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-17T17:14:48Z",
        "updated_at": "2020-03-17T17:14:48Z",
        "author_association": "NONE",
        "body": "> @trexfeathers Could you summarize what workarounds you ended up using?\r\n\r\n@pp-mo care to share?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/600192977/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/601150129",
        "html_url": "https://github.com/dask/dask/issues/5540#issuecomment-601150129",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5540",
        "id": 601150129,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTE1MDEyOQ==",
        "user": {
            "login": "pp-mo",
            "id": 2089069,
            "node_id": "MDQ6VXNlcjIwODkwNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2089069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pp-mo",
            "html_url": "https://github.com/pp-mo",
            "followers_url": "https://api.github.com/users/pp-mo/followers",
            "following_url": "https://api.github.com/users/pp-mo/following{/other_user}",
            "gists_url": "https://api.github.com/users/pp-mo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pp-mo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pp-mo/subscriptions",
            "organizations_url": "https://api.github.com/users/pp-mo/orgs",
            "repos_url": "https://api.github.com/users/pp-mo/repos",
            "events_url": "https://api.github.com/users/pp-mo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pp-mo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-19T12:26:47Z",
        "updated_at": "2020-03-19T12:33:30Z",
        "author_association": "NONE",
        "body": ">  what workarounds you ended up using?\r\n\r\nFirstly, the key performance problem was really simple to fix by replacing the `array.compute()` with :\r\n```\r\ndef compute_via_store(data):\r\n    result = np.empty(data.shape, dtype=data.dtype)\r\n    da.store(data, result)\r\n    return result\r\n```\r\n\r\nUnfortunately, this wasn't appropriate to the needs of a user creating a generic processing library, because they needed to deliver a dask-array result that could be further indexed, and the compute phase is down to the end-user.\r\n\r\nSo then I produced a \"safe-slice\" routine.  \r\nNotes:\r\n  * replaces simple slicing op with a equivalent function that constructs an equivalent-valued lazy array result\r\n  * scheme:\r\n    * pick apart the array into its existing chunks \r\n    * slice each chunk independently, using indexing derived from the 'top level' one\r\nresult, but computing a bit differently\r\n    * make an \"np.copy\" of each indexed chunk\r\n      * **this bit is crucial** : [as suggested here](https://github.com/dask/dask/issues/3595#issuecomment-449546228)\r\n  * tried to generalise the indexing operation, but it is complex\r\n  * does not assume structure of the underlying array\r\n  * does not rely too much on dask internals, but does unpick the chunks data\r\n  * it does work, but ..\r\n    * only a hacky POC\r\n    * specific to the indexing operation\r\n    * ***specific for cases where*** the slicing, *as applied to each chunk*, results in a small fraction of the total data\r\n\r\ndocumented as :\r\n```\r\ndef safeslice(data, indices, chunks=None):\r\n    \"\"\"\r\n    Return a subset of a dask array, but with indexing applied independently to\r\n    each slice of the input array, *prior* to their recombination to produce\r\n    the result array.\r\n\r\n    Args:\r\n\r\n    * data (dask array):\r\n        input data\r\n    * indices (int or slice or tuple(int or slice)):\r\n        required sub-section of the data.\r\n\r\n    Kwargs:\r\n\r\n    * chunks (list of (int or \"auto\")):\r\n        chunking argument for 'rechunk' applied to the input.\r\n        If set, forces the input to be rechunked as specified.\r\n        ( This replaces the normal operation, which is to rechunk the input\r\n        making the indexed dimensions undivided ).\r\n        Mainly for testing on small arrays.\r\n\r\n    .. note::\r\n\r\n        'indices' currently does not support Ellipsis or newaxis.\r\n\r\n    \"\"\"\r\n```\r\n\r\nHere's the actual source :\r\n[safe_cube_slice.py.txt](https://github.com/dask/dask/files/4354338/safe_cube_slice.py.txt)\r\n\r\n\r\nI apologise for the probable extreme naivety of the code here!\r\nI may be mis-using terminology, and I'm probably ignoring some good existing tools in Dask.\r\nThis solution is a \"view from outside\", as I don't understand internals of Dask too well.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/601150129/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/601168519",
        "html_url": "https://github.com/dask/dask/issues/5540#issuecomment-601168519",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5540",
        "id": 601168519,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMTE2ODUxOQ==",
        "user": {
            "login": "dcherian",
            "id": 2448579,
            "node_id": "MDQ6VXNlcjI0NDg1Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2448579?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcherian",
            "html_url": "https://github.com/dcherian",
            "followers_url": "https://api.github.com/users/dcherian/followers",
            "following_url": "https://api.github.com/users/dcherian/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcherian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcherian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcherian/subscriptions",
            "organizations_url": "https://api.github.com/users/dcherian/orgs",
            "repos_url": "https://api.github.com/users/dcherian/repos",
            "events_url": "https://api.github.com/users/dcherian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcherian/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-19T13:09:57Z",
        "updated_at": "2020-03-19T13:09:57Z",
        "author_association": "MEMBER",
        "body": "@pp-mo Thanks you for taking the time to write that up! \r\nIt will take me some time to fully understand so I may have some questions for you later.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/601168519/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]