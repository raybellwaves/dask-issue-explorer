{
    "url": "https://api.github.com/repos/dask/dask/issues/10442",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10442/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10442/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10442/events",
    "html_url": "https://github.com/dask/dask/issues/10442",
    "id": 1850267294,
    "node_id": "I_kwDOAbcwm85uSNae",
    "number": 10442,
    "title": "`Dataframe.to_csv` does not work as expected with `mode=\"x\"`",
    "user": {
        "login": "hendrikmakait",
        "id": 2699097,
        "node_id": "MDQ6VXNlcjI2OTkwOTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2699097?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hendrikmakait",
        "html_url": "https://github.com/hendrikmakait",
        "followers_url": "https://api.github.com/users/hendrikmakait/followers",
        "following_url": "https://api.github.com/users/hendrikmakait/following{/other_user}",
        "gists_url": "https://api.github.com/users/hendrikmakait/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/hendrikmakait/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hendrikmakait/subscriptions",
        "organizations_url": "https://api.github.com/users/hendrikmakait/orgs",
        "repos_url": "https://api.github.com/users/hendrikmakait/repos",
        "events_url": "https://api.github.com/users/hendrikmakait/events{/privacy}",
        "received_events_url": "https://api.github.com/users/hendrikmakait/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2949860090,
            "node_id": "MDU6TGFiZWwyOTQ5ODYwMDkw",
            "url": "https://api.github.com/repos/dask/dask/labels/upstream",
            "name": "upstream",
            "color": "DDF8B0",
            "default": false,
            "description": ""
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3798450413,
            "node_id": "LA_kwDOAbcwm87iZ8Dt",
            "url": "https://api.github.com/repos/dask/dask/labels/bug",
            "name": "bug",
            "color": "faadaf",
            "default": true,
            "description": "Something is broken"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "hendrikmakait",
        "id": 2699097,
        "node_id": "MDQ6VXNlcjI2OTkwOTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2699097?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hendrikmakait",
        "html_url": "https://github.com/hendrikmakait",
        "followers_url": "https://api.github.com/users/hendrikmakait/followers",
        "following_url": "https://api.github.com/users/hendrikmakait/following{/other_user}",
        "gists_url": "https://api.github.com/users/hendrikmakait/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/hendrikmakait/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hendrikmakait/subscriptions",
        "organizations_url": "https://api.github.com/users/hendrikmakait/orgs",
        "repos_url": "https://api.github.com/users/hendrikmakait/repos",
        "events_url": "https://api.github.com/users/hendrikmakait/events{/privacy}",
        "received_events_url": "https://api.github.com/users/hendrikmakait/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "hendrikmakait",
            "id": 2699097,
            "node_id": "MDQ6VXNlcjI2OTkwOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2699097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hendrikmakait",
            "html_url": "https://github.com/hendrikmakait",
            "followers_url": "https://api.github.com/users/hendrikmakait/followers",
            "following_url": "https://api.github.com/users/hendrikmakait/following{/other_user}",
            "gists_url": "https://api.github.com/users/hendrikmakait/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hendrikmakait/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hendrikmakait/subscriptions",
            "organizations_url": "https://api.github.com/users/hendrikmakait/orgs",
            "repos_url": "https://api.github.com/users/hendrikmakait/repos",
            "events_url": "https://api.github.com/users/hendrikmakait/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hendrikmakait/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2023-08-14T17:56:56Z",
    "updated_at": "2024-01-15T01:48:51Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Case 1: Using `mode=\"x\"`**\r\n\r\n```python3\r\ndef test_to_csv_with_exclusive_mode():\r\n    df0 = pd.DataFrame(\r\n        {\"x\": [\"a\", \"b\", \"c\", \"d\"], \"y\": [1, 2, 3, 4]}\r\n    )\r\n    df = dd.from_pandas(df0, npartitions=2)\r\n    with tmpdir() as dir:\r\n        df.to_csv(dir, index=False, mode=\"x\")\r\n        result = dd.read_csv(os.path.join(dir, \"*\")).compute()\r\n    assert_eq(result, df0, check_index=False)\r\n```\r\nraises `FileExistsError`.\r\n\r\n<details>\r\n  <summary>Full traceback</summary>\r\n\r\n```\r\n_________________ test_to_csv_with_exclusive_mode _________________\r\n\r\n    def test_to_csv_with_single_file_and_exclusive_mode():\r\n        df0 = pd.DataFrame(\r\n            {\"x\": [\"a\", \"b\", \"c\", \"d\"], \"y\": [1, 2, 3, 4]}\r\n        )\r\n        df = dd.from_pandas(df0, npartitions=2)\r\n        with tmpdir() as dir:\r\n            csv_path = os.path.join(dir, \"test.csv\")\r\n>           df.to_csv(dir, index=False, mode=\"x\")#, single_file=True)\r\n\r\ndask/dataframe/io/tests/test_csv.py:1550: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ndask/dataframe/core.py:1860: in to_csv\r\n    return to_csv(self, filename, **kwargs)\r\ndask/dataframe/io/csv.py:994: in to_csv\r\n    return list(dask.compute(*values, **compute_kwargs))\r\ndask/base.py:666: in compute\r\n    results = schedule(dsk, keys, **kwargs)\r\ndask/threaded.py:89: in get\r\n    results = get_async(\r\ndask/local.py:511: in get_async\r\n    raise_exception(exc, tb)\r\ndask/local.py:319: in reraise\r\n    raise exc\r\ndask/local.py:224: in execute_task\r\n    result = _execute_task(task, data)\r\ndask/core.py:121: in _execute_task\r\n    return func(*(_execute_task(a, cache) for a in args))\r\ndask/utils.py:73: in apply\r\n    return func(*args, **kwargs)\r\ndask/dataframe/io/csv.py:792: in _write_csv\r\n    with fil as f:\r\n/opt/homebrew/Caskroom/mambaforge/base/envs/dask-dev/lib/python3.10/site-packages/fsspec/core.py:102: in __enter__\r\n    f = self.fs.open(self.path, mode=mode)\r\n/opt/homebrew/Caskroom/mambaforge/base/envs/dask-dev/lib/python3.10/site-packages/fsspec/spec.py:1241: in open\r\n    f = self._open(\r\n/opt/homebrew/Caskroom/mambaforge/base/envs/dask-dev/lib/python3.10/site-packages/fsspec/implementations/local.py:184: in _open\r\n    return LocalFileOpener(path, mode, fs=self, **kwargs)\r\n/opt/homebrew/Caskroom/mambaforge/base/envs/dask-dev/lib/python3.10/site-packages/fsspec/implementations/local.py:315: in __init__\r\n    self._open()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <fsspec.implementations.local.LocalFileOpener object at 0x163610520>\r\n\r\n    def _open(self):\r\n        if self.f is None or self.f.closed:\r\n            if self.autocommit or \"w\" not in self.mode:\r\n>               self.f = open(self.path, mode=self.mode)\r\nE               FileExistsError: [Errno 17] File exists: '/var/folders/jz/xz58q0h563q9yps50sxjm9l80000gn/T/tmpv34_uizm'\r\n\r\n/opt/homebrew/Caskroom/mambaforge/base/envs/dask-dev/lib/python3.10/site-packages/fsspec/implementations/local.py:320: FileExistsError\r\n```\r\n</details>\r\n\r\n\r\nInstead, I would have expected this function to expand paths and write to multiple files similar to `mode=\"w\"`.\r\n\r\n**Case 2: Using `mode=\"x\"` with a `single_file=True`**\r\n```python3\r\ndef test_to_csv_with_single_file_and_exclusive_mode():\r\n    df0 = pd.DataFrame(\r\n        {\"x\": [\"a\", \"b\", \"c\", \"d\"], \"y\": [1, 2, 3, 4]}\r\n    )\r\n    df = dd.from_pandas(df0, npartitions=2)\r\n    with tmpdir() as dir:\r\n        csv_path = os.path.join(dir, \"test.csv\")\r\n        df.to_csv(csv_path, index=False, mode=\"\", single_file=True)\r\n        result = dd.read_csv(os.path.join(dir, \"*\")).compute()\r\n    assert_eq(result, df0, check_index=False)\r\n```\r\nraises `ValueError: must have exactly one of create/read/write/append mode`.\r\n\r\n<details>\r\n  <summary>Full traceback</summary>\r\n\r\n```\r\n_________________ test_to_csv_with_single_file_and_exclusive_mode _________________\r\n\r\n    def test_to_csv_with_single_file_and_exclusive_mode():\r\n        df0 = pd.DataFrame(\r\n            {\"x\": [\"a\", \"b\", \"c\", \"d\"], \"y\": [1, 2, 3, 4]}\r\n        )\r\n        df = dd.from_pandas(df0, npartitions=2)\r\n        with tmpdir() as dir:\r\n            csv_path = os.path.join(dir, \"test.csv\")\r\n>           df.to_csv(csv_path, index=False, mode=\"x\", single_file=True)\r\n\r\ndask/dataframe/io/tests/test_csv.py:1550: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ndask/dataframe/core.py:1860: in to_csv\r\n    return to_csv(self, filename, **kwargs)\r\ndask/dataframe/io/csv.py:994: in to_csv\r\n    return list(dask.compute(*values, **compute_kwargs))\r\ndask/base.py:666: in compute\r\n    results = schedule(dsk, keys, **kwargs)\r\ndask/threaded.py:89: in get\r\n    results = get_async(\r\ndask/local.py:511: in get_async\r\n    raise_exception(exc, tb)\r\ndask/local.py:319: in reraise\r\n    raise exc\r\ndask/local.py:224: in execute_task\r\n    result = _execute_task(task, data)\r\ndask/core.py:121: in _execute_task\r\n    return func(*(_execute_task(a, cache) for a in args))\r\ndask/utils.py:73: in apply\r\n    return func(*args, **kwargs)\r\ndask/dataframe/io/csv.py:792: in _write_csv\r\n    with fil as f:\r\n/opt/homebrew/Caskroom/mambaforge/base/envs/dask-dev/lib/python3.10/site-packages/fsspec/core.py:102: in __enter__\r\n    f = self.fs.open(self.path, mode=mode)\r\n/opt/homebrew/Caskroom/mambaforge/base/envs/dask-dev/lib/python3.10/site-packages/fsspec/spec.py:1241: in open\r\n    f = self._open(\r\n/opt/homebrew/Caskroom/mambaforge/base/envs/dask-dev/lib/python3.10/site-packages/fsspec/implementations/local.py:184: in _open\r\n    return LocalFileOpener(path, mode, fs=self, **kwargs)\r\n/opt/homebrew/Caskroom/mambaforge/base/envs/dask-dev/lib/python3.10/site-packages/fsspec/implementations/local.py:315: in __init__\r\n    self._open()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <fsspec.implementations.local.LocalFileOpener object at 0x15f0105b0>\r\n\r\n    def _open(self):\r\n        if self.f is None or self.f.closed:\r\n            if self.autocommit or \"w\" not in self.mode:\r\n>               self.f = open(self.path, mode=self.mode)\r\nE               ValueError: must have exactly one of create/read/write/append mode\r\n\r\n/opt/homebrew/Caskroom/mambaforge/base/envs/dask-dev/lib/python3.10/site-packages/fsspec/implementations/local.py:320: ValueError\r\n```\r\n</details>\r\n\r\nInstead, I would have expected this function to be able to write to the single file similar to `mode=\"w\"`. (See https://github.com/dask/dask/pull/10441#discussion_r1293437311 for a pointer to where the problem might be.) cc @benrutter",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10442/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10442/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}