[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1213513884",
        "html_url": "https://github.com/dask/dask/pull/9382#issuecomment-1213513884",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9382",
        "id": 1213513884,
        "node_id": "IC_kwDOAbcwm85IVMCc",
        "user": {
            "login": "gjoseph92",
            "id": 3309802,
            "node_id": "MDQ6VXNlcjMzMDk4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjoseph92",
            "html_url": "https://github.com/gjoseph92",
            "followers_url": "https://api.github.com/users/gjoseph92/followers",
            "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
            "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
            "repos_url": "https://api.github.com/users/gjoseph92/repos",
            "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-08-12T20:55:37Z",
        "updated_at": "2022-08-12T20:55:37Z",
        "author_association": "MEMBER",
        "body": "Since I claimed \"These graphs would be very simple to convert to Blockwise\", I figured I might as well just do it. Of course it wasn't that simple.\r\n1. Dealing with the `region` parameter was a annoying to understand at first, but I did it and now I think it's actually simpler to read\r\n2. Having to drop all the way to low-level `blockwise` (instead of being able to use `map_blocks`) is annoying and verbose. I would have just used `map_blocks` and stolen the layer out of the resulting array, but `map_blocks` appends its own token onto the layer name. And also the graphs it generated were broken, I think due to handling of BlockwiseDeps as arguments.\r\n3. The graphs here are still broken. I think because we optimize all the sources together: https://github.com/dask/dask/blob/8b95f983c232c1bd628e9cba0695d3ef229d290b/dask/array/core.py#L1161-L1168\r\n\r\nSo though each store Blockwise layer is referring to _keys_ that will exist in the graph, that _layer_ doesn't exist in the graph, which breaks `fuse_roots` (which has its own issues https://github.com/dask/dask/pull/9273 https://github.com/dask/dask/pull/8560). At least, that's my theory off the top of my head. Failing like:\r\n```\r\n>           ar, br = da.compute(ar, br)\r\n\r\ndask/array/tests/test_array_core.py:1949: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ndask/base.py:594: in compute\r\n    dsk = collections_to_dsk(collections, optimize_graph, **kwargs)\r\ndask/base.py:367: in collections_to_dsk\r\n    dsk = opt(dsk, keys, **kwargs)\r\ndask/array/optimization.py:49: in optimize\r\n    dsk = fuse_roots(dsk, keys=keys)\r\ndask/blockwise.py:1701: in fuse_roots\r\n    and not any(dependencies[dep] for dep in deps)  # no need to fuse if 0 or 1\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n.0 = <set_iterator object at 0x7fcc183d2a80>\r\n\r\n>       and not any(dependencies[dep] for dep in deps)  # no need to fuse if 0 or 1\r\n        and all(len(dependents[dep]) == 1 for dep in deps)\r\n        and all(layer.annotations == graph.layers[dep].annotations for dep in deps)\r\n    ):\r\nE   KeyError: 'add-1e4ef0fe3f3d399c1795f7a72d052970'\r\n\r\ndask/blockwise.py:1701: KeyError\r\n```\r\n\r\nI'm going to stop working on this now. I doubt I'll pick it up again. Just leaving this here in case someone like @ian-r-rose @rjzamora is ever interested in the error and getting it over the line.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1213513884/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]