[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2125291094",
        "html_url": "https://github.com/dask/dask/issues/11127#issuecomment-2125291094",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11127",
        "id": 2125291094,
        "node_id": "IC_kwDOAbcwm85-rV5W",
        "user": {
            "login": "quasiben",
            "id": 1403768,
            "node_id": "MDQ6VXNlcjE0MDM3Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1403768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quasiben",
            "html_url": "https://github.com/quasiben",
            "followers_url": "https://api.github.com/users/quasiben/followers",
            "following_url": "https://api.github.com/users/quasiben/following{/other_user}",
            "gists_url": "https://api.github.com/users/quasiben/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quasiben/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quasiben/subscriptions",
            "organizations_url": "https://api.github.com/users/quasiben/orgs",
            "repos_url": "https://api.github.com/users/quasiben/repos",
            "events_url": "https://api.github.com/users/quasiben/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quasiben/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-05-22T16:48:08Z",
        "updated_at": "2024-05-22T16:48:27Z",
        "author_association": "MEMBER",
        "body": "Thanks @joshua-gould .  I can easily reproduce with what you have above.  It seems that when `block_info` is provided dask is in code path which assumes an Array collection https://github.com/dask/dask/blob/484fc3f1136827308db133cd256ba74df7a38d8c/dask/array/core.py#L901-L926\r\n\r\nThis is obviously a problem as `meta` is coercing the collection into a resulting Dataframe.  I don't think we can _just_ swap out partitions for chunks [here](https://github.com/dask/dask/blob/484fc3f1136827308db133cd256ba74df7a38d8c/dask/array/core.py#L926C23-L926C36)\r\n\r\nWould it be possible to convert the array to a dataframe and call map_partitions instead:\r\n\r\n> a.to_dask_dataframe().map_partitions(test2)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2125291094/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2125416838",
        "html_url": "https://github.com/dask/dask/issues/11127#issuecomment-2125416838",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11127",
        "id": 2125416838,
        "node_id": "IC_kwDOAbcwm85-r0mG",
        "user": {
            "login": "joshua-gould",
            "id": 5237151,
            "node_id": "MDQ6VXNlcjUyMzcxNTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5237151?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshua-gould",
            "html_url": "https://github.com/joshua-gould",
            "followers_url": "https://api.github.com/users/joshua-gould/followers",
            "following_url": "https://api.github.com/users/joshua-gould/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshua-gould/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshua-gould/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshua-gould/subscriptions",
            "organizations_url": "https://api.github.com/users/joshua-gould/orgs",
            "repos_url": "https://api.github.com/users/joshua-gould/repos",
            "events_url": "https://api.github.com/users/joshua-gould/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshua-gould/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-05-22T17:48:19Z",
        "updated_at": "2024-05-22T17:48:19Z",
        "author_association": "NONE",
        "body": "I'm trying to extract the indices and values of a 2-d array where the value > 0. I have a solution below using `dask.delayed`:\r\n```\r\nimport dask\r\nimport dask.array as da\r\nimport dask.dataframe as dd\r\nimport numpy as np\r\nimport pandas as pd\r\nfrom dask.array.core import slices_from_chunks\r\n\r\nx = da.random.random((24, 24), chunks=(5, 6))\r\n# numpy solution\r\n_x = x.compute()\r\n_indices = np.where(_x > 0)\r\ndf = pd.DataFrame({\"value\": _x[_indices], \"y\": _indices[0], \"x\": _indices[1]})\r\n\r\n\r\n@dask.delayed\r\ndef process_chunk(a, offset):\r\n    indices = np.where(a > 0)\r\n    y = indices[0] + offset[0]\r\n    x = indices[1] + offset[1]\r\n    return pd.DataFrame({\"value\": a[indices], \"y\": y, \"x\": x})\r\n\r\n\r\noutput = []\r\nfor s in slices_from_chunks(x.chunks):\r\n    r = process_chunk(x[s], (s[0].start, s[1].start))\r\n    output.append(r)\r\nmeta = dd.utils.make_meta([(\"value\", x.dtype), (\"y\", np.int64), (\"x\", np.int64)])\r\nddf = dd.from_delayed(output, meta=meta).compute()\r\n\r\n# compare with numpy\r\ndf = df.sort_values([\"y\", \"x\", \"value\"]).reset_index(drop=True)\r\nddf = ddf.sort_values([\"y\", \"x\", \"value\"]).reset_index(drop=True)\r\npd.testing.assert_frame_equal(df, ddf)\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2125416838/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2126995414",
        "html_url": "https://github.com/dask/dask/issues/11127#issuecomment-2126995414",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11127",
        "id": 2126995414,
        "node_id": "IC_kwDOAbcwm85-x1_W",
        "user": {
            "login": "quasiben",
            "id": 1403768,
            "node_id": "MDQ6VXNlcjE0MDM3Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1403768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quasiben",
            "html_url": "https://github.com/quasiben",
            "followers_url": "https://api.github.com/users/quasiben/followers",
            "following_url": "https://api.github.com/users/quasiben/following{/other_user}",
            "gists_url": "https://api.github.com/users/quasiben/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quasiben/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quasiben/subscriptions",
            "organizations_url": "https://api.github.com/users/quasiben/orgs",
            "repos_url": "https://api.github.com/users/quasiben/repos",
            "events_url": "https://api.github.com/users/quasiben/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quasiben/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-05-23T12:33:40Z",
        "updated_at": "2024-05-23T12:33:40Z",
        "author_association": "MEMBER",
        "body": "Hmm, could you instead do this with `nonzero` and a mask ?\r\n\r\n```python\r\narr = np.array([[-1, 2, 0], [4, -5, 6], [0, 0, 7]])\r\narr = da.from_array(arr)\r\nindicies = da.nonzero(arr > 0) # or rely on dispatching with np.nonzero\r\narr[arr >0]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2126995414/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2127222443",
        "html_url": "https://github.com/dask/dask/issues/11127#issuecomment-2127222443",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11127",
        "id": 2127222443,
        "node_id": "IC_kwDOAbcwm85-ytar",
        "user": {
            "login": "joshua-gould",
            "id": 5237151,
            "node_id": "MDQ6VXNlcjUyMzcxNTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5237151?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joshua-gould",
            "html_url": "https://github.com/joshua-gould",
            "followers_url": "https://api.github.com/users/joshua-gould/followers",
            "following_url": "https://api.github.com/users/joshua-gould/following{/other_user}",
            "gists_url": "https://api.github.com/users/joshua-gould/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joshua-gould/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joshua-gould/subscriptions",
            "organizations_url": "https://api.github.com/users/joshua-gould/orgs",
            "repos_url": "https://api.github.com/users/joshua-gould/repos",
            "events_url": "https://api.github.com/users/joshua-gould/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joshua-gould/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-05-23T14:08:26Z",
        "updated_at": "2024-05-23T14:08:26Z",
        "author_association": "NONE",
        "body": "Thanks for your response. I'm not sure how to create a dask dataframe using this approach. I tried:\r\n\r\n```\r\nx = da.random.random((24, 24), chunks=(5, 6))\r\nindices = da.where(x > 0)\r\nvals = x.reshape(-1)[indices[0] * x.shape[1] + indices[1]]\r\n\r\nddf = dd.concat(\r\n    [\r\n        dd.from_array(vals, columns=[\"value\"]),\r\n        dd.from_array(da.stack(indices, axis=1, allow_unknown_chunksizes=True), columns=[\"y\", \"x\"]),\r\n    ],\r\n    axis=1,\r\n).compute()\r\n```\r\n\r\nBut I get the warnings:\r\n```\r\ndask/array/slicing.py:1089: PerformanceWarning: Increasing number of chunks by factor of 20\r\n  p = blockwise(\r\ndask_expr/_concat.py:146: UserWarning: Concatenating dataframes with unknown divisions.\r\nWe're assuming that the indices of each dataframes are \r\n aligned. This assumption is not generally safe.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2127222443/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]