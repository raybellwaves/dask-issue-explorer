{
    "url": "https://api.github.com/repos/dask/dask/issues/4471",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/4471/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/4471/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/4471/events",
    "html_url": "https://github.com/dask/dask/issues/4471",
    "id": 408310533,
    "node_id": "MDU6SXNzdWU0MDgzMTA1MzM=",
    "number": 4471,
    "title": "Create architecture diagram for the distributed system",
    "user": {
        "login": "mrocklin",
        "id": 306380,
        "node_id": "MDQ6VXNlcjMwNjM4MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mrocklin",
        "html_url": "https://github.com/mrocklin",
        "followers_url": "https://api.github.com/users/mrocklin/followers",
        "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
        "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
        "organizations_url": "https://api.github.com/users/mrocklin/orgs",
        "repos_url": "https://api.github.com/users/mrocklin/repos",
        "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mrocklin/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 386719598,
            "node_id": "MDU6TGFiZWwzODY3MTk1OTg=",
            "url": "https://api.github.com/repos/dask/dask/labels/documentation",
            "name": "documentation",
            "color": "f9d0c4",
            "default": true,
            "description": "Improve or add to documentation"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2019-02-08T20:24:53Z",
    "updated_at": "2021-08-11T13:32:03Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Currently our best architecture diagrams are the following:\r\n\r\n![](http://docs.dask.org/en/latest/_images/collections-schedulers.png)\r\n\r\n![](http://matthewrocklin.com/slides/images/network.svg)\r\n\r\nIt would be nice to refresh these diagrams so that they can be more easily used\r\nin documentation and presentations.  In particular it would be useful to make\r\nclear the following points:\r\n\r\n1.  Dask networks are composed of three pieces\r\n    1.  A centralized scheduler, which manages workers\r\n    2.  Many workers, which do the computation, hold onto results, and\r\n        communicate results to each other.\r\n    3.  One or multiple clients, from which users interact from Jupyter\r\n        notebooks or scripts and submit work to the scheduler for execution on\r\n        the workers\r\n\r\n2.  Dask can be deployed on many different cluster technologies including\r\n    -  Hadoop/Spark clusters running YARN\r\n    -  HPC clusters running job managers like SLURM, SGE, PBS, LSF, or others\r\n       common in academic and scientific labs\r\n    -  Kubernetes clusters, either on the cloud or on premises\r\n\r\n    I feel that these base technologies are typically represented as the bottom layer of a set of blocks\r\n\r\n3.  The user, in their Jupyter notebook uses normal Python code that looks like\r\n    Pandas, Scikit-Learn, or other common PyData libraries.\r\n\r\n    Dask then breaks up these big data computations into many smaller\r\n    computations that actually use the Pandas, Scikit-Learn, and other\r\n    libraries, submits them to the scheduler, and runs them on the workers,\r\n    giving the user the experience of big data with familiar libraries.\r\n\r\n4.  Dask can also extend far beyond traditional MapReduce/Spark style\r\n    comptutations, and can execute much more complex algorithms, such as are\r\n    often needed in modern problems today extending beyond typical database\r\n    queries.\r\n\r\nThis is a complex story that we'll need to tell both in static images, but also\r\npossibly in animations, slide transitions, or even short videos.\r\n\r\nI'm writing this issue mostly to point people with some design experience.  Anyone would be welcome to help out here.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/4471/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 1,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/4471/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}