[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1265646808",
        "html_url": "https://github.com/dask/dask/issues/9525#issuecomment-1265646808",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9525",
        "id": 1265646808,
        "node_id": "IC_kwDOAbcwm85LcDzY",
        "user": {
            "login": "estebanag",
            "id": 27647769,
            "node_id": "MDQ6VXNlcjI3NjQ3NzY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/27647769?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/estebanag",
            "html_url": "https://github.com/estebanag",
            "followers_url": "https://api.github.com/users/estebanag/followers",
            "following_url": "https://api.github.com/users/estebanag/following{/other_user}",
            "gists_url": "https://api.github.com/users/estebanag/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/estebanag/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/estebanag/subscriptions",
            "organizations_url": "https://api.github.com/users/estebanag/orgs",
            "repos_url": "https://api.github.com/users/estebanag/repos",
            "events_url": "https://api.github.com/users/estebanag/events{/privacy}",
            "received_events_url": "https://api.github.com/users/estebanag/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-03T15:31:25Z",
        "updated_at": "2022-10-03T15:31:25Z",
        "author_association": "CONTRIBUTOR",
        "body": "Here's a simple regression example to reproduce the problem (model: `y = slope * x`), where `x` and `y` are given and we wish to estimate `slope`:\r\n\r\n```python\r\nimport dask\r\nimport numpy as np\r\nimport torch\r\nimport torch.nn as nn\r\nfrom dask.distributed import Client\r\nfrom torch.optim import SGD\r\n\r\n\r\ndef func(coef, x):\r\n    return coef * x\r\n\r\n\r\ndef run(single_threaded: bool = True):\r\n    # Simulate x and y\r\n    x = np.linspace(0, 5, 100)\r\n    slope = 3\r\n    y = slope * x\r\n\r\n    # Prepare tensors\r\n    coef = torch.zeros(1, dtype=torch.double, requires_grad=True)\r\n    y = torch.tensor(y, requires_grad=False)\r\n    x = torch.tensor(x, requires_grad=False)\r\n\r\n    # Set up dask scheduler\r\n    _ = Client()\r\n    if single_threaded:\r\n        dask.config.set(scheduler=\"single-threaded\")\r\n\r\n    # Estimate slope\r\n    opt = SGD([coef], lr=0.1)\r\n    for _ in range(300):\r\n        # Predict for current coef (using dask)\r\n        dask_predictions = []\r\n        for xx in x:\r\n            dask_predictions.append(dask.delayed(func)(coef, xx))\r\n        dask_predictions = dask.compute(*dask_predictions)\r\n\r\n        predictions = torch.stack(dask_predictions).squeeze()\r\n\r\n        # Compute loss\r\n        loss_func = nn.MSELoss()\r\n        loss = loss_func(predictions, y)\r\n\r\n        # Backpropagation step\r\n        opt.zero_grad()\r\n        loss.backward()\r\n        opt.step()\r\n\r\n    print(f\"Slope: {slope}\")\r\n    print(f\"Estimated slope: {coef[0]}\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    run(single_threaded=True)\r\n    run(single_threaded=False)\r\n```\r\n\r\nThe output is:\r\n```\r\nSlope: 3\r\nEstimated slope: 2.9999999999999996\r\n\r\nSlope: 3\r\nEstimated slope: 0.0\r\n```\r\nThe last `Estimated slope: 0.0` corresponds to the estimation of the `slope` when I use the `distributed` scheduler.\r\n\r\n@muammar would you know why this is? Considering your experience with [this issue](https://github.com/dask/distributed/issues/2581).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1265646808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]