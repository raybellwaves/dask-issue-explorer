{
    "url": "https://api.github.com/repos/dask/dask/issues/8620",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/8620/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/8620/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/8620/events",
    "html_url": "https://github.com/dask/dask/issues/8620",
    "id": 1113974911,
    "node_id": "I_kwDOAbcwm85CZeh_",
    "number": 8620,
    "title": "`read_sql_query` with meta converts dtypes from 32 to 64. ",
    "user": {
        "login": "jsignell",
        "id": 4806877,
        "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsignell",
        "html_url": "https://github.com/jsignell",
        "followers_url": "https://api.github.com/users/jsignell/followers",
        "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
        "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
        "organizations_url": "https://api.github.com/users/jsignell/orgs",
        "repos_url": "https://api.github.com/users/jsignell/repos",
        "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jsignell/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3798450413,
            "node_id": "LA_kwDOAbcwm87iZ8Dt",
            "url": "https://api.github.com/repos/dask/dask/labels/bug",
            "name": "bug",
            "color": "faadaf",
            "default": true,
            "description": "Something is broken"
        },
        {
            "id": 3798450422,
            "node_id": "LA_kwDOAbcwm87iZ8D2",
            "url": "https://api.github.com/repos/dask/dask/labels/p3",
            "name": "p3",
            "color": "ffff33",
            "default": false,
            "description": "Affects a small number of users or is largely cosmetic"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 9,
    "created_at": "2022-01-25T14:42:50Z",
    "updated_at": "2022-08-17T13:42:49Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "After https://github.com/dask/dask/pull/8158 there is one test that doesn't quite pass on win32 I think it is because `read_sql_query` converts int32 to int64. I am not quite sure where the issue lies. Here is the failing test:\r\n\r\n```python-traceback\r\n================================== FAILURES ===================================\r\n____________________________ test_query_with_meta _____________________________\r\n[gw1] win32 -- Python 3.8.12 C:\\Miniconda3\\envs\\test-environment\\python.exe\r\n\r\ndb = 'sqlite:///C:\\\\Users\\\\RUNNER~1\\\\AppData\\\\Local\\\\Temp\\\\tmpwxx4978a'\r\n\r\n    def test_query_with_meta(db):\r\n        from sqlalchemy import sql\r\n    \r\n        data = {\r\n            \"name\": pd.Series([], name=\"name\", dtype=\"str\"),\r\n            \"age\": pd.Series([], name=\"age\", dtype=\"int\"),\r\n        }\r\n        index = pd.Index([], name=\"number\", dtype=\"int\")\r\n        meta = pd.DataFrame(data, index=index)\r\n    \r\n        s1 = sql.select(\r\n            [sql.column(\"number\"), sql.column(\"name\"), sql.column(\"age\")]\r\n        ).select_from(sql.table(\"test\"))\r\n        out = read_sql_query(s1, db, npartitions=2, index_col=\"number\", meta=meta)\r\n>       assert_eq(out, df[[\"name\", \"age\"]])\r\n\r\ndask\\dataframe\\io\\tests\\test_sql.py:433: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\na =            name  age\r\nnumber              \r\n0         Alice   33\r\n1           Bob   40\r\n2         Chris   22\r\n3          Dora   16\r\n4         Edith   53\r\n5       Francis   30\r\n6       Garreth   20\r\nb =            name  age\r\nnumber              \r\n0         Alice   33\r\n1           Bob   40\r\n2         Chris   22\r\n3          Dora   16\r\n4         Edith   53\r\n5       Francis   30\r\n6       Garreth   20\r\ncheck_names = True, check_dtype = True, check_divisions = True\r\ncheck_index = True, scheduler = 'sync', kwargs = {}\r\n\r\n    def assert_eq(\r\n        a,\r\n        b,\r\n        check_names=True,\r\n        check_dtype=True,\r\n        check_divisions=True,\r\n        check_index=True,\r\n        scheduler=\"sync\",\r\n        **kwargs,\r\n    ):\r\n        if check_divisions:\r\n            assert_divisions(a, scheduler=scheduler)\r\n            assert_divisions(b, scheduler=scheduler)\r\n            if hasattr(a, \"divisions\") and hasattr(b, \"divisions\"):\r\n                at = type(np.asarray(a.divisions).tolist()[0])  # numpy to python\r\n                bt = type(np.asarray(b.divisions).tolist()[0])  # scalar conversion\r\n                assert at == bt, (at, bt)\r\n        assert_sane_keynames(a)\r\n        assert_sane_keynames(b)\r\n        a = _check_dask(\r\n            a, check_names=check_names, check_dtypes=check_dtype, scheduler=scheduler\r\n        )\r\n        b = _check_dask(\r\n            b, check_names=check_names, check_dtypes=check_dtype, scheduler=scheduler\r\n        )\r\n        if hasattr(a, \"to_pandas\"):\r\n            a = a.to_pandas()\r\n        if hasattr(b, \"to_pandas\"):\r\n            b = b.to_pandas()\r\n        if isinstance(a, (pd.DataFrame, pd.Series)):\r\n            a = _maybe_sort(a, check_index)\r\n            b = _maybe_sort(b, check_index)\r\n        if not check_index:\r\n            a = a.reset_index(drop=True)\r\n            b = b.reset_index(drop=True)\r\n        if isinstance(a, pd.DataFrame):\r\n>           tm.assert_frame_equal(\r\n                a, b, check_names=check_names, check_dtype=check_dtype, **kwargs\r\nE               AssertionError: Attributes of DataFrame.iloc[:, 1] (column name=\"age\") are different\r\nE               \r\nE               Attribute \"dtype\" are different\r\nE               [left]:  int32\r\nE               [right]: int64\r\n\r\ndask\\dataframe\\utils.py:560: AssertionError\r\n```",
    "closed_by": {
        "login": "jrbourbeau",
        "id": 11656932,
        "node_id": "MDQ6VXNlcjExNjU2OTMy",
        "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrbourbeau",
        "html_url": "https://github.com/jrbourbeau",
        "followers_url": "https://api.github.com/users/jrbourbeau/followers",
        "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
        "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
        "repos_url": "https://api.github.com/users/jrbourbeau/repos",
        "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
        "type": "User",
        "site_admin": false
    },
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/8620/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/8620/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}