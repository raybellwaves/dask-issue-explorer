{
    "url": "https://api.github.com/repos/dask/dask/issues/9732",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9732/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9732/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9732/events",
    "html_url": "https://github.com/dask/dask/pull/9732",
    "id": 1485330544,
    "node_id": "PR_kwDOAbcwm85E0-zD",
    "number": 9732,
    "title": "Remove source and target optimization in array.store",
    "user": {
        "login": "djhoese",
        "id": 1828519,
        "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/djhoese",
        "html_url": "https://github.com/djhoese",
        "followers_url": "https://api.github.com/users/djhoese/followers",
        "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
        "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
        "organizations_url": "https://api.github.com/users/djhoese/orgs",
        "repos_url": "https://api.github.com/users/djhoese/repos",
        "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
        "received_events_url": "https://api.github.com/users/djhoese/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2022-12-08T20:10:42Z",
    "updated_at": "2024-04-15T02:49:02Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
        "url": "https://api.github.com/repos/dask/dask/pulls/9732",
        "html_url": "https://github.com/dask/dask/pull/9732",
        "diff_url": "https://github.com/dask/dask/pull/9732.diff",
        "patch_url": "https://github.com/dask/dask/pull/9732.patch",
        "merged_at": null
    },
    "body": "As discussed in #8380, there are cases where a user may want to store multiple sources or store to multiple targets that share tasks somewhere in their history. In current `main` calling `da.store` with `compute=False` results in the individual dask graphs being optimized (fused tasks, renamed tasks, etc) which means future computations won't be able to combine/share tasks any more. In simplified code this looks like:\r\n\r\n```python\r\nsrc1 = ...\r\nsrc2 = ...  # <- shares tasks with src1\r\nstore1 = da.store(src1, target1, compute=False)\r\nstore2 = da.store(src2, target2, compute=False)\r\nda.compute(store1, store2)  # <- this will compute shared tasks twice\r\n```\r\n\r\nAs I was working on a fix for this, I realized that I don't think there is any need for `da.store` to optimize anything before final computation. I *think* all computation will optimize the graphs anyway so the only benefit to early optimization is to reduce the graphs/dictionaries that are passed around internally in `da.store` (a small benefit if I'm not mistaken).\r\n\r\nLastly a question on dask PR best practice: What are the feelings about including refactorings in a PR alongside bug fixes? For example, the `da.store` function could be split into a lot of sub-functions that would reduce cyclomatic complexity of the function and make it easier to read. But for overall appearance of the PR it could make it harder to review.\r\n\r\n- [x] Closes #8380\r\n- [x] Tests added / passed\r\n- [x] Passes `pre-commit run --all-files`\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9732/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9732/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}