{
    "url": "https://api.github.com/repos/dask/dask/issues/6474",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/6474/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/6474/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/6474/events",
    "html_url": "https://github.com/dask/dask/issues/6474",
    "id": 669540778,
    "node_id": "MDU6SXNzdWU2Njk1NDA3Nzg=",
    "number": 6474,
    "title": "dask implementation of np.interp",
    "user": {
        "login": "GenevieveBuckley",
        "id": 30920819,
        "node_id": "MDQ6VXNlcjMwOTIwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GenevieveBuckley",
        "html_url": "https://github.com/GenevieveBuckley",
        "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
        "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
        "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
        "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
        "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
        "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
        "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 13,
    "created_at": "2020-07-31T08:06:07Z",
    "updated_at": "2022-09-02T15:55:11Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "@jakirkham and I were discussing a dask implementation of `np.interp` (not currently supported by dask: https://github.com/dask/dask/issues/2911), in the context of https://github.com/dask/dask-image/pull/137.\r\n\r\nI looked into it today, and it seems that this is not quite as simple as it seemed (we thought we could just wrap `np.interp` with `map_overlap`) because of the [unify_chunks](https://github.com/dask/dask/blob/2e48623832110dd0f54368e01abd634e99e8ae44/dask/array/core.py#L3160) function called by dask `map_overlap`. No matter what chunk sizes you give the input arrays, dask can't unify them because they won't match by definition of `np.interp`\r\n\r\nDoes someone have a good idea for what I should be doing instead here?\r\n\r\nMore details:\r\n`np.interp` takes three input arguments, and the first one can't be unified with the other two:\r\n1. The x-values for the interpolated output\r\n2. The original data x-values\r\n3. The original data y-values\r\n\r\n```python\r\nimport numpy as np\r\nimport dask.array as da\r\nimport matplotlib.pyplot as plt\r\n\r\n# Interpolation with numpy\r\nx = np.linspace(0, 10, 20)\r\ny = np.sin(x)\r\n\r\ninterp_x = np.linspace(0, 10, 60)  # this array is a different length than the original data\r\nresult = np.interp(interp_x, x, y)\r\n\r\n# visualise the original data (blue) and interpolated result (red)\r\nplt.plot(x, y, 'bo')\r\nplt.plot(interp_x, result, 'r+')\r\nplt.show()\r\n\r\n# Interpolation with dask\r\ndask_x = da.from_array(x, chunks=5)\r\ndask_y = da.from_array(y, chunks=5)\r\n\r\ndask_interp_x = da.from_array(interp_x, chunks=5)  # doesn't matter what chunks is here, unify_chunks returns an error\r\ndask_result = da.map_overlap(np.interp, dask_interp_x, dask_x, dask_y)  # ERROR\r\n```\r\nDepending on what `chunks=`, you get either an error that the chunks do not add up to the same value, or an error that the chunks do not add up to the same shape (eg: if `chunks=60` in the example above).\r\n\r\n```python-traceback\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-58-1c1767ae78d8> in <module>\r\n      2 dask_x2 = da.from_array(x2, chunks=5)\r\n      3 dask_y = da.from_array(y, chunks=5)\r\n----> 4 dask_out = da.map_overlap(np.interp, dask_x2, dask_x, dask_y)\r\n\r\n~\\anaconda3\\envs\\dask\\lib\\site-packages\\dask\\array\\overlap.py in map_overlap(func, depth, boundary, trim, align_arrays, *args, **kwargs)\r\n    695         # Reverse unification order to allow block broadcasting\r\n    696         inds = [list(reversed(range(x.ndim))) for x in args]\r\n--> 697         _, args = unify_chunks(*list(concat(zip(args, inds))), warn=False)\r\n    698 \r\n    699     for i, x in enumerate(args):\r\n\r\n~\\anaconda3\\envs\\dask\\lib\\site-packages\\dask\\array\\core.py in unify_chunks(*args, **kwargs)\r\n   3228             nameinds.append((a, ind))\r\n   3229 \r\n-> 3230     chunkss = broadcast_dimensions(nameinds, blockdim_dict, consolidate=common_blockdim)\r\n   3231     nparts = np.prod(list(map(len, chunkss.values())))\r\n   3232 \r\n\r\n~\\anaconda3\\envs\\dask\\lib\\site-packages\\dask\\blockwise.py in broadcast_dimensions(argpairs, numblocks, sentinels, consolidate)\r\n    857 \r\n    858     if consolidate:\r\n--> 859         return toolz.valmap(consolidate, g2)\r\n    860 \r\n    861     if g2 and not set(map(len, g2.values())) == set([1]):\r\n\r\n~\\anaconda3\\envs\\dask\\lib\\site-packages\\cytoolz\\dicttoolz.pyx in cytoolz.dicttoolz.valmap()\r\n\r\n~\\anaconda3\\envs\\dask\\lib\\site-packages\\cytoolz\\dicttoolz.pyx in cytoolz.dicttoolz.valmap()\r\n\r\n~\\anaconda3\\envs\\dask\\lib\\site-packages\\dask\\array\\core.py in common_blockdim(blockdims)\r\n   3128 \r\n   3129     if len(set(map(sum, non_trivial_dims))) > 1:\r\n-> 3130         raise ValueError(\"Chunks do not add up to same value\", blockdims)\r\n   3131 \r\n   3132     # We have multiple non-trivial chunks on this axis\r\n\r\nValueError: ('Chunks do not add up to same value', {(5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5), (5, 5, 5, 5)})\r\n\r\n```\r\n\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/6474/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/6474/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}