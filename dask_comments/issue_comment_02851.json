[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/345478226",
        "html_url": "https://github.com/dask/dask/issues/2851#issuecomment-345478226",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2851",
        "id": 345478226,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ3ODIyNg==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-18T23:08:53Z",
        "updated_at": "2017-11-18T23:08:53Z",
        "author_association": "MEMBER",
        "body": "Potentially this can benefit from the strategy discussed in issue ( https://github.com/dask/dask/issues/2899 ).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/345478226/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/397667815",
        "html_url": "https://github.com/dask/dask/issues/2851#issuecomment-397667815",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2851",
        "id": 397667815,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzY2NzgxNQ==",
        "user": {
            "login": "convexset",
            "id": 1677933,
            "node_id": "MDQ6VXNlcjE2Nzc5MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1677933?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/convexset",
            "html_url": "https://github.com/convexset",
            "followers_url": "https://api.github.com/users/convexset/followers",
            "following_url": "https://api.github.com/users/convexset/following{/other_user}",
            "gists_url": "https://api.github.com/users/convexset/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/convexset/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/convexset/subscriptions",
            "organizations_url": "https://api.github.com/users/convexset/orgs",
            "repos_url": "https://api.github.com/users/convexset/repos",
            "events_url": "https://api.github.com/users/convexset/events{/privacy}",
            "received_events_url": "https://api.github.com/users/convexset/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-15T16:05:24Z",
        "updated_at": "2018-06-15T16:11:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "Might be interesting to look at.\r\n\r\nEither it should be using `reduction` or recursion. (Strange... don't find an entry for `reduction` in `array`, only in `dataframe` [here](http://dask.pydata.org/en/latest/dataframe-api.html#dask.dataframe.Series.reduction))\r\n\r\nWith recursion, there have to be some norms about how to go about combining the intermediates. That is, typically how many unique elements are to be expected in each chunk. Because this has to be considered a priori.\r\n\r\nIn fact, it might be good to extend this into a [\"counter\"](https://docs.python.org/3/library/collections.html#collections.Counter) type method, and `unique` would use the output and just extract the \"keys\".",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/397667815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/397685248",
        "html_url": "https://github.com/dask/dask/issues/2851#issuecomment-397685248",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2851",
        "id": 397685248,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzY4NTI0OA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-15T17:09:29Z",
        "updated_at": "2018-06-18T01:44:28Z",
        "author_association": "MEMBER",
        "body": "If you're interested, would take a look at [`dask.array.reductions`]( https://github.com/dask/dask/blob/b9e3487a963b574f91eb403fdfc0baf1bc97d2eb/dask/array/reductions.py ).\r\n\r\nThe way the [`unique` kernel function (`_unique_internal`)]( https://github.com/dask/dask/blob/0.18.0/dask/array/routines.py#L683 ) is written should be friendly to reductions. Happy to answer questions about it.\r\n\r\nInteresting suggestion with the `counter` method. Though I don't completely follow what you are thinking here. Could you please explain a bit more what you have in mind?\r\n\r\nEdit: Had wrong line for the `unique` kernel function, which is updated above. The [`unique` function]( https://github.com/dask/dask/blob/0.18.0/dask/array/routines.py#L745 ) was linked previously. Both are relevant, but in different ways.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/397685248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/397777121",
        "html_url": "https://github.com/dask/dask/issues/2851#issuecomment-397777121",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2851",
        "id": 397777121,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzc3NzEyMQ==",
        "user": {
            "login": "convexset",
            "id": 1677933,
            "node_id": "MDQ6VXNlcjE2Nzc5MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1677933?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/convexset",
            "html_url": "https://github.com/convexset",
            "followers_url": "https://api.github.com/users/convexset/followers",
            "following_url": "https://api.github.com/users/convexset/following{/other_user}",
            "gists_url": "https://api.github.com/users/convexset/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/convexset/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/convexset/subscriptions",
            "organizations_url": "https://api.github.com/users/convexset/orgs",
            "repos_url": "https://api.github.com/users/convexset/repos",
            "events_url": "https://api.github.com/users/convexset/events{/privacy}",
            "received_events_url": "https://api.github.com/users/convexset/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-16T01:28:45Z",
        "updated_at": "2018-06-16T01:28:45Z",
        "author_association": "CONTRIBUTOR",
        "body": "Oh. I see a `return_counts` argument. I previously only did a little plot of the compute graph and didn't look at the code/docs.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/397777121/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/397922876",
        "html_url": "https://github.com/dask/dask/issues/2851#issuecomment-397922876",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2851",
        "id": 397922876,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzkyMjg3Ng==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-18T01:45:53Z",
        "updated_at": "2018-06-18T01:45:53Z",
        "author_association": "MEMBER",
        "body": "Yeah it supports all the arguments that NumPy's `unique` supports except `axis`. Also made a small update to the comment above as it inaccurately referenced `unique` as the kernel function, which is instead `_unique_internal`. Hopefully the `_unique_internal` doesn't need to change at all, but `unique` would need to change to use tree reductions with `_unique_internal`.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/397922876/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/431139119",
        "html_url": "https://github.com/dask/dask/issues/2851#issuecomment-431139119",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2851",
        "id": 431139119,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTEzOTExOQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-18T19:50:03Z",
        "updated_at": "2018-10-18T19:50:03Z",
        "author_association": "MEMBER",
        "body": "Just as an observation, if one wanted to tackle this, looking at the `arg_*` functions in `dask.array.reductions` would likely be insightful. That case much like `unique` has to pass around a few different parts of the result (e.g. max values and their indices per chunk) and makes the same choice to leverage structured arrays to make this happen. It's not totally one-to-one as `unique` can return more than a single value and there are multiple (optional) pieces to `unique`'s result.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/431139119/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]