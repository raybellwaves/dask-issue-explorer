[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/388116922",
        "html_url": "https://github.com/dask/dask/issues/3487#issuecomment-388116922",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3487",
        "id": 388116922,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODExNjkyMg==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-10T17:01:39Z",
        "updated_at": "2018-05-10T17:01:39Z",
        "author_association": "MEMBER",
        "body": "cc @d-v-b",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/388116922/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/389149991",
        "html_url": "https://github.com/dask/dask/issues/3487#issuecomment-389149991",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3487",
        "id": 389149991,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTE0OTk5MQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-15T12:33:16Z",
        "updated_at": "2018-05-15T12:33:16Z",
        "author_association": "MEMBER",
        "body": "Perhaps there is an API within skimage like `imsave` that we could replicate within a `dask-image` project?  The API within `dd.to_csv('foo.*.csv')` or `db.to_textfiles('foo.*.txt')` might be worth investigating.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/389149991/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392259873",
        "html_url": "https://github.com/dask/dask/issues/3487#issuecomment-392259873",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3487",
        "id": 392259873,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI1OTg3Mw==",
        "user": {
            "login": "d-v-b",
            "id": 3805136,
            "node_id": "MDQ6VXNlcjM4MDUxMzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3805136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/d-v-b",
            "html_url": "https://github.com/d-v-b",
            "followers_url": "https://api.github.com/users/d-v-b/followers",
            "following_url": "https://api.github.com/users/d-v-b/following{/other_user}",
            "gists_url": "https://api.github.com/users/d-v-b/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/d-v-b/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/d-v-b/subscriptions",
            "organizations_url": "https://api.github.com/users/d-v-b/orgs",
            "repos_url": "https://api.github.com/users/d-v-b/repos",
            "events_url": "https://api.github.com/users/d-v-b/events{/privacy}",
            "received_events_url": "https://api.github.com/users/d-v-b/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T12:59:41Z",
        "updated_at": "2018-05-26T12:59:41Z",
        "author_association": "MEMBER",
        "body": "Coming to Dask from Spark, my first intuition is to look for an `apply_blocks()` method on a Dask Array (like `RDD.foreach()` in PySpark) which allows the user to generate side effects, including but not limited to serializing data to disk. Side effects can be useful for debugging  \u2014 e.g., dumping a `str(block.dtype())` to disk, or just having each worker run `print(block.dtype())`. \r\n\r\nSince I can't guarantee that I'm always going to use the same format for my data, I'm a little leery of methods that assume a data format, e.g. `to_$FORMAT()`; presumably, if there are a lot of these methods, they are using the same API under the hood, and that's the API I'd like to work with directly.\r\n\r\nWith this generality in mind, when I spoke to @jakirkham offline I suggested that Dask Arrays have an `apply_blocks()` method that would apply a user-supplied function per block; `map_blocks()` would then be a special case of `apply_blocks()` where the mapped function must return a Dask Array. But there might be strong arguments against this that I don't immediately see.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392259873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392264029",
        "html_url": "https://github.com/dask/dask/issues/3487#issuecomment-392264029",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3487",
        "id": 392264029,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI2NDAyOQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T14:10:06Z",
        "updated_at": "2018-05-26T14:10:06Z",
        "author_association": "MEMBER",
        "body": "I have no objection to having an operation like `map_blocks` (or some modified variant like `apply_blocks`) become more robust to not returning numpy arrays. We will have to consider what that function returns though.  A `delayed` object?  A dask.bag?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392264029/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392264225",
        "html_url": "https://github.com/dask/dask/issues/3487#issuecomment-392264225",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3487",
        "id": 392264225,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI2NDIyNQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T14:14:08Z",
        "updated_at": "2018-05-26T14:14:08Z",
        "author_association": "MEMBER",
        "body": "Maybe a dask array, each of whose chunks is a single-element numpy array that contains a single element with object dtype?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392264225/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392289956",
        "html_url": "https://github.com/dask/dask/issues/3487#issuecomment-392289956",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3487",
        "id": 392289956,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI4OTk1Ng==",
        "user": {
            "login": "d-v-b",
            "id": 3805136,
            "node_id": "MDQ6VXNlcjM4MDUxMzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3805136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/d-v-b",
            "html_url": "https://github.com/d-v-b",
            "followers_url": "https://api.github.com/users/d-v-b/followers",
            "following_url": "https://api.github.com/users/d-v-b/following{/other_user}",
            "gists_url": "https://api.github.com/users/d-v-b/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/d-v-b/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/d-v-b/subscriptions",
            "organizations_url": "https://api.github.com/users/d-v-b/orgs",
            "repos_url": "https://api.github.com/users/d-v-b/repos",
            "events_url": "https://api.github.com/users/d-v-b/events{/privacy}",
            "received_events_url": "https://api.github.com/users/d-v-b/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T21:43:52Z",
        "updated_at": "2018-05-26T21:43:52Z",
        "author_association": "MEMBER",
        "body": "For the general case, why is a return value necessary at all?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392289956/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392295883",
        "html_url": "https://github.com/dask/dask/issues/3487#issuecomment-392295883",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3487",
        "id": 392295883,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI5NTg4Mw==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-27T00:07:24Z",
        "updated_at": "2018-05-27T00:07:24Z",
        "author_association": "MEMBER",
        "body": "As the action would not have occurred yet. The return value would depend a bit on scope.\r\n\r\nWith something like `store_blocks` described in the OP, a `Delayed` object would be sufficient if not desirable in my view (please feel free to correct me though). It can return `None` (i.e. not return) when computed. There is no real need to serialize values from the workers or collect them. It's pretty clear from the outside that it has side effects. Also the `Delayed` object provides a nice handle on the proposed computation, which can be submitted for computation, included in progress bars, etc.\r\n\r\nThe `apply_blocks` use case described above seems much more like `map_blocks`. In which case one does want it to return things and those things don't really have side effects (e.g. block limited reductions). If there are things that deviate from this description, would be interesting in hearing about them.\r\n\r\nAs a side note, since `print` came up, am thinking of that as calling `map_blocks`, which returns an object array of strings. On this object we can compute part of it or all of it and print whatever is needed. Though would suggest caution with this as we could swamp the buffer if we try to print too much at once.\r\n\r\nDoes `dask.bag` work well with `distributed`? Haven't explored this much personally so am curious. Also these are unordered, right? If so, then an object array does sound desirable.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392295883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392296559",
        "html_url": "https://github.com/dask/dask/issues/3487#issuecomment-392296559",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3487",
        "id": 392296559,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI5NjU1OQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-27T00:25:56Z",
        "updated_at": "2018-05-27T00:25:56Z",
        "author_association": "MEMBER",
        "body": "Also cc-ing @djhoese in case this is of interest.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392296559/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392301460",
        "html_url": "https://github.com/dask/dask/issues/3487#issuecomment-392301460",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3487",
        "id": 392301460,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjMwMTQ2MA==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-27T02:54:46Z",
        "updated_at": "2018-05-27T02:54:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for the mention @jakirkham. This is interesting since I've been brainstorming visualization methods for my SciPy talk coming up for showing satellite imagery as it is computed. In my quick test that produced an HTML table of PNG images in a notebook, it was as you described a hacky array-like class that created a new PNG image for each block.\r\n\r\nThis also makes me think of https://github.com/dask/dask/issues/3255 where instead of a single file being created for each block you want the dask graph node (task?) to know whether or not it needs to close the file (multithreaded versus multiprocess). As mentioned in that issue we also use a wrapper class to provide an array-like interface to open a file once and use `__setitem__` for writing the individual blocks using `rasterio`'s block writing (https://github.com/pytroll/trollimage/blob/master/trollimage/xrimage.py#L73-L94).\r\n\r\nLasty, just for reference, a colleague (@mraspaud) implemented a special type of geotiff reader by creating a dask graph for opening and slicing the array loaded with GDAL (https://github.com/pytroll/satpy/blob/master/satpy/readers/safe_sar_c.py#L294-L305).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392301460/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/432787854",
        "html_url": "https://github.com/dask/dask/issues/3487#issuecomment-432787854",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3487",
        "id": 432787854,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjc4Nzg1NA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-24T19:02:37Z",
        "updated_at": "2018-10-24T19:02:37Z",
        "author_association": "MEMBER",
        "body": "Is there anything concrete to do here?  Discussion seems to have stalled?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/432787854/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/434056705",
        "html_url": "https://github.com/dask/dask/issues/3487#issuecomment-434056705",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3487",
        "id": 434056705,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDA1NjcwNQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-29T19:58:37Z",
        "updated_at": "2018-10-29T19:58:37Z",
        "author_association": "MEMBER",
        "body": "This use case is pretty important to a lot of people. So we should either keep it open or break out a few concrete suggestions from here into different discrete and actionable issues. I've tried to do the latter.\r\n\r\nIMHO there are two suggestions that stick out to me as very important. Namely @d-v-b's [`apply_blocks` suggestion]( https://github.com/dask/dask/issues/3487#issuecomment-392259873 ) ( https://github.com/dask/dask/issues/4148 ) and @djhoese's (reasonable) complaint about `__setitem__` ( https://github.com/dask/dask/issues/4149 ). I've broken these out into two issue that I think are actionable and address the relevant concerns. Please feel free to add more to those.\r\n\r\nIf there are other issues outside of those, please feel free to raise them and xref them from here.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/434056705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]