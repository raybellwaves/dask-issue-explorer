{
    "url": "https://api.github.com/repos/dask/dask/issues/6606",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/6606/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/6606/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/6606/events",
    "html_url": "https://github.com/dask/dask/issues/6606",
    "id": 695550695,
    "node_id": "MDU6SXNzdWU2OTU1NTA2OTU=",
    "number": 6606,
    "title": "Dot graph manipulation",
    "user": {
        "login": "CMCDragonkai",
        "id": 640797,
        "node_id": "MDQ6VXNlcjY0MDc5Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/640797?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CMCDragonkai",
        "html_url": "https://github.com/CMCDragonkai",
        "followers_url": "https://api.github.com/users/CMCDragonkai/followers",
        "following_url": "https://api.github.com/users/CMCDragonkai/following{/other_user}",
        "gists_url": "https://api.github.com/users/CMCDragonkai/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/CMCDragonkai/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/CMCDragonkai/subscriptions",
        "organizations_url": "https://api.github.com/users/CMCDragonkai/orgs",
        "repos_url": "https://api.github.com/users/CMCDragonkai/repos",
        "events_url": "https://api.github.com/users/CMCDragonkai/events{/privacy}",
        "received_events_url": "https://api.github.com/users/CMCDragonkai/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-09-08T05:06:16Z",
    "updated_at": "2021-10-13T06:59:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'd like to be able to get the dot graph directly so I can make use of the `g` object from graphviz.\r\n\r\nI see the function `dask.dot.to_graphviz`. However I think it would be nice to be able to use `dask.visualize` to also return an in-memory construct rather than writing directly to a file. And I also think that should be generalized to be able to take a file descriptor so one can also write it directly to a IO object.\r\n\r\nThe other thing is that `visualize()` method has alot of logic to optimize or even construct the `dsk` object:\r\n\r\n```\r\n*     dsks = []\r\n      args3 = []\r\n      for arg in args:\r\n          if isinstance(arg, (list, tuple, set)):\r\n              for a in arg:\r\n                  if isinstance(a, Mapping):\r\n*                     dsks.append(a)\r\n                  if is_dask_collection(a):\r\n                      args3.append(a)\r\n          else:\r\n              if isinstance(arg, Mapping):\r\n*                 dsks.append(arg)\r\n              if is_dask_collection(arg):\r\n                  args3.append(arg)\r\n  \r\n*     dsk = dict(collections_to_dsk(args3, optimize_graph=optimize_graph))\r\n*     for d in dsks:\r\n*         dsk.update(d)\r\n``` \r\n\r\nIf I use `dask.dot.to_graphviz` I'd have to do that manually. I think `dask.visualize` could expose this as well.\r\n\r\nMy ultimate goal is to be able to make use of the new formats: https://github.com/xflr6/graphviz/blob/master/graphviz/backend.py#L24-L62",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/6606/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/6606/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}