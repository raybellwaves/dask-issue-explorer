[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/434060149",
        "html_url": "https://github.com/dask/dask/issues/4149#issuecomment-434060149",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4149",
        "id": 434060149,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDA2MDE0OQ==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-29T20:09:04Z",
        "updated_at": "2018-10-29T20:09:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "One thing I wanted to point out: the file-like object that needs to be closed isn't always the object that provides the `__setitem__` syntax.\r\n  - HDF5 (h5py): you create a Dataset object which has multiple Variable objects. The Dataset is the thing that gets created/closed, but the Variable is the thing that gets an array assigned to it with `__setitem__`. So at least two objects are involved here.\r\n - Geotiff (via rasterio): The file object (created with `rasterio.open`) is the thing to be closed, but the data is written with a `rio_obj.write` method call.\r\n\r\nIf the scope of this issue is to only handle the open/close part of the issue and users are still expected to have a custom object with `__setitem__` I am OK with that.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/434060149/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/434082389",
        "html_url": "https://github.com/dask/dask/issues/4149#issuecomment-434082389",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4149",
        "id": 434082389,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDA4MjM4OQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-29T21:13:30Z",
        "updated_at": "2018-10-29T21:13:30Z",
        "author_association": "MEMBER",
        "body": "Sure, so how I envisioned this (and admittedly was extrapolating from our previous conversations) is the user supplies a UDF where open/write/close happen within the UDF. We can imagine other arguments being passed along (e.g. filename, dataset name, etc.) to this `store`-like function. Thus a (typical) UDF might look like this.\r\n\r\n```python\r\ndef my_udf_write(fn, dn, data):\r\n    with h5py.File(fn, \"a\") as fh:\r\n        fh[dn] = data\r\n```\r\n\r\nPlease let me know if this fits with what you are thinking about or not.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/434082389/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/434315424",
        "html_url": "https://github.com/dask/dask/issues/4149#issuecomment-434315424",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4149",
        "id": 434315424,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDMxNTQyNA==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-30T14:09:02Z",
        "updated_at": "2018-10-30T14:09:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "Ok I misunderstood UDF to mean a file object (and not user defined function). So with your example above, this would not allow writing blocks right? Or would slices also be provided?\r\n\r\nThe other thing I was hoping would be handled in whatever dask solutions comes out of this discussion is that the same solution would work with a threaded or distributed/multiprocess scheduler. So in a threaded scheduler, open the file once and reuse it for each block, closing automatically when all blocks are written. Perhaps an option for not closing it.\r\n\r\nFor a distributed scheduler, open it once per worker (per client/host maybe?), write the block, close it. As mentioned in #3255 I'm going to look at using xarray's CachingFileManager to help with this.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/434315424/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/434353347",
        "html_url": "https://github.com/dask/dask/issues/4149#issuecomment-434353347",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4149",
        "id": 434353347,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDM1MzM0Nw==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-30T15:42:55Z",
        "updated_at": "2018-10-30T15:42:55Z",
        "author_association": "MEMBER",
        "body": "No worries. Thanks for the follow-up.\r\n\r\nYeah, not thinking file object. These are tricky things to have in the graph generally (some reasons for this noted in the OP). They work in the threaded case, but quickly become problematic outside of that case.\r\n\r\nThe UDF above would writing a block (or chunk); so, `data` would be that chunk.\r\n\r\nBeing scheduler friendly was one of the key motivators to the UDF design.\r\n\r\nCurrently, as proposed the UDF is open/closing when writing each chunk. Keeping the file open for all chunks is a bit tricky. My understanding is this is something xarray has wrestled with as well.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/434353347/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/434356539",
        "html_url": "https://github.com/dask/dask/issues/4149#issuecomment-434356539",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4149",
        "id": 434356539,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDM1NjUzOQ==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-30T15:50:25Z",
        "updated_at": "2018-10-30T15:50:25Z",
        "author_association": "CONTRIBUTOR",
        "body": "> The UDF above would writing a block (or chunk); so, data would be that chunk.\r\n\r\nThe user would also need to know what slice of the overall array is being written, right?\r\n\r\n> Currently, as proposed the UDF is open/closing when writing each chunk. Keeping the file open for all chunks is a bit tricky. My understanding is this is something xarray has wrestled with as well.\r\n\r\nYeah I think this is what the `CachingFileManager` is meant to help with.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/434356539/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/434358269",
        "html_url": "https://github.com/dask/dask/issues/4149#issuecomment-434358269",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4149",
        "id": 434358269,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDM1ODI2OQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-30T15:54:29Z",
        "updated_at": "2018-10-30T15:54:29Z",
        "author_association": "MEMBER",
        "body": "We could add an [optional `block_info` like for `map_blocks`]( http://docs.dask.org/en/latest/array-api.html?highlight=block_info#dask.array.core.map_blocks ) if that would help.\r\n\r\nI'm not sure that it opens the file once and keeps it open for the entire computation. Though I don't know too much about it.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/434358269/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/434358860",
        "html_url": "https://github.com/dask/dask/issues/4149#issuecomment-434358860",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4149",
        "id": 434358860,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDM1ODg2MA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-30T15:55:30Z",
        "updated_at": "2018-10-30T15:55:30Z",
        "author_association": "MEMBER",
        "body": "> For a distributed scheduler, open it once per worker (per client/host maybe?), write the block, close it.\r\n\r\nShould have mentioned explicitly that yes this is what the UDF is doing in the `with`.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/434358860/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/434364339",
        "html_url": "https://github.com/dask/dask/issues/4149#issuecomment-434364339",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4149",
        "id": 434364339,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDM2NDMzOQ==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-30T16:08:53Z",
        "updated_at": "2018-10-30T16:08:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "> We could add an optional block_info like for map_blocks if that would help.\r\n\r\nYeah that could work, but I also don't see a case where a chunked array wouldn't need to know this information. `map_blocks` having it optional makes sense since you are probably returning something with the same dimensions/shape as the input.\r\n\r\n>> For a distributed scheduler, open it once per worker (per client/host maybe?), write the block, close it.\r\n\r\n> Should have mentioned explicitly that yes this is what the UDF is doing in the with.\r\n\r\nYes, the point was that the \"best\" solution would be one that could do both the threaded and distributed scheduler handling without anything special on the users side.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/434364339/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/434375835",
        "html_url": "https://github.com/dask/dask/issues/4149#issuecomment-434375835",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4149",
        "id": 434375835,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDM3NTgzNQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-30T16:37:10Z",
        "updated_at": "2018-10-30T16:37:10Z",
        "author_association": "MEMBER",
        "body": "Sure `block_info` could be required.\r\n\r\nThe UDF strategy seems like a reasonable start at least.\r\n\r\nAre you familiar with [Zarr]( https://zarr.readthedocs.io/en/stable/ )? It works particularly well with Dask and can be [copied into other formats pretty easily (e.g. HDF5)]( https://zarr.readthedocs.io/en/stable/api/convenience.html#zarr.convenience.copy ). This is how we typically solve this problem at work.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/434375835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/488018902",
        "html_url": "https://github.com/dask/dask/issues/4149#issuecomment-488018902",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4149",
        "id": 488018902,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODAxODkwMg==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-30T16:21:50Z",
        "updated_at": "2019-04-30T16:21:50Z",
        "author_association": "MEMBER",
        "body": "Is this still an issue you are running into today, @djhoese?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/488018902/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/488065881",
        "html_url": "https://github.com/dask/dask/issues/4149#issuecomment-488065881",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4149",
        "id": 488065881,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODA2NTg4MQ==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-30T18:36:35Z",
        "updated_at": "2019-04-30T18:36:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes and no. Dask hasn't added any interfaces like the ones we described above, has it?\r\n\r\nI'd say my group has worked around it for the most part and our library (Satpy) does not have a lot of users running dask on multiprocess/cluster schedulers where this would be a bigger issue. Saving to zarr and then converting to another format is a workaround in my opinion and not a solution.\r\n\r\nI also haven't kept up with what xarray has done as far as handling rasterio better or other similar situations.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/488065881/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]