{
    "url": "https://api.github.com/repos/dask/dask/issues/10635",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10635/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10635/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10635/events",
    "html_url": "https://github.com/dask/dask/issues/10635",
    "id": 1999328474,
    "node_id": "I_kwDOAbcwm853K1Ta",
    "number": 10635,
    "title": "Dask requires read permission for writing dataframe parquet to s3",
    "user": {
        "login": "trgmg",
        "id": 142340341,
        "node_id": "U_kgDOCHvw9Q",
        "avatar_url": "https://avatars.githubusercontent.com/u/142340341?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/trgmg",
        "html_url": "https://github.com/trgmg",
        "followers_url": "https://api.github.com/users/trgmg/followers",
        "following_url": "https://api.github.com/users/trgmg/following{/other_user}",
        "gists_url": "https://api.github.com/users/trgmg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/trgmg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/trgmg/subscriptions",
        "organizations_url": "https://api.github.com/users/trgmg/orgs",
        "repos_url": "https://api.github.com/users/trgmg/repos",
        "events_url": "https://api.github.com/users/trgmg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/trgmg/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2023-11-17T15:03:00Z",
    "updated_at": "2023-11-20T09:46:54Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the issue**:\r\nI cannot write a dataframe to an s3 bucket without READ permission to that bucket. Is that expected behavior? I cannot find anything anywhere regarding this.\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport pandas as pd\r\nimport dask.dataframe as dd\r\n\r\nbucket_name = \"my-amazing-bucket\"\r\nobject_key = \"banana.parquet\"\r\ndf = pd.DataFrame({\"A\": [0, 1, 2], \"B\": [\"ba\", \"na\", \"na\"]})\r\ndf = dd.from_pandas(df, npartitions=2)\r\ndf.to_parquet(f\"s3://{bucket_name}/{object_key}\")\r\n```\r\n\r\nIf the corresponding role only has write permission like so it doesn't work:\r\n```\r\n{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Action\": [\r\n                \"s3:PutObject\",\r\n                \"s3:PutObjectLegalHold\",\r\n                \"s3:PutObjectRetention\",\r\n                \"s3:PutObjectTagging\",\r\n                \"s3:PutObjectVersionTagging\",\r\n                \"s3:Abort*\"\r\n            ],\r\n            \"Resource\": \"arn:aws:s3:::my-amazing-bucket/*\",\r\n            \"Effect\": \"Allow\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nGiving the following error:\r\n```\r\nTraceback (most recent call last):\r\nFile \"/usr/local/lib/python3.9/site-packages/s3fs/core.py\", line 110, in _error_wrapper\r\nreturn await func(*args, **kwargs)\r\nFile \"/usr/local/lib/python3.9/site-packages/aiobotocore/client.py\", line 265, in _make_api_call\r\nraise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (403) when calling the HeadObject operation: Forbidden\r\nThe above exception was the direct cause of the following exception:\r\nTraceback (most recent call last):\r\nFile \"/work/src/banana.py\", line 8, in <module>\r\ndf.to_parquet(f\"s3://{bucket_name}/{key}\")\r\nFile \"/usr/local/lib/python3.9/site-packages/dask/dataframe/core.py\", line 5721, in to_parquet\r\nreturn to_parquet(self, path, *args, **kwargs)\r\nFile \"/usr/local/lib/python3.9/site-packages/dask/dataframe/io/parquet/core.py\", line 868, in to_parquet\r\nif fs.exists(path) and fs.isdir(path):\r\nFile \"/usr/local/lib/python3.9/site-packages/fsspec/asyn.py\", line 111, in wrapper\r\nreturn sync(self.loop, func, *args, **kwargs)\r\nFile \"/usr/local/lib/python3.9/site-packages/fsspec/asyn.py\", line 96, in sync\r\nraise return_result\r\nFile \"/usr/local/lib/python3.9/site-packages/fsspec/asyn.py\", line 53, in _runner\r\nresult[0] = await coro\r\nFile \"/usr/local/lib/python3.9/site-packages/s3fs/core.py\", line 888, in _exists\r\nawait self._info(path, bucket, key, version_id=version_id)\r\nFile \"/usr/local/lib/python3.9/site-packages/s3fs/core.py\", line 1140, in _info\r\nout = await self._call_s3(\r\nFile \"/usr/local/lib/python3.9/site-packages/s3fs/core.py\", line 332, in _call_s3\r\nreturn await _error_wrapper(\r\nFile \"/usr/local/lib/python3.9/site-packages/s3fs/core.py\", line 137, in _error_wrapper\r\nraise err\r\nPermissionError: Forbidden\r\n```\r\n\r\nBut if the role also has read permission to the bucket, it works:\r\n```\r\n{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Action\": [\r\n                \"s3:GetObject*\",\r\n                \"s3:GetBucket*\",\r\n                \"s3:List*\"\r\n            ],\r\n            \"Resource\": [\r\n                \"arn:aws:s3:::my-amazing-bucket\",\r\n                \"arn:aws:s3:::my-amazing-bucket/*\"\r\n            ],\r\n            \"Effect\": \"Allow\"\r\n        },\r\n        {\r\n            \"Action\": [\r\n                \"s3:PutObject\",\r\n                \"s3:PutObjectLegalHold\",\r\n                \"s3:PutObjectRetention\",\r\n                \"s3:PutObjectTagging\",\r\n                \"s3:PutObjectVersionTagging\",\r\n                \"s3:Abort*\"\r\n            ],\r\n            \"Resource\": \"arn:aws:s3:::my-amazing-bucket/*\",\r\n            \"Effect\": \"Allow\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n**Anything else we need to know?**:\r\nWriting a dataframe with pandas only requires write permission. (Comment the line `df = dd.from_pandas(df, npartitions=2)`)\r\n\r\n**Environment**:\r\n\r\n- Dask version: 2023.11.0\r\n- Python version: Python 3.9.18\r\n- Operating System: Linux - docker base image: `public.ecr.aws/docker/library/python:3.9-slim`\r\n- Install method (conda, pip, source): pip\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10635/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10635/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}