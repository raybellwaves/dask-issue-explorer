[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/569956205",
        "html_url": "https://github.com/dask/dask/issues/5756#issuecomment-569956205",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5756",
        "id": 569956205,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTk1NjIwNQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-12-31T16:40:29Z",
        "updated_at": "2019-12-31T16:40:29Z",
        "author_association": "MEMBER",
        "body": "Hrm, yes, I can see how that would cause an issue.  \r\n\r\nCurrently it looks like we use the presence of the special value `\"__UNKNOWN_CATEGORIES__\"`, as a signal that we don't know the categories.  We probably can't do this if we want to have unknown categoricals of different dtypes.  We would probably need to come up with some other signal for this case.  I don't at the moment have a good idea for what that would be.  \r\n\r\nAlternatively, we might make the concatenation process more relaxed in the case where we have a mix of known and unknown categoricals (maybe we always convert everything to unknown in that case.  That might be easier to implement.  I don't have a strong background here.\r\n\r\ncc @TomAugspurger , who I suspect has more background here than I do.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/569956205/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/570173479",
        "html_url": "https://github.com/dask/dask/issues/5756#issuecomment-570173479",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5756",
        "id": 570173479,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDE3MzQ3OQ==",
        "user": {
            "login": "lr4d",
            "id": 44430780,
            "node_id": "MDQ6VXNlcjQ0NDMwNzgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/44430780?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lr4d",
            "html_url": "https://github.com/lr4d",
            "followers_url": "https://api.github.com/users/lr4d/followers",
            "following_url": "https://api.github.com/users/lr4d/following{/other_user}",
            "gists_url": "https://api.github.com/users/lr4d/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lr4d/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lr4d/subscriptions",
            "organizations_url": "https://api.github.com/users/lr4d/orgs",
            "repos_url": "https://api.github.com/users/lr4d/repos",
            "events_url": "https://api.github.com/users/lr4d/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lr4d/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-02T10:48:31Z",
        "updated_at": "2020-01-02T10:48:31Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Alternatively, we might make the concatenation process more relaxed in the case where we have a mix of known and unknown categoricals (maybe we always convert everything to unknown in that case. That might be easier to implement. I don't have a strong background here.\r\n\r\nFYI in pandas no exception is raised in `pd.concat` when this happens, although the column data type changes from categorical to object.\r\n```\r\npd.concat([\r\n    pd.Series(pd.Categorical([], categories=[pd.Timestamp(\"2019-01-01\")])),\r\n    pd.Series(pd.Categorical([])) # categories.dtype == object\r\n    ]\r\n)\r\nOut[5]: Series([], dtype: object)\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/570173479/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/570189948",
        "html_url": "https://github.com/dask/dask/issues/5756#issuecomment-570189948",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5756",
        "id": 570189948,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDE4OTk0OA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-02T12:08:42Z",
        "updated_at": "2020-01-02T12:08:42Z",
        "author_association": "MEMBER",
        "body": "The only think I can think of use to use an empty index of the correct sub-type.\r\n\r\n```python\r\nIn [11]: pd.Categorical(pd.DatetimeIndex([])).categories\r\nOut[11]: DatetimeIndex([], dtype='datetime64[ns]', freq=None)\r\n```\r\n\r\nNot sure if that will fix everything / break other things, but that's where I would start.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/570189948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/570243049",
        "html_url": "https://github.com/dask/dask/issues/5756#issuecomment-570243049",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5756",
        "id": 570243049,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDI0MzA0OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-02T15:34:35Z",
        "updated_at": "2020-01-02T15:34:35Z",
        "author_association": "MEMBER",
        "body": "Are empty categorical rare enough that overlapping emptiness with\nunknown-ness is ok?\n\nOn Thu, Jan 2, 2020 at 4:08 AM Tom Augspurger <notifications@github.com>\nwrote:\n\n> The only think I can think of use to use an empty index of the correct\n> sub-type.\n>\n> In [11]: pd.Categorical(pd.DatetimeIndex([])).categories\n> Out[11]: DatetimeIndex([], dtype='datetime64[ns]', freq=None)\n>\n> Not sure if that will fix everything / break other things, but that's\n> where I would start.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/5756?email_source=notifications&email_token=AACKZTHZBOW6XH4VNKGLOEDQ3XKMXA5CNFSM4KBVAHUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEH6GQ7A#issuecomment-570189948>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AACKZTCM4SPYXL6BYKEECZTQ3XKMXANCNFSM4KBVAHUA>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/570243049/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/570253925",
        "html_url": "https://github.com/dask/dask/issues/5756#issuecomment-570253925",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5756",
        "id": 570253925,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDI1MzkyNQ==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-02T16:07:42Z",
        "updated_at": "2020-01-02T16:07:42Z",
        "author_association": "MEMBER",
        "body": "I would need to look a bit more closely at how we use the actual value `UNKOWN_CATEGORIES\"` to say. My hope would be that we could encode the fact that the categories are unknown completely independently of the values in the CategoricalDtype's categories, but I may be wrong.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/570253925/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]