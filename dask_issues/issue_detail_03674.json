{
    "url": "https://api.github.com/repos/dask/dask/issues/3674",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/3674/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/3674/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/3674/events",
    "html_url": "https://github.com/dask/dask/issues/3674",
    "id": 336018272,
    "node_id": "MDU6SXNzdWUzMzYwMTgyNzI=",
    "number": 3674,
    "title": "inplace modification to `compute()` output changes original input.",
    "user": {
        "login": "rainwoodman",
        "id": 138060,
        "node_id": "MDQ6VXNlcjEzODA2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/138060?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rainwoodman",
        "html_url": "https://github.com/rainwoodman",
        "followers_url": "https://api.github.com/users/rainwoodman/followers",
        "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
        "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
        "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
        "repos_url": "https://api.github.com/users/rainwoodman/repos",
        "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-06-26T22:47:59Z",
    "updated_at": "2018-07-14T13:01:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "In dask 0.18.1, the return value of `compute()` can be a view to the original data. When the result of `compute()` is modified in-place for post-processing, the behavior is surprising, as the original data is tainted as well.\r\n\r\n```\r\ndef test_return_no_views():\r\n    import dask.array as da\r\n    import numpy\r\n    a = numpy.ones(10)\r\n    d = da.from_array(a, chunks=10)\r\n\r\n    r = d.compute()\r\n    r[3:4] = 2\r\n    assert (a == 1).all() # fails because a is modified as well.\r\n```\r\n\r\nOn the other hand, if any operations were performed during the construction of d, then inplace modification of the result of `compute()` won't affect the original input `a`. This asymmetric behavior is somewhat inconsistent.\r\n\r\nIf a view is highly desired (for performance) then consider marking the result of compute() read-only when a view to the original data is returned, to provide some numpy level protection against accidental overwriting the original data.\r\n\r\n\r\n\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/3674/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/3674/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}