{
    "url": "https://api.github.com/repos/dask/dask/issues/10178",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10178/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10178/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10178/events",
    "html_url": "https://github.com/dask/dask/issues/10178",
    "id": 1663517204,
    "node_id": "I_kwDOAbcwm85jJ0IU",
    "number": 10178,
    "title": "\"Horizontal\" task aggregation - `delayed` argument to force single task?",
    "user": {
        "login": "T-Flet",
        "id": 6699494,
        "node_id": "MDQ6VXNlcjY2OTk0OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6699494?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/T-Flet",
        "html_url": "https://github.com/T-Flet",
        "followers_url": "https://api.github.com/users/T-Flet/followers",
        "following_url": "https://api.github.com/users/T-Flet/following{/other_user}",
        "gists_url": "https://api.github.com/users/T-Flet/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/T-Flet/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/T-Flet/subscriptions",
        "organizations_url": "https://api.github.com/users/T-Flet/orgs",
        "repos_url": "https://api.github.com/users/T-Flet/repos",
        "events_url": "https://api.github.com/users/T-Flet/events{/privacy}",
        "received_events_url": "https://api.github.com/users/T-Flet/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-04-12T01:39:21Z",
    "updated_at": "2023-05-15T01:54:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "# Idea\r\nWould it not be useful to have a Boolean \"is_single_task\" argument in `delayed` to force calls to functions it wraps to be considered as a single task in `HighLevelGraph`s?\r\nIs there another designed mechanism to make dask merge tasks \"horizontally\" (vs [`fuse`](https://docs.dask.org/en/latest/optimize.html#dask.optimization.fuse)'s \"vertical\" merging of linear tasks)?\r\n\r\nWith this functionality, a long list of quick computations from a single layer (whose scheduling and serialising overhead would be greater than execution) could be forced to execute in a fixed number of heavier tasks by calling a delayed function on batches of them.\r\nOther functions or methods beside `delayed` might benefit from such an argument as well.\r\n\r\n# Example use-case\r\nWhat is the intended dask approach to optimising the following processing pattern (which could occur back-to-back in a broader project)?\r\n  - Some (dask) dataframes go in\r\n  - Many functions taking them as inputs and producing (varying numbers of) new columns are grouped in batches and executed\r\n  - The new columns are `dd.concat`-enated into new dataframes (or added to the input dataframes)\r\n\r\nThe ideal way would be to let each batch-computation be a single task.\r\n\r\nCurrently, if the batching is attempted there is no effect on the `HighLevelGraph`, i.e. all individual tasks are still present (rather than one task per batch).\r\nThere is no obvious way to apply [optimisation functions](https://docs.dask.org/en/stable/optimize.html) to achieve \"horizontal\" task merging in [`delayed`](https://docs.dask.org/en/stable/delayed-api.html#dask.delayed.delayed) or on the [ `HighLevelGraph`](https://docs.dask.org/en/stable/high-level-graphs.html)s of the final objects.\r\n\r\n# Slightly-related issues\r\nBoth issues deal only with \"vertical\" (and no \"horizontal\") task merging:\r\n- #6219: approaches to using the `fuse` optimisation. This can be done in two ways; using the use-case above:\r\n   ```Python\r\n  from dask.optimization import fuse\r\n  from dask.delayed import Delayed\r\n  from dask import delayed\r\n  \r\n  # Set a name for the final graph node (the last `delayed` or dask dataframe operation)\r\n  res_dfs = delayed(function_producing_dfs, nout = number_of_dfs)(some_arguments, dask_key_name = RECOGNISABLE_NAME)\r\n  # Convert the graph to a dictionary and fuse it\r\n  fused_graph, dependencies = fuse(res_dfs.dask.to_dict())\r\n  # Create a new delayed object and compute it\r\n  fused_delayed = Delayed(RECOGNISABLE_NAME, fused_graph)\r\n  fused_delayed.compute()\r\n  ```\r\n  or, more succinctly,\r\n  ```Python\r\n  import dask\r\n  \r\n  with dask.config.set({'optimization.fuse.active': True, 'optimization.fuse.ave-width': 4}):\r\n    res_df1, res_df2, ... = dask.optimize(res_df1, res_df2, ...)\r\n  ```\r\n- #8448: debating running `fuse` automatically for `delayed` objects",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10178/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10178/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}