[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370581211",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370581211",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370581211,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU4MTIxMQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-05T21:56:48Z",
        "updated_at": "2018-03-05T21:56:48Z",
        "author_association": "MEMBER",
        "body": "That's quite interesting.  I would be curious to see how this behaved with some of the [other schedulers](http://dask.pydata.org/en/latest/scheduling.html) notably single-threaded and distributed\r\n\r\n```python\r\nimport dask\r\ndask.set_options(get=dask.local.get_sync)  # use single threaded scheduler\r\n```\r\n\r\n```python\r\nfrom dask.distributed import Client\r\nclient = Client(process=False)  # Use the newer distributed scheduler locally\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370581211/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370581326",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370581326",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370581326,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU4MTMyNg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-05T21:57:06Z",
        "updated_at": "2018-03-05T21:57:06Z",
        "author_association": "MEMBER",
        "body": "Any interest in trying those out as well?\r\n\r\n(also, thanks a ton for putting this together and sharing it!)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370581326/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370584276",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370584276",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370584276,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU4NDI3Ng==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-05T22:06:57Z",
        "updated_at": "2018-03-05T22:06:57Z",
        "author_association": "CONTRIBUTOR",
        "body": "The results above are using the single threaded scheduler (`dask.local.get_sync`). I forgot to mention this is with dask 0.17.1 via conda-forge. Here are the results with the default threaded scheduler:\r\n\r\n```\r\nNumber of values: 10000\r\n119\r\n0\r\n7\r\n0\r\n0\r\nFilename: test_memory_leak.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    11     40.9 MiB     40.9 MiB   @profile\r\n    12                             def main():\r\n    13     49.7 MiB      8.9 MiB       import dask.array as da\r\n    14                                 #num_values = round(((time() * 100) % 5) * (NUM_VALUES / 2))\r\n    15     49.7 MiB      0.0 MiB       num_values = 10000\r\n    16     49.7 MiB      0.0 MiB       print(\"Number of values: {}\".format(num_values))\r\n    17                             \r\n    18     49.7 MiB      0.0 MiB       v1 = da.arange(num_values, chunks=CHUNK_SIZE)\r\n    19     49.7 MiB      0.0 MiB       v2 = da.arange(num_values, chunks=CHUNK_SIZE)\r\n    20     49.8 MiB      0.0 MiB       arr_x, arr_y = da.meshgrid(v1, v2)\r\n    21   1065.1 MiB   1015.4 MiB       res = da.compute(arr_x + arr_y)\r\n    22    302.2 MiB   -762.9 MiB       del v1, v2, res, arr_x, arr_y\r\n    23    302.2 MiB      0.0 MiB       print(gc.collect())\r\n    24                             \r\n    25    302.2 MiB      0.0 MiB       v1 = da.arange(num_values + 1, chunks=CHUNK_SIZE)\r\n    26    302.2 MiB      0.0 MiB       v2 = da.arange(num_values + 1, chunks=CHUNK_SIZE)\r\n    27    302.2 MiB      0.0 MiB       v3 = da.arange(num_values + 1, chunks=CHUNK_SIZE)\r\n    28    302.2 MiB      0.0 MiB       arr_x, arr_y = da.meshgrid(v1, v2)\r\n    29    302.2 MiB      0.0 MiB       arr_x2, arr_y2 = da.meshgrid(v2, v3)\r\n    30   1566.4 MiB   1264.2 MiB       res = da.compute(arr_x + arr_y + arr_x2)\r\n    31    803.3 MiB   -763.1 MiB       del v1, v2, res, arr_x, arr_y, v3, arr_x2, arr_y2\r\n    32    803.3 MiB      0.0 MiB       print(gc.collect())\r\n    33                             \r\n    34    803.3 MiB      0.0 MiB       v1 = da.arange(num_values + 2, chunks=CHUNK_SIZE)\r\n    35    803.3 MiB      0.0 MiB       v2 = da.arange(num_values + 2, chunks=CHUNK_SIZE)\r\n    36    803.3 MiB      0.0 MiB       v3 = da.arange(num_values + 2, chunks=CHUNK_SIZE)\r\n    37    803.3 MiB      0.0 MiB       v4 = da.arange(num_values + 2, chunks=CHUNK_SIZE)\r\n    38    803.3 MiB      0.0 MiB       arr_x, arr_y = da.meshgrid(v1, v2)\r\n    39    803.3 MiB      0.0 MiB       arr_x2, arr_y2 = da.meshgrid(v3, v4)\r\n    40   1591.9 MiB    788.5 MiB       res = da.compute(arr_x + arr_y + arr_x2)\r\n    41    828.6 MiB   -763.2 MiB       del v1, v2, res, arr_x, arr_y, v3, v4, arr_x2, arr_y2\r\n    42    828.6 MiB      0.0 MiB       print(gc.collect())\r\n    43                             \r\n    44    828.6 MiB      0.0 MiB       v1 = da.arange(num_values + 3, chunks=CHUNK_SIZE)\r\n    45    828.6 MiB      0.0 MiB       v2 = da.arange(num_values + 3, chunks=CHUNK_SIZE)\r\n    46    828.6 MiB      0.0 MiB       arr_x, arr_y = da.meshgrid(v1, v2)\r\n    47    828.6 MiB      0.0 MiB       arr_x2, arr_y2 = da.meshgrid(v2, v1)\r\n    48   1592.6 MiB    764.0 MiB       res = da.compute(arr_x + arr_y + arr_x2)\r\n    49    829.2 MiB   -763.4 MiB       del v1, v2, res, arr_x, arr_y, arr_x2, arr_y2\r\n    50    829.2 MiB      0.0 MiB       print(gc.collect())\r\n    51                             \r\n    52    829.2 MiB      0.0 MiB       v1 = da.arange(num_values, chunks=CHUNK_SIZE)\r\n    53    829.2 MiB      0.0 MiB       v2 = da.arange(num_values, chunks=CHUNK_SIZE)\r\n    54    829.2 MiB      0.0 MiB       arr_x, arr_y = da.meshgrid(v1, v2)\r\n    55   1592.4 MiB    763.1 MiB       res = da.compute(arr_x + arr_y)\r\n    56    829.4 MiB   -762.9 MiB       del v1, v2, res, arr_x, arr_y\r\n    57    829.4 MiB      0.0 MiB       print(gc.collect())\r\n```\r\n\r\nSo about the same. With client and rearranging some things to make `memory_profiler` and `dask` happy with both of them starting child processes:\r\n\r\n```\r\nNumber of values: 10000\r\n531\r\n996\r\n627\r\n658\r\n709\r\nFilename: test_memory_leak.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    11     40.6 MiB     40.6 MiB   @profile\r\n    12                             def main():\r\n    13     49.6 MiB      8.9 MiB       import dask.array as da\r\n    14     58.8 MiB      9.3 MiB       from dask.distributed import Client\r\n    15     87.3 MiB     28.4 MiB       client = Client()\r\n    16                                 #num_values = round(((time() * 100) % 5) * (NUM_VALUES / 2))\r\n    17     87.3 MiB      0.0 MiB       num_values = 10000\r\n    18     87.3 MiB      0.0 MiB       print(\"Number of values: {}\".format(num_values))\r\n    19                             \r\n    20     87.3 MiB      0.0 MiB       v1 = da.arange(num_values, chunks=CHUNK_SIZE)\r\n    21     87.3 MiB      0.0 MiB       v2 = da.arange(num_values, chunks=CHUNK_SIZE)\r\n    22     87.3 MiB      0.0 MiB       arr_x, arr_y = da.meshgrid(v1, v2)\r\n    23   1729.6 MiB   1642.3 MiB       res = da.compute(arr_x + arr_y)\r\n    24    966.7 MiB   -762.9 MiB       del v1, v2, res, arr_x, arr_y\r\n    25    966.7 MiB      0.0 MiB       print(gc.collect())\r\n    26                             \r\n    27    966.7 MiB      0.0 MiB       v1 = da.arange(num_values + 1, chunks=CHUNK_SIZE)\r\n    28    966.7 MiB      0.0 MiB       v2 = da.arange(num_values + 1, chunks=CHUNK_SIZE)\r\n    29    966.7 MiB      0.0 MiB       v3 = da.arange(num_values + 1, chunks=CHUNK_SIZE)\r\n    30    966.7 MiB      0.0 MiB       arr_x, arr_y = da.meshgrid(v1, v2)\r\n    31    966.7 MiB      0.0 MiB       arr_x2, arr_y2 = da.meshgrid(v2, v3)\r\n    32   1747.9 MiB    781.2 MiB       res = da.compute(arr_x + arr_y + arr_x2)\r\n    33    984.8 MiB   -763.1 MiB       del v1, v2, res, arr_x, arr_y, v3, arr_x2, arr_y2\r\n    34    984.8 MiB      0.0 MiB       print(gc.collect())\r\n    35                             \r\n    36    984.8 MiB      0.0 MiB       v1 = da.arange(num_values + 2, chunks=CHUNK_SIZE)\r\n    37    984.8 MiB      0.0 MiB       v2 = da.arange(num_values + 2, chunks=CHUNK_SIZE)\r\n    38    984.8 MiB      0.0 MiB       v3 = da.arange(num_values + 2, chunks=CHUNK_SIZE)\r\n    39    984.8 MiB      0.0 MiB       v4 = da.arange(num_values + 2, chunks=CHUNK_SIZE)\r\n    40    984.8 MiB      0.0 MiB       arr_x, arr_y = da.meshgrid(v1, v2)\r\n    41    984.8 MiB      0.0 MiB       arr_x2, arr_y2 = da.meshgrid(v3, v4)\r\n    42   1767.6 MiB    782.8 MiB       res = da.compute(arr_x + arr_y + arr_x2)\r\n    43   1004.4 MiB   -763.2 MiB       del v1, v2, res, arr_x, arr_y, v3, v4, arr_x2, arr_y2\r\n    44   1004.4 MiB      0.0 MiB       print(gc.collect())\r\n    45                             \r\n    46   1004.4 MiB      0.0 MiB       v1 = da.arange(num_values + 3, chunks=CHUNK_SIZE)\r\n    47   1004.4 MiB      0.0 MiB       v2 = da.arange(num_values + 3, chunks=CHUNK_SIZE)\r\n    48   1004.4 MiB      0.0 MiB       arr_x, arr_y = da.meshgrid(v1, v2)\r\n    49   1004.4 MiB      0.0 MiB       arr_x2, arr_y2 = da.meshgrid(v2, v1)\r\n    50   1742.7 MiB    738.3 MiB       res = da.compute(arr_x + arr_y + arr_x2)\r\n    51    979.3 MiB   -763.4 MiB       del v1, v2, res, arr_x, arr_y, arr_x2, arr_y2\r\n    52    979.3 MiB      0.0 MiB       print(gc.collect())\r\n    53                             \r\n    54    979.3 MiB      0.0 MiB       v1 = da.arange(num_values, chunks=CHUNK_SIZE)\r\n    55    979.3 MiB      0.0 MiB       v2 = da.arange(num_values, chunks=CHUNK_SIZE)\r\n    56    979.3 MiB      0.0 MiB       arr_x, arr_y = da.meshgrid(v1, v2)\r\n    57   1640.4 MiB    661.1 MiB       res = da.compute(arr_x + arr_y)\r\n    58    877.4 MiB   -762.9 MiB       del v1, v2, res, arr_x, arr_y\r\n    59    877.4 MiB      0.0 MiB       print(gc.collect())\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370584276/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370585738",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370585738",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370585738,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU4NTczOA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-05T22:12:07Z",
        "updated_at": "2018-03-05T22:12:07Z",
        "author_association": "MEMBER",
        "body": "So, I'm somewhat at a loss for where this extra state might be kept.  There aren't that many places where we cache things, and we *never* cache data unless explicitly requested (or so I thought).  My next approach would be to look at what kinds of objects are being left behind in the garbage collector with `gc.get_objects()` although there might be a better way here.  Do you have any suggestions?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370585738/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370593003",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370593003",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370593003,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU5MzAwMw==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-05T22:38:41Z",
        "updated_at": "2018-03-05T22:38:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "So I tried `gc.set_debug(gc.DEBUG_LEAK)` at the top of the script and nothing is uncollectable so it doesn't look like it is a memory leak. Dask is so big and even doing some simple operations involves a lot of moving parts so looking through what is being created and held on to isn't the easiest thing.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370593003/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370595082",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370595082",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370595082,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU5NTA4Mg==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-05T22:46:06Z",
        "updated_at": "2018-03-05T22:46:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "A simpler example:\r\n\r\n```\r\nNumber of values: 100000\r\n119\r\nFilename: test_memory_leak.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    13     40.9 MiB     40.9 MiB   @profile\r\n    14                             def main():\r\n    15     50.0 MiB      9.1 MiB       import dask.array as da\r\n    16     50.0 MiB      0.0 MiB       import numpy as np\r\n    17                                 #num_values = round(((time() * 100) % 5) * (NUM_VALUES / 2))\r\n    18     50.0 MiB      0.0 MiB       num_values = 100000\r\n    19     50.0 MiB      0.0 MiB       print(\"Number of values: {}\".format(num_values))\r\n    20                             \r\n    21     50.0 MiB      0.0 MiB       v1 = da.arange(num_values, chunks=CHUNK_SIZE)\r\n    22     51.6 MiB      1.6 MiB       v1 = da.compute(v1)\r\n    23     51.6 MiB      0.0 MiB       del v1\r\n    24     51.6 MiB      0.0 MiB       print(gc.collect())\r\n    25     51.6 MiB      0.0 MiB       return\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370595082/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370595211",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370595211",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370595211,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU5NTIxMQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-05T22:46:32Z",
        "updated_at": "2018-03-05T22:46:32Z",
        "author_association": "MEMBER",
        "body": "Yeah, I don't disagree with you.  I think your hope is that by showing this that someone will say \"ah ha!  I'll bet it's this particular cache that I hadn't thought about before!\"  Unfortunately nothing is coming to mind.  Additionally we've gone looking for memory leaks before, so a lot of where we would look in the codebase has been well searched over.  Honestly when these things come up we more often find issues upstream (see for example this bug from a week ago https://github.com/pandas-dev/pandas/issues/19941).  The part of Dask you're using also isn't actually that big.   The local scheduler that you're using is around 1k lines with no global state whatsoever if you're using the single machine scheduler.  \r\n\r\nAnother thing you could do would be to break down `da.compute` a bit and see if you can isolate it to just execution (removing graph optimization and any other stage that might exist.  You could also verify that the same thing in numpy *doesn't* leak.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370595211/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370595291",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370595291",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370595291,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU5NTI5MQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-05T22:46:54Z",
        "updated_at": "2018-03-05T22:46:54Z",
        "author_association": "MEMBER",
        "body": "Does the leak scale with the amount of data created?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370595291/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370597219",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370597219",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370597219,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU5NzIxOQ==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-05T22:54:38Z",
        "updated_at": "2018-03-05T22:55:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mrocklin I did a simple test with swapping dask methods with numpy and the leak does not appear. I also tried passing `optimize=False` to `compute`, no difference. The leak (if you can call it that) does scale with amount of data, both size and number of inputs.\r\n\r\nEdit: `optimize_graph=False`",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370597219/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370597547",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370597547",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370597547,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDU5NzU0Nw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-05T22:55:56Z",
        "updated_at": "2018-03-05T22:55:56Z",
        "author_association": "MEMBER",
        "body": "I would again check `gc.get_objects` and see if we're leaking numpy arrays (presumably by filtering the full list)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370597547/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370609450",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370609450",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370609450,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDYwOTQ1MA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-05T23:50:39Z",
        "updated_at": "2019-06-03T15:07:01Z",
        "author_association": "MEMBER",
        "body": "Here are the objects that were lying around before and after computation\r\n\r\n```python\r\nfrom toolz.curried import pipe, frequencies, map\r\nimport gc\r\nimport sys\r\nfrom time import time\r\nimport gc\r\nimport dask\r\ndask.set_options(get=dask.local.get_sync)\r\nfrom memory_profiler import profile\r\n\r\nNUM_VALUES = 10000\r\nCHUNK_SIZE = 4096\r\nimport dask.array as da\r\n#num_values = round(((time() * 100) % 5) * (NUM_VALUES / 2))\r\nnum_values = 10000\r\nprint(\"Number of values: {}\".format(num_values))\r\n\r\nv1 = da.arange(num_values, chunks=CHUNK_SIZE)\r\nv2 = da.arange(num_values, chunks=CHUNK_SIZE)\r\narr_x, arr_y = da.meshgrid(v1, v2)\r\n\r\nbefore = pipe(gc.get_objects(), map(type), frequencies)\r\nfor i in range(5):\r\n    res = da.compute(arr_x + arr_y)\r\n    del res\r\n    print(gc.collect())\r\nafter = pipe(gc.get_objects(), map(type), frequencies)\r\n\r\ncounts = {k: after.get(k, 0) - before.get(k, 0) for k in after\r\n          if after.get(k, 0) > before.get(k, 0)}\r\nprint(counts)\r\n\r\n```\r\n\r\n```\r\n{<class 'weakref'>: 9, <class 'list'>: 17, <class 'cell'>: 9, <class 'set'>: 2, <class 'frame'>: 15, <class 'collections.OrderedDict'>: 1, <class 'inspect.Signature'>: 1, <class 'mappingproxy'>: 1, <class 'inspect.Parameter'>: 3, <class 'dask.array.core.Array'>: 1, <class 'ValueError'>: 2, <class 'traceback'>: 10, <class 'dask.sharedict.ShareDict'>: 1, <class 'TypeError'>: 2}\r\n```\r\n\r\nAnd here are all of the objects that have 'dask' in the name\r\n\r\n```python\r\n>>> for x in L:\r\n...   if 'dask' in str(type(x)):\r\n...     print('-' * 80)\r\n...     print(x)\r\n... \r\n```\r\n```\r\n--------------------------------------------------------------------------------\r\n<dask.utils.MethodCache object at 0x7fd7f182ee10>\r\n--------------------------------------------------------------------------------\r\n<dask.utils.Dispatch object at 0x7fd7f181f9e8>\r\n--------------------------------------------------------------------------------\r\n<dask.context.GlobalMethod object at 0x7fd7f019a160>\r\n--------------------------------------------------------------------------------\r\nDelayed('abs-9d3978af4cd6a1176873455f767056c8')\r\n--------------------------------------------------------------------------------\r\nDelayed('neg-e1cbff8c6822de22d7b3f35907e59a14')\r\n--------------------------------------------------------------------------------\r\nDelayed('pos-8d2d8feb7e6d4f618941a0965a4feb44')\r\n--------------------------------------------------------------------------------\r\nDelayed('invert-ed913792c06c4eca90d7498061152e00')\r\n--------------------------------------------------------------------------------\r\nDelayed('add-93a1c77f14a645bb387d6e898b6265cd')\r\n--------------------------------------------------------------------------------\r\nDelayed('_inner-738c0b5c61d7548adef2d726401d9441')\r\n--------------------------------------------------------------------------------\r\nDelayed('sub-a403c38c18ccc3d093e53c57e335233e')\r\n--------------------------------------------------------------------------------\r\nDelayed('_inner-cbad720f045fe9adb41e068b89452a3c')\r\n--------------------------------------------------------------------------------\r\nDelayed('mul-7bd94f8407abfb63d21e0835ff344882')\r\n--------------------------------------------------------------------------------\r\nDelayed('_inner-b47df88d2390adcb465633da180aa8ba')\r\n--------------------------------------------------------------------------------\r\nDelayed('floordiv-5272dbd2a05e3bc46a97206e6ceef5da')\r\n--------------------------------------------------------------------------------\r\nDelayed('_inner-2be9d3be4bd1b36c40e1a5943159c1a7')\r\n--------------------------------------------------------------------------------\r\nDelayed('truediv-4b922b7c88f249899ffc15789df19a53')\r\n--------------------------------------------------------------------------------\r\nDelayed('_inner-22bb7e053d0a85b24d5a831b629f907e')\r\n--------------------------------------------------------------------------------\r\nDelayed('mod-7ffb24653bd9ba7690db845b0bd8f87b')\r\n--------------------------------------------------------------------------------\r\nDelayed('_inner-2b136e67e714e2895d321a341918331b')\r\n--------------------------------------------------------------------------------\r\nDelayed('pow-e130c828fb9b1c9545100fe51f1cce42')\r\n--------------------------------------------------------------------------------\r\nDelayed('_inner-0a01424297105fbc06d3c2ebf210e587')\r\n--------------------------------------------------------------------------------\r\nDelayed('and_-b29cba09bccaa2d9e3875ece7448ebb2')\r\n--------------------------------------------------------------------------------\r\nDelayed('or_-fdfd11220fa7a80436cb0ff283a6f52d')\r\n--------------------------------------------------------------------------------\r\nDelayed('_inner-a3846f1c9926d586e0abc1af6ac02e64')\r\n--------------------------------------------------------------------------------\r\nDelayed('xor-ea3d3a231021c76f4a678b4a6d5b34f1')\r\n--------------------------------------------------------------------------------\r\nDelayed('_inner-b31c5fdfc6cd6bd4bb2132858a90b787')\r\n--------------------------------------------------------------------------------\r\nDelayed('lshift-41a4ecdf9627076497edef8a4ce2cb06')\r\n--------------------------------------------------------------------------------\r\nDelayed('_inner-3d1e59db4b9279fa79bacc1a8332f751')\r\n--------------------------------------------------------------------------------\r\nDelayed('rshift-4bcc45d0376bfb66a22f3dc4e5e28ebd')\r\n--------------------------------------------------------------------------------\r\nDelayed('_inner-8329a16fa686421db9311ab3658feefd')\r\n--------------------------------------------------------------------------------\r\nDelayed('eq-e8a7198de29a866bb99487c0f8c57e8c')\r\n--------------------------------------------------------------------------------\r\nDelayed('ge-aa27b825eb50ac974665301b57a7586b')\r\n--------------------------------------------------------------------------------\r\nDelayed('gt-a1c9e60885eecca509b181d0f1048a37')\r\n--------------------------------------------------------------------------------\r\nDelayed('ne-e894942eb3dbd7e733847adaac31543c')\r\n--------------------------------------------------------------------------------\r\nDelayed('le-eb072e26964c19fade21d2e491c24311')\r\n--------------------------------------------------------------------------------\r\nDelayed('lt-483c48813819e9e78df507c49188a658')\r\n--------------------------------------------------------------------------------\r\nDelayed('getitem-36ee2d18abc663fdf365e6d538752c60')\r\n--------------------------------------------------------------------------------\r\nDelayed('_inner-00682776c7f8c644b5cbca7ff5a8c74d')\r\n--------------------------------------------------------------------------------\r\ndask.array<broadcast_to, shape=(10000, 10000), dtype=int64, chunksize=(4096, 4096)>\r\n--------------------------------------------------------------------------------\r\n<dask.utils.Dispatch object at 0x7fd7ebf26940>\r\n--------------------------------------------------------------------------------\r\n<dask.utils.Dispatch object at 0x7fd7ebf26978>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'add'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'subtract'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'multiply'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'true_divide'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'logaddexp'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'logaddexp2'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'true_divide'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'floor_divide'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'negative'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'power'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'float_power'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'remainder'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'remainder'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'conjugate'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'exp'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'exp2'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'log'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'log2'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'log10'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'log1p'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'expm1'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'sqrt'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'square'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'cbrt'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'reciprocal'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'sin'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'cos'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'tan'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'arcsin'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'arccos'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'arctan'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'arctan2'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'hypot'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'sinh'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'cosh'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'tanh'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'arcsinh'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'arccosh'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'arctanh'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'deg2rad'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'rad2deg'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'greater'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'greater_equal'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'less'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'less_equal'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'not_equal'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'equal'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'logical_and'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'logical_or'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'logical_xor'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'logical_not'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'maximum'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'minimum'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'fmax'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'fmin'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'bitwise_and'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'bitwise_or'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'bitwise_xor'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'invert'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'isfinite'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'isinf'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'isnan'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'signbit'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'copysign'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'nextafter'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'spacing'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'ldexp'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'fmod'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'floor'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'ceil'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'trunc'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'degrees'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'radians'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'rint'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'fabs'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'sign'>\r\n--------------------------------------------------------------------------------\r\n<ufunc 'absolute'>\r\n--------------------------------------------------------------------------------\r\n<dask.utils.Dispatch object at 0x7fd7e7f489e8>\r\n--------------------------------------------------------------------------------\r\n<dask.utils.Dispatch object at 0x7fd7e7f48a20>\r\n--------------------------------------------------------------------------------\r\n<dask.array.random.RandomState object at 0x7fd7e7f6b080>\r\n--------------------------------------------------------------------------------\r\ndask.array<arange, shape=(10000,), dtype=int64, chunksize=(4096,)>\r\n--------------------------------------------------------------------------------\r\n<dask.sharedict.ShareDict object at 0x7fd7f183f630>\r\n--------------------------------------------------------------------------------\r\ndask.array<arange, shape=(10000,), dtype=int64, chunksize=(4096,)>\r\n--------------------------------------------------------------------------------\r\n<dask.sharedict.ShareDict object at 0x7fd7e7f359b0>\r\n--------------------------------------------------------------------------------\r\ndask.array<broadcast_to, shape=(10000, 10000), dtype=int64, chunksize=(4096, 4096)>\r\n--------------------------------------------------------------------------------\r\n<dask.sharedict.ShareDict object at 0x7fd7e7f35fd0>\r\n--------------------------------------------------------------------------------\r\n<dask.sharedict.ShareDict object at 0x7fd7e7f35e80>\r\n--------------------------------------------------------------------------------\r\n<dask.context.GlobalMethod object at 0x7fd7e8575c50>\r\n--------------------------------------------------------------------------------\r\ndask.array<add, shape=(10000, 10000), dtype=int64, chunksize=(4096, 4096)>\r\n--------------------------------------------------------------------------------\r\n<dask.sharedict.ShareDict object at 0x7fd7ecc274a8>\r\n```\r\n\r\nNot sure how much use this is, but thought it might be interesting.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370609450/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370627617",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370627617",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370627617,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDYyNzYxNw==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T01:23:46Z",
        "updated_at": "2018-03-06T01:23:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "That looks like a lot of delayed and array objects being held somewhere. I'll see if I can walk through the code and see something obvious.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370627617/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370628562",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370628562",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370628562,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDYyODU2Mg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T01:28:23Z",
        "updated_at": "2018-03-06T01:28:23Z",
        "author_association": "MEMBER",
        "body": "I think that the delayed objects are just functions.  The dask arrays are, I think, just the arrays we've defined in the example.  This isn't the diff, this is everything in memory.  I only deleted the result, not the dask.array objects.\r\n\r\n```python\r\n>>> for x in L:\r\n...   if 'Delayed' in str(type(x)):\r\n...     print(x.dask)\r\n... \r\n{'abs-9d3978af4cd6a1176873455f767056c8': <built-in function abs>}\r\n{'neg-e1cbff8c6822de22d7b3f35907e59a14': <built-in function neg>}\r\n{'pos-8d2d8feb7e6d4f618941a0965a4feb44': <built-in function pos>}\r\n{'invert-ed913792c06c4eca90d7498061152e00': <built-in function invert>}\r\n{'add-93a1c77f14a645bb387d6e898b6265cd': <built-in function add>}\r\n{'_inner-738c0b5c61d7548adef2d726401d9441': <function right.<locals>._inner at 0x7fd7ee3981e0>}\r\n{'sub-a403c38c18ccc3d093e53c57e335233e': <built-in function sub>}\r\n{'_inner-cbad720f045fe9adb41e068b89452a3c': <function right.<locals>._inner at 0x7fd7ee35b378>}\r\n{'mul-7bd94f8407abfb63d21e0835ff344882': <built-in function mul>}\r\n{'_inner-b47df88d2390adcb465633da180aa8ba': <function right.<locals>._inner at 0x7fd7ee35b510>}\r\n{'floordiv-5272dbd2a05e3bc46a97206e6ceef5da': <built-in function floordiv>}\r\n{'_inner-2be9d3be4bd1b36c40e1a5943159c1a7': <function right.<locals>._inner at 0x7fd7ee35b6a8>}\r\n{'truediv-4b922b7c88f249899ffc15789df19a53': <built-in function truediv>}\r\n{'_inner-22bb7e053d0a85b24d5a831b629f907e': <function right.<locals>._inner at 0x7fd7ee35b840>}\r\n{'mod-7ffb24653bd9ba7690db845b0bd8f87b': <built-in function mod>}\r\n{'_inner-2b136e67e714e2895d321a341918331b': <function right.<locals>._inner at 0x7fd7ee35b9d8>}\r\n{'pow-e130c828fb9b1c9545100fe51f1cce42': <built-in function pow>}\r\n{'_inner-0a01424297105fbc06d3c2ebf210e587': <function right.<locals>._inner at 0x7fd7ee35bb70>}\r\n{'and_-b29cba09bccaa2d9e3875ece7448ebb2': <built-in function and_>}\r\n{'or_-fdfd11220fa7a80436cb0ff283a6f52d': <built-in function or_>}\r\n{'_inner-a3846f1c9926d586e0abc1af6ac02e64': <function right.<locals>._inner at 0x7fd7ee35bea0>}\r\n{'xor-ea3d3a231021c76f4a678b4a6d5b34f1': <built-in function xor>}\r\n{'_inner-b31c5fdfc6cd6bd4bb2132858a90b787': <function right.<locals>._inner at 0x7fd7ee3620d0>}\r\n{'lshift-41a4ecdf9627076497edef8a4ce2cb06': <built-in function lshift>}\r\n{'_inner-3d1e59db4b9279fa79bacc1a8332f751': <function right.<locals>._inner at 0x7fd7ee362268>}\r\n{'rshift-4bcc45d0376bfb66a22f3dc4e5e28ebd': <built-in function rshift>}\r\n{'_inner-8329a16fa686421db9311ab3658feefd': <function right.<locals>._inner at 0x7fd7ee362400>}\r\n{'eq-e8a7198de29a866bb99487c0f8c57e8c': <built-in function eq>}\r\n{'ge-aa27b825eb50ac974665301b57a7586b': <built-in function ge>}\r\n{'gt-a1c9e60885eecca509b181d0f1048a37': <built-in function gt>}\r\n{'ne-e894942eb3dbd7e733847adaac31543c': <built-in function ne>}\r\n{'le-eb072e26964c19fade21d2e491c24311': <built-in function le>}\r\n{'lt-483c48813819e9e78df507c49188a658': <built-in function lt>}\r\n{'getitem-36ee2d18abc663fdf365e6d538752c60': <built-in function getitem>}\r\n{'_inner-00682776c7f8c644b5cbca7ff5a8c74d': <function right.<locals>._inner at 0x7fd7ee35bd08>}\r\n>>> for x in L:\\\r\n... \r\nKeyboardInterrupt\r\n>>> for x in L:\r\n...   if 'Array' in str(type(x)):\r\n...     print(x)\r\n... \r\ndask.array<broadcast_to, shape=(10000, 10000), dtype=int64, chunksize=(4096, 4096)>\r\n--\r\ndask.array<arange, shape=(10000,), dtype=int64, chunksize=(4096,)>\r\ndask.array<arange, shape=(10000,), dtype=int64, chunksize=(4096,)>\r\ndask.array<broadcast_to, shape=(10000, 10000), dtype=int64, chunksize=(4096, 4096)>\r\ndask.array<add, shape=(10000, 10000), dtype=int64, chunksize=(4096, 4096)>\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370628562/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370652614",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370652614",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370652614,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDY1MjYxNA==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T03:43:52Z",
        "updated_at": "2018-03-06T03:43:52Z",
        "author_association": "CONTRIBUTOR",
        "body": "I spent way more time than I should have trying to track this down and I may have hit the limits of what the memory profiler is able to figure out. I got all the way to `dask/local.py` and the actual execution of `dask/array/chunk.py:arange`. Even if I don't return the array inside arange and instead return `None` the memory profiler is still showing the memory being taken up.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370652614/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370652701",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370652701",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370652701,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDY1MjcwMQ==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T03:44:29Z",
        "updated_at": "2018-03-06T04:19:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "```Filename: /Users/davidh/repos/git/dask/dask/array/chunk.py\r\n\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n   193     50.0 MiB     50.0 MiB   @profile\r\n   194                             def arange(start, stop, step, length, dtype):\r\n   195     51.5 MiB      1.5 MiB       res = np.arange(start, stop, step, dtype)\r\n   196     51.5 MiB      0.0 MiB       del res\r\n   197     51.5 MiB      0.0 MiB       gc.collect()\r\n   198     51.5 MiB      0.0 MiB       return None\r\n   199                                 return res[:-1] if len(res) > length else res\r\n```\r\n\r\nEdit: Nevermind, I just needed a larger amount of data. Python seems to be ok with the 1.5MiB hanging around. Not the case with 750MiB.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370652701/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370658934",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370658934",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370658934,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDY1ODkzNA==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T04:29:14Z",
        "updated_at": "2018-03-06T04:29:14Z",
        "author_association": "CONTRIBUTOR",
        "body": "Giving up for now. I moved to a different spot and am working on battery power and now I can't get my small example of just `arange`  or my `arange, arange, meshgrid` test to hold on to memory. My original test script at the top still does. I'm starting to think dask doesn't have much to do with this. I'll test a little more tomorrow.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370658934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370696006",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370696006",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370696006,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDY5NjAwNg==",
        "user": {
            "login": "mraspaud",
            "id": 167802,
            "node_id": "MDQ6VXNlcjE2NzgwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/167802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mraspaud",
            "html_url": "https://github.com/mraspaud",
            "followers_url": "https://api.github.com/users/mraspaud/followers",
            "following_url": "https://api.github.com/users/mraspaud/following{/other_user}",
            "gists_url": "https://api.github.com/users/mraspaud/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mraspaud/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mraspaud/subscriptions",
            "organizations_url": "https://api.github.com/users/mraspaud/orgs",
            "repos_url": "https://api.github.com/users/mraspaud/repos",
            "events_url": "https://api.github.com/users/mraspaud/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mraspaud/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T08:02:09Z",
        "updated_at": "2018-03-06T08:02:09Z",
        "author_association": "NONE",
        "body": "Just for reference, a minimal example, holding onto 1.5GB of memory:\r\n```python\r\nimport gc\r\nimport dask.array as da\r\n\r\n@profile\r\ndef main():\r\n    res = da.arange(20000*10000, chunks=8192*8192)\r\n    res2 = da.compute(res)\r\n    del res\r\n    del res2\r\n\r\n    gc.collect()\r\n    print('done')\r\n\r\nmain()\r\n```\r\n\r\nAs I said, the net result is +1.5GB of memory occupied:\r\n```\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n     4   46.238 MiB    0.000 MiB   @profile\r\n     5                             def main():\r\n     6   46.273 MiB    0.035 MiB       res = da.arange(20000*10000, chunks=8192*8192)\r\n     7 3098.016 MiB 3051.742 MiB       res2 = da.compute(res)\r\n     8 3098.016 MiB    0.000 MiB       del res\r\n     9 1572.133 MiB -1525.883 MiB      del res2\r\n    10                             \r\n    11 1572.133 MiB    0.000 MiB       gc.collect()\r\n    12 1572.137 MiB    0.004 MiB       print('done')\r\n```\r\n\r\nthe `del res2` line frees up 1.5GB, but the computation is allocating more memory that that, depending on the chunks size: \r\n```\r\n     6   46.273 MiB    0.035 MiB       res = da.arange(20000*10000, chunks=8192*8192 / 2)\r\n     7 2586.016 MiB 2539.742 MiB       res2 = da.compute(res)\r\n```\r\nand\r\n```\r\n     6   46.277 MiB    0.035 MiB       res = da.arange(20000*10000, chunks=8192*8192 / 4)\r\n     7 2083.871 MiB 2037.594 MiB       res2 = da.compute(res)\r\n```\r\n\r\nThis is running on RHEL 7 with python 2.7.5",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370696006/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370726414",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370726414",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370726414,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDcyNjQxNA==",
        "user": {
            "login": "mraspaud",
            "id": 167802,
            "node_id": "MDQ6VXNlcjE2NzgwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/167802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mraspaud",
            "html_url": "https://github.com/mraspaud",
            "followers_url": "https://api.github.com/users/mraspaud/followers",
            "following_url": "https://api.github.com/users/mraspaud/following{/other_user}",
            "gists_url": "https://api.github.com/users/mraspaud/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mraspaud/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mraspaud/subscriptions",
            "organizations_url": "https://api.github.com/users/mraspaud/orgs",
            "repos_url": "https://api.github.com/users/mraspaud/repos",
            "events_url": "https://api.github.com/users/mraspaud/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mraspaud/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T09:55:51Z",
        "updated_at": "2018-03-06T09:55:51Z",
        "author_association": "NONE",
        "body": "It looks like the open ThreadPool is to blame: closing it at the end of the `dask.threaded.get` function seems to make the problem disappear.\r\n\r\nSo adding\r\n```python\r\n    if default_pool is not None:\r\n        default_pool.close()\r\n        default_pool = None\r\n    pool = None\r\n```\r\nhere: https://github.com/dask/dask/blob/master/dask/threaded.py#L85\r\nworks for me. No clue if this is the right thing to do though :)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370726414/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370758569",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370758569",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370758569,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDc1ODU2OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T11:56:59Z",
        "updated_at": "2018-03-06T11:56:59Z",
        "author_association": "MEMBER",
        "body": "@davidh-ssec thank you for diving into this.  I know it's not fun to have to track down bugs in a foreign codebase.\r\n\r\n@mraspaud we used to open/close the ThreadPool every computation, but this added some overhead for downstream projects that used it many times for small computations (notably XArray) (although I'm not able to reproduce these high costs now, which is interesting).  I wonder if there is a way to clear out whatever state is in the ThreadPool and delete it explicitly?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370758569/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370759954",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370759954",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370759954,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDc1OTk1NA==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T12:03:07Z",
        "updated_at": "2018-03-06T12:03:07Z",
        "author_association": "CONTRIBUTOR",
        "body": "Keep in mind I wasn't even using the threaded get in my tests. So nothing should have been sent to a thread pool right?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370759954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370760058",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370760058",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370760058,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDc2MDA1OA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T12:03:39Z",
        "updated_at": "2018-03-06T12:03:39Z",
        "author_association": "MEMBER",
        "body": "Correct.  All operations happen in the same thread from which you call `get`",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370760058/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370760136",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370760136",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370760136,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDc2MDEzNg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T12:04:02Z",
        "updated_at": "2018-03-06T12:04:02Z",
        "author_association": "MEMBER",
        "body": "These are, I suspect, two different (but important) problems that yield the same result of excess memory use.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370760136/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370790649",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370790649",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370790649,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDc5MDY0OQ==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T14:02:46Z",
        "updated_at": "2018-03-06T14:02:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "I think the stuff with my situation may just be the system holding on to memory or something out of our control. I did a few more tests and tried using python 3.6's tracemalloc and didn't get any results that made a lot of sense. I did see an increase but it wasn't dependent on the data size or chunk size:\r\n\r\n```\r\n<frozen importlib._bootstrap>:219: size=1269 KiB (+0 B), count=9413 (+0), average=138 B\r\n```\r\n\r\nI was only investigating this because of some stuff that @mraspaud was seeing. I'm wondering if his issues were always the threaded stuff on his linux system.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370790649/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370895149",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370895149",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370895149,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDg5NTE0OQ==",
        "user": {
            "login": "mraspaud",
            "id": 167802,
            "node_id": "MDQ6VXNlcjE2NzgwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/167802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mraspaud",
            "html_url": "https://github.com/mraspaud",
            "followers_url": "https://api.github.com/users/mraspaud/followers",
            "following_url": "https://api.github.com/users/mraspaud/following{/other_user}",
            "gists_url": "https://api.github.com/users/mraspaud/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mraspaud/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mraspaud/subscriptions",
            "organizations_url": "https://api.github.com/users/mraspaud/orgs",
            "repos_url": "https://api.github.com/users/mraspaud/repos",
            "events_url": "https://api.github.com/users/mraspaud/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mraspaud/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T19:16:42Z",
        "updated_at": "2018-03-06T19:16:42Z",
        "author_association": "NONE",
        "body": "I can't see anything obvious for reinitializing the pool unfortunately.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370895149/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/370970174",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-370970174",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 370970174,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDk3MDE3NA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-06T23:44:38Z",
        "updated_at": "2018-03-06T23:44:38Z",
        "author_association": "MEMBER",
        "body": "Kind of an [old article]( https://chase-seibert.github.io/blog/2013/08/03/diagnosing-memory-leaks-python.html ), but a good read. Has some other suggestions that don't appear to be tried in this thread. The article discusses a problem with Celery that is debugged as opposed to Dask, but the strategies tried IMHO are still applicable.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/370970174/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392219351",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-392219351",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 392219351,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjIxOTM1MQ==",
        "user": {
            "login": "meridionaljet",
            "id": 12929327,
            "node_id": "MDQ6VXNlcjEyOTI5MzI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/12929327?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/meridionaljet",
            "html_url": "https://github.com/meridionaljet",
            "followers_url": "https://api.github.com/users/meridionaljet/followers",
            "following_url": "https://api.github.com/users/meridionaljet/following{/other_user}",
            "gists_url": "https://api.github.com/users/meridionaljet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/meridionaljet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/meridionaljet/subscriptions",
            "organizations_url": "https://api.github.com/users/meridionaljet/orgs",
            "repos_url": "https://api.github.com/users/meridionaljet/repos",
            "events_url": "https://api.github.com/users/meridionaljet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/meridionaljet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T00:19:16Z",
        "updated_at": "2018-05-26T00:19:16Z",
        "author_association": "NONE",
        "body": "Has there been any progress in tracking this \"leak\" down? I have found similar behavior when iterating over dask-wrapped xarray Datasets, and this kind of \"left-over\" memory allocation seems highly detrimental to any kind of looping logic.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392219351/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392231550",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-392231550",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 392231550,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjIzMTU1MA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T03:08:27Z",
        "updated_at": "2018-05-26T03:08:27Z",
        "author_association": "MEMBER",
        "body": "I haven't read through this thread to see if they're the same, but https://github.com/dask/dask/issues/3530 may be relevant.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392231550/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/432356737",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-432356737",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 432356737,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjM1NjczNw==",
        "user": {
            "login": "WolVesz",
            "id": 28787433,
            "node_id": "MDQ6VXNlcjI4Nzg3NDMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/28787433?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WolVesz",
            "html_url": "https://github.com/WolVesz",
            "followers_url": "https://api.github.com/users/WolVesz/followers",
            "following_url": "https://api.github.com/users/WolVesz/following{/other_user}",
            "gists_url": "https://api.github.com/users/WolVesz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WolVesz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WolVesz/subscriptions",
            "organizations_url": "https://api.github.com/users/WolVesz/orgs",
            "repos_url": "https://api.github.com/users/WolVesz/repos",
            "events_url": "https://api.github.com/users/WolVesz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WolVesz/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-23T18:05:38Z",
        "updated_at": "2018-10-23T18:05:38Z",
        "author_association": "NONE",
        "body": "I am having the same issue with very large dataframes. I am iteratively creating a random sample from a single file, merging some data to the sample, applying some functions to the sample, and then overwriting the sample with new sample and repeating. Memory starts off at 15gbs (after first iteration completes) but keeps adding up until my program crashes from memory limits at 100gbs. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/432356737/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/432358075",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-432358075",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 432358075,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjM1ODA3NQ==",
        "user": {
            "login": "djhoese",
            "id": 1828519,
            "node_id": "MDQ6VXNlcjE4Mjg1MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1828519?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djhoese",
            "html_url": "https://github.com/djhoese",
            "followers_url": "https://api.github.com/users/djhoese/followers",
            "following_url": "https://api.github.com/users/djhoese/following{/other_user}",
            "gists_url": "https://api.github.com/users/djhoese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djhoese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djhoese/subscriptions",
            "organizations_url": "https://api.github.com/users/djhoese/orgs",
            "repos_url": "https://api.github.com/users/djhoese/repos",
            "events_url": "https://api.github.com/users/djhoese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djhoese/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-23T18:09:05Z",
        "updated_at": "2018-10-23T18:09:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "@WolVesz What version of numpy do you have? There was just a release of numpy (1.15.3?) that fixes a memory leak issue with subclasses of numpy arrays.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/432358075/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/655805169",
        "html_url": "https://github.com/dask/dask/issues/3247#issuecomment-655805169",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3247",
        "id": 655805169,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTgwNTE2OQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-08T23:14:39Z",
        "updated_at": "2020-07-08T23:14:39Z",
        "author_association": "MEMBER",
        "body": "Is this still an issue @djhoese? (the answer may very well be yes. just want to double check :)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/655805169/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]