{
    "url": "https://api.github.com/repos/dask/dask/issues/5020",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/5020/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/5020/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/5020/events",
    "html_url": "https://github.com/dask/dask/issues/5020",
    "id": 462052710,
    "node_id": "MDU6SXNzdWU0NjIwNTI3MTA=",
    "number": 5020,
    "title": "Proposal: cookbook of Dask array patterns",
    "user": {
        "login": "alimanfoo",
        "id": 703554,
        "node_id": "MDQ6VXNlcjcwMzU1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/703554?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alimanfoo",
        "html_url": "https://github.com/alimanfoo",
        "followers_url": "https://api.github.com/users/alimanfoo/followers",
        "following_url": "https://api.github.com/users/alimanfoo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alimanfoo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alimanfoo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alimanfoo/subscriptions",
        "organizations_url": "https://api.github.com/users/alimanfoo/orgs",
        "repos_url": "https://api.github.com/users/alimanfoo/repos",
        "events_url": "https://api.github.com/users/alimanfoo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alimanfoo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 386719598,
            "node_id": "MDU6TGFiZWwzODY3MTk1OTg=",
            "url": "https://api.github.com/repos/dask/dask/labels/documentation",
            "name": "documentation",
            "color": "f9d0c4",
            "default": true,
            "description": "Improve or add to documentation"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-06-28T14:07:32Z",
    "updated_at": "2021-10-18T14:53:47Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Dask.array is an awesome package, but I've found that for any given computation that I want to implement over some multi-dimensional input array, it often takes me some time to figure out how to parallelise it with Dask. This is particularly true when the input array is also chunked in multiple dimensions, and the computation is adding, removing or transforming one or more dimensions somehow.\r\n\r\nThe function I use most often is `map_blocks()`, but when data are chunked in two dimensions, and the function I want to map either adds, removes or transforms some axis of the data, it can take some head-scratching to figure out how to set this up correctly, both in the function that I pass into `map_blocks()`, and in getting the values of the `drop_axis`, `new_axis`, and `chunks` arguments correct.\r\n\r\nI'm also recently dealing with some use cases where I have multiple output arrays, which are not supported by `map_blocks()` but are supported by `apply_gufunc()`. But again there I am finding it challenging to figure out both how to set up the function to be passed in, and how to define the gufunc signature.\r\n\r\nI was thinking that it could really help me and my colleagues to have some kind of \"patterns\" cookbook, i.e., a piece of documentation which was a list of generalised patterns of array computations, and then an implementation strategy for each. So then when I have a new problem, I can look up the cookbook and find the pattern that applies, and see a worked example of how to solve it with dask.array. If there was some way of visually representing each pattern too, and/or some clear naming of the different possible patterns, that could help a lot to find the right pattern.\r\n\r\nFWIW I'd be happy to contribute to something like this if deemed useful.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/5020/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/5020/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}