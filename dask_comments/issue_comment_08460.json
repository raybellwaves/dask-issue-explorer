[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/989268810",
        "html_url": "https://github.com/dask/dask/issues/8460#issuecomment-989268810",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8460",
        "id": 989268810,
        "node_id": "IC_kwDOAbcwm8469wtK",
        "user": {
            "login": "scharlottej13",
            "id": 8620816,
            "node_id": "MDQ6VXNlcjg2MjA4MTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8620816?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scharlottej13",
            "html_url": "https://github.com/scharlottej13",
            "followers_url": "https://api.github.com/users/scharlottej13/followers",
            "following_url": "https://api.github.com/users/scharlottej13/following{/other_user}",
            "gists_url": "https://api.github.com/users/scharlottej13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scharlottej13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scharlottej13/subscriptions",
            "organizations_url": "https://api.github.com/users/scharlottej13/orgs",
            "repos_url": "https://api.github.com/users/scharlottej13/repos",
            "events_url": "https://api.github.com/users/scharlottej13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scharlottej13/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-08T22:11:51Z",
        "updated_at": "2021-12-08T22:11:51Z",
        "author_association": "MEMBER",
        "body": "@TLouf thank you for raising this issue! We were able to reproduce it easily thanks to your minimal example and it does indeed seem like this is a bug. The example you provided does work in Numpy:\r\n```python\r\nimport numpy as np\r\nx = np.zeros(10)\r\nx[np.arange(3)] = 1\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/989268810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1022224195",
        "html_url": "https://github.com/dask/dask/issues/8460#issuecomment-1022224195",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8460",
        "id": 1022224195,
        "node_id": "IC_kwDOAbcwm8487edD",
        "user": {
            "login": "ncclementi",
            "id": 7526622,
            "node_id": "MDQ6VXNlcjc1MjY2MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7526622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ncclementi",
            "html_url": "https://github.com/ncclementi",
            "followers_url": "https://api.github.com/users/ncclementi/followers",
            "following_url": "https://api.github.com/users/ncclementi/following{/other_user}",
            "gists_url": "https://api.github.com/users/ncclementi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ncclementi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ncclementi/subscriptions",
            "organizations_url": "https://api.github.com/users/ncclementi/orgs",
            "repos_url": "https://api.github.com/users/ncclementi/repos",
            "events_url": "https://api.github.com/users/ncclementi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ncclementi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-26T14:01:11Z",
        "updated_at": "2022-01-26T14:01:11Z",
        "author_association": "MEMBER",
        "body": "@davidhassell pinging you here as I noticed that you fixed this issue https://github.com/dask/dask/issues/8532 in this PR https://github.com/dask/dask/pull/8538 and they seem related. Would you like to take a crack at this issue too? It's completely ok to say no, no pressure : ) ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1022224195/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1022455209",
        "html_url": "https://github.com/dask/dask/issues/8460#issuecomment-1022455209",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8460",
        "id": 1022455209,
        "node_id": "IC_kwDOAbcwm8488W2p",
        "user": {
            "login": "davidhassell",
            "id": 8126576,
            "node_id": "MDQ6VXNlcjgxMjY1NzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8126576?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidhassell",
            "html_url": "https://github.com/davidhassell",
            "followers_url": "https://api.github.com/users/davidhassell/followers",
            "following_url": "https://api.github.com/users/davidhassell/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidhassell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidhassell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidhassell/subscriptions",
            "organizations_url": "https://api.github.com/users/davidhassell/orgs",
            "repos_url": "https://api.github.com/users/davidhassell/repos",
            "events_url": "https://api.github.com/users/davidhassell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidhassell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-26T18:04:49Z",
        "updated_at": "2022-01-26T18:04:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hi @ncclementi  - sure, I can look at this. (_edit: having looked at it and written some comments, see the last paragraph!_)\r\n\r\nThis is case where there is a bit of conflict between the \"original\" assignment API, and  the extended API that allows more general numpy-style indexed assignments.\r\n\r\nThe design of the extended API deliberately didn't overlap with cases already dealt with by the original API, to ensure that no existing code would break, even though the original API was not always consistent with numpy (as is seen in the example originally posted).\r\n\r\nThe original API only allowed a single index of type `dask.array.Array` with the same shape as `x`. This is why `x[da.arange(3),] = 1` works as expected - this index argument is a `tuple`, and so is handled by the extended API.\r\n\r\nThis situation is further complicated by the fact that the original API always interprets a  `dask.array.Array` index in a boolean context, whereas the tuple-argument version behaves like numpy. e.g.\r\n\r\n```python\r\n>>> import dask.array as da\r\n>>> index = da.from_array([0, 1, 2, 0, 1, 2, 0, 1, 2, 0])\r\n\r\n>>> # Using the original API\r\n>>> x = da.zeros(10)\r\n>>> x[index] = -99 # indexed by an Array & elements of index are interpreted as booleans\r\n>>> x.compute()\r\narray([  0., -99., -99.,   0., -99., -99.,   0., -99., -99.,   0.])  # puts a -99 where index.astype(bool) is True\r\n\r\n>>> # Using the extended API\r\n>>> x = da.zeros(10)\r\n>>> x[(index,)] = -99  # indexed by a tuple & elements of index are interpreted as integers\r\n>>> x.compute()\r\narray([-99., -99., -99.,   0.,   0.,   0.,   0.,   0.,   0.,   0.])  # puts a -99 at indices 0, 1, and 2\r\n```\r\n\r\nNumpy behaves the same in both cases:\r\n\r\n```python\r\n>>> import numpy as np\r\n>>> index = [0, 1, 2, 0, 1, 2, 0, 1, 2, 0]\r\n>>> a = np.zeros(10)\r\n>>> a[index] = -99\r\n>>> a\r\narray([-99., -99., -99.,   0.,   0.,   0.,   0.,   0.,   0.,   0.])\r\n>>> a = np.zeros(10)\r\n>>> a[(index,)] = -99\r\n>>> a\r\narray([-99., -99., -99.,   0.,   0.,   0.,   0.,   0.,   0.,   0.])\r\n```\r\n\r\nI'm sure that this _could_ be \"fixed\" (by which I mean so that dask behaves like numpy in all cases - other meanings of \"fixed\" are probably available), but it'd be good to get some wider feedback on whether we _should_ do so. Doing so would possibly break some existing applications that utilise the original `Array.__setitem__` API, either by raising a new exception or, worse, running but giving incorrect results.\r\n\r\nThanks,\r\nDavid\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1022455209/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1091971403",
        "html_url": "https://github.com/dask/dask/issues/8460#issuecomment-1091971403",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8460",
        "id": 1091971403,
        "node_id": "IC_kwDOAbcwm85BFilL",
        "user": {
            "login": "pavithraes",
            "id": 33131404,
            "node_id": "MDQ6VXNlcjMzMTMxNDA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/33131404?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pavithraes",
            "html_url": "https://github.com/pavithraes",
            "followers_url": "https://api.github.com/users/pavithraes/followers",
            "following_url": "https://api.github.com/users/pavithraes/following{/other_user}",
            "gists_url": "https://api.github.com/users/pavithraes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pavithraes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pavithraes/subscriptions",
            "organizations_url": "https://api.github.com/users/pavithraes/orgs",
            "repos_url": "https://api.github.com/users/pavithraes/repos",
            "events_url": "https://api.github.com/users/pavithraes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pavithraes/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-07T16:43:51Z",
        "updated_at": "2022-04-07T16:43:51Z",
        "author_association": "MEMBER",
        "body": "> I'm sure that this could be \"fixed\" (by which I mean so that dask behaves like numpy in all cases - other meanings of \"fixed\" are probably available), but it'd be good to get some wider feedback on whether we should do so. Doing so would possibly break some existing applications that utilise the original Array.__setitem__ API, either by raising a new exception or, worse, running but giving incorrect results.\r\n\r\n@jsignell Do you have thoughts on this? It'll be nice to get some direction on how to proceed... should we consider fixes, throw a warning, or document this better?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1091971403/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1104271528",
        "html_url": "https://github.com/dask/dask/issues/8460#issuecomment-1104271528",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8460",
        "id": 1104271528,
        "node_id": "IC_kwDOAbcwm85B0dio",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-20T18:18:11Z",
        "updated_at": "2022-04-20T18:18:11Z",
        "author_association": "MEMBER",
        "body": "My initial reaction is that probably raising an informative error could be a first step if we aren't sure yet if this is worth implementing.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1104271528/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]