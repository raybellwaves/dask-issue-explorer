{
    "url": "https://api.github.com/repos/dask/dask/issues/9117",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9117/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9117/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9117/events",
    "html_url": "https://github.com/dask/dask/issues/9117",
    "id": 1245314536,
    "node_id": "I_kwDOAbcwm85KOf3o",
    "number": 9117,
    "title": "[Discussion] Dask-collection refactor plan",
    "user": {
        "login": "rjzamora",
        "id": 20461013,
        "node_id": "MDQ6VXNlcjIwNDYxMDEz",
        "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rjzamora",
        "html_url": "https://github.com/rjzamora",
        "followers_url": "https://api.github.com/users/rjzamora/followers",
        "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
        "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
        "organizations_url": "https://api.github.com/users/rjzamora/orgs",
        "repos_url": "https://api.github.com/users/rjzamora/repos",
        "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rjzamora/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 1372867996,
            "node_id": "MDU6TGFiZWwxMzcyODY3OTk2",
            "url": "https://api.github.com/repos/dask/dask/labels/discussion",
            "name": "discussion",
            "color": "bebaf4",
            "default": false,
            "description": "Discussing a topic with no specific actions yet"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-05-23T15:05:40Z",
    "updated_at": "2022-06-08T19:04:07Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "The purpose of this issue is to agree on a development plan for the design I have roughly prototyped in dask#8980.  The addition of a new `CollectionOperation` class (or similar) corresponds to a significant design change in Dask. Therefore, I propose that we push on this work in a new branch of dask/dask. \r\n\r\n**NOTE**: The text below should be modified if/when the development plan changes.  Also, links should also be added for ongoing or completed PRs.\r\n\r\n# Development Plan\r\n\r\n### Step 1: Create a new `collection-refactor` branch in dask/dask\r\n\r\n- [x] **Link**: https://github.com/dask/dask/tree/collection-refactor\r\n\r\nAlthough it may be a bit painful to keep this new branch in sync with `main`, I don't think it would be very wise for me (or others) to attempt a complete refactor within a single giant pull request.  I think we are much more likely to produce a good design if we attack this work in small **reviewable** steps.\r\n\r\nThe assumption here is that we will be able to run CI for PRs submitted to this branch.\r\n\r\n## DataFrame Development\r\n\r\n### Step 2: Adopt *compatibility* version of `CollectionOperation` in Dask-DataFrame (Initial PR)\r\n\r\n- [x] **Link**: https://github.com/dask/dask/pull/9119\r\n\r\n- Add base `CollectionOperation` class\r\n- Add `FrameOperation` and `CompatFrameOperation` classes to Dask-DataFrame\r\n- Refactor `_Frame` (and subclasses) to reference a central `operation` attribute for `name`/`meta`/`divisions`/`dask`\r\n    - Long-term goal will remove `dask` (or make `dask` synonymous with `operation`), but my preference is that we delay this change until after the entire Dask-DataFrame API has migrated away from the HLG/Layer design.\r\n\r\nThis PR will **not** introduce any `CollectionOperation` optimization or graph-materialization logic, but it will provide the foundation to implement these features.\r\n\r\n### Step 3: Migrate Dask-DataFrame API to CollectionOperation design (Multiple PRs)\r\n\r\nThis step will not attempt to enable any new features or optimizations (like predicate pushdown), but will result in `CollectionOperation` coverage of the existing DataFrame `Layer` definitions:\r\n\r\n- DataFrameIOLayer\r\n- Blockwise\r\n- ShuffleLayer/SimpleShuffleLayer\r\n- BroadcastJoinLayer\r\n- DataFrameTreeReduction\r\n\r\nThe completion of this step should also capture the existing HLG optimization pass (culling, fusion, column projection).\r\n\r\n### Step 4: Add new `CollectionOperation` optimizations\r\n\r\nAdd predicate-pushdown optimization (and others - TBD).  Should be prioritized **after** general serialization/communication (steps 5-7).\r\n\r\n## Array Development\r\n\r\n### Step 2: Adopt *compatibility* version of `CollectionOperation` in Dask-Array\r\n\r\n- Add `ArrayOperation` and `CompatArrayOperation` classes to Dask-Array\r\n- Refactor `Array` to reference a central `operation` attribute for `name`/`meta`/`chunks`/`dask`\r\n\r\n### Step 3: Migrate Dask-Array API to CollectionOperation design\r\n\r\nSpecifics TBD\r\n\r\n### Step 4: Add new `CollectionOperation` optimizations\r\n\r\nSpecifics TBD.  Should be prioritized after general serialization/communication (steps 5-7).\r\n\r\n## General Development\r\n\r\nAt this point, the DataFrame and Array APIs should be completely based on `CollectionOperation`. However, the APIs will still return a single-layer `HighLevelGraph` object when the `.dask` attribute is queried, and will still be using the HighLevelGraph API for graph communication and materialization. Therefore, most remaining work will be related\r\n\r\n### Step 5: Change `.dask` queries to expect `HighLevelGraph` **or** `CollectionOperation` object\r\n\r\n### Step 6: Create a new `collection-refactor` branch in dask/distributed\r\n\r\n### Step 7: Support client-scheduler communication of a `CollectionOperation`\r\n\r\nIn order to replace the HLG/Layer infrastructure in Dask, we need to be able to send `CollectionOperation` objects to the scheduler (and use them to materialize the graph).\r\n\r\n### Step 8: Merge changes into `main`\r\n\r\nOnce there is sufficient agreement (perhaps using a \"Dask Design Proposal\" in addition to a PR to `main`), these changes should be merged into the main branches of dask/dask dask/distributed.\r\n\r\n### Step 9: Migrate Dask-Bag\r\n\r\n### Step 10: Deprecate HighLevelGraph/Layer APIs",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9117/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9117/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}