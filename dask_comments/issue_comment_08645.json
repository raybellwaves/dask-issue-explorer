[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1027127803",
        "html_url": "https://github.com/dask/dask/issues/8645#issuecomment-1027127803",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8645",
        "id": 1027127803,
        "node_id": "IC_kwDOAbcwm849OLn7",
        "user": {
            "login": "quasiben",
            "id": 1403768,
            "node_id": "MDQ6VXNlcjE0MDM3Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1403768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quasiben",
            "html_url": "https://github.com/quasiben",
            "followers_url": "https://api.github.com/users/quasiben/followers",
            "following_url": "https://api.github.com/users/quasiben/following{/other_user}",
            "gists_url": "https://api.github.com/users/quasiben/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quasiben/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quasiben/subscriptions",
            "organizations_url": "https://api.github.com/users/quasiben/orgs",
            "repos_url": "https://api.github.com/users/quasiben/repos",
            "events_url": "https://api.github.com/users/quasiben/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quasiben/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-01T17:57:52Z",
        "updated_at": "2022-02-01T17:57:52Z",
        "author_association": "MEMBER",
        "body": "cc @shwina @galipremsagar @beckernick @brandon-b-miller ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1027127803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1027514287",
        "html_url": "https://github.com/dask/dask/issues/8645#issuecomment-1027514287",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8645",
        "id": 1027514287,
        "node_id": "IC_kwDOAbcwm849Pp-v",
        "user": {
            "login": "galipremsagar",
            "id": 11664259,
            "node_id": "MDQ6VXNlcjExNjY0MjU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11664259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/galipremsagar",
            "html_url": "https://github.com/galipremsagar",
            "followers_url": "https://api.github.com/users/galipremsagar/followers",
            "following_url": "https://api.github.com/users/galipremsagar/following{/other_user}",
            "gists_url": "https://api.github.com/users/galipremsagar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/galipremsagar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/galipremsagar/subscriptions",
            "organizations_url": "https://api.github.com/users/galipremsagar/orgs",
            "repos_url": "https://api.github.com/users/galipremsagar/repos",
            "events_url": "https://api.github.com/users/galipremsagar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/galipremsagar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-02T02:24:40Z",
        "updated_at": "2022-02-02T02:26:25Z",
        "author_association": "MEMBER",
        "body": "From the discussion here: https://github.com/pandas-dev/pandas/issues/45448, Looks like `pandas` is still going to enforce it widely. The `no_default` seems to be a synonymous change that happened with `np.nan` vs `pd.NA`. So to support this we would also have to include `no_default`-like support both in `dask` & `cudf` too - right? \r\n\r\nBut since `no_default` is buried and not widely known is pandas planning on standardizing it like `pd.NA` for nullable types? i.e., it'd be not so intuitive for us to expect a user to pass `pd.api.extensions.no_default` (vs a simpler `pd.NA`)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1027514287/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1027871281",
        "html_url": "https://github.com/dask/dask/issues/8645#issuecomment-1027871281",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8645",
        "id": 1027871281,
        "node_id": "IC_kwDOAbcwm849RBIx",
        "user": {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-02T12:04:07Z",
        "updated_at": "2022-02-02T12:04:07Z",
        "author_association": "CONTRIBUTOR",
        "body": "We _could_ use `pd.api.extensions.no_default` directly. Agree with @galipremsagar that it'd be nice to have that as a top-level `pd.no_default` (although perhaps `pd.NO_DEFAULT` would be more clear).\r\n\r\nMaybe I worry too much, but one potential concern if other package(s) follow suit and have their own \"`NoDefaultType`\", we end up with `pd.no_default`, `other_lib.no_default`, `another_lib.no_default_value`, etc...",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1027871281/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1027977195",
        "html_url": "https://github.com/dask/dask/issues/8645#issuecomment-1027977195",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8645",
        "id": 1027977195,
        "node_id": "IC_kwDOAbcwm849Ra_r",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-02T14:09:14Z",
        "updated_at": "2022-02-02T14:09:14Z",
        "author_association": "MEMBER",
        "body": "Yeah dask already has its own `no_default` that we use in some places. I was kind of wondering if dask should just use that and strip it out of the kwargs before passing to pandas/cudf. I think the expectation is that users will not explicitly set `pd.api.extensions.no_default` as the value of a kwarg. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1027977195/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1027982277",
        "html_url": "https://github.com/dask/dask/issues/8645#issuecomment-1027982277",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8645",
        "id": 1027982277,
        "node_id": "IC_kwDOAbcwm849RcPF",
        "user": {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-02T14:14:55Z",
        "updated_at": "2022-02-02T14:14:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "> I think the expectation is that users will not explicitly set pd.api.extensions.no_default as the value of a kwarg.\r\n\r\nI agree that this is the expectation, but being able to explicitly pass optional kwargs is valuable in so many contexts. Always stripping out the kwarg is doable, but adds unnecessary processing overhead.\r\n\r\nAt this point, I think I'm just complaining. I'm not strongly opposed to either solution (explicitly passing no_default or stripping it out).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1027982277/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1523103475",
        "html_url": "https://github.com/dask/dask/issues/8645#issuecomment-1523103475",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8645",
        "id": 1523103475,
        "node_id": "IC_kwDOAbcwm85ayLbz",
        "user": {
            "login": "phofl",
            "id": 61934744,
            "node_id": "MDQ6VXNlcjYxOTM0NzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61934744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phofl",
            "html_url": "https://github.com/phofl",
            "followers_url": "https://api.github.com/users/phofl/followers",
            "following_url": "https://api.github.com/users/phofl/following{/other_user}",
            "gists_url": "https://api.github.com/users/phofl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phofl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phofl/subscriptions",
            "organizations_url": "https://api.github.com/users/phofl/orgs",
            "repos_url": "https://api.github.com/users/phofl/repos",
            "events_url": "https://api.github.com/users/phofl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phofl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-26T09:37:50Z",
        "updated_at": "2023-04-26T09:37:50Z",
        "author_association": "MEMBER",
        "body": "I want to bring this up again. \r\n\r\nYes the expectation in pandas is that users don't set this explicitly. This is one of the reasons why adding it to the top-level namespace is highly unlikely. ``pd.api.extension.no_default`` is meant for downstream libraries, not end-users. \r\n\r\nThat said, We could get rid of a few places where we have to handle keywords awkwardly if we adapt this in Dask as well. This would remove the need to check for keyword values before passing them along in this case.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1523103475/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1523366323",
        "html_url": "https://github.com/dask/dask/issues/8645#issuecomment-1523366323",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8645",
        "id": 1523366323,
        "node_id": "IC_kwDOAbcwm85azLmz",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-26T12:50:23Z",
        "updated_at": "2023-04-26T12:50:23Z",
        "author_association": "MEMBER",
        "body": "I'm not very deep into this but from a high level it makes sense for us to reuse the pandas `pd.api.extension.no_default` for all APIs that pass this to pandas directly. This doesn't mean we have to use it everywhere.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1523366323/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1523848151",
        "html_url": "https://github.com/dask/dask/issues/8645#issuecomment-1523848151",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8645",
        "id": 1523848151,
        "node_id": "IC_kwDOAbcwm85a1BPX",
        "user": {
            "login": "j-bennet",
            "id": 637013,
            "node_id": "MDQ6VXNlcjYzNzAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/637013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-bennet",
            "html_url": "https://github.com/j-bennet",
            "followers_url": "https://api.github.com/users/j-bennet/followers",
            "following_url": "https://api.github.com/users/j-bennet/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-bennet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-bennet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-bennet/subscriptions",
            "organizations_url": "https://api.github.com/users/j-bennet/orgs",
            "repos_url": "https://api.github.com/users/j-bennet/repos",
            "events_url": "https://api.github.com/users/j-bennet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-bennet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-26T18:10:29Z",
        "updated_at": "2023-04-26T18:10:29Z",
        "author_association": "MEMBER",
        "body": "> I'm not very deep into this but from a high level it makes sense for us to reuse the pandas pd.api.extension.no_default for all APIs that pass this to pandas directly. This doesn't mean we have to use it everywhere.\r\n\r\nIn dask, the backing dataframe can be something that only pretends to be a pandas dataframe. If it's a cudf dataframe, it will not know about the pandas enum `pd.api.extensions.no_default`, and will probably raise an error. If we don't know what sort of backend dataframe we're dealing with, the safest and easiest option is to remove `no_default` values from args / kwargs.\r\n\r\nWe could have some sort of branching logic to check what kind of backend we're dealing with, and use a `no_default` from there, but that will get complicated.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1523848151/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]