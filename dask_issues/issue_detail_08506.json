{
    "url": "https://api.github.com/repos/dask/dask/issues/8506",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/8506/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/8506/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/8506/events",
    "html_url": "https://github.com/dask/dask/issues/8506",
    "id": 1085207048,
    "node_id": "I_kwDOAbcwm85ArvII",
    "number": 8506,
    "title": "Failing Windows tests",
    "user": {
        "login": "jsignell",
        "id": 4806877,
        "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsignell",
        "html_url": "https://github.com/jsignell",
        "followers_url": "https://api.github.com/users/jsignell/followers",
        "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
        "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
        "organizations_url": "https://api.github.com/users/jsignell/orgs",
        "repos_url": "https://api.github.com/users/jsignell/repos",
        "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jsignell/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2021-12-20T21:11:45Z",
    "updated_at": "2022-01-24T01:49:10Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "There have been 2 to 5 failing windows Python 3.7 tests for the last few days (or weeks?).  This  is an example of how they look:\r\n\r\n\r\n```python-traceback\r\n================================== FAILURES ===================================\r\n__________________________ test_temporary_directory ___________________________\r\n[gw2] win32 -- Python 3.7.12 C:\\Miniconda3\\envs\\test-environment\\python.exe\r\n\r\ntmpdir = local('C:\\\\Users\\\\runneradmin\\\\AppData\\\\Local\\\\Temp\\\\pytest-of-runneradmin\\\\pytest-0\\\\popen-gw2\\\\test_temporary_directory0')\r\n\r\n    def test_temporary_directory(tmpdir):\r\n        b = db.range(10, npartitions=4)\r\n    \r\n        # We use a pool to avoid a race condition between the pool close\r\n        # cleaning up files, and the assert below.\r\n        with ProcessPoolExecutor(4) as pool:\r\n            with dask.config.set(temporary_directory=str(tmpdir), pool=pool):\r\n                b2 = b.groupby(lambda x: x % 2)\r\n>               b2.compute()\r\n\r\ndask\\bag\\tests\\test_bag.py:1469: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ndask\\base.py:288: in compute\r\n    (result,) = compute(self, traverse=False, **kwargs)\r\ndask\\base.py:571: in compute\r\n    results = schedule(dsk, keys, **kwargs)\r\ndask\\multiprocessing.py:230: in get\r\n    **kwargs,\r\ndask\\local.py:496: in get_async\r\n    for key, res_info, failed in queue_get(queue).result():\r\nC:\\Miniconda3\\envs\\test-environment\\lib\\concurrent\\futures\\_base.py:428: in result\r\n    return self.__get_result()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <Future at 0x17401a0b7c8 state=finished raised BrokenProcessPool>\r\n\r\n    def __get_result(self):\r\n        if self._exception:\r\n>           raise self._exception\r\nE           concurrent.futures.process.BrokenProcessPool: A process in the process pool was terminated abruptly while the future was running or pending.\r\n\r\nC:\\Miniconda3\\envs\\test-environment\\lib\\concurrent\\futures\\_base.py:384: BrokenProcessPool\r\n_____________________ test_set_index_consistent_divisions _____________________\r\n[gw1] win32 -- Python 3.7.12 C:\\Miniconda3\\envs\\test-environment\\python.exe\r\n\r\n    @pytest.mark.slow\r\n    def test_set_index_consistent_divisions():\r\n        # See https://github.com/dask/dask/issues/3867\r\n        df = pd.DataFrame(\r\n            {\"x\": np.random.random(100), \"y\": np.random.random(100) // 0.2},\r\n            index=np.random.random(100),\r\n        )\r\n        ddf = dd.from_pandas(df, npartitions=4)\r\n        ddf = ddf.clear_divisions()\r\n    \r\n        ctx = mp.get_context(\"spawn\")\r\n        with ProcessPoolExecutor(8, ctx) as pool:\r\n            func = partial(_set_index, df=ddf, idx=\"x\")\r\n>           divisions_set = set(pool.map(func, range(100)))\r\n\r\ndask\\dataframe\\tests\\test_shuffle.py:451: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nC:\\Miniconda3\\envs\\test-environment\\lib\\concurrent\\futures\\process.py:483: in _chain_from_iterable_of_lists\r\n    for element in iterable:\r\nC:\\Miniconda3\\envs\\test-environment\\lib\\concurrent\\futures\\_base.py:598: in result_iterator\r\n    yield fs.pop().result()\r\nC:\\Miniconda3\\envs\\test-environment\\lib\\concurrent\\futures\\_base.py:435: in result\r\n    return self.__get_result()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <Future at 0x1d7c432f0c8 state=finished raised BrokenProcessPool>\r\n\r\n    def __get_result(self):\r\n        if self._exception:\r\n>           raise self._exception\r\nE           concurrent.futures.process.BrokenProcessPool: A process in the process pool was terminated abruptly while the future was running or pending.\r\n\r\nC:\\Miniconda3\\envs\\test-environment\\lib\\concurrent\\futures\\_base.py:384: BrokenProcessPool\r\n```\r\n\r\nFrom: https://github.com/dask/dask/runs/4587205293?check_suite_focus=true",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/8506/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/8506/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}