{
    "url": "https://api.github.com/repos/dask/dask/issues/7639",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/7639/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/7639/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/7639/events",
    "html_url": "https://github.com/dask/dask/issues/7639",
    "id": 883982587,
    "node_id": "MDU6SXNzdWU4ODM5ODI1ODc=",
    "number": 7639,
    "title": "svd_compressed() fails for complex input",
    "user": {
        "login": "nicrie",
        "id": 45175997,
        "node_id": "MDQ6VXNlcjQ1MTc1OTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/45175997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nicrie",
        "html_url": "https://github.com/nicrie",
        "followers_url": "https://api.github.com/users/nicrie/followers",
        "following_url": "https://api.github.com/users/nicrie/following{/other_user}",
        "gists_url": "https://api.github.com/users/nicrie/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nicrie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nicrie/subscriptions",
        "organizations_url": "https://api.github.com/users/nicrie/orgs",
        "repos_url": "https://api.github.com/users/nicrie/repos",
        "events_url": "https://api.github.com/users/nicrie/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nicrie/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 3798450413,
            "node_id": "LA_kwDOAbcwm87iZ8Dt",
            "url": "https://api.github.com/repos/dask/dask/labels/bug",
            "name": "bug",
            "color": "faadaf",
            "default": true,
            "description": "Something is broken"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2021-05-10T11:07:32Z",
    "updated_at": "2022-10-28T15:57:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!-- Please include a self-contained copy-pastable example that generates the issue if possible.\r\n\r\nPlease be concise with code posted. See guidelines below on how to provide a good bug report:\r\n\r\n- Craft Minimal Bug Reports http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports\r\n- Minimal Complete Verifiable Examples https://stackoverflow.com/help/mcve\r\n\r\nBug reports that follow these guidelines are easier to diagnose, and so are often handled much more quickly.\r\n-->\r\n**What happened**:\r\n**Complex** singular values and vectors of `svd_compressed()` are different from standard `np.linalg.svd`.\r\n\r\n**What you expected to happen**:\r\nComplex singular values and vectors of `svd_compressed()` are similar (within some uncertainties) to standard `np.linalg.svd`.\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport numpy as np\r\nimport xarray as xr\r\nimport dask.array as da\r\nfrom matplotlib.pyplot import imshow\r\n\r\ndata = xr.tutorial.open_dataset(\r\n    'air_temperature',\r\n    chunks={'lat': 25, 'lon': 25, 'time': -1}\r\n)\r\ntemp = data.air\r\ntemp = temp.stack(x=('lat', 'lon')).compute()\r\ntemp -= temp.mean('time')\r\n# artificial complexification of data\r\ntemp = temp + (1j * 0.1 * temp**2)\r\nkernel = np.dot(temp.conj().T, temp) / temp.shape[0]\r\n\r\n# standard SVD\r\nu, s, vt = np.linalg.svd(kernel, full_matrices=False)\r\n# dask SVD \r\ndask_kernel = da.from_array(kernel)\r\nk = 100\r\ndsvd = da.linalg.svd_compressed(dask_kernel, k)\r\nu2, s2, vt2 = (x.compute() for x in dsvd)\r\n\r\nnp.allclose(s[:100], s2)  # False\r\nnp.allclose(vt[:100], vt2)  # False\r\n\r\n# visual check: look at first singular vector\r\nv = vt.reshape((temp.shape[1],) + data.air.shape[1:])\r\nv2 = vt2.reshape((k,) + data.air.shape[1:])\r\n\r\n# imaginary parts of first singular vector are clearly different\r\nimshow(v[0,:,:].imag, vmin=-1e-3, vmax=1e-3)\r\nimshow(-v2[0,:,:].imag, vmin=-1e-3, vmax=1e-3)\r\n```\r\n\r\n**Anything else we need to know?**:\r\n1. For real input, both methods yield the same results.\r\n2. When running `svd_compressed()` a warning is thrown complaining about complex being casted to real dtypes:\r\n```\r\n/home/nrieger/anaconda3/envs/xmca/lib/python3.7/site-packages/dask/array/utils.py:108: ComplexWarning: Casting complex values to real discards the imaginary part\r\n  meta = meta.astype(dtype)\r\n``` \r\n\r\n**Environment**:\r\n\r\n- Dask version: 2021.04.0\r\n- Python version: 3.7.10\r\n- Operating System: Ubuntu 20.04\r\n- Install method: conda\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/7639/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/7639/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}