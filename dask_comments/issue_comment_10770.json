[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1885299170",
        "html_url": "https://github.com/dask/dask/issues/10770#issuecomment-1885299170",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10770",
        "id": 1885299170,
        "node_id": "IC_kwDOAbcwm85wX2Hi",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-10T17:31:29Z",
        "updated_at": "2024-01-10T17:31:29Z",
        "author_association": "MEMBER",
        "body": ">This whole method looks odd to me, like it isn't really necessary... Maybe we can get rid of this method altogether?\r\n\r\nAre you saying that `_compute_sum_of_squares` should be simplified, or that we should be calling something different [in _build_agg_args_var](https://github.com/dask/dask/blob/51c1f2d2ab8206bbb02e7bcd9d974f9d976b8ded/dask/dataframe/groupby.py#L1060)? I can probably get on board either way - just want to clarify.\r\n\r\n>Can someone from cudf (@rjzamora maybe?) comment what the cudf comment in this function refers to?\r\n\r\nSome relevant discussion can be found in https://github.com/dask/dask/pull/6186, but the cudf-related comments generally refer to two things: (1) The original `groupby(...).apply` logic was **very** bad for GPU performance, and somewhat bad for CPU performance. (2) In order to perform the `pow(2)` operation on **all** rows at once, we need to extract the original `ddf.groupby(...)` arguments so that we can re-run the grouping on the modified data - This information is accessed differently in pandas vs cudf.\r\n\r\nNow that pandas is deprecating `grouper`, is there an alternative way to extract the original arguments passed to `groupby`?\r\n\r\nPerhaps a reasonable alternative is to simply add a `\"_grouping_kwargs\"` attribute to the result of `_groupby_raise_unaligned` so that we can always extract this information in a consistent way?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1885299170/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]