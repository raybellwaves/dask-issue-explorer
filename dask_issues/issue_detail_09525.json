{
    "url": "https://api.github.com/repos/dask/dask/issues/9525",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9525/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9525/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9525/events",
    "html_url": "https://github.com/dask/dask/issues/9525",
    "id": 1390894695,
    "node_id": "I_kwDOAbcwm85S515n",
    "number": 9525,
    "title": "Dask unable to handle pytorch tensors",
    "user": {
        "login": "estebanag",
        "id": 27647769,
        "node_id": "MDQ6VXNlcjI3NjQ3NzY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/27647769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/estebanag",
        "html_url": "https://github.com/estebanag",
        "followers_url": "https://api.github.com/users/estebanag/followers",
        "following_url": "https://api.github.com/users/estebanag/following{/other_user}",
        "gists_url": "https://api.github.com/users/estebanag/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/estebanag/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/estebanag/subscriptions",
        "organizations_url": "https://api.github.com/users/estebanag/orgs",
        "repos_url": "https://api.github.com/users/estebanag/repos",
        "events_url": "https://api.github.com/users/estebanag/events{/privacy}",
        "received_events_url": "https://api.github.com/users/estebanag/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 1342304743,
            "node_id": "MDU6TGFiZWwxMzQyMzA0NzQz",
            "url": "https://api.github.com/repos/dask/dask/labels/core",
            "name": "core",
            "color": "000000",
            "default": false,
            "description": ""
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3798450413,
            "node_id": "LA_kwDOAbcwm87iZ8Dt",
            "url": "https://api.github.com/repos/dask/dask/labels/bug",
            "name": "bug",
            "color": "faadaf",
            "default": true,
            "description": "Something is broken"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-09-29T13:39:32Z",
    "updated_at": "2022-11-07T02:12:48Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Problem description**\r\n\r\nI am trying to use dask for parallelizing the training of a machine learning model. For this, I make use of pytorch tensors for the model parameters (with [`requires_grad=True`](https://pytorch.org/docs/stable/generated/torch.Tensor.requires_grad.html)). This works fine with the `single-threaded` scheduler. However, when using the `distributed` scheduler, I get:\r\n\r\n```\r\ntorch/_tensor.py:1083: UserWarning: The .grad attribute of a Tensor that is not a leaf Tensor is being accessed. Its .grad attribute won't be populated during autograd.backward(). If you indeed want the .grad field to be populated for a non-leaf Tensor, use .retain_grad() on the non-leaf Tensor. If you access the non-leaf Tensor by mistake, make sure you access the leaf Tensor instead. See github.com/pytorch/pytorch/pull/30531 for more informations. (Triggered internally at  aten/src/ATen/core/TensorBody.h:482.)\r\n  return self._grad\r\n```\r\nWhat I notice is that the model never learns.\r\n\r\n**Example**\r\n\r\nThis reproduces the warning:\r\n\r\n```python\r\nimport dask\r\nimport torch\r\nfrom dask.distributed import Client\r\n\r\n\r\ndef func(x):\r\n    return x + 2\r\n\r\n\r\ndef run(single_threaded: bool = True):\r\n    # Set up dask scheduler\r\n    _ = Client()\r\n    if single_threaded:\r\n        dask.config.set(scheduler=\"single-threaded\")\r\n\r\n    # Define tensor\r\n    x = torch.linspace(0, 5, 10, dtype=torch.double, requires_grad=True)\r\n\r\n    # Run function with dask\r\n    result = []\r\n    for xx in x:\r\n        result.append(dask.delayed(func)(xx))\r\n    _ = dask.compute(*result)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    run(single_threaded=True) \r\n    print(\"====================\")\r\n    run(single_threaded=False)  # this throws the warning\r\n```\r\n\r\n**Environment**\r\n\r\n- Dask version: dask==2022.9.1; distributed==2022.9.1; torch==1.12.1\r\n- Python version: 3.8.10\r\n- Operating System: Ubuntu 20.04.3 LTS\r\n- Install method (conda, pip, source): pip\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9525/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9525/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}