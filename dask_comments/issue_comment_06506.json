[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/673637775",
        "html_url": "https://github.com/dask/dask/issues/6506#issuecomment-673637775",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6506",
        "id": 673637775,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzYzNzc3NQ==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-13T18:24:39Z",
        "updated_at": "2020-08-13T18:24:39Z",
        "author_association": "MEMBER",
        "body": "I think what you've suggested is reasonable. That you would call `compute` to get the result into memory and then run `commit`. Of course, you could call `persist` rather than `compute` if you want to leave the result distributed on the workers but that won't get rid of the dependency. \r\n\r\nIncidentally, this sounds like the kind of thing that prefect is really good at: https://docs.prefect.io/core/",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/673637775/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/681050280",
        "html_url": "https://github.com/dask/dask/issues/6506#issuecomment-681050280",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6506",
        "id": 681050280,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTA1MDI4MA==",
        "user": {
            "login": "lr4d",
            "id": 44430780,
            "node_id": "MDQ6VXNlcjQ0NDMwNzgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/44430780?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lr4d",
            "html_url": "https://github.com/lr4d",
            "followers_url": "https://api.github.com/users/lr4d/followers",
            "following_url": "https://api.github.com/users/lr4d/following{/other_user}",
            "gists_url": "https://api.github.com/users/lr4d/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lr4d/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lr4d/subscriptions",
            "organizations_url": "https://api.github.com/users/lr4d/orgs",
            "repos_url": "https://api.github.com/users/lr4d/repos",
            "events_url": "https://api.github.com/users/lr4d/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lr4d/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-26T18:31:25Z",
        "updated_at": "2020-08-26T18:31:25Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for the response @jsignell . The thing about calling `compute` is, that this function is a part of a larger graph, which we then optimize as a whole and execute. If we call `compute` at that point, then the optimization would no longer apply for that part.\r\nAs I mentioned, it looks like there are a few hacky ways in which one can achieve this, re-writing the graph may be the \"cleanest\", but ideally I would just use something supported by dask/distributed (perhaps a SchedulerPlugin?) and not bother with that. I will look into it more when I have the time, in the meantime any suggestions on how such an implementation could look like would be greatly appreciated.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/681050280/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]