{
    "url": "https://api.github.com/repos/dask/dask/issues/6635",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/6635/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/6635/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/6635/events",
    "html_url": "https://github.com/dask/dask/issues/6635",
    "id": 701073845,
    "node_id": "MDU6SXNzdWU3MDEwNzM4NDU=",
    "number": 6635,
    "title": "construction of and interactions between different types of nested duck arrays",
    "user": {
        "login": "keewis",
        "id": 14808389,
        "node_id": "MDQ6VXNlcjE0ODA4Mzg5",
        "avatar_url": "https://avatars.githubusercontent.com/u/14808389?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/keewis",
        "html_url": "https://github.com/keewis",
        "followers_url": "https://api.github.com/users/keewis/followers",
        "following_url": "https://api.github.com/users/keewis/following{/other_user}",
        "gists_url": "https://api.github.com/users/keewis/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/keewis/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/keewis/subscriptions",
        "organizations_url": "https://api.github.com/users/keewis/orgs",
        "repos_url": "https://api.github.com/users/keewis/repos",
        "events_url": "https://api.github.com/users/keewis/events{/privacy}",
        "received_events_url": "https://api.github.com/users/keewis/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 1372867996,
            "node_id": "MDU6TGFiZWwxMzcyODY3OTk2",
            "url": "https://api.github.com/repos/dask/dask/labels/discussion",
            "name": "discussion",
            "color": "bebaf4",
            "default": false,
            "description": "Discussing a topic with no specific actions yet"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-09-14T13:01:08Z",
    "updated_at": "2021-10-14T04:26:27Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Part of the discussion in #5329. I'm opening this issue to make the discussion on this topic a bit more focused.\r\n\r\nAs mentioned in https://github.com/dask/dask/issues/5329#issuecomment-691992501, we need to find a way to\r\n- make sure that nesting duck arrays are always nested in the same way (e.g. that `pint(dask(numpy))` is chosen over `dask(pint(numpy))`)\r\n- decide which duck array should implement interactions with another duck array (which is important to make sure commutative operations are actually commutative)\r\n\r\nParts of this have already been discussed in #6393.\r\n\r\n---\r\n\r\nTo solve both of these issues, the type hierarchy from hgrecco/pint#845 could be used, but we'd still need to figure out how to compare within that hierarchy, and we'd probably have to maintain a package that collects the relationships between different packages.\r\n\r\nSimilarly, we could have duck arrays maintain a list of duck arrays they *can* wrap. This is still pretty static and might grow too much for packages that are fairly high in the type hierarchy, but would allow to granularly control the interaction with other duck arrays.\r\n\r\nIn #6393, it was suggested to divide duck arrays into categories and then have duck arrays in categories with a higher number take care of those in a category with a lower number. However, this breaks down as soon as you have duck arrays that belong to multiple categories (or have two duck arrays that belong to the same category wrap each other), and adding new categories is difficult (at least for numeric numbers).\r\n\r\nUsing that idea, we could have duck arrays declare a tuple of categories they belong to and then a tuple of categories they can wrap. We could then compute a set operation to decide which is wrapped, but this still breaks down for coarse categories (duck arrays in the same category wrapping each other) and circular graphs (i.e. A is in categories `x` and `z` and can wrap `y` while `B` is in category `y` and can wrap `x`) \u2013 not sure if that's an issue?\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/6635/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/6635/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}