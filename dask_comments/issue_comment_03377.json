[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/379001799",
        "html_url": "https://github.com/dask/dask/issues/3377#issuecomment-379001799",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3377",
        "id": 379001799,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTAwMTc5OQ==",
        "user": {
            "login": "jcrist",
            "id": 2783717,
            "node_id": "MDQ6VXNlcjI3ODM3MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcrist",
            "html_url": "https://github.com/jcrist",
            "followers_url": "https://api.github.com/users/jcrist/followers",
            "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
            "organizations_url": "https://api.github.com/users/jcrist/orgs",
            "repos_url": "https://api.github.com/users/jcrist/repos",
            "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcrist/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-05T16:47:56Z",
        "updated_at": "2018-04-05T16:47:56Z",
        "author_association": "MEMBER",
        "body": "I'm going to push back on this a bit, since:\r\n\r\n- It's easy to do in user code:\r\n\r\n```python\r\nIn [14]: x = da.random.normal(size=(1000, 1000), chunks=(500, 500))\r\n\r\nIn [15]: def moments(x, moments=()):\r\n    ...:     return da.concatenate([x.moment(m).reshape((1,)) for m in moments])\r\n    ...:\r\n    ...:\r\n\r\nIn [16]: r = moments(x, moments=(2, 3, 4, 5))\r\n\r\nIn [17]: r.compute()\r\nOut[17]: array([ 0.99886112,  0.00370471,  2.99232801,  0.02327801])\r\n```\r\n\r\n- We follow the `scipy.stats.moment` interface, and breaking with that would be confusing for users\r\n\r\n- Moments can be taken across axis, and don't always return scalars. It's not clear what should be done in library code in this case.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/379001799/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/379007148",
        "html_url": "https://github.com/dask/dask/issues/3377#issuecomment-379007148",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3377",
        "id": 379007148,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTAwNzE0OA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-05T17:06:08Z",
        "updated_at": "2018-04-05T17:06:08Z",
        "author_association": "MEMBER",
        "body": "TBH was almost hoping to hear this was actually being done under the hood somehow. \ud83d\ude09 To get at this point a bit, how is this addressed in the case of `var` for instance?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/379007148/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/379010219",
        "html_url": "https://github.com/dask/dask/issues/3377#issuecomment-379010219",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3377",
        "id": 379010219,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTAxMDIxOQ==",
        "user": {
            "login": "jcrist",
            "id": 2783717,
            "node_id": "MDQ6VXNlcjI3ODM3MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcrist",
            "html_url": "https://github.com/jcrist",
            "followers_url": "https://api.github.com/users/jcrist/followers",
            "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
            "organizations_url": "https://api.github.com/users/jcrist/orgs",
            "repos_url": "https://api.github.com/users/jcrist/repos",
            "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcrist/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-05T17:16:14Z",
        "updated_at": "2018-04-05T17:16:14Z",
        "author_association": "MEMBER",
        "body": "> To get at this point a bit, how is this addressed in the case of var for instance?\r\n\r\nI'm not sure what you're asking here? `var` is equivalent to `x.moment(2)`:\r\n\r\n```python\r\nIn [44]: x = da.random.normal(size=(1000, 1000), chunks=(500, 500))\r\n\r\nIn [45]: assert x.moment(2).compute() == x.var().compute()\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/379010219/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/379010591",
        "html_url": "https://github.com/dask/dask/issues/3377#issuecomment-379010591",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3377",
        "id": 379010591,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTAxMDU5MQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-05T17:17:29Z",
        "updated_at": "2018-04-05T17:17:29Z",
        "author_association": "MEMBER",
        "body": "I think that @jakirkham is curious if there are intermediate results that\nmight be efficiently captured when computing many moments simultaneously.\n\nOn Thu, Apr 5, 2018 at 1:16 PM, Jim Crist <notifications@github.com> wrote:\n\n> To get at this point a bit, how is this addressed in the case of var for\n> instance?\n>\n> I'm not sure what you're asking here? var is equivalent to x.moment(2):\n>\n> In [44]: x = da.random.normal(size=(1000, 1000), chunks=(500, 500))\n>\n> In [45]: assert x.moment(2).compute() == x.var().compute()\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3377#issuecomment-379010219>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AASszLm6HGE3Qh3j0ezl6fh_KFFw2upgks5tllFfgaJpZM4TIxrM>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/379010591/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/379011082",
        "html_url": "https://github.com/dask/dask/issues/3377#issuecomment-379011082",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3377",
        "id": 379011082,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTAxMTA4Mg==",
        "user": {
            "login": "jcrist",
            "id": 2783717,
            "node_id": "MDQ6VXNlcjI3ODM3MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcrist",
            "html_url": "https://github.com/jcrist",
            "followers_url": "https://api.github.com/users/jcrist/followers",
            "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
            "organizations_url": "https://api.github.com/users/jcrist/orgs",
            "repos_url": "https://api.github.com/users/jcrist/repos",
            "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcrist/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-05T17:18:59Z",
        "updated_at": "2018-04-05T17:18:59Z",
        "author_association": "MEMBER",
        "body": "> I think that @jakirkham is curious if there are intermediate results that might be efficiently captured when computing many moments simultaneously.\r\n\r\nAh, in that case no. We could implement this fairly easily, but I'd want to call the function something other than `moment`. I can see how such a thing would be useful.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/379011082/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/379020673",
        "html_url": "https://github.com/dask/dask/issues/3377#issuecomment-379020673",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3377",
        "id": 379020673,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTAyMDY3Mw==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-05T17:49:13Z",
        "updated_at": "2018-04-05T17:49:13Z",
        "author_association": "MEMBER",
        "body": "I see. Assumed these were moments, not central moments. That makes more sense.\r\n\r\nYes @mrocklin understood my intent with this question correctly.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/379020673/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/397669350",
        "html_url": "https://github.com/dask/dask/issues/3377#issuecomment-397669350",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3377",
        "id": 397669350,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzY2OTM1MA==",
        "user": {
            "login": "convexset",
            "id": 1677933,
            "node_id": "MDQ6VXNlcjE2Nzc5MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1677933?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/convexset",
            "html_url": "https://github.com/convexset",
            "followers_url": "https://api.github.com/users/convexset/followers",
            "following_url": "https://api.github.com/users/convexset/following{/other_user}",
            "gists_url": "https://api.github.com/users/convexset/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/convexset/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/convexset/subscriptions",
            "organizations_url": "https://api.github.com/users/convexset/orgs",
            "repos_url": "https://api.github.com/users/convexset/repos",
            "events_url": "https://api.github.com/users/convexset/events{/privacy}",
            "received_events_url": "https://api.github.com/users/convexset/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-15T16:11:15Z",
        "updated_at": "2018-06-15T16:11:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "Was pointed to this.\r\n\r\nLove how map/reduce the implementation is: items -> monomials... sum... divide by total... get moments... combine them (binomial coefficients and all) to yield central moments.\r\n\r\n(Also first time I'm seeing `...` used in Python code.)\r\n\r\nReminds me of stuff like approximating functions of random variables using the moments (since a RV is defined by all its moments)... Stuff that is easy to do is user code.\r\n\r\nThat said, it might be interesting to expose the pure moments E[X^k].",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/397669350/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]