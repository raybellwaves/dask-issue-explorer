[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/632883019",
        "html_url": "https://github.com/dask/dask/issues/6227#issuecomment-632883019",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6227",
        "id": 632883019,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjg4MzAxOQ==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-22T19:39:08Z",
        "updated_at": "2020-05-22T19:39:08Z",
        "author_association": "MEMBER",
        "body": "This sounds like a great idea! It could also help with MREs in bug reports.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/632883019/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/633047884",
        "html_url": "https://github.com/dask/dask/issues/6227#issuecomment-633047884",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6227",
        "id": 633047884,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzA0Nzg4NA==",
        "user": {
            "login": "eric-czech",
            "id": 6130352,
            "node_id": "MDQ6VXNlcjYxMzAzNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6130352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-czech",
            "html_url": "https://github.com/eric-czech",
            "followers_url": "https://api.github.com/users/eric-czech/followers",
            "following_url": "https://api.github.com/users/eric-czech/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-czech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-czech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-czech/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-czech/orgs",
            "repos_url": "https://api.github.com/users/eric-czech/repos",
            "events_url": "https://api.github.com/users/eric-czech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-czech/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-23T12:55:04Z",
        "updated_at": "2020-05-23T12:55:04Z",
        "author_association": "MEMBER",
        "body": "Do you have any preference on subsets from real datasets vs semi-realistic simulation methods?  \r\n\r\nI think the former would be more interesting (a la sklearn `load_*` functions) but as far as human genetic datasets go, the obvious choice would be 1000 genomes which is distributed under a [CC BY-NC-SA 3.0](https://creativecommons.org/licenses/by-nc-sa/3.0/) license.  We'd have to be careful to document any operations applied, add proper citations, propagate the license, etc.  I assume you'd prefer to avoid that?\r\n\r\nA `make_genotypes` function with random data containing enough structure to do interesting things with ufunc reductions (allele frequency), matrix multiplication (genetic relatedness), and SVD (population separation) isn't very hard though.  It looks like all the necessary np.random.* methods are supported to do that in a principled way except for `dirichlet`, but it wouldn't be hard to work around that.  Has anybody requested support for that before?  I couldn't find an issue anywhere. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/633047884/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/633070950",
        "html_url": "https://github.com/dask/dask/issues/6227#issuecomment-633070950",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6227",
        "id": 633070950,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzA3MDk1MA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-23T15:00:20Z",
        "updated_at": "2020-05-23T15:00:20Z",
        "author_association": "MEMBER",
        "body": "I think that both `make_` and a `load_` versions would be welcome that were purely random, or loaded data.\r\n\r\n> We'd have to be careful to document any operations applied, add proper citations, propagate the license, etc. I assume you'd prefer to avoid that?\r\n\r\nI'm curious if there is a way to do this in a lightweight way.  If the data is already available on a cloud object store then maybe we can connect to it with minimal modification.  If we need to include a license then maybe we can do so in the docstring for example?\r\n\r\n> It looks like all the necessary np.random.* methods are supported to do that in a principled way except for dirichlet, but it wouldn't be hard to work around that. Has anybody requested support for that before? I couldn't find an issue anywhere.\r\n\r\nIt looks like the `dirichlet` definition has been commented out.  My guess is because it takes an array valued input and so is not as trivial as the others.  It probably isn't too hard, but does require someone who actually knows what the output should look like, rather than just copy-pasting the other implementations.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/633070950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/633084419",
        "html_url": "https://github.com/dask/dask/issues/6227#issuecomment-633084419",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6227",
        "id": 633084419,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzA4NDQxOQ==",
        "user": {
            "login": "eric-czech",
            "id": 6130352,
            "node_id": "MDQ6VXNlcjYxMzAzNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6130352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-czech",
            "html_url": "https://github.com/eric-czech",
            "followers_url": "https://api.github.com/users/eric-czech/followers",
            "following_url": "https://api.github.com/users/eric-czech/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-czech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-czech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-czech/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-czech/orgs",
            "repos_url": "https://api.github.com/users/eric-czech/repos",
            "events_url": "https://api.github.com/users/eric-czech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-czech/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-23T16:09:23Z",
        "updated_at": "2020-05-23T16:09:23Z",
        "author_association": "MEMBER",
        "body": "FYI here's a decent simulator as a dask.array-based `make_genotypes` function and some downstream applications: [Dask Genetic Data Simulation Notebook](https://gist.github.com/eric-czech/8b6e0331f7e512f89cf009839e9f84ca) (implements Balding-Nichols and PSD models, though the latter is only partially doable w/o dirichlet).\r\n\r\n> If the data is already available on a cloud object store then maybe we can connect to it with minimal modification.  If we need to include a license then maybe we can do so in the docstring for example?\r\n\r\nFWIW, there are at least dozens of different projects that download 1000 Genomes data in its raw form and the re-host the data in a more manageable form.  For example, pretty much every repo under the [1000genomes github topic](https://github.com/topics/1000genomes) list does that.  It looks to me like very few of them make an effort to comply with the license though so \ud83e\udd37\u200d\u2642\ufe0f.  \r\n\r\n> It looks like the dirichlet definition has been commented out.\r\n\r\nHmm maybe I'll take a look one of these days -- having admixture in the simulator is pretty important though we can still do uniform mixing proportions easily enough and there might be a way to draw from a dirichlet using variables drawn from other distributions.  I don't remember if that's possible.\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/633084419/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/633131023",
        "html_url": "https://github.com/dask/dask/issues/6227#issuecomment-633131023",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6227",
        "id": 633131023,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzEzMTAyMw==",
        "user": {
            "login": "alimanfoo",
            "id": 703554,
            "node_id": "MDQ6VXNlcjcwMzU1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/703554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alimanfoo",
            "html_url": "https://github.com/alimanfoo",
            "followers_url": "https://api.github.com/users/alimanfoo/followers",
            "following_url": "https://api.github.com/users/alimanfoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/alimanfoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alimanfoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alimanfoo/subscriptions",
            "organizations_url": "https://api.github.com/users/alimanfoo/orgs",
            "repos_url": "https://api.github.com/users/alimanfoo/repos",
            "events_url": "https://api.github.com/users/alimanfoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alimanfoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-23T20:13:13Z",
        "updated_at": "2020-05-23T20:13:13Z",
        "author_association": "CONTRIBUTOR",
        "body": "FWIW 1000 genomes phase 3 data is now on GCS as zarr. Also Ag1000G phase 2\ndata on GCS as zarr. More info here:\nhttps://github.com/scikit-allel/requirements/tree/master/data\n\nOn Sat, 23 May 2020, 17:09 Eric Czech, <notifications@github.com> wrote:\n\n> FYI here's a decent simulator as a dask.array-based make_genotypes\n> function and some downstream applications: Dask Genetic Data Simulation\n> Notebook\n> <https://gist.github.com/eric-czech/8b6e0331f7e512f89cf009839e9f84ca>\n> (implements Balding-Nichols and PSD models, though the latter is only\n> partially doable w/o dirichlet).\n>\n> If the data is already available on a cloud object store then maybe we can\n> connect to it with minimal modification. If we need to include a license\n> then maybe we can do so in the docstring for example?\n>\n> FWIW, there are at least dozens of different projects that download 1000\n> Genomes data in its raw form and the re-host the data in a more manageable\n> form. For example, pretty much every repo under the 1000genomes github\n> topic <https://github.com/topics/1000genomes> list does that. It looks to\n> me like very few of them make an effort to comply with the license though\n> so \ud83e\udd37\u200d\u2642\ufe0f.\n>\n> It looks like the dirichlet definition has been commented out.\n>\n> Hmm maybe I'll take a look one of these days -- having admixture in the\n> simulator is pretty important though we can still do uniform mixing\n> proportions easily enough and there might be a way to draw from a dirichlet\n> using variables drawn from other distributions. I don't remember if that's\n> possible.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/6227#issuecomment-633084419>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAFLYQSTMULJU6U3ZQUU7MLRS7YMBANCNFSM4NG44ZSQ>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/633131023/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]