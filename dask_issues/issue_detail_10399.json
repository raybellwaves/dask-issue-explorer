{
    "url": "https://api.github.com/repos/dask/dask/issues/10399",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10399/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10399/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10399/events",
    "html_url": "https://github.com/dask/dask/issues/10399",
    "id": 1791586091,
    "node_id": "I_kwDOAbcwm85qyW8r",
    "number": 10399,
    "title": "map_blocks with arrays of different sizes",
    "user": {
        "login": "tmillenaar",
        "id": 45204355,
        "node_id": "MDQ6VXNlcjQ1MjA0MzU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/45204355?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tmillenaar",
        "html_url": "https://github.com/tmillenaar",
        "followers_url": "https://api.github.com/users/tmillenaar/followers",
        "following_url": "https://api.github.com/users/tmillenaar/following{/other_user}",
        "gists_url": "https://api.github.com/users/tmillenaar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tmillenaar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tmillenaar/subscriptions",
        "organizations_url": "https://api.github.com/users/tmillenaar/orgs",
        "repos_url": "https://api.github.com/users/tmillenaar/repos",
        "events_url": "https://api.github.com/users/tmillenaar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tmillenaar/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2023-07-06T13:38:21Z",
    "updated_at": "2024-01-22T01:49:32Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the issue**:\r\nA function that is supplied to `dask.array.map_blocks` can be called with multiple Dask arrays as input.\r\nThis generally works if the shape of the input arrays is the same.\r\nIf however the input arrays have a different shape, unexpected behavior can arise.\r\nThe chunks and shapes are often not as expected.\r\nSometimes calling `compute()` on the result will yield an incorrect array and sometimes it errors with\r\n`*** IndexError: tuple index out of range`\r\n\r\n**Minimal Complete Verifiable Example**:\r\nIn this example I define a function where the second argument is unused and the first argument is returned unmodified.\r\nThe expectation therefore is that the result is unaffected by the second array.\r\n```python\r\nimport numpy as np\r\nimport dask.array as da\r\n\r\ndef foo(arr1, arr2):\r\n    return arr1\r\n\r\narr_3d = da.stack(3*[da.eye(2)])\r\narr_2d = da.stack(3*[da.arange(2)])\r\n\r\nprint(\"Shape of arr_3d:\", arr_3d.shape)\r\nprint(\"Shape of arr_2d:\", arr_2d.shape)\r\n\r\nresult =  da.map_blocks(foo, arr_3d, arr_2d)\r\nprint(\"Shape of result:\", result.shape)\r\n```\r\nThis returns:\r\n```\r\nShape of arr_3d: (3, 2, 2)\r\nShape of arr_2d: (3, 2)\r\nShape of result: (3, 3, 2)\r\n```\r\nOf course I would have expected the shape of the result to be (3, 2, 2) and not (3, 3, 2).\r\nWhat is possibly even more telling than the shape are the chunks. If I run the code above but print the chunks instead of the shape I get:\r\n```\r\nChunks of arr_3d: ((1, 1, 1), (2,), (2,))\r\nChunks of arr_2d: ((1, 1, 1), (2,))\r\nChunks of result: ((1, 1, 1), (1, 1, 1), (2,))\r\n```\r\nIf instead of supplying `arr_2d` to the function, I supply any non-dask object, the function works as expected. In this case I supplied None instead:\r\n```\r\nChunks of arr_3d: ((1, 1, 1), (2,), (2,))\r\nChunks of result: ((1, 1, 1), (2,), (2,))\r\n```\r\n\r\nSo the mere presence of the second array will mess up the chunking and shape of the return array.\r\n\r\n**Anything else we need to know?**:\r\n\r\nI think the problem might be originating in the creation of `argpairs` here:\r\nhttps://github.com/dask/dask/blob/461355e117958354ed30e29893afecd5e9258ff0/dask/array/core.py#L802-L805\r\n\r\nThe variable `argpairs` will have the length of the respective arrays, but it gets inverted. \r\nIn this example, the indices that go with the `argpairs` are (2, 1, 0) for the first array where the corresponding chunks are ((1, 1, 1), (2,), (2,)). For the second array we have the indices (1, 0) with the corresponding chunks ((1, 1, 1), (2,)).\r\nWhat I was assuming when calling the function was that the chunks are matched in order. Instead now we have the (1,1,1) corresponding to index 1 of the second argument overwriting the (2,) corresponding to index 1 of the first argument.\r\nThe overwrite is occurring here:\r\nhttps://github.com/dask/dask/blob/461355e117958354ed30e29893afecd5e9258ff0/dask/array/blockwise.py#L192-L195\r\n\r\nI have not tried to fiddle with `argpairs` yet for I am not very familiar with Dasks internals and I want to check here first if this is even supported functionality.\r\n\r\n**Workaround**\r\nIt does work if we create an extra (dummy) dimension on the second array so it matches the number of axes of the first.\r\nThe following works as expected:\r\n`arr_2d = da.expand_dims(arr_2d, 2)`\r\n\r\nWhich gives the chunks:\r\n```\r\nChunks of arr_3d: ((1, 1, 1), (2,), (2,))\r\nChunks of arr_2d: ((1, 1, 1), (2,), (1,))\r\nChunks of result: ((1, 1, 1), (2,), (2,))\r\n```\r\n\r\n**Expectation of solution**:\r\nI am unsure if this is feature is meant to be supported.\r\nWhile I would love for this feature to be supported, another possible outcome of this issue could of course be the statement that we do not support `map_blocks` on arrays of different sizes.\r\nIn that case an explicit error could be beneficial.\r\n\r\n\r\n**Environment**:\r\n\r\n- Dask version: 2023.3.2 and 2023.5.0\r\n- Python version: 3.8.10\r\n- Operating System: Ubuntu 20.04 LTS (focal)\r\n- Install method (conda, pip, source): pip\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10399/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10399/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}