[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/825670332",
        "html_url": "https://github.com/dask/dask/issues/7587#issuecomment-825670332",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7587",
        "id": 825670332,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTY3MDMzMg==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-23T13:46:55Z",
        "updated_at": "2021-04-23T13:46:55Z",
        "author_association": "MEMBER",
        "body": "It seems like `delayed` doesn't do optimization on inputs. I guess that's why methods like `dask.array.to_delayed` have `optimize_graph` as a kwarg.\r\n\r\nThe behavior you are looking for could probably be supported, but I'm wondering if it might not make more sense to call `.persist()` on the array before calling the `delayed` function on it. \r\n\r\nThe docs explicitly recommend against calling delayed on other collections:\r\n\r\n> ## Don\u2019t call dask.delayed on other Dask collections\r\n> When you place a Dask array or Dask DataFrame into a delayed call, that function will receive the NumPy or Pandas equivalent. Beware that if your array is large, then this might crash your workers.\r\n> \r\n> Instead, it\u2019s more common to use methods like da.map_blocks\r\n\r\n[source](https://docs.dask.org/en/latest/delayed-best-practices.html#don-t-call-dask-delayed-on-other-dask-collections)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/825670332/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/825689000",
        "html_url": "https://github.com/dask/dask/issues/7587#issuecomment-825689000",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7587",
        "id": 825689000,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTY4OTAwMA==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-23T14:15:02Z",
        "updated_at": "2021-04-23T14:15:02Z",
        "author_association": "MEMBER",
        "body": "So, I looked more closely and I don't really see a reason why we shouldn't call optimize on the inputs before computing. I opened a PR that seems to resolve the case that you were looking at.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/825689000/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/825700750",
        "html_url": "https://github.com/dask/dask/issues/7587#issuecomment-825700750",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7587",
        "id": 825700750,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTcwMDc1MA==",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-23T14:33:06Z",
        "updated_at": "2021-04-23T14:33:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks!  I do want to call delayed on a dask array and get the full numpy array.  My use case is projecting down a large array into a small array which does fit in memory.  The delayed call saves the array as a small tiff file.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/825700750/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/825918239",
        "html_url": "https://github.com/dask/dask/issues/7587#issuecomment-825918239",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7587",
        "id": 825918239,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTkxODIzOQ==",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-23T20:50:17Z",
        "updated_at": "2021-04-23T21:56:20Z",
        "author_association": "CONTRIBUTOR",
        "body": "There is a broad class of conversions from one dask to another that will benefit from this, as well as any array-based delayed function that returns a variable shape output.\r\n\r\n[A dask ecosystem example of array->array](https://github.com/dask/dask-image/blob/ec39605527f2e41012df1ec7e50634ee46469588/dask_image/ndmeasure/__init__.py#L305) has a per-block delayed function returning a variable sized output. \r\n\r\n~~A solution in #7589 shows an array to dataframe conversion going through a delayed step.~~ (the use of to_delayed does use optimization)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/825918239/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]