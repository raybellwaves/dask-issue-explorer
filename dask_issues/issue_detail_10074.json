{
    "url": "https://api.github.com/repos/dask/dask/issues/10074",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10074/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10074/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10074/events",
    "html_url": "https://github.com/dask/dask/issues/10074",
    "id": 1626023994,
    "node_id": "I_kwDOAbcwm85g6yg6",
    "number": 10074,
    "title": "`da.store` is dropping all annotations even if low level fusion is deactivated",
    "user": {
        "login": "fjetter",
        "id": 8629629,
        "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjetter",
        "html_url": "https://github.com/fjetter",
        "followers_url": "https://api.github.com/users/fjetter/followers",
        "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
        "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
        "organizations_url": "https://api.github.com/users/fjetter/orgs",
        "repos_url": "https://api.github.com/users/fjetter/repos",
        "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fjetter/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3798450413,
            "node_id": "LA_kwDOAbcwm87iZ8Dt",
            "url": "https://api.github.com/repos/dask/dask/labels/bug",
            "name": "bug",
            "color": "faadaf",
            "default": true,
            "description": "Something is broken"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2023-03-15T18:11:42Z",
    "updated_at": "2024-02-26T01:45:20Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "## Problem\r\n\r\n`da.store` is dropping all annotations from the input graph even if low level fusion is deactivated\r\n\r\n## Example\r\n\r\n```python\r\nimport dask\r\nimport dask.array as da\r\nimport numpy as np\r\n\r\n# Low level fusion is on by default for arrays which is known to strip annotations\r\n# Opting out doesn't help. When using `store` there is no way to preserve annotatoins\r\nwith dask.config.set({\"optimization.fuse.active\": False}):\r\n    with dask.annotate(retries=4):\r\n        a = da.ones((4, 4), chunks=(2, 2))\r\n\r\n    assert any(l.annotations for l in a.dask.layers.values())\r\n    st = da.store([a], [_DevNull()], lock=False, compute=False)\r\n\r\n    # Boom\r\n    assert any(l.annotations for l in st.dask.layers.values())\r\n```\r\n\r\n## Why are we dropping these?\r\n\r\nLooking at the code, we're actually leaving HLGs behind at this specific point. We're only extracting the keys but are not actually preserving the meta information that is attached to layers\r\n \r\nhttps://github.com/dask/dask/blob/890de74381d89910097cd2e9409196db4ab5b5d9/dask/array/core.py#L1201-L1211\r\n\r\n## Why does this matter\r\n\r\nThere is the general theme of users being able to control retries, priorities and resources with this. However, internally we are also relying on annotations to enable P2P shuffling or in this specific case rechunking.\r\n\r\nA user reported this problem already https://github.com/dask/distributed/issues/7599#issuecomment-1458116131 and this is actually a major obstacle for adoption of P2P rechunking since `da.store` is very frequently used see also https://github.com/dask/dask/issues/9381.\r\n\r\nhttps://github.com/dask/dask/issues/9381 in fact already proposes to migrate `da.store` to `Blockwise` which would be one option to fix this problem but the attempt ran into issues over in https://github.com/dask/dask/pull/9382\r\n\r\nI do not care if this is using blockwise or not but I would like annotations to be preserved to enable usage of P2P rechunking.\r\n\r\n\r\n## Related tickets\r\n- https://github.com/dask/distributed/issues/7599\r\n- https://github.com/dask/dask/issues/9541\r\n- https://github.com/dask/dask/issues/9381",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10074/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10074/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}