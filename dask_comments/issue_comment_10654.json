[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1829821581",
        "html_url": "https://github.com/dask/dask/issues/10654#issuecomment-1829821581",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10654",
        "id": 1829821581,
        "node_id": "IC_kwDOAbcwm85tENyN",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-28T13:16:16Z",
        "updated_at": "2023-11-28T13:16:16Z",
        "author_association": "MEMBER",
        "body": "I would do this:\r\n\r\n```python\r\nfrom dask.distributed import fire_and_forget\r\n\r\nfor x in L:\r\n    future = client.submit(func, x)\r\n    fire_and_forget(future)\r\n```\r\n\r\nhttps://docs.dask.org/en/latest/futures.html#fire-and-forget",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1829821581/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1830028545",
        "html_url": "https://github.com/dask/dask/issues/10654#issuecomment-1830028545",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10654",
        "id": 1830028545,
        "node_id": "IC_kwDOAbcwm85tFAUB",
        "user": {
            "login": "benjeffery",
            "id": 8552,
            "node_id": "MDQ6VXNlcjg1NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benjeffery",
            "html_url": "https://github.com/benjeffery",
            "followers_url": "https://api.github.com/users/benjeffery/followers",
            "following_url": "https://api.github.com/users/benjeffery/following{/other_user}",
            "gists_url": "https://api.github.com/users/benjeffery/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benjeffery/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benjeffery/subscriptions",
            "organizations_url": "https://api.github.com/users/benjeffery/orgs",
            "repos_url": "https://api.github.com/users/benjeffery/repos",
            "events_url": "https://api.github.com/users/benjeffery/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benjeffery/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-28T15:03:59Z",
        "updated_at": "2023-11-28T15:03:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "> https://docs.dask.org/en/latest/futures.html#fire-and-forget\r\n\r\nOoooo! I missed that function in the docs! Thanks so much, will try it out.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1830028545/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1831908147",
        "html_url": "https://github.com/dask/dask/issues/10654#issuecomment-1831908147",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10654",
        "id": 1831908147,
        "node_id": "IC_kwDOAbcwm85tMLMz",
        "user": {
            "login": "benjeffery",
            "id": 8552,
            "node_id": "MDQ6VXNlcjg1NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benjeffery",
            "html_url": "https://github.com/benjeffery",
            "followers_url": "https://api.github.com/users/benjeffery/followers",
            "following_url": "https://api.github.com/users/benjeffery/following{/other_user}",
            "gists_url": "https://api.github.com/users/benjeffery/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benjeffery/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benjeffery/subscriptions",
            "organizations_url": "https://api.github.com/users/benjeffery/orgs",
            "repos_url": "https://api.github.com/users/benjeffery/repos",
            "events_url": "https://api.github.com/users/benjeffery/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benjeffery/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-29T13:34:44Z",
        "updated_at": "2023-11-29T13:34:44Z",
        "author_association": "CONTRIBUTOR",
        "body": "I've tried this out, but I still need to wait for the set of futures to complete before execution moves on, If I do this with `distributed.wait` the futures that are executed by workers that have died are still being re-done. I've tried manually checking the futures, but keeping them in scope still forces re-execution.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1831908147/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1831936601",
        "html_url": "https://github.com/dask/dask/issues/10654#issuecomment-1831936601",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10654",
        "id": 1831936601,
        "node_id": "IC_kwDOAbcwm85tMSJZ",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-29T13:52:16Z",
        "updated_at": "2023-11-29T13:52:16Z",
        "author_association": "MEMBER",
        "body": "Yeah, if you still have a future live in scope and it errors in some way or\r\ngoes away (such as due to a worker disappearing unexpectedly).  Sorry about\r\nthat.  I would probably stick with your as_completed solution and find some\r\nother way to show progress maybe?\r\n\r\nOn Wed, Nov 29, 2023 at 7:34\u202fAM Ben Jeffery ***@***.***>\r\nwrote:\r\n\r\n> I've tried this out, but I still need to wait for the set of futures to\r\n> complete before execution moves on, If I do this with distributed.wait\r\n> the futures that are executed by workers that have died are still being\r\n> re-done. I've tried manually checking the futures, but keeping them in\r\n> scope still forces re-execution.\r\n>\r\n> \u2014\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/dask/dask/issues/10654#issuecomment-1831908147>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AACKZTH4KINBH4WWPS4BELDYG42YBAVCNFSM6AAAAAA75WXPPOVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQMZRHEYDQMJUG4>\r\n> .\r\n> You are receiving this because you commented.Message ID:\r\n> ***@***.***>\r\n>\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1831936601/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1831948410",
        "html_url": "https://github.com/dask/dask/issues/10654#issuecomment-1831948410",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10654",
        "id": 1831948410,
        "node_id": "IC_kwDOAbcwm85tMVB6",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-29T13:59:22Z",
        "updated_at": "2023-11-29T13:59:22Z",
        "author_association": "MEMBER",
        "body": "> but when a worker is rotated out (they have to be due to cluster time limits) the progress bar skips backward as all the results of the tasks done by that worker are lost\r\n\r\nAnother option is to think through this.  Ideally if a worker is closed gracefully its results (just the Nones) will be transferred to another worker.  If the worker is killed ungracefully then this doesn't happen.\r\n\r\nMaybe you want to start your workers with a `--lifetime \"1 hour\"` keyword or something (or maybe `--lifetime \"55 minutes\"` would be better so that they kill themselves before the job manager kills them after an hour, say.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1831948410/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1831986102",
        "html_url": "https://github.com/dask/dask/issues/10654#issuecomment-1831986102",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10654",
        "id": 1831986102,
        "node_id": "IC_kwDOAbcwm85tMeO2",
        "user": {
            "login": "benjeffery",
            "id": 8552,
            "node_id": "MDQ6VXNlcjg1NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benjeffery",
            "html_url": "https://github.com/benjeffery",
            "followers_url": "https://api.github.com/users/benjeffery/followers",
            "following_url": "https://api.github.com/users/benjeffery/following{/other_user}",
            "gists_url": "https://api.github.com/users/benjeffery/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benjeffery/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benjeffery/subscriptions",
            "organizations_url": "https://api.github.com/users/benjeffery/orgs",
            "repos_url": "https://api.github.com/users/benjeffery/repos",
            "events_url": "https://api.github.com/users/benjeffery/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benjeffery/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-29T14:20:02Z",
        "updated_at": "2023-11-29T14:20:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Maybe you want to start your workers with a `--lifetime \"1 hour\"` keyword or something (or maybe `--lifetime \"55 minutes\"` would be better so that they kill themselves before the job manager kills them after an hour, say.\r\n\r\nSadly I can't always know when a worker will be killed. I've also thought about using the AMM to replicate the results - I'd need to be able add a policy (and remove the default `ReduceReplicas` policy) in library code to do this, as I'm working on a library that has other users so can't rely on dask config to configure the AMM. Are there docs for adding/removing policies on the fly in client code? Thanks for your help here.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1831986102/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]