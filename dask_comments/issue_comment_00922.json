[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/172647675",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-172647675",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 172647675,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjY0NzY3NQ==",
        "user": {
            "login": "jcrist",
            "id": 2783717,
            "node_id": "MDQ6VXNlcjI3ODM3MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcrist",
            "html_url": "https://github.com/jcrist",
            "followers_url": "https://api.github.com/users/jcrist/followers",
            "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
            "organizations_url": "https://api.github.com/users/jcrist/orgs",
            "repos_url": "https://api.github.com/users/jcrist/repos",
            "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcrist/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-18T20:38:59Z",
        "updated_at": "2016-01-18T20:38:59Z",
        "author_association": "MEMBER",
        "body": "A few ideas:\n- Expanding your idea above, signature could be `da.from_hdf5(filepath, datapath)`. Slice is composed later, as it feels more natural to index (also, `:` only works in getitem). Example:\n\n``` python\nz1 = da.from_hdf5('foo.h5', '/x/y/z1')[:, :100]\nz2 = da.from_hdf5('foo.h5', '/x/y/z2')[:, :100]\n```\n- Another approach would be to make a \"lazy\" version of the h5py File objects that don't open the file pointer until explicitly asked to (or closes and reopens the file pointer when serialized). Example:\n\n``` python\nx = da.from_hdf5('foo.h5')\nz1 = x['/x/y/z1'][:, :100]\nz2 = x['/x/y/z2'][:, :100]\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/172647675/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/172654630",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-172654630",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 172654630,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjY1NDYzMA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-18T21:10:25Z",
        "updated_at": "2016-01-18T21:10:25Z",
        "author_association": "MEMBER",
        "body": "I agree that the slicing should occur later, but anything that gathers data from an array-thing will have to include slices within the generated tasks.  For example `from_array` includes many tasks, each of which slice from the underlying array.\n\nThe lazy/serializable h5py File object solution sounds like a nice one.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/172654630/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/172708472",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-172708472",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 172708472,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjcwODQ3Mg==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-19T02:04:11Z",
        "updated_at": "2016-01-19T02:04:11Z",
        "author_association": "MEMBER",
        "body": "@rabernat did some related experiments to avoid system limits on the number of open files. Unfortunately, getting satisfactory performance was a challenge: https://github.com/pydata/xarray/pull/524\n\nIt seems critical to avoid repetitively opening and closing files in every single task. One solution I imagined but never got around to implementing would be to create a single \"open file\" task, followed by a bunch of dependent \"get data\" tasks and a \"close file\" task that depends on the data. However, it's not clear how you would actually ensure that \"close file\" gets called (at least with dask), given that none of the computation depends on it.\n\nAs for getting this into xarray, the main challenge is that we use external netCDF libraries instead of reading them directly. But if you can figure this out for h5py, then it should be quite easy to hook into [h5netcdf](https://github.com/shoyer/h5netcdf). I don't think we would even need to add a dask dependency to add a `lazy` argument to `h5netcdf.File`.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/172708472/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/172717711",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-172717711",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 172717711,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjcxNzcxMQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-19T02:42:25Z",
        "updated_at": "2016-01-19T02:42:25Z",
        "author_association": "MEMBER",
        "body": "Perhaps we cache the opening per worker process and just don't close things?  Perhaps we close things after waiting for 1s in a separate thread.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/172717711/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/172921012",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-172921012",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 172921012,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjkyMTAxMg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-19T17:10:12Z",
        "updated_at": "2016-01-19T17:10:56Z",
        "author_association": "MEMBER",
        "body": "Here is a solution with a lazy h5py dataset. \n\nhttps://gist.github.com/mrocklin/1f61ec7e669563f05505\n\n``` python\nIn [1]: from hdf5lazy import Dataset\n\nIn [2]: %timeit dset = Dataset('foo.hdf5', 'x')\nThe slowest run took 52.19 times longer than the fastest. This could mean that an intermediate result is being cached \n100000 loops, best of 3: 10.4 \u00b5s per loop\n\nIn [3]: dset = Dataset('foo.hdf5', 'x')\n\nIn [4]: dset[:]\nOut[4]: array([ 1.,  1.,  1.,  1.,  1.])\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/172921012/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/173033206",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-173033206",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 173033206,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzAzMzIwNg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-20T00:29:21Z",
        "updated_at": "2016-01-20T00:29:21Z",
        "author_association": "MEMBER",
        "body": "@rabernat @shoyer any thoughts on this approach?  (the code linked to above is, I claim, very approachable.)\n\n@pwolfram noted that the interface for netcdf3 is a bit different.  @shoyer can you think of a way to generalize the code above?  Or should we just write a few of these for each for the different libraries?\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/173033206/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/173047256",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-173047256",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 173047256,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzA0NzI1Ng==",
        "user": {
            "login": "rabernat",
            "id": 1197350,
            "node_id": "MDQ6VXNlcjExOTczNTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1197350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rabernat",
            "html_url": "https://github.com/rabernat",
            "followers_url": "https://api.github.com/users/rabernat/followers",
            "following_url": "https://api.github.com/users/rabernat/following{/other_user}",
            "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions",
            "organizations_url": "https://api.github.com/users/rabernat/orgs",
            "repos_url": "https://api.github.com/users/rabernat/repos",
            "events_url": "https://api.github.com/users/rabernat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rabernat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-20T01:20:30Z",
        "updated_at": "2016-01-20T01:20:30Z",
        "author_association": "MEMBER",
        "body": "This seems similar to, but far cleaner than, to the [hack job](https://github.com/pydata/xarray/pull/524/files#diff-fbb53316626aea75814a3e110a721988R33) I tried on the xray ScipyNetcdfWrapper. My goal there was to get around the system ulimit on open files, which was limiting my ability to open large mfdatasets.\n\nYour docstring says that the class limits the number of open files via the cache. But this seems to apply only when the same file would otherwise be opened multiple times, e.g. maybe when chunking. My approach went further and actually attempted to close the file after each read and reopen once data was requested. That is what gave the big performance penalty.\n\nIt seems like your code solves two important problems:\n- reducing the number of open files when chunking a single large dataset\n- allowing file object to be serialized for distributed\n\nIt would be pretty straightforward to extend this approach to the netcdf engines in xarray, although @shoyer is much more qualified to judge that.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/173047256/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/173051743",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-173051743",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 173051743,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzA1MTc0Mw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-20T01:28:06Z",
        "updated_at": "2016-01-20T01:28:06Z",
        "author_association": "MEMBER",
        "body": "Notably my solution doesn't close files explicitly. I'm actually mostly ok with this.  We could make it more thorough by adding in a timed callback if people feel concerned about having the dangling file handle.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/173051743/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/173058993",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-173058993",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 173058993,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzA1ODk5Mw==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-20T01:55:01Z",
        "updated_at": "2016-01-20T01:55:01Z",
        "author_association": "MEMBER",
        "body": "Serializing the file object does seem pretty straightforward -- you simply need custom methods to overload how pickle works. We could certainly put that into xray (on generic data stores), and maybe even push it into upstream libraries.\n\nThis doesn't solve the \"too many files\" annoyance, though.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/173058993/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/173059298",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-173059298",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 173059298,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzA1OTI5OA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-20T01:56:58Z",
        "updated_at": "2016-01-20T01:56:58Z",
        "author_association": "MEMBER",
        "body": "Meaning you sometimes have thousands of hdf5 files?\n\nPerhaps we add an LRU mechanism to the file cache and open files on demand.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/173059298/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/173062865",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-173062865",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 173062865,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzA2Mjg2NQ==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-20T02:21:55Z",
        "updated_at": "2016-01-20T02:21:55Z",
        "author_association": "MEMBER",
        "body": "Yes, it's not uncommon to encounter one file per time step.\n\nOn Tue, Jan 19, 2016 at 5:56 PM, Matthew Rocklin notifications@github.com\nwrote:\n\n> Meaning you sometimes have thousands of hdf5 files?\n> \n> ## Perhaps we add an LRU mechanism to the file cache and open files on demand.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/blaze/dask/issues/922#issuecomment-173059298\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/173062865/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/173092963",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-173092963",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 173092963,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzA5Mjk2Mw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-01-20T05:28:53Z",
        "updated_at": "2016-01-20T05:30:15Z",
        "author_association": "MEMBER",
        "body": "I uploaded the hdf5lazy hack to PyPI in case anyone wants to try it out.  I added a wrapper for the `netCDF4` Python library (which I think also handles netCDF3).  My hack doesn't handle the many file case yet.  It's also very shoddy work.\n\nhttps://github.com/mrocklin/hdf5lazy\n\n```\n$ pip install hdf5lazy\n```\n\n``` python\nIn [1]: from glob import glob\nIn [2]: filenames = ['/home/mrocklin/data/ecmwf/' + fn for fn in sorted(glob('*.nc3'))] \n\nIn [3]: from hdf5lazy import NetCDFDataset\nIn [4]: dsets = [NetCDFDataset(fn, 't2m') for fn in filenames]\n\nIn [5]: import dask.array as da\nIn [6]: arrays = [da.from_array(dset, chunks=dset.shape) for dset in dsets]\nIn [7]: stack = da.concatenate(arrays, axis=0)\n\nIn [8]: stack[0].sum().compute()\nOut[8]: 287901475.39664292\n\nIn [9]: from distributed import Executor\nIn [10]: e = Executor('192.168.1.141:8786')\n\nIn [11]: stack[0].sum().compute(get=e.get)\nOut[11]: 287901475.39664292\n\nIn [12]: stack.sum().compute(get=e.get)\nOut[12]: 423832855970.39758\n\nIn [13]: stack\nOut[13]: dask.array<concate..., shape=(1464, 721, 1440), dtype=int16, chunksize=(4, 721, 1440)>\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/173092963/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/198810341",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-198810341",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 198810341,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODgxMDM0MQ==",
        "user": {
            "login": "pwolfram",
            "id": 4295853,
            "node_id": "MDQ6VXNlcjQyOTU4NTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4295853?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pwolfram",
            "html_url": "https://github.com/pwolfram",
            "followers_url": "https://api.github.com/users/pwolfram/followers",
            "following_url": "https://api.github.com/users/pwolfram/following{/other_user}",
            "gists_url": "https://api.github.com/users/pwolfram/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pwolfram/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pwolfram/subscriptions",
            "organizations_url": "https://api.github.com/users/pwolfram/orgs",
            "repos_url": "https://api.github.com/users/pwolfram/repos",
            "events_url": "https://api.github.com/users/pwolfram/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pwolfram/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-19T23:49:35Z",
        "updated_at": "2016-03-19T23:49:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "There appears to be a balance between opening/closing files on demand vs having too many open files at a time via cache.  One solution @mrocklin proposed, if I understand correctly, would be to limit the size of the cache based on closing the last used files.  I'm assuming this is one of the first problems that needs solved before xarray can be connected to distributed, right?  \n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/198810341/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/199085431",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-199085431",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 199085431,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTA4NTQzMQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-21T02:04:48Z",
        "updated_at": "2016-03-21T02:04:48Z",
        "author_association": "MEMBER",
        "body": "Yes, so the problem as I see it is that, for serialization and open-file reasons we want to use a function like the following:\n\n``` python\ndef get_chunk_of_array(filename, datapath, slice):\n    with netCDF4.Dataset(filename) as f:\n        return f.variables[datapath][slice]\n```\n\nHowever, this opens and closes many files, which while robust, is slow.  We can alleviate this by maintaining an LRU cache in a global variable so that it is created separately per process.\n\n``` python\nfrom toolz import memoize\n\ncache = LRUDict(size=100, on_eviction=lambda file: file.close())\n\nnetCDF4_Dataset = memoize(netCDF4.Dataset, cache=cache)\n\ndef def get_chunk_of_array(filename, datapath, slice):\n    f = netCDF4_Dataset(filename)\n    return f.variables[datapath][slice]\n```\n\nI'm happy to supply the `memoize` function with `toolz` and an appropriate `LRUDict` object with other microprojects that I can publish if necessary.\n\nWe would then need to use such a function within the dask.array and xarary codebases.\n\nAnyway, that's one approach.  Thoughts welcome.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/199085431/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/199086703",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-199086703",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 199086703,
        "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTA4NjcwMw==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-03-21T02:20:18Z",
        "updated_at": "2016-03-21T02:20:18Z",
        "author_association": "MEMBER",
        "body": "Yes, using such an LRU cache seems like a sane solution to me. It will\nrequire some refactoring of xarray's backend system to make this work,\nthough -- we currently only call netCDF4.Dataset once, when we open files.\n\nOn Sun, Mar 20, 2016 at 7:04 PM, Matthew Rocklin notifications@github.com\nwrote:\n\n> Yes, so the problem as I see it is that, for serialization and open-file\n> reasons we want to use a function like the following:\n> \n> def get_chunk_of_array(filename, datapath, slice):\n>     with netCDF4.Dataset(filename) as f:\n>         return f.variables[datapath][slice]\n> \n> However, this opens and closes many files, which while robust, is slow. We\n> can alleviate this by maintaining an LRU cache in a global variable so that\n> it is created separately per process.\n> \n> from toolz import memoize\n> \n> cache = LRUDict(size=100, on_eviction=lambda file: file.close())\n> \n> netCDF4_Dataset = memoize(netCDF4.Dataset, cache=cache)\n> def def get_chunk_of_array(filename, datapath, slice):\n>     f = netCDF4_Dataset(filename)\n>     return f.variables[datapath][slice]\n> \n> I'm happy to supply the memoize function with toolz and an appropriate\n> LRUDict object with other microprojects that I can publish if necessary.\n> \n> We would then need to use such a function within the dask.array and xarary\n> codebases.\n> \n> Anyway, that's one approach. Thoughts welcome.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/dask/dask/issues/922#issuecomment-199085431\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/199086703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/257956214",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-257956214",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 257956214,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1Nzk1NjIxNA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-02T18:26:48Z",
        "updated_at": "2016-11-02T18:26:48Z",
        "author_association": "MEMBER",
        "body": "I'm trying to understand how PR ( https://github.com/dask/distributed/pull/606 ) relates to this if at all. Could someone please help me understand?\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/257956214/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/258273470",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-258273470",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 258273470,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODI3MzQ3MA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-03T21:04:42Z",
        "updated_at": "2016-11-03T21:04:42Z",
        "author_association": "MEMBER",
        "body": "Maybe the answer is this ( https://github.com/dask/distributed/pull/620 )?\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/258273470/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/258293262",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-258293262",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 258293262,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODI5MzI2Mg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-03T22:28:44Z",
        "updated_at": "2016-11-03T22:28:44Z",
        "author_association": "MEMBER",
        "body": "@jakirkham yes.  Custom serialization will allow us to special case certain datatypes like `h5py.Dataset`s, allowing them to live in the dask graph and also work with the distributed scheduler.  There are still other problems that need to be solved to make HDF5 and dask.distributed work cleanly together, like having a shared file system, but this was the main blocker.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/258293262/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/258523789",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-258523789",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 258523789,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODUyMzc4OQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-04T19:17:21Z",
        "updated_at": "2016-11-04T19:17:21Z",
        "author_association": "MEMBER",
        "body": "> Custom serialization will allow us to special case certain datatypes like `h5py.Datasets`, allowing them to live in the dask graph and also work with the distributed scheduler.\n\nThat sounds great! Have been wanting to use dask more generally for a while, but this has been a bit of a blocker. If there is anything I can do to help, please let me know.\n\n> There are still other problems that need to be solved to make HDF5 and dask.distributed work cleanly together, like having a shared file system, but this was the main blocker.\n\nSo there are some cases where this should be fine like working on single machine or using NFS. Though implementing a generic shared file system to handle a wide range for storage use cases feels a bit ill-defined IMHO. Could you please elaborate a bit more what use cases you are try to target with this?\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/258523789/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/258563787",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-258563787",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 258563787,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODU2Mzc4Nw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-11-04T22:32:39Z",
        "updated_at": "2016-11-04T22:32:39Z",
        "author_association": "MEMBER",
        "body": "When I said shared file system I meant something like an NFS that presents a POSIX compatible file system that all machines can view equally.  \n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/258563787/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/343188749",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-343188749",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 343188749,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzE4ODc0OQ==",
        "user": {
            "login": "DaanVanVugt",
            "id": 35944,
            "node_id": "MDQ6VXNlcjM1OTQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DaanVanVugt",
            "html_url": "https://github.com/DaanVanVugt",
            "followers_url": "https://api.github.com/users/DaanVanVugt/followers",
            "following_url": "https://api.github.com/users/DaanVanVugt/following{/other_user}",
            "gists_url": "https://api.github.com/users/DaanVanVugt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DaanVanVugt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DaanVanVugt/subscriptions",
            "organizations_url": "https://api.github.com/users/DaanVanVugt/orgs",
            "repos_url": "https://api.github.com/users/DaanVanVugt/repos",
            "events_url": "https://api.github.com/users/DaanVanVugt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DaanVanVugt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-09T15:25:31Z",
        "updated_at": "2017-11-09T15:25:31Z",
        "author_association": "NONE",
        "body": "@mrocklin I took your hdf5lazy approach a bit further by wrapping all h5py objects to support `__{set,get}state__` and to remember how we opened the file (especially mode is important).\r\nAn LRU cache is also implemented. This allows me to replace `import h5py` with `import h5pickle as h5py` and have working serialization in the dask distributed scheduler.\r\n\r\nSee the code at https://github.com/Exteris/h5pickle\r\n\r\nThis works very well for me in dask. Would you mind taking a look at the code? Perhaps this could be useful in distributed.\r\n\r\nps. Thanks for making dask so awesome",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/343188749/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/343811150",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-343811150",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 343811150,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzgxMTE1MA==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-13T04:43:28Z",
        "updated_at": "2017-11-13T04:43:28Z",
        "author_association": "MEMBER",
        "body": "@Exteris Nice, that looks pretty handy! It might be worth a call-out in the dask docs somewhere.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/343811150/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/597605487",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-597605487",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 597605487,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzYwNTQ4Nw==",
        "user": {
            "login": "vigji",
            "id": 10400212,
            "node_id": "MDQ6VXNlcjEwNDAwMjEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10400212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vigji",
            "html_url": "https://github.com/vigji",
            "followers_url": "https://api.github.com/users/vigji/followers",
            "following_url": "https://api.github.com/users/vigji/following{/other_user}",
            "gists_url": "https://api.github.com/users/vigji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vigji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vigji/subscriptions",
            "organizations_url": "https://api.github.com/users/vigji/orgs",
            "repos_url": "https://api.github.com/users/vigji/repos",
            "events_url": "https://api.github.com/users/vigji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vigji/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-11T12:30:30Z",
        "updated_at": "2020-03-11T12:30:30Z",
        "author_association": "NONE",
        "body": "I write here as I encountered the problem of too many .h5 files opened when creating a task array in the following way:\r\n```\r\ndsets = [h5py.File(f, mode='r')['/stack_4D'] for f in\r\n                             sorted(list(f.glob(\"*.h5\")))]\r\narrays = [da.from_array(dset) for dset in dsets]\r\ndata = da.concatenate(arrays, axis=0)\r\n```\r\n\r\nIs there now a solution for this problem? Or any hack someone can recommend?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/597605487/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/597607680",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-597607680",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 597607680,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzYwNzY4MA==",
        "user": {
            "login": "DaanVanVugt",
            "id": 35944,
            "node_id": "MDQ6VXNlcjM1OTQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DaanVanVugt",
            "html_url": "https://github.com/DaanVanVugt",
            "followers_url": "https://api.github.com/users/DaanVanVugt/followers",
            "following_url": "https://api.github.com/users/DaanVanVugt/following{/other_user}",
            "gists_url": "https://api.github.com/users/DaanVanVugt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DaanVanVugt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DaanVanVugt/subscriptions",
            "organizations_url": "https://api.github.com/users/DaanVanVugt/orgs",
            "repos_url": "https://api.github.com/users/DaanVanVugt/repos",
            "events_url": "https://api.github.com/users/DaanVanVugt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DaanVanVugt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-11T12:36:07Z",
        "updated_at": "2020-03-11T12:36:07Z",
        "author_association": "NONE",
        "body": "@vigji can you provide us with the error message? It might be as simple as increasing the number of open file descriptors you can have. You can see the current limits with\r\n`ulimit -Hn` and `ulimit -Sn` for hard and soft limits. If one of these numbers is close to the number of files you have you could try increasing it. See https://www.tecmint.com/increase-set-open-file-limits-in-linux/",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/597607680/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/597657007",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-597657007",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 597657007,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzY1NzAwNw==",
        "user": {
            "login": "vigji",
            "id": 10400212,
            "node_id": "MDQ6VXNlcjEwNDAwMjEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10400212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vigji",
            "html_url": "https://github.com/vigji",
            "followers_url": "https://api.github.com/users/vigji/followers",
            "following_url": "https://api.github.com/users/vigji/following{/other_user}",
            "gists_url": "https://api.github.com/users/vigji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vigji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vigji/subscriptions",
            "organizations_url": "https://api.github.com/users/vigji/orgs",
            "repos_url": "https://api.github.com/users/vigji/repos",
            "events_url": "https://api.github.com/users/vigji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vigji/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-11T14:10:51Z",
        "updated_at": "2020-03-11T14:10:51Z",
        "author_association": "NONE",
        "body": "Thanks, now I managed to make it working by changing the OS limits. Still wondering whether there's a cleaner option!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/597657007/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/597693861",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-597693861",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 597693861,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzY5Mzg2MQ==",
        "user": {
            "login": "DaanVanVugt",
            "id": 35944,
            "node_id": "MDQ6VXNlcjM1OTQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DaanVanVugt",
            "html_url": "https://github.com/DaanVanVugt",
            "followers_url": "https://api.github.com/users/DaanVanVugt/followers",
            "following_url": "https://api.github.com/users/DaanVanVugt/following{/other_user}",
            "gists_url": "https://api.github.com/users/DaanVanVugt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DaanVanVugt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DaanVanVugt/subscriptions",
            "organizations_url": "https://api.github.com/users/DaanVanVugt/orgs",
            "repos_url": "https://api.github.com/users/DaanVanVugt/repos",
            "events_url": "https://api.github.com/users/DaanVanVugt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DaanVanVugt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-11T15:17:19Z",
        "updated_at": "2020-03-11T15:17:19Z",
        "author_association": "NONE",
        "body": "There is no way to open more files than the OS allows (but the default limit can be too low for some applications as you see now). It is not so bad to change this as necessary.\r\n\r\nInstead of concatenating the files manually you could also use the dask function for this: https://docs.dask.org/en/latest/dataframe-api.html#dask.dataframe.read_hdf",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/597693861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/597719649",
        "html_url": "https://github.com/dask/dask/issues/922#issuecomment-597719649",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/922",
        "id": 597719649,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzcxOTY0OQ==",
        "user": {
            "login": "vigji",
            "id": 10400212,
            "node_id": "MDQ6VXNlcjEwNDAwMjEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10400212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vigji",
            "html_url": "https://github.com/vigji",
            "followers_url": "https://api.github.com/users/vigji/followers",
            "following_url": "https://api.github.com/users/vigji/following{/other_user}",
            "gists_url": "https://api.github.com/users/vigji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vigji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vigji/subscriptions",
            "organizations_url": "https://api.github.com/users/vigji/orgs",
            "repos_url": "https://api.github.com/users/vigji/repos",
            "events_url": "https://api.github.com/users/vigji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vigji/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-11T16:02:26Z",
        "updated_at": "2020-03-11T16:02:26Z",
        "author_association": "NONE",
        "body": "Thanks a lot!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/597719649/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]