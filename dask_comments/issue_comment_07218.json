[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/779301458",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-779301458",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 779301458,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTMwMTQ1OA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-15T15:40:25Z",
        "updated_at": "2021-02-15T15:40:25Z",
        "author_association": "MEMBER",
        "body": "I agree that setting the name doesn't make much sense.  Historically we've\navoided making properties for things like this, mostly for simplicity's\nsake.  It hasn't bitten us yet as far as I'm aware.\n\nOn Mon, Feb 15, 2021 at 9:34 AM Julia Signell <notifications@github.com>\nwrote:\n\n> I am wondering whether dask.Array.name should be a settable property.\n> Given the relationship between the task graph and name, it feels like name\n> is a special property that should be protected.\n>\n> Consider the following case:\n>\n> import numpy as npimport dask.array as da\n> darr = da.from_array(np.arange(1, 10))darr.name = \"foo\"darr.compute()\n>\n> Output\n>\n> ---------------------------------------------------------------------------\n> KeyError                                  Traceback (most recent call last)\n> <ipython-input-2-0163ab538b86> in <module>\n>       5 print(darr.name)\n>       6 darr.name = \"foo\"\n> ----> 7 darr.compute()\n>\n> ~/dask/dask/base.py in compute(self, **kwargs)\n>     280         dask.base.compute\n>     281         \"\"\"\n> --> 282         (result,) = compute(self, traverse=False, **kwargs)\n>     283         return result\n>     284\n>\n> ~/dask/dask/base.py in compute(*args, **kwargs)\n>     562         postcomputes.append(x.__dask_postcompute__())\n>     563\n> --> 564     results = schedule(dsk, keys, **kwargs)\n>     565     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\n>     566\n>\n> ~/dask/dask/threaded.py in get(dsk, result, cache, num_workers, pool, **kwargs)\n>      74                 pools[thread][num_workers] = pool\n>      75\n> ---> 76     results = get_async(\n>      77         pool.apply_async,\n>      78         len(pool._pool),\n>\n> ~/dask/dask/local.py in get_async(apply_async, num_workers, dsk, result, cache, get_id, rerun_exceptions_locally, pack_exception, raise_exception, callbacks, dumps, loads, **kwargs)\n>     502                     finish(dsk, state, not succeeded)\n>     503\n> --> 504     return nested_get(result, state[\"cache\"])\n>     505\n>     506\n>\n> ~/dask/dask/local.py in nested_get(ind, coll)\n>     298     \"\"\"\n>     299     if isinstance(ind, list):\n> --> 300         return tuple([nested_get(i, coll) for i in ind])\n>     301     else:\n>     302         return coll[ind]\n>\n> ~/dask/dask/local.py in <listcomp>(.0)\n>     298     \"\"\"\n>     299     if isinstance(ind, list):\n> --> 300         return tuple([nested_get(i, coll) for i in ind])\n>     301     else:\n>     302         return coll[ind]\n>\n> ~/dask/dask/local.py in nested_get(ind, coll)\n>     298     \"\"\"\n>     299     if isinstance(ind, list):\n> --> 300         return tuple([nested_get(i, coll) for i in ind])\n>     301     else:\n>     302         return coll[ind]\n>\n> ~/dask/dask/local.py in <listcomp>(.0)\n>     298     \"\"\"\n>     299     if isinstance(ind, list):\n> --> 300         return tuple([nested_get(i, coll) for i in ind])\n>     301     else:\n>     302         return coll[ind]\n>\n> ~/dask/dask/local.py in nested_get(ind, coll)\n>     300         return tuple([nested_get(i, coll) for i in ind])\n>     301     else:\n> --> 302         return coll[ind]\n>     303\n>     304\n> KeyError: ('foo', 0)\n>\n> This is an especially confusing behavior since other libraries (like\n> xarray and pandas) use name in a much more user-facing way (xref #7209\n> <https://github.com/dask/dask/issues/7209>)\n>\n> *Proposal*\n> If I am right in my understanding that name is intentionally tied to the\n> task graph, then I think the setter for name should be made to raise an\n> error, and downstream libraries should use self._name instead.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/7218>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AACKZTFDUN2XPPBEF2WXOZDS7E5JVANCNFSM4XU4G3OA>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/779301458/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/779308960",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-779308960",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 779308960,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTMwODk2MA==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-15T15:52:06Z",
        "updated_at": "2021-02-15T15:52:06Z",
        "author_association": "MEMBER",
        "body": "To be clear `name` is already a property. I am mostly worried that downstream libraries will have to change from setting it using `.name` to `._name`, but it's not clear to me how common it is for downstream libraries set `name` anyways. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/779308960/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/779341046",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-779341046",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 779341046,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTM0MTA0Ng==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-15T16:47:40Z",
        "updated_at": "2021-02-15T16:47:40Z",
        "author_association": "MEMBER",
        "body": "Ah.  I see now that this is new for the recent work with setitem.  I would\nbe curious to learn which downstream libraries are setting name and why.  I\nsaw an issue with Xarray go by recently.  I'll go and take another look at\nthat.\n\nIn general we probably should have named this `._name` to signal that users\nshouldn't touch this directly\n\nOn Mon, Feb 15, 2021 at 9:52 AM Julia Signell <notifications@github.com>\nwrote:\n\n> To be clear name is already a property. I am mostly worried that\n> downstream libraries will have to change from setting it using .name to\n> ._name, but it's not clear to me how common it is for downstream\n> libraries set name anyways.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/7218#issuecomment-779308960>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AACKZTGTGCNMG6UGZLLDCR3S7E7LPANCNFSM4XU4G3OA>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/779341046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/779376522",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-779376522",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 779376522,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTM3NjUyMg==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-15T17:58:58Z",
        "updated_at": "2021-02-15T17:58:58Z",
        "author_association": "MEMBER",
        "body": "Right. Ok I will open a PR to raise when `name` is set directly.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/779376522/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/782745786",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-782745786",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 782745786,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4Mjc0NTc4Ng==",
        "user": {
            "login": "allefeld",
            "id": 1738353,
            "node_id": "MDQ6VXNlcjE3MzgzNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1738353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/allefeld",
            "html_url": "https://github.com/allefeld",
            "followers_url": "https://api.github.com/users/allefeld/followers",
            "following_url": "https://api.github.com/users/allefeld/following{/other_user}",
            "gists_url": "https://api.github.com/users/allefeld/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/allefeld/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/allefeld/subscriptions",
            "organizations_url": "https://api.github.com/users/allefeld/orgs",
            "repos_url": "https://api.github.com/users/allefeld/repos",
            "events_url": "https://api.github.com/users/allefeld/events{/privacy}",
            "received_events_url": "https://api.github.com/users/allefeld/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-20T20:36:26Z",
        "updated_at": "2021-02-20T20:37:15Z",
        "author_association": "NONE",
        "body": "I found this issue when trying to debug my code. There are a few functions that allow to set the name in array creation, e.g. `from_array` and `map_blocks`, and this makes it easier to read the task stream and progress parts of the dashboard. The normal task names, e.g. `p-sum-sum-sum-aggregate`, are hard to map onto one's code.\r\n\r\nI found that the name is stored in the `name` attribute, and tried to set it explicitly on intermediate arrays, `a.name = 'myname'`, which however makes `compute` and `persist` fail.\r\n\r\nWould it be possible to allow setting names on arbitrary Dask arrays, i.e. intermediate results, without breaking `compute` and `persist`? If not by directly setting the attribute, then e.g. by a `set_name` method, or allowing `from_array` to work on Dask arrays?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/782745786/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/782885613",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-782885613",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 782885613,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4Mjg4NTYxMw==",
        "user": {
            "login": "dcherian",
            "id": 2448579,
            "node_id": "MDQ6VXNlcjI0NDg1Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2448579?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcherian",
            "html_url": "https://github.com/dcherian",
            "followers_url": "https://api.github.com/users/dcherian/followers",
            "following_url": "https://api.github.com/users/dcherian/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcherian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcherian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcherian/subscriptions",
            "organizations_url": "https://api.github.com/users/dcherian/orgs",
            "repos_url": "https://api.github.com/users/dcherian/repos",
            "events_url": "https://api.github.com/users/dcherian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcherian/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-21T16:36:07Z",
        "updated_at": "2021-02-21T16:36:07Z",
        "author_association": "MEMBER",
        "body": "Maybe a `rename` function?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/782885613/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/783724035",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-783724035",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 783724035,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzcyNDAzNQ==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-22T22:32:41Z",
        "updated_at": "2021-02-22T22:32:41Z",
        "author_association": "MEMBER",
        "body": "> Would it be possible to allow setting names on arbitrary Dask arrays, i.e. intermediate results, without breaking `compute` and `persist`? \r\n\r\nThe functions that you list are creating an array from scratch so it makes sense to set the name there. In intermediate arrays I don't know that there is a strong motivation to do the kind of task graph editing that this would require.\r\n\r\nI am wondering why you are interested in setting the name. Dask arrays should be thought of as similar to numpy arrays and numpy arrays don't have a name attribute at all. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/783724035/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/783748029",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-783748029",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 783748029,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4Mzc0ODAyOQ==",
        "user": {
            "login": "allefeld",
            "id": 1738353,
            "node_id": "MDQ6VXNlcjE3MzgzNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1738353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/allefeld",
            "html_url": "https://github.com/allefeld",
            "followers_url": "https://api.github.com/users/allefeld/followers",
            "following_url": "https://api.github.com/users/allefeld/following{/other_user}",
            "gists_url": "https://api.github.com/users/allefeld/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/allefeld/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/allefeld/subscriptions",
            "organizations_url": "https://api.github.com/users/allefeld/orgs",
            "repos_url": "https://api.github.com/users/allefeld/repos",
            "events_url": "https://api.github.com/users/allefeld/events{/privacy}",
            "received_events_url": "https://api.github.com/users/allefeld/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-22T23:18:37Z",
        "updated_at": "2021-02-22T23:18:37Z",
        "author_association": "NONE",
        "body": "> I am wondering why you are interested in setting the name\r\n\r\nHaving user-defined names makes it easier to read the task stream and progress parts of the dashboard. The normal task names, e.g. `sum-sum-sum-aggregate`-*hash*, are hard to map onto one's code. Without such a mapping, the dashboard is nice to look at, but doesn't provide a lot of insight.\r\n\r\nWhat I have done before is to print the names from the code, e.g. for a Dask array `a`:\r\n````python\r\nprint('a:', a.name)\r\n````\r\nbut that's tedious and error-prone.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/783748029/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/785176685",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-785176685",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 785176685,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTE3NjY4NQ==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-24T15:55:49Z",
        "updated_at": "2021-02-24T15:55:49Z",
        "author_association": "MEMBER",
        "body": "Thanks for the additional context @allefeld. It makes sense to me that since the name is user-facing in the context of the dashboard, you'd want to make it more readable. I think this PR is still a good idea since it makes the current behavior clearer and protects users from getting into confusing states. Going forward there are two paths that we could take:\r\n\r\n 1. Allow `name` to be settable or provide a `rename` function and do the proper graph manipulation to update existing graphs with the new name. Ping @crusaderky since you've been working with graph manipulation.\r\n 2. Add `name` kwarg to more dask collection creation methods. This wouldn't require any graph manipulation and would let users control the name before the graph is constructed. \r\n \r\nDownside with both these options: `name` would still have to be unique and the burden would fall on the user to know that. \r\n\r\nPing @dask/maintenance for opinions",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/785176685/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/785179343",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-785179343",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 785179343,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTE3OTM0Mw==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-24T15:59:39Z",
        "updated_at": "2021-02-24T15:59:39Z",
        "author_association": "MEMBER",
        "body": "(same arguments could be made for any dask collection; only xarrays have a concept of name, and even there it's unclear)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/785179343/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/785377025",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-785377025",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 785377025,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTM3NzAyNQ==",
        "user": {
            "login": "allefeld",
            "id": 1738353,
            "node_id": "MDQ6VXNlcjE3MzgzNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1738353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/allefeld",
            "html_url": "https://github.com/allefeld",
            "followers_url": "https://api.github.com/users/allefeld/followers",
            "following_url": "https://api.github.com/users/allefeld/following{/other_user}",
            "gists_url": "https://api.github.com/users/allefeld/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/allefeld/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/allefeld/subscriptions",
            "organizations_url": "https://api.github.com/users/allefeld/orgs",
            "repos_url": "https://api.github.com/users/allefeld/repos",
            "events_url": "https://api.github.com/users/allefeld/events{/privacy}",
            "received_events_url": "https://api.github.com/users/allefeld/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-24T20:53:29Z",
        "updated_at": "2021-02-24T20:53:29Z",
        "author_association": "NONE",
        "body": "> Downside with both these options: `name` would still have to be unique and the burden would fall on the user to know that.\r\n\r\nThe current names seem to include some kind of hash. Couldn't such a hash be appended to user-specified names?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/785377025/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/785402687",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-785402687",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 785402687,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTQwMjY4Nw==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-24T21:40:32Z",
        "updated_at": "2021-02-24T21:40:32Z",
        "author_association": "MEMBER",
        "body": "> The current names seem to include some kind of hash. Couldn't such a hash be appended to user-specified names?\r\n\r\nThis proposal sounds like creating a new attribute on dask collections (maybe called `key`) that is a unique identifier and is what is used in the task-graph and then having a separate attribute (`name`) that is user-settable and is what is used in visualizations. Some downsides: what if multiple collections in a graph have the same `name`, how will they be distinguishable?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/785402687/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/785496081",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-785496081",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 785496081,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTQ5NjA4MQ==",
        "user": {
            "login": "allefeld",
            "id": 1738353,
            "node_id": "MDQ6VXNlcjE3MzgzNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1738353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/allefeld",
            "html_url": "https://github.com/allefeld",
            "followers_url": "https://api.github.com/users/allefeld/followers",
            "following_url": "https://api.github.com/users/allefeld/following{/other_user}",
            "gists_url": "https://api.github.com/users/allefeld/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/allefeld/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/allefeld/subscriptions",
            "organizations_url": "https://api.github.com/users/allefeld/orgs",
            "repos_url": "https://api.github.com/users/allefeld/repos",
            "events_url": "https://api.github.com/users/allefeld/events{/privacy}",
            "received_events_url": "https://api.github.com/users/allefeld/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-25T00:55:13Z",
        "updated_at": "2021-02-25T00:55:21Z",
        "author_association": "NONE",
        "body": "> Some downsides: what if multiple collections in a graph have the same `name`, how will they be distinguishable?\r\n\r\nMaybe I'm missing something \u2013 but since this feature would be to assist the user in getting insight into the computation, it would be up to the user to choose distinct names.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/785496081/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/785828960",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-785828960",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 785828960,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTgyODk2MA==",
        "user": {
            "login": "crusaderky",
            "id": 6213168,
            "node_id": "MDQ6VXNlcjYyMTMxNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6213168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crusaderky",
            "html_url": "https://github.com/crusaderky",
            "followers_url": "https://api.github.com/users/crusaderky/followers",
            "following_url": "https://api.github.com/users/crusaderky/following{/other_user}",
            "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions",
            "organizations_url": "https://api.github.com/users/crusaderky/orgs",
            "repos_url": "https://api.github.com/users/crusaderky/repos",
            "events_url": "https://api.github.com/users/crusaderky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crusaderky/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-25T11:32:11Z",
        "updated_at": "2021-02-25T11:39:35Z",
        "author_association": "MEMBER",
        "body": "it makes sense to have both a .rename() read-only method and a .name settable property. They would both create a new Blockwise layer in the dask graph.\r\n\r\n> Some downsides: what if multiple collections in a graph have the same name, how will they be distinguishable?\r\n\r\nThen you'll get key collisions and everything will fall apart. This is always the case when you let the user manually set dask keys. There are precedents for this, namely with Delayed objects.\r\n\r\nTo improve usability and avoid accidental collisions for all those users that just want a prettier output in the dask GUI and profiling reports, may I suggest this API:\r\n\r\n```python\r\n\r\n@overload\r\ndef rename(self, *, prefix: str): ...\r\n\r\n@overload\r\ndef rename(self, name: str): ...\r\n\r\ndef rename(self, name: str = None, *, prefix: str = None):\r\n    if prefix:\r\n        if name:\r\n            raise TypeError(\"name and prefix are mutually exclusive\")\r\n        name = prefix + \"-\" + tokenize(self)\r\n    elif not name:\r\n        raise TypeError(\"must provide either name or prefix\")\r\n\r\n    out = self.copy()\r\n    out.name = name\r\n    return out\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/785828960/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/785940741",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-785940741",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 785940741,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTk0MDc0MQ==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-25T14:36:51Z",
        "updated_at": "2021-02-25T14:36:51Z",
        "author_association": "MEMBER",
        "body": "> They would both create a new Blockwise layer in the dask graph.\r\n\r\nYou mean they wouldn't edit the task graph, they'd just add a layer to edit the graph?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/785940741/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/786134539",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-786134539",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 786134539,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjEzNDUzOQ==",
        "user": {
            "login": "crusaderky",
            "id": 6213168,
            "node_id": "MDQ6VXNlcjYyMTMxNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6213168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crusaderky",
            "html_url": "https://github.com/crusaderky",
            "followers_url": "https://api.github.com/users/crusaderky/followers",
            "following_url": "https://api.github.com/users/crusaderky/following{/other_user}",
            "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions",
            "organizations_url": "https://api.github.com/users/crusaderky/orgs",
            "repos_url": "https://api.github.com/users/crusaderky/repos",
            "events_url": "https://api.github.com/users/crusaderky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crusaderky/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-25T19:09:00Z",
        "updated_at": "2021-02-25T19:09:00Z",
        "author_association": "MEMBER",
        "body": "@jsignell you can either replace the topmost layer or add a new one on top. I prefer the former for obvious performance reasons",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/786134539/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/800250768",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-800250768",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 800250768,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDI1MDc2OA==",
        "user": {
            "login": "bmerry",
            "id": 1963944,
            "node_id": "MDQ6VXNlcjE5NjM5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1963944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmerry",
            "html_url": "https://github.com/bmerry",
            "followers_url": "https://api.github.com/users/bmerry/followers",
            "following_url": "https://api.github.com/users/bmerry/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions",
            "organizations_url": "https://api.github.com/users/bmerry/orgs",
            "repos_url": "https://api.github.com/users/bmerry/repos",
            "events_url": "https://api.github.com/users/bmerry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmerry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-16T13:18:48Z",
        "updated_at": "2021-03-16T13:18:48Z",
        "author_association": "MEMBER",
        "body": "> Ah.  I see now that this is new for the recent work with setitem.  I would\r\nbe curious to learn which downstream libraries are setting name and why.\r\n\r\nI have some code that rewrites the name of an array in place (including renaming all the keys of the graph). This is done if the data underlying the bottom-most levels of the graph is modified, to ensure that any sort of caching of intermediate blocks is invalidated. So I am now using the escape hatch of assigning to `_name`.\r\n\r\nI realise that it would be cleaner to return a new Array instead of modifying it in place, but in my case it would have been difficult to find all the places that held references to the original Array to ensure that they're updated.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/800250768/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/800313489",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-800313489",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 800313489,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDMxMzQ4OQ==",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-16T14:36:24Z",
        "updated_at": "2021-03-16T14:36:24Z",
        "author_association": "MEMBER",
        "body": "Good to know, thanks @bmerry. Hopefully the move to `_name` didn't disrupt things too much for you ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/800313489/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/800317017",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-800317017",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 800317017,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDMxNzAxNw==",
        "user": {
            "login": "bmerry",
            "id": 1963944,
            "node_id": "MDQ6VXNlcjE5NjM5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1963944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmerry",
            "html_url": "https://github.com/bmerry",
            "followers_url": "https://api.github.com/users/bmerry/followers",
            "following_url": "https://api.github.com/users/bmerry/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions",
            "organizations_url": "https://api.github.com/users/bmerry/orgs",
            "repos_url": "https://api.github.com/users/bmerry/repos",
            "events_url": "https://api.github.com/users/bmerry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmerry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-16T14:40:20Z",
        "updated_at": "2021-03-16T14:40:20Z",
        "author_association": "MEMBER",
        "body": "> Hopefully the move to _name didn't disrupt things too much for you\r\n\r\nNah, just a couple of lines of change. We religiously pin dependencies so the disruption was controlled. I brought it up mostly so that you're aware that the escape hatch is being used.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/800317017/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/827996975",
        "html_url": "https://github.com/dask/dask/issues/7218#issuecomment-827996975",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7218",
        "id": 827996975,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNzk5Njk3NQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-27T22:46:37Z",
        "updated_at": "2021-04-27T22:46:37Z",
        "author_association": "MEMBER",
        "body": "> I realise that it would be cleaner to return a new Array instead of modifying it in place\r\n\r\nI think that is the intended usage actually. It's interesting to learn that there are use cases changing the name on existing Array as opposed to building a new one.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/827996975/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]