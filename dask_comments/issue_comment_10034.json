[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1489378015",
        "html_url": "https://github.com/dask/dask/issues/10034#issuecomment-1489378015",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10034",
        "id": 1489378015,
        "node_id": "IC_kwDOAbcwm85Yxhrf",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-29T21:53:19Z",
        "updated_at": "2023-03-29T21:53:19Z",
        "author_association": "MEMBER",
        "body": "Just to share/check my understanding: The central problem here is that the `partd` shuffle is not \"stable\" in the sense that it does not preserve the global ordering between two rows with the same grouping key. This is usually fine for a shuffle operation, but is an obvious problem for special cases like `\"first\"`.  You will also run into problems with `ddf.groupby('dup_strings').aggregate('first', split_out=2, shuffle=\"disk\")`.\r\n\r\nSince \"tasks\" and \"p2p\" are both stable, perhaps we should just expose the `shuffle` argument in `transform` (just as it is already exposed in `aggregate`). We could then avoid using `shuffle=\"disk\"` as the default, and could then document the dangers of using `shuffle=\"disk\"` in the `aggregate` and `transform` doc-strings. Does that seem reasonable?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1489378015/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1490120709",
        "html_url": "https://github.com/dask/dask/issues/10034#issuecomment-1490120709",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10034",
        "id": 1490120709,
        "node_id": "IC_kwDOAbcwm85Y0XAF",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-30T11:13:59Z",
        "updated_at": "2023-03-30T11:13:59Z",
        "author_association": "MEMBER",
        "body": "I haven't investigated this issue more deeply. What you say sounds perfectly reasonable. however, I would still expect an \"unstable\" (sorting) algorithm to be deterministic, i.e. given the same input produce the same output every time.\r\n\r\nIn terms of deprecating disk, I'm OK with this but do honestly not know how we reach a robust decision. We don't have any reference benchmarks for this, just anecdotal evidence that partd is actually not performing that well, see https://github.com/dask/distributed/issues/5502, https://github.com/dask/distributed/issues/5554 also interesting https://github.com/dask/dask/issues/9996",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1490120709/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]