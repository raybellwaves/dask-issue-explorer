{
    "url": "https://api.github.com/repos/dask/dask/issues/5059",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/5059/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/5059/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/5059/events",
    "html_url": "https://github.com/dask/dask/issues/5059",
    "id": 463754510,
    "node_id": "MDU6SXNzdWU0NjM3NTQ1MTA=",
    "number": 5059,
    "title": "Expand not working when spliting string column",
    "user": {
        "login": "avlahop",
        "id": 3893010,
        "node_id": "MDQ6VXNlcjM4OTMwMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3893010?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/avlahop",
        "html_url": "https://github.com/avlahop",
        "followers_url": "https://api.github.com/users/avlahop/followers",
        "following_url": "https://api.github.com/users/avlahop/following{/other_user}",
        "gists_url": "https://api.github.com/users/avlahop/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/avlahop/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/avlahop/subscriptions",
        "organizations_url": "https://api.github.com/users/avlahop/orgs",
        "repos_url": "https://api.github.com/users/avlahop/repos",
        "events_url": "https://api.github.com/users/avlahop/events{/privacy}",
        "received_events_url": "https://api.github.com/users/avlahop/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 17,
    "created_at": "2019-07-03T13:30:24Z",
    "updated_at": "2020-09-02T13:03:36Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Trying to split a string column using a delimiter raises exception. Here is a minimal example:\r\n\r\n```python\r\ndf = pd.DataFrame({'channel_hash': ['1&2&3']})\r\nddf = dd.from_pandas(df, npartitions=1)\r\nddf.channel_hash.str.split('&', expand=True, n=3)\r\n```\r\nThis fails with the following exception:\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-98-fe4c812d7362> in <module>\r\n----> 1 ddf.channel_hash.str.split(pat='&', expand=True, n=3).compute()\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/dask/base.py in compute(self, **kwargs)\r\n    173         dask.base.compute\r\n    174         \"\"\"\r\n--> 175         (result,) = compute(self, traverse=False, **kwargs)\r\n    176         return result\r\n    177 \r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/dask/base.py in compute(*args, **kwargs)\r\n    444     keys = [x.__dask_keys__() for x in collections]\r\n    445     postcomputes = [x.__dask_postcompute__() for x in collections]\r\n--> 446     results = schedule(dsk, keys, **kwargs)\r\n    447     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    448 \r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/distributed/client.py in get(self, dsk, keys, restrictions, loose_restrictions, resources, sync, asynchronous, direct, retries, priority, fifo_timeout, actors, **kwargs)\r\n   2508                     should_rejoin = False\r\n   2509             try:\r\n-> 2510                 results = self.gather(packed, asynchronous=asynchronous, direct=direct)\r\n   2511             finally:\r\n   2512                 for f in futures.values():\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/distributed/client.py in gather(self, futures, errors, direct, asynchronous)\r\n   1799                 direct=direct,\r\n   1800                 local_worker=local_worker,\r\n-> 1801                 asynchronous=asynchronous,\r\n   1802             )\r\n   1803 \r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/distributed/client.py in sync(self, func, *args, **kwargs)\r\n    762             return future\r\n    763         else:\r\n--> 764             return sync(self.loop, func, *args, **kwargs)\r\n    765 \r\n    766     def __repr__(self):\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/distributed/utils.py in sync(loop, func, *args, **kwargs)\r\n    329             e.wait(10)\r\n    330     if error[0]:\r\n--> 331         six.reraise(*error[0])\r\n    332     else:\r\n    333         return result[0]\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/six.py in reraise(tp, value, tb)\r\n    691             if value.__traceback__ is not tb:\r\n    692                 raise value.with_traceback(tb)\r\n--> 693             raise value\r\n    694         finally:\r\n    695             value = None\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/distributed/utils.py in f()\r\n    314             if timeout is not None:\r\n    315                 future = gen.with_timeout(timedelta(seconds=timeout), future)\r\n--> 316             result[0] = yield future\r\n    317         except Exception as exc:\r\n    318             error[0] = sys.exc_info()\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/tornado/gen.py in run(self)\r\n   1131 \r\n   1132                     try:\r\n-> 1133                         value = future.result()\r\n   1134                     except Exception:\r\n   1135                         self.had_exception = True\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/tornado/gen.py in run(self)\r\n   1139                     if exc_info is not None:\r\n   1140                         try:\r\n-> 1141                             yielded = self.gen.throw(*exc_info)\r\n   1142                         finally:\r\n   1143                             # Break up a reference to itself\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/distributed/client.py in _gather(self, futures, errors, direct, local_worker)\r\n   1656                             exc = CancelledError(key)\r\n   1657                         else:\r\n-> 1658                             six.reraise(type(exception), exception, traceback)\r\n   1659                         raise exc\r\n   1660                     if errors == \"skip\":\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/six.py in reraise(tp, value, tb)\r\n    690                 value = tp()\r\n    691             if value.__traceback__ is not tb:\r\n--> 692                 raise value.with_traceback(tb)\r\n    693             raise value\r\n    694         finally:\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/dask/optimization.py in __call__()\r\n   1057         if not len(args) == len(self.inkeys):\r\n   1058             raise ValueError(\"Expected %d args, got %d\" % (len(self.inkeys), len(args)))\r\n-> 1059         return core.get(self.dsk, self.outkey, dict(zip(self.inkeys, args)))\r\n   1060 \r\n   1061     def __reduce__(self):\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/dask/core.py in get()\r\n    147     for key in toposort(dsk):\r\n    148         task = dsk[key]\r\n--> 149         result = _execute_task(task, cache)\r\n    150         cache[key] = result\r\n    151     result = _execute_task(out, cache)\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/dask/core.py in _execute_task()\r\n    117         func, args = arg[0], arg[1:]\r\n    118         args2 = [_execute_task(a, cache) for a in args]\r\n--> 119         return func(*args2)\r\n    120     elif not ishashable(arg):\r\n    121         return arg\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/dask/compatibility.py in apply()\r\n    105     def apply(func, args, kwargs=None):\r\n    106         if kwargs:\r\n--> 107             return func(*args, **kwargs)\r\n    108         else:\r\n    109             return func(*args)\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/dask/dataframe/core.py in apply_and_enforce()\r\n   4780             ):\r\n   4781                 raise ValueError(\r\n-> 4782                     \"The columns in the computed data do not match\"\r\n   4783                     \" the columns in the provided metadata\"\r\n   4784                 )\r\n\r\nValueError: The columns in the computed data do not match the columns in the provided metadata\r\n```\r\n\r\nTried splitting without expansion but still raises the following exception:\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nUnboundLocalError                         Traceback (most recent call last)\r\n<ipython-input-99-a5b359767346> in <module>\r\n----> 1 ddf.channel_hash.str.split(pat='&' ).compute()\r\n\r\n~/virtualenvs/statistics3/lib/python3.6/site-packages/dask/dataframe/accessor.py in split(self, pat, n, expand)\r\n    148                 meta = type(self._series._meta)([\" \".join([\"a\"] * 2 * n)])\r\n    149                 meta = meta.str.split(n=n, expand=expand, pat=pat)\r\n--> 150         return self._function_map(\"split\", pat=pat, n=n, expand=expand, meta=meta)\r\n    151 \r\n    152     @derived_from(pd.core.strings.StringMethods)\r\n\r\nUnboundLocalError: local variable 'meta' referenced before assignment\r\n```\r\n\r\nPython version: 3.6.8\r\nDask-version:    2.0.0",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/5059/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/5059/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}