[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/893726364",
        "html_url": "https://github.com/dask/dask/issues/8001#issuecomment-893726364",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8001",
        "id": 893726364,
        "node_id": "IC_kwDOAbcwm841RS6c",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-05T19:27:56Z",
        "updated_at": "2021-08-05T19:27:56Z",
        "author_association": "MEMBER",
        "body": "That's a really interesting idea @raybellwaves - I like the idea of introducing these kinds of guardrails and suggestions into the codebase (as long as we don't go overboard :) ). I'm wondering how this will work though. After looking at the code for a bit I am actually wondering if it might make sense to default `split_out` to the same `npartitions` as the original df. The `split_out=1` default seems like a bit of a gotcha.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/893726364/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/894801957",
        "html_url": "https://github.com/dask/dask/issues/8001#issuecomment-894801957",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8001",
        "id": 894801957,
        "node_id": "IC_kwDOAbcwm841VZgl",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-08T13:58:34Z",
        "updated_at": "2021-08-08T13:58:34Z",
        "author_association": "MEMBER",
        "body": ">  I am actually wondering if it might make sense to default split_out to the same npartitions as the original df. The split_out=1 default seems like a bit of a gotcha.\r\n\r\nIn the common case split_out=1 makes sense for groupby-aggregations.  There are usually a small number of groups (where \"small\" means less than ten million) and so we want a single output partition.  Split_out is computationally decently expensive.  It requires something like a mini-shuffle in order to achieve. \r\n\r\nI agree that informative error messages would be good.  If we knew the values of the data ahead of time then this is something that we would definitely do, but as things stand we only know about this situation once we're in the middle of a computation. Maybe we can emit such a message during computation in the intermediate steps, but this is going to be more awkward and less effective than in something like Client.scatter (where we know the answer much closer to client code).  \r\n\r\nI think in general the answer to this is :+1: full support, but it's not clear how best to accomplish it, so if anyone wants to get their hands dirty and investigate that would be welcome.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/894801957/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/897815444",
        "html_url": "https://github.com/dask/dask/issues/8001#issuecomment-897815444",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8001",
        "id": 897815444,
        "node_id": "IC_kwDOAbcwm841g5OU",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-12T17:12:40Z",
        "updated_at": "2021-08-12T17:12:40Z",
        "author_association": "MEMBER",
        "body": "Yeah that makes sense. I think as a first step we could template in docstrings for `split_out` wherever it's allowed. As of right now `split_out` is not listed in the params for the groupby aggreagtion methods. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/897815444/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/899814009",
        "html_url": "https://github.com/dask/dask/issues/8001#issuecomment-899814009",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8001",
        "id": 899814009,
        "node_id": "IC_kwDOAbcwm841ohJ5",
        "user": {
            "login": "gjoseph92",
            "id": 3309802,
            "node_id": "MDQ6VXNlcjMzMDk4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjoseph92",
            "html_url": "https://github.com/gjoseph92",
            "followers_url": "https://api.github.com/users/gjoseph92/followers",
            "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
            "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
            "repos_url": "https://api.github.com/users/gjoseph92/repos",
            "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-16T20:59:22Z",
        "updated_at": "2021-08-16T20:59:22Z",
        "author_association": "MEMBER",
        "body": "https://github.com/dask/distributed/pull/5220 could make it easier to send a warning back to users at runtime. Yes, it would be nice to know at call time, but getting a warning at compute time would still be far more helpful than no warning at all!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/899814009/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/900369463",
        "html_url": "https://github.com/dask/dask/issues/8001#issuecomment-900369463",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8001",
        "id": 900369463,
        "node_id": "IC_kwDOAbcwm841qow3",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-17T14:53:47Z",
        "updated_at": "2021-08-17T14:53:47Z",
        "author_association": "MEMBER",
        "body": "One would still need to put some thought into how to issue the warning with https://github.com/dask/distributed/pull/5220 you wouldn't want every single task to issue a warning since the client would receive hundreds or even thousands of warnings which might be a little excessive :) but the infrastructure is there, yes.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/900369463/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/900441791",
        "html_url": "https://github.com/dask/dask/issues/8001#issuecomment-900441791",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8001",
        "id": 900441791,
        "node_id": "IC_kwDOAbcwm841q6a_",
        "user": {
            "login": "gjoseph92",
            "id": 3309802,
            "node_id": "MDQ6VXNlcjMzMDk4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjoseph92",
            "html_url": "https://github.com/gjoseph92",
            "followers_url": "https://api.github.com/users/gjoseph92/followers",
            "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
            "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
            "repos_url": "https://api.github.com/users/gjoseph92/repos",
            "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-17T16:22:16Z",
        "updated_at": "2021-08-17T16:22:16Z",
        "author_association": "MEMBER",
        "body": "With https://github.com/dask/distributed/pull/5217 we could have a `warn_once` event which is the same as `warn` but filters the messages for uniqueness on the client :) bit inefficient, but easy!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/900441791/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]