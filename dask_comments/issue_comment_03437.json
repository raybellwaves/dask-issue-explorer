[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/384003076",
        "html_url": "https://github.com/dask/dask/issues/3437#issuecomment-384003076",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3437",
        "id": 384003076,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDAwMzA3Ng==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-24T16:51:08Z",
        "updated_at": "2018-04-24T16:51:08Z",
        "author_association": "MEMBER",
        "body": "No objection to having func_args and func_kwargs.  Personally I like also\nusing *args and **kwargs.  I think that this is intuitive and convenient\nfor users and so I would prefer not to see it dropped.\n\nOn Tue, Apr 24, 2018 at 10:42 AM, jakirkham <notifications@github.com>\nwrote:\n\n> Currently the map_blocks/map_overlap interfaces provide one main way to\n> pass arguments and keyword arguments that is a variadic **kwargs\n> argument. However if one has keyword arguments that overlap with those that\n> map_blocks/map_overlap take, then one is either not able to pass them or\n> has to write a shim function to map the arguments to something that won't\n> conflict. With variadic arguments, one can pass them along, but they may or\n> may not work.\n>\n> This could be fixed by adding two arguments to map_blocks/map_overlap.\n> Namely func_args and func_kwargs. These would be regular arguments taking\n> a sequence and a mapping respectively. Also these would not be treated as\n> non-Dask collection arguments. In the implementation detail, these would be\n> unpacked in the function call. This would avoid confusion caused by trying\n> to have these arguments live alongside arguments to map_blocks/map_overlap.\n> Longer term, the old strategy of passing arguments could be deprecated and\n> dropped by 1.0.\n>\n> xref: #3263 <https://github.com/dask/dask/issues/3263>\n> xref: #3081 <https://github.com/dask/dask/issues/3081>\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3437>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AASszG9Wl1ouFjR76bkJute-vAe5BGvFks5trznrgaJpZM4Th0bj>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/384003076/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/384013936",
        "html_url": "https://github.com/dask/dask/issues/3437#issuecomment-384013936",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3437",
        "id": 384013936,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDAxMzkzNg==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-24T17:25:07Z",
        "updated_at": "2018-04-24T17:25:07Z",
        "author_association": "MEMBER",
        "body": "To be clear my objection is to `*args` and `**kwargs`. :)\r\n\r\nThe problem with `*args` and `**kwargs` is they live in the same space as all the other arguments of `map_blocks` and `map_overlap`\\*. This means that if we are ever to add another argument to `map_blocks` and `map_overlap` it would clash with user specified arguments to their function of the same. In fact this already happens with existing arguments. `dtype` is one of these (many NumPy functions take it and we use it here too). In these cases, the user is stuck making some sort of wrapper function to bridge this problem effectively coming up with the same solution proposed in this issue, but in a per function way in user code. IMHO would be better to just solve this once at the library level.\r\n\r\nAdding `*args` to `map_overlap` is a bit problematic as we have to decide where they go relative to `depth`, which is a required positional argument. Independently there is a question of what variadic positional arguments mean here and what might need to accompany them, which can be saved for other issues.\r\n\r\nIf we don't like the original proposal, another option would be to turn `map_blocks` and `map_overlap` into decorators instead. This would allow arguments to the function to be simply applied in second call. Has the advantage of nice readability and potentially the ability to easily reuse the function. Not sure of an easy deprecation path for this case though.\r\n\r\n\\* Note: `map_overlap` does not currently take `*args`",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/384013936/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/384022833",
        "html_url": "https://github.com/dask/dask/issues/3437#issuecomment-384022833",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3437",
        "id": 384022833,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDAyMjgzMw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-04-24T17:53:16Z",
        "updated_at": "2018-04-24T17:53:16Z",
        "author_association": "MEMBER",
        "body": "I have found `*args` and `**kwargs` to be very convenient both for myself as a developer and for users as I work with them using Dask.  I understand the concerns about overlapping with dask-specific keywords.  I find the user convenience to be large enough to overwhelm this concern, at least by my metric.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/384022833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396425771",
        "html_url": "https://github.com/dask/dask/issues/3437#issuecomment-396425771",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3437",
        "id": 396425771,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQyNTc3MQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T00:15:04Z",
        "updated_at": "2018-06-12T00:15:04Z",
        "author_association": "MEMBER",
        "body": "Sure these are convenient things generally, but not in there current formulation. In fact because of the current formulation one spends a fair bit of time writing trivial kernel functions to shoehorn in the arguments correctly. Here are a few examples from our own codebase [`piecewise`]( https://github.com/dask/dask/blob/0.17.5/dask/array/routines.py#L1128-L1143 ), [`apply_along_axis`]( https://github.com/dask/dask/blob/0.17.5/dask/array/routines.py#L284-L333 ), and [`gradient`]( https://github.com/dask/dask/blob/0.17.5/dask/array/routines.py#L408-L470 ). Have countless others personally that live outside this codebase. Not to mention other things like the mishandling of `kwargs` ( https://github.com/dask/dask/issues/3263 ), which also calls for similar trivial kernel functions. Having distinct arguments for the wrapper from the function (instead of comingling them) would cutdown boilerplate, improve user experience, and improve maintainability.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396425771/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]