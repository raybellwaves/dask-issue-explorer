[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/994006949",
        "html_url": "https://github.com/dask/dask/issues/8474#issuecomment-994006949",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8474",
        "id": 994006949,
        "node_id": "IC_kwDOAbcwm847P1el",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-14T21:04:17Z",
        "updated_at": "2021-12-14T21:04:17Z",
        "author_association": "MEMBER",
        "body": "Hmmm that's an interesting issue! Raising an error seems like the best bet. So then the question is where to raise the error from. I think `compute` should probably be in charge of making sure that the task graph doesn't contain references to objects that the scheduler can't understand. The other option is to put that logic into the `get` itself, ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/994006949/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/994955596",
        "html_url": "https://github.com/dask/dask/issues/8474#issuecomment-994955596",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8474",
        "id": 994955596,
        "node_id": "IC_kwDOAbcwm847TdFM",
        "user": {
            "login": "scharlottej13",
            "id": 8620816,
            "node_id": "MDQ6VXNlcjg2MjA4MTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8620816?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scharlottej13",
            "html_url": "https://github.com/scharlottej13",
            "followers_url": "https://api.github.com/users/scharlottej13/followers",
            "following_url": "https://api.github.com/users/scharlottej13/following{/other_user}",
            "gists_url": "https://api.github.com/users/scharlottej13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scharlottej13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scharlottej13/subscriptions",
            "organizations_url": "https://api.github.com/users/scharlottej13/orgs",
            "repos_url": "https://api.github.com/users/scharlottej13/repos",
            "events_url": "https://api.github.com/users/scharlottej13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scharlottej13/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-15T16:28:47Z",
        "updated_at": "2021-12-15T16:28:47Z",
        "author_association": "MEMBER",
        "body": "Thanks @davidhao3300 for opening up this issue! Would you feel comfortable opening up a PR, with the suggestion from @jsignell?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/994955596/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/995220870",
        "html_url": "https://github.com/dask/dask/issues/8474#issuecomment-995220870",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8474",
        "id": 995220870,
        "node_id": "IC_kwDOAbcwm847Ud2G",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-15T21:18:04Z",
        "updated_at": "2021-12-15T21:18:04Z",
        "author_association": "MEMBER",
        "body": "@jrbourbeau pointed me to https://github.com/dask/dask/issues/7082 as a broader idea that would help with this specific issue. It is probably overkill if this is the main improvement, but keeping track of some metadata about persisted layers could make cases like this more obvious.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/995220870/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1023393469",
        "html_url": "https://github.com/dask/dask/issues/8474#issuecomment-1023393469",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8474",
        "id": 1023393469,
        "node_id": "IC_kwDOAbcwm848_769",
        "user": {
            "login": "ppsbs",
            "id": 48519119,
            "node_id": "MDQ6VXNlcjQ4NTE5MTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/48519119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ppsbs",
            "html_url": "https://github.com/ppsbs",
            "followers_url": "https://api.github.com/users/ppsbs/followers",
            "following_url": "https://api.github.com/users/ppsbs/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppsbs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ppsbs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppsbs/subscriptions",
            "organizations_url": "https://api.github.com/users/ppsbs/orgs",
            "repos_url": "https://api.github.com/users/ppsbs/repos",
            "events_url": "https://api.github.com/users/ppsbs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ppsbs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-27T16:15:40Z",
        "updated_at": "2022-01-27T16:15:40Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hello,\r\nI would love to have a look on this issue! Could you assign it for me please? \r\nThanks! :D\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1023393469/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1026234728",
        "html_url": "https://github.com/dask/dask/issues/8474#issuecomment-1026234728",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8474",
        "id": 1026234728,
        "node_id": "IC_kwDOAbcwm849Kxlo",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-31T21:35:19Z",
        "updated_at": "2022-01-31T21:35:19Z",
        "author_association": "MEMBER",
        "body": "Feel free to just open a pull request @ppsbs as soon as you start work.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1026234728/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1028109277",
        "html_url": "https://github.com/dask/dask/issues/8474#issuecomment-1028109277",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8474",
        "id": 1028109277,
        "node_id": "IC_kwDOAbcwm849R7Pd",
        "user": {
            "login": "ppsbs",
            "id": 48519119,
            "node_id": "MDQ6VXNlcjQ4NTE5MTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/48519119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ppsbs",
            "html_url": "https://github.com/ppsbs",
            "followers_url": "https://api.github.com/users/ppsbs/followers",
            "following_url": "https://api.github.com/users/ppsbs/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppsbs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ppsbs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppsbs/subscriptions",
            "organizations_url": "https://api.github.com/users/ppsbs/orgs",
            "repos_url": "https://api.github.com/users/ppsbs/repos",
            "events_url": "https://api.github.com/users/ppsbs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ppsbs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-02T16:17:30Z",
        "updated_at": "2022-02-02T16:17:30Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks, @jsignell !\r\n\r\nI've worked a few hours on this task in the last 2 days and (based on my little experience with dask) I cannot see an unexpected behavior. As `ddf.compute(scheduler=\"threads\")` runs asynchronously and `compute` always update the scheduler inside of `get_scheduler`, for me it is expected that it would return a future. And, on the other hand, as `ddf.compute()` runs synchronously, for me it's expected that it would get the result from the futures created by `client.persist(ddf)`. \r\n\r\nOr, maybe I haven't understood which would be the \"objects that the scheduler can't understand\" that you mentioned, @jsignell '^ ^   \r\n\r\nThank you!\r\n\r\ncc @davidhao3300 ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1028109277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1028216306",
        "html_url": "https://github.com/dask/dask/issues/8474#issuecomment-1028216306",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8474",
        "id": 1028216306,
        "node_id": "IC_kwDOAbcwm849SVXy",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-02T18:10:50Z",
        "updated_at": "2022-02-02T18:10:50Z",
        "author_association": "MEMBER",
        "body": "Once you are understand what is going on it might make sense, but it is not the behavior that a user would naively expect. This is not likely to be what the user intends to get back:\r\n\r\n```python\r\nIn [6]: ddf.compute(scheduler=\"threads\")\r\nOut[6]: \r\n0    <Future: finished, type: pandas.core.frame.Dat...\r\n1    <Future: finished, type: pandas.core.frame.Dat...\r\ndtype: object\r\n```\r\n\r\nTo close this issue, we would like to be able to at least give the user some warning that the operation is likely not what they intended.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1028216306/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1030138621",
        "html_url": "https://github.com/dask/dask/issues/8474#issuecomment-1030138621",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8474",
        "id": 1030138621,
        "node_id": "IC_kwDOAbcwm849Zqr9",
        "user": {
            "login": "ppsbs",
            "id": 48519119,
            "node_id": "MDQ6VXNlcjQ4NTE5MTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/48519119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ppsbs",
            "html_url": "https://github.com/ppsbs",
            "followers_url": "https://api.github.com/users/ppsbs/followers",
            "following_url": "https://api.github.com/users/ppsbs/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppsbs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ppsbs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppsbs/subscriptions",
            "organizations_url": "https://api.github.com/users/ppsbs/orgs",
            "repos_url": "https://api.github.com/users/ppsbs/repos",
            "events_url": "https://api.github.com/users/ppsbs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ppsbs/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-04T16:19:40Z",
        "updated_at": "2022-02-04T16:19:40Z",
        "author_association": "CONTRIBUTOR",
        "body": "I get your point @jsignell ! So, we could maybe raise an exception in the case where `compute` (and consequently `get_async`) are called with a dask graph whose result has already started being computed. Do you think that is a good path? Another option that I can think of is forcing `start_state_from_dask` to always convert cached futures to \"results\" (hence giving to `ddf.compute(scheduler=\"threads\")` the same behavior of `ddf.compute()`), but I'm not sure of the impact of that modification.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1030138621/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1030339157",
        "html_url": "https://github.com/dask/dask/issues/8474#issuecomment-1030339157",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8474",
        "id": 1030339157,
        "node_id": "IC_kwDOAbcwm849abpV",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-04T20:50:31Z",
        "updated_at": "2022-02-04T20:50:31Z",
        "author_association": "MEMBER",
        "body": "I think raising an exception or even just a warning is the right path.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1030339157/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1185535496",
        "html_url": "https://github.com/dask/dask/issues/8474#issuecomment-1185535496",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8474",
        "id": 1185535496,
        "node_id": "IC_kwDOAbcwm85GqdYI",
        "user": {
            "login": "pavithraes",
            "id": 33131404,
            "node_id": "MDQ6VXNlcjMzMTMxNDA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/33131404?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pavithraes",
            "html_url": "https://github.com/pavithraes",
            "followers_url": "https://api.github.com/users/pavithraes/followers",
            "following_url": "https://api.github.com/users/pavithraes/following{/other_user}",
            "gists_url": "https://api.github.com/users/pavithraes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pavithraes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pavithraes/subscriptions",
            "organizations_url": "https://api.github.com/users/pavithraes/orgs",
            "repos_url": "https://api.github.com/users/pavithraes/repos",
            "events_url": "https://api.github.com/users/pavithraes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pavithraes/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-15T13:15:51Z",
        "updated_at": "2022-07-15T17:19:13Z",
        "author_association": "MEMBER",
        "body": "With #8700, we raise a warning when we set `dask.compute(scheduler=\"<single-machine-scheduler>\"`. \r\n\r\nIt'll be nice to also raise a warning if the scheduler is set using `dask.config.set`.\r\n\r\nMinimal example:\r\n\r\n```python\r\nimport dask.dataframe as dd\r\nfrom dask.distributed import Client\r\n\r\nclient = Client()\r\n\r\nddf = dd.DataFrame.from_dict({\"x\": [1, 2]}, npartitions=1)\r\nddf = ddf.persist()\r\n\r\nddf.compute(scheduler=\"sync\") # UserWarning: Running on a single-machine scheduler when a distributed client is active might lead to unexpected results.\r\n\r\nwith dask.config.set(scheduler=\"sync\"):\r\n    ddf.compute() # No warnings\r\n\r\nclient.close()\r\n```\r\n\r\n@jsignell I'll re-open this, please let me know if it'll be better to open a fresh issue instead. :)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1185535496/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1377242665",
        "html_url": "https://github.com/dask/dask/issues/8474#issuecomment-1377242665",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8474",
        "id": 1377242665,
        "node_id": "IC_kwDOAbcwm85SFw4p",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-10T13:15:43Z",
        "updated_at": "2023-01-10T13:15:43Z",
        "author_association": "MEMBER",
        "body": "I agree with the initial report and agree that there should be an error raised if something like this happens. However, I believe the warning we have right now is confusing. I consider it a perfectly valid use case to use a threaded scheduler and a distributed scheduler at the same time.\r\nAs a matter of fact, in the distributed repo we ended up having to ignore this warning frequently because this is indeed valid behavior\r\n\r\nWhat should not be allowed is to use a different scheduler/executor on a collection that contains futures of another executor which is what happens in case of calling persist.\r\nFor instance, when using two different distributed clients, it is now allowed to mix the futures. This currently raises here https://github.com/dask/dask/blob/534d1d8bf7d7f4c5dc90085a47f4d4362e1312a7/dask/highlevelgraph.py#L389-L393\r\nand I believe a similar logic should be in place for this issue. The warning that's currently in there is not sufficient.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1377242665/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]