{
    "url": "https://api.github.com/repos/dask/dask/issues/11069",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/11069/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/11069/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/11069/events",
    "html_url": "https://github.com/dask/dask/issues/11069",
    "id": 2263216439,
    "node_id": "I_kwDOAbcwm86G5fE3",
    "number": 11069,
    "title": "Backport Python import error patch to 2024.2.1",
    "user": {
        "login": "jtilly",
        "id": 6807275,
        "node_id": "MDQ6VXNlcjY4MDcyNzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6807275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtilly",
        "html_url": "https://github.com/jtilly",
        "followers_url": "https://api.github.com/users/jtilly/followers",
        "following_url": "https://api.github.com/users/jtilly/following{/other_user}",
        "gists_url": "https://api.github.com/users/jtilly/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jtilly/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jtilly/subscriptions",
        "organizations_url": "https://api.github.com/users/jtilly/orgs",
        "repos_url": "https://api.github.com/users/jtilly/repos",
        "events_url": "https://api.github.com/users/jtilly/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jtilly/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-04-25T10:17:37Z",
    "updated_at": "2024-04-25T10:55:28Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Currently, \r\n```\r\nmicromamba create dask -n dask=2024.2.1\r\n```\r\nwill result in a broken version of dask (because it will pull in the latest Python, see https://github.com/dask/dask/issues/11038):\r\n\r\n```\r\nPython 3.12.3 | packaged by conda-forge | (main, Apr 15 2024, 18:35:20) [Clang 16.0.6 ] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import dask.dataframe as dd\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/private/tmp/dask/lib/python3.12/site-packages/dask/dataframe/__init__.py\", line 100, in <module>\r\n    from dask.dataframe import backends, dispatch, rolling\r\n  File \"/private/tmp/dask/lib/python3.12/site-packages/dask/dataframe/backends.py\", line 15, in <module>\r\n    from dask.dataframe.core import DataFrame, Index, Scalar, Series, _Frame\r\n  File \"/private/tmp/dask/lib/python3.12/site-packages/dask/dataframe/core.py\", line 36, in <module>\r\n    from dask.dataframe import methods\r\n  File \"/private/tmp/dask/lib/python3.12/site-packages/dask/dataframe/methods.py\", line 34, in <module>\r\n    from dask.dataframe.utils import is_dataframe_like, is_index_like, is_series_like\r\n  File \"/private/tmp/dask/lib/python3.12/site-packages/dask/dataframe/utils.py\", line 20, in <module>\r\n    from dask.dataframe import (  # noqa: F401 register pandas extension types\r\n  File \"/private/tmp/dask/lib/python3.12/site-packages/dask/dataframe/_dtypes.py\", line 9, in <module>\r\n    from dask.dataframe.extensions import make_array_nonempty, make_scalar\r\n  File \"/private/tmp/dask/lib/python3.12/site-packages/dask/dataframe/extensions.py\", line 8, in <module>\r\n    from dask.dataframe.accessor import (\r\n  File \"/private/tmp/dask/lib/python3.12/site-packages/dask/dataframe/accessor.py\", line 126, in <module>\r\n    class DatetimeAccessor(Accessor):\r\n  File \"/private/tmp/dask/lib/python3.12/site-packages/dask/dataframe/accessor.py\", line 81, in __init_subclass__\r\n    _bind_property(cls, pd_cls, attr, min_version)\r\n  File \"/private/tmp/dask/lib/python3.12/site-packages/dask/dataframe/accessor.py\", line 35, in _bind_property\r\n    setattr(cls, attr, property(derived_from(pd_cls, version=min_version)(func)))\r\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/private/tmp/dask/lib/python3.12/site-packages/dask/utils.py\", line 987, in wrapper\r\n    method.__doc__ = _derived_from(\r\n                     ^^^^^^^^^^^^^^\r\n  File \"/private/tmp/dask/lib/python3.12/site-packages/dask/utils.py\", line 940, in _derived_from\r\n    method_args = get_named_args(method)\r\n                  ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/private/tmp/dask/lib/python3.12/site-packages/dask/utils.py\", line 701, in get_named_args\r\n    s = inspect.signature(func)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/private/tmp/dask/lib/python3.12/inspect.py\", line 3310, in signature\r\n    return Signature.from_callable(obj, follow_wrapped=follow_wrapped,\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/private/tmp/dask/lib/python3.12/inspect.py\", line 3054, in from_callable\r\n    return _signature_from_callable(obj, sigcls=cls,\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/private/tmp/dask/lib/python3.12/inspect.py\", line 2642, in _signature_from_callable\r\n    call = _descriptor_get(call, obj)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/private/tmp/dask/lib/python3.12/inspect.py\", line 2467, in _descriptor_get\r\n    return get(descriptor, obj, type(obj))\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nTypeError: descriptor '__call__' for 'type' objects doesn't apply to a 'property' object\r\n```\r\n\r\nWould you be open to backporting\r\n\r\nhttps://github.com/dask/dask/pull/11035\r\nhttps://github.com/dask/dask/pull/11039\r\n\r\nto 2024.2.1 (and releasing it as 2024.2.**2**)? \r\n\r\n2024.2.1 is the last version of dask that doesn't force the query planner on us (and supports pandas <2.0) and it would be great if it worked with the latest Python releases.\r\n\r\nI'm happy to do the work (though I guess most of the work will be the actual release -- including distributed, etc).\r\n\r\nAlternatively, I could just add a patch to the conda recipe in the [feedstock repo](https://github.com/conda-forge/dask-feedstock/blob/main/recipe/meta.yaml), which would be sufficient for me and would also ensure that \r\n\r\n```\r\nmicromamba create dask -n dask=2024.2.1\r\n```\r\ninstalls a working version of dask. \r\n\r\n_Edit_: For a proposal to patch via the recipe, see https://github.com/conda-forge/dask-core-feedstock/pull/202",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/11069/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/11069/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}