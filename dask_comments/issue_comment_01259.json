[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/250887354",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-250887354",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 250887354,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDg4NzM1NA==",
        "user": {
            "login": "postelrich",
            "id": 3619876,
            "node_id": "MDQ6VXNlcjM2MTk4NzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3619876?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/postelrich",
            "html_url": "https://github.com/postelrich",
            "followers_url": "https://api.github.com/users/postelrich/followers",
            "following_url": "https://api.github.com/users/postelrich/following{/other_user}",
            "gists_url": "https://api.github.com/users/postelrich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/postelrich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/postelrich/subscriptions",
            "organizations_url": "https://api.github.com/users/postelrich/orgs",
            "repos_url": "https://api.github.com/users/postelrich/repos",
            "events_url": "https://api.github.com/users/postelrich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/postelrich/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-01T02:31:08Z",
        "updated_at": "2021-04-05T18:43:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "This is the list I came up of missing methods that should be relatively simple to add.\n- [ ] T\n- [x] align\n- [x] all\n- [x] any\n- [x] applymap\n- [ ] axes\n- [x] combine\n- [ ] combineAdd\n- [ ] combineMult\n- [x] combine_first\n- [ ] compound\n- [ ] corrwith\n- [x] diff\n- [ ] divide\n- [ ] dot\n- [ ] duplicated\n- [x] eq\n- [ ] ewm\n- [ ] expanding\n- [ ] first_valid_index\n- [x] ge\n- [ ] get_value\n- [x] gt\n- [ ] iget_value\n- [ ] irow\n- [x] isin\n- [ ] items\n- [x] iteritems\n- [ ] kurt -> manually calculate 4th moment?\n- [ ] kurtosis ^^^\n- [ ] last_valid_index\n- [x] le\n- [x] lt\n- [ ] mad -> manually calculate?\n- [x] ne\n- [x] nsmallest\n- [x] prod\n- [x] product\n- [ ] reindex\n- [ ] reindex_axis\n- [x] round\n- [x] select_dtypes\n- [ ] stack\n- [x] std -> manually calculate?\n- [ ] to_string\n- [x] to_timestamp\n- [ ] transpose\n- [ ] unstack\n- [x] var -> manually calculate?\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/250887354/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/250912807",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-250912807",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 250912807,
        "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDkxMjgwNw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2016-10-01T13:34:40Z",
        "updated_at": "2016-10-01T13:34:40Z",
        "author_association": "MEMBER",
        "body": "Nice list.  It might be interesting to organize these methods by communication patterns that are already well supported with generic functions like `elemwise` (round, to_timestamp, to_string, ge, le, ...) and `reduction` (nsmallest, any, all, ...).  There will also be others, like `kurt`, that will require more thought, and `transpose`, which we probably can't easily support.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/250912807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/397549782",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-397549782",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 397549782,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzU0OTc4Mg==",
        "user": {
            "login": "Cherrymelon",
            "id": 24840278,
            "node_id": "MDQ6VXNlcjI0ODQwMjc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24840278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Cherrymelon",
            "html_url": "https://github.com/Cherrymelon",
            "followers_url": "https://api.github.com/users/Cherrymelon/followers",
            "following_url": "https://api.github.com/users/Cherrymelon/following{/other_user}",
            "gists_url": "https://api.github.com/users/Cherrymelon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Cherrymelon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Cherrymelon/subscriptions",
            "organizations_url": "https://api.github.com/users/Cherrymelon/orgs",
            "repos_url": "https://api.github.com/users/Cherrymelon/repos",
            "events_url": "https://api.github.com/users/Cherrymelon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Cherrymelon/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-15T08:22:06Z",
        "updated_at": "2018-06-15T08:22:06Z",
        "author_association": "NONE",
        "body": "i really hope complete unstack() method",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/397549782/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/431104992",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-431104992",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 431104992,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTEwNDk5Mg==",
        "user": {
            "login": "kfeaginsiii",
            "id": 20633228,
            "node_id": "MDQ6VXNlcjIwNjMzMjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/20633228?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kfeaginsiii",
            "html_url": "https://github.com/kfeaginsiii",
            "followers_url": "https://api.github.com/users/kfeaginsiii/followers",
            "following_url": "https://api.github.com/users/kfeaginsiii/following{/other_user}",
            "gists_url": "https://api.github.com/users/kfeaginsiii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kfeaginsiii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kfeaginsiii/subscriptions",
            "organizations_url": "https://api.github.com/users/kfeaginsiii/orgs",
            "repos_url": "https://api.github.com/users/kfeaginsiii/repos",
            "events_url": "https://api.github.com/users/kfeaginsiii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kfeaginsiii/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-18T17:59:36Z",
        "updated_at": "2018-10-18T17:59:36Z",
        "author_association": "NONE",
        "body": "Howdy, came across this trying to use isin(). Looks like this has been open for some time. Is the idea that contributors will add functionality as needed?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/431104992/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/431537530",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-431537530",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 431537530,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTUzNzUzMA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-20T01:26:14Z",
        "updated_at": "2018-10-20T01:26:14Z",
        "author_association": "MEMBER",
        "body": "> Looks like this has been open for some time. Is the idea that contributors will add functionality as needed?\r\n\r\nI suppose so, yes.  If you have an interest in contributing improvements to `isin` that would be welcome. \r\n\r\nWe might also consider closing this.  I suspect that it is out of date.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/431537530/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/432418957",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-432418957",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 432418957,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjQxODk1Nw==",
        "user": {
            "login": "kfeaginsiii",
            "id": 20633228,
            "node_id": "MDQ6VXNlcjIwNjMzMjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/20633228?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kfeaginsiii",
            "html_url": "https://github.com/kfeaginsiii",
            "followers_url": "https://api.github.com/users/kfeaginsiii/followers",
            "following_url": "https://api.github.com/users/kfeaginsiii/following{/other_user}",
            "gists_url": "https://api.github.com/users/kfeaginsiii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kfeaginsiii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kfeaginsiii/subscriptions",
            "organizations_url": "https://api.github.com/users/kfeaginsiii/orgs",
            "repos_url": "https://api.github.com/users/kfeaginsiii/repos",
            "events_url": "https://api.github.com/users/kfeaginsiii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kfeaginsiii/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-23T21:04:05Z",
        "updated_at": "2018-10-23T21:04:05Z",
        "author_association": "NONE",
        "body": "I can see if I can contribute anything worthwhile. \r\n\r\nI think this issue is still valid, because at least for me, the ability to interact with dataframse using many of the above methods is pretty useful, if not a requirement. If there are other methods to do so, it might be good to note how those could be done. That would help one in the transition from pandas to dask, which I have struggled with somewhat. My use for dask isn't so much for memory size, but for compute. Yes, I could use other methods, but I'm lazy.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/432418957/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/436315407",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-436315407",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 436315407,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjMxNTQwNw==",
        "user": {
            "login": "tsktsktsk123",
            "id": 17543841,
            "node_id": "MDQ6VXNlcjE3NTQzODQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/17543841?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tsktsktsk123",
            "html_url": "https://github.com/tsktsktsk123",
            "followers_url": "https://api.github.com/users/tsktsktsk123/followers",
            "following_url": "https://api.github.com/users/tsktsktsk123/following{/other_user}",
            "gists_url": "https://api.github.com/users/tsktsktsk123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tsktsktsk123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tsktsktsk123/subscriptions",
            "organizations_url": "https://api.github.com/users/tsktsktsk123/orgs",
            "repos_url": "https://api.github.com/users/tsktsktsk123/repos",
            "events_url": "https://api.github.com/users/tsktsktsk123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tsktsktsk123/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-06T16:26:06Z",
        "updated_at": "2018-11-06T16:34:55Z",
        "author_association": "NONE",
        "body": "> \r\n> \r\n> > Looks like this has been open for some time. Is the idea that contributors will add functionality as needed?\r\n> \r\n> I suppose so, yes. If you have an interest in contributing improvements to `isin` that would be welcome.\r\n> \r\n> We might also consider closing this. I suspect that it is out of date.\r\n\r\nIm afraid it is not yet out of date. I ran into `.dt.to_timestamp` raising an `AttributeError`  issue today and after some searching into the core I think I know what to change but am unsure yet on if it's optimal, or even possible. Perhaps you could shed some of your expertise on the proposition?\r\n\r\n#### The current implementation\r\nhttps://github.com/dask/dask/blob/master/dask/dataframe/accessor.py#L88 Here in the class underneath the accessor is set once, and never again. This is fine for every Attribute that is found in the Series.dt accessor. \r\n\r\n`pd.Series.dt`--> CombinedDatetimelikeProperties which contains:\r\n```'to_period',\r\n 'to_pydatetime',\r\n 'to_pytimedelta',\r\n```\r\nHowever, the `to_timestamp` only occurs in `dir(PeriodProperties)` \r\n\r\n```python\r\nclass DatetimeAccessor(Accessor):\r\n    _accessor = pd.Series.dt\r\n    _accessor_name = 'dt'\r\n```\r\n\r\n#### The pandas implementation\r\nHowever, the pandas Series DatetimeAccessor is set at runtime. Meaning that whenever you call `.dt` on a Series object. It fires off the evaluation as found in https://github.com/pandas-dev/pandas/blob/master/pandas/core/indexes/accessors.py#L294 \r\n\r\nwhich actually calls the `is_period_arraylike` and/or `is_datetime_arraylike` functions on the data to evaluate the type (Period or Datetime) and thus return the corresponding properties.\r\n\r\n#### A possible solution?\r\nI think this problem can be solved within Dask by allowing the DatetimeAccessor object to:\r\n\r\n1. Call a sample of the underlying Series\r\n2. Apply the resolution order of Pandas with the  `is_period_arraylike`  and `is_datetime_arraylilke` functions. (I believe this can be done as simple as pushing the entire sample through the `CombinedDatetimelikeProperties` class within Pandas.) \r\n3. Set the correct `_accessor` based on the result. (Datetime / Timedelta / Period properties)\r\n\r\nIt doesn't seem to difficult to implement this and I'm willing to do it somewhere during this week. I'm not yet sure though if this is possible. @mrocklin what do you think?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/436315407/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/436486502",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-436486502",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 436486502,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjQ4NjUwMg==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-07T02:53:30Z",
        "updated_at": "2018-11-07T02:53:30Z",
        "author_association": "MEMBER",
        "body": "I'd recommend waiting for pandas 0.24 before attempting this. Currently pandas doesn't have a proper period dtype, so the `meta` for a dask series with period data isn't \"correct\".\r\n\r\n```python\r\nIn [2]: ser = dd.from_pandas(pd.Series(pd.period_range('2017', periods=4)), 2)\r\n\r\nIn [3]: ser._meta_nonempty\r\nOut[3]:\r\n0    foo\r\n1    foo\r\ndtype: object\r\n\r\n```\r\n\r\nwith pandas 0.24, the dtype will be `Period[D]` and dask can have some correct metadata.\r\n\r\nThen, we can maybe just update with the following\r\n\r\n```diff\r\ndiff --git a/dask/dataframe/accessor.py b/dask/dataframe/accessor.py\r\nindex 4b7920b8..11398617 100644\r\n--- a/dask/dataframe/accessor.py\r\n+++ b/dask/dataframe/accessor.py\r\n@@ -93,9 +93,12 @@ class DatetimeAccessor(Accessor):\r\n \r\n     >>> s.dt.microsecond  # doctest: +SKIP\r\n     \"\"\"\r\n-    _accessor = pd.Series.dt\r\n     _accessor_name = 'dt'\r\n \r\n+    @property\r\n+    def _accessor(self):\r\n+        return self._series.dt\r\n+\r\n \r\n class StringAccessor(Accessor):\r\n     \"\"\" Accessor object for string properties of the Series values.\r\n\r\n```\r\n\r\nand things will all just work (maybe).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/436486502/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/436524633",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-436524633",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 436524633,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjUyNDYzMw==",
        "user": {
            "login": "tsktsktsk123",
            "id": 17543841,
            "node_id": "MDQ6VXNlcjE3NTQzODQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/17543841?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tsktsktsk123",
            "html_url": "https://github.com/tsktsktsk123",
            "followers_url": "https://api.github.com/users/tsktsktsk123/followers",
            "following_url": "https://api.github.com/users/tsktsktsk123/following{/other_user}",
            "gists_url": "https://api.github.com/users/tsktsktsk123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tsktsktsk123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tsktsktsk123/subscriptions",
            "organizations_url": "https://api.github.com/users/tsktsktsk123/orgs",
            "repos_url": "https://api.github.com/users/tsktsktsk123/repos",
            "events_url": "https://api.github.com/users/tsktsktsk123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tsktsktsk123/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-07T07:02:43Z",
        "updated_at": "2018-11-07T07:02:43Z",
        "author_association": "NONE",
        "body": "That'd be the neatest implementation. Sure worth the wait in that case.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/436524633/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/485218900",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-485218900",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 485218900,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTIxODkwMA==",
        "user": {
            "login": "lazarillo",
            "id": 636798,
            "node_id": "MDQ6VXNlcjYzNjc5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/636798?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lazarillo",
            "html_url": "https://github.com/lazarillo",
            "followers_url": "https://api.github.com/users/lazarillo/followers",
            "following_url": "https://api.github.com/users/lazarillo/following{/other_user}",
            "gists_url": "https://api.github.com/users/lazarillo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lazarillo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lazarillo/subscriptions",
            "organizations_url": "https://api.github.com/users/lazarillo/orgs",
            "repos_url": "https://api.github.com/users/lazarillo/repos",
            "events_url": "https://api.github.com/users/lazarillo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lazarillo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-21T02:18:43Z",
        "updated_at": "2019-04-21T02:18:43Z",
        "author_association": "NONE",
        "body": "I'd like to start contributing to Dask, and this was tagged as a \"good first issue\".  But it's not clear to me what items to focus upon.  Can I assume (a) to stay away from time-related API methods, and (b) *any* of the *unchecked* items in the OP with the checklist are equally helpful / worthwhile?\r\n\r\nI'm thinking I'd start with `T` and `reindex`.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/485218900/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/485219334",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-485219334",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 485219334,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTIxOTMzNA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-21T02:29:58Z",
        "updated_at": "2019-04-21T02:29:58Z",
        "author_association": "MEMBER",
        "body": "I don\u2019t think transpose makes sense for dask DataFrame\u2019s design.\n\nReindex should be doable, but will require some care. \n\nIt sounds like an updated list of missing methods with guesses about the implementation difficulty would be useful, but I\u2019m not sure if anyone will have time to put that together near term. \n\n> On Apr 20, 2019, at 21:18, Mike Williamson <notifications@github.com> wrote:\n> \n> I'd like to start contributing to Dask, and this was tagged as a \"good first issue\". But it's not clear to me what items to focus upon. Can I assume (a) to stay away from time-related API methods, and (b) any of the unchecked items in the OP with the checklist are equally helpful / worthwhile?\n> \n> I'm thinking I'd start with T and reindex.\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/485219334/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/485219371",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-485219371",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 485219371,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTIxOTM3MQ==",
        "user": {
            "login": "lazarillo",
            "id": 636798,
            "node_id": "MDQ6VXNlcjYzNjc5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/636798?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lazarillo",
            "html_url": "https://github.com/lazarillo",
            "followers_url": "https://api.github.com/users/lazarillo/followers",
            "following_url": "https://api.github.com/users/lazarillo/following{/other_user}",
            "gists_url": "https://api.github.com/users/lazarillo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lazarillo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lazarillo/subscriptions",
            "organizations_url": "https://api.github.com/users/lazarillo/orgs",
            "repos_url": "https://api.github.com/users/lazarillo/repos",
            "events_url": "https://api.github.com/users/lazarillo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lazarillo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-21T02:30:43Z",
        "updated_at": "2019-04-21T02:30:43Z",
        "author_association": "NONE",
        "body": "OK.  I'll look for another issue with clearer goals where I can help w/out causing more hassle.  ;-p",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/485219371/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/803500844",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-803500844",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 803500844,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzUwMDg0NA==",
        "user": {
            "login": "Madhu94",
            "id": 9015820,
            "node_id": "MDQ6VXNlcjkwMTU4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9015820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Madhu94",
            "html_url": "https://github.com/Madhu94",
            "followers_url": "https://api.github.com/users/Madhu94/followers",
            "following_url": "https://api.github.com/users/Madhu94/following{/other_user}",
            "gists_url": "https://api.github.com/users/Madhu94/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Madhu94/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Madhu94/subscriptions",
            "organizations_url": "https://api.github.com/users/Madhu94/orgs",
            "repos_url": "https://api.github.com/users/Madhu94/repos",
            "events_url": "https://api.github.com/users/Madhu94/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Madhu94/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-21T02:21:17Z",
        "updated_at": "2021-03-21T02:21:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "I believe this ticket was closed by mistake while merging https://github.com/dask/dask/pull/7236. Can this be reopened?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/803500844/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/812199163",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-812199163",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 812199163,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjE5OTE2Mw==",
        "user": {
            "login": "freyam",
            "id": 62539811,
            "node_id": "MDQ6VXNlcjYyNTM5ODEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62539811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freyam",
            "html_url": "https://github.com/freyam",
            "followers_url": "https://api.github.com/users/freyam/followers",
            "following_url": "https://api.github.com/users/freyam/following{/other_user}",
            "gists_url": "https://api.github.com/users/freyam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freyam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freyam/subscriptions",
            "organizations_url": "https://api.github.com/users/freyam/orgs",
            "repos_url": "https://api.github.com/users/freyam/repos",
            "events_url": "https://api.github.com/users/freyam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freyam/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-01T22:04:22Z",
        "updated_at": "2021-04-01T22:04:38Z",
        "author_association": "CONTRIBUTOR",
        "body": "I'd like to take up this issue and help in adding the following method(s) to Dask's Serial:\r\n* **`axes`**\r\n* **`product`**\r\n* **`divide`** (I believe this has been already added)\r\n* (feel free to suggest any other method from the complete list which is important or easy to implement)\r\n\r\n@mrocklin @TomAugspurger which one of the listed ones or the ones I mentioned would be easier to implement?\r\n\r\nThis would be my first contribution to Dask :smile:!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/812199163/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/812529169",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-812529169",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 812529169,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjUyOTE2OQ==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-02T13:28:24Z",
        "updated_at": "2021-04-02T13:28:24Z",
        "author_association": "MEMBER",
        "body": "I think `product` or `axes`. `product` would be more useful, and would follow the pattern of `Series.add`.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/812529169/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/812529798",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-812529798",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 812529798,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjUyOTc5OA==",
        "user": {
            "login": "freyam",
            "id": 62539811,
            "node_id": "MDQ6VXNlcjYyNTM5ODEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62539811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freyam",
            "html_url": "https://github.com/freyam",
            "followers_url": "https://api.github.com/users/freyam/followers",
            "following_url": "https://api.github.com/users/freyam/following{/other_user}",
            "gists_url": "https://api.github.com/users/freyam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freyam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freyam/subscriptions",
            "organizations_url": "https://api.github.com/users/freyam/orgs",
            "repos_url": "https://api.github.com/users/freyam/repos",
            "events_url": "https://api.github.com/users/freyam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freyam/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-02T13:30:19Z",
        "updated_at": "2021-04-02T13:30:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "> I think `product` or `axes`. `product` would be more useful, and would follow the pattern of `Series.add`.\r\n\r\nPerfect! I will start working on `dd.Serial.product`",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/812529798/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/812910779",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-812910779",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 812910779,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjkxMDc3OQ==",
        "user": {
            "login": "freyam",
            "id": 62539811,
            "node_id": "MDQ6VXNlcjYyNTM5ODEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62539811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freyam",
            "html_url": "https://github.com/freyam",
            "followers_url": "https://api.github.com/users/freyam/followers",
            "following_url": "https://api.github.com/users/freyam/following{/other_user}",
            "gists_url": "https://api.github.com/users/freyam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freyam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freyam/subscriptions",
            "organizations_url": "https://api.github.com/users/freyam/orgs",
            "repos_url": "https://api.github.com/users/freyam/repos",
            "events_url": "https://api.github.com/users/freyam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freyam/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-03T18:56:32Z",
        "updated_at": "2021-04-03T18:56:32Z",
        "author_association": "CONTRIBUTOR",
        "body": "@TomAugspurger\r\n\r\nTurns out, `dd.DataFrame.prod` already exists.\r\n\r\nhttps://github.com/dask/dask/blob/c5633c21e754df6b2c13195f1e2688e347c48963/dask/dataframe/core.py#L1718-L1740\r\n\r\nAnd, I fond out that it is the same as `product` and I feel that it would be redundant to implement a new method -> `dd.DataFrame.product`\r\n\r\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.product.html\r\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.prod.html\r\n\r\n> And np.prod and ndarray.prod both end up calling umath.multiply.reduce, so there is really no difference between them, besides the fact that the free functions can accept array-like types (like Python lists) in addition to NumPy arrays.\r\n\r\n> * For an ndarray, `prod()` and `product()` are equivalent.\r\n> * For an ndarray, `prod()` and p`roduct()` will both call um.multiply.reduce().\r\n> * If the object type is not ndarray but it still has a prod method, then `prod()` will return `prod(axis=axis, dtype=dtype, out=out, **kwargs)` whereas product will try to use um.multiply.reduce.\r\n> * If the object is not an ndarray and it does not have a prod method, then it will behave as product().\r\n> * The `ndarray.prod()` is equivalent to `prod()`\r\n\r\nSource: https://stackoverflow.com/questions/49863633/numpy-product-vs-numpy-prod-vs-ndarray-prod\r\n\r\nAccording to my understanding, this is also relevant to Dask. So, I propose adding **an alias to the `dd.DataFrame.prod` method call**. Would you be fine with that?\r\n\r\nThis could be as simple as just inserting this simple line below the `prod`'s method definition, \r\nhttps://github.com/freyam/dask/commit/68941c5d3ccc93da7f3515fc98d7062716ba5b06?branch=68941c5d3ccc93da7f3515fc98d7062716ba5b06&diff=unified\r\nand adding the required test methods similar to the `prod` tests in `dask/dataframe/tests/test_arithmetics_reduction.py` and the other test files.\r\n\r\nShould I proceed with this? or do you have other plans in your mind?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/812910779/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/813060868",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-813060868",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 813060868,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzA2MDg2OA==",
        "user": {
            "login": "freyam",
            "id": 62539811,
            "node_id": "MDQ6VXNlcjYyNTM5ODEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62539811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freyam",
            "html_url": "https://github.com/freyam",
            "followers_url": "https://api.github.com/users/freyam/followers",
            "following_url": "https://api.github.com/users/freyam/following{/other_user}",
            "gists_url": "https://api.github.com/users/freyam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freyam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freyam/subscriptions",
            "organizations_url": "https://api.github.com/users/freyam/orgs",
            "repos_url": "https://api.github.com/users/freyam/repos",
            "events_url": "https://api.github.com/users/freyam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freyam/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-04T16:28:35Z",
        "updated_at": "2021-04-04T16:28:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "I have opened up a new Pull Request #7517 regarding the `product()` method. They passed all the tests and have no conflicts.\r\n\r\nNow, I shall start working on adding the `axes()` and `duplicated()` methods, while waiting for your review on the PR.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/813060868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/814883873",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-814883873",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 814883873,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDg4Mzg3Mw==",
        "user": {
            "login": "AbhiSingam",
            "id": 67379820,
            "node_id": "MDQ6VXNlcjY3Mzc5ODIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/67379820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AbhiSingam",
            "html_url": "https://github.com/AbhiSingam",
            "followers_url": "https://api.github.com/users/AbhiSingam/followers",
            "following_url": "https://api.github.com/users/AbhiSingam/following{/other_user}",
            "gists_url": "https://api.github.com/users/AbhiSingam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AbhiSingam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AbhiSingam/subscriptions",
            "organizations_url": "https://api.github.com/users/AbhiSingam/orgs",
            "repos_url": "https://api.github.com/users/AbhiSingam/repos",
            "events_url": "https://api.github.com/users/AbhiSingam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AbhiSingam/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-07T12:45:03Z",
        "updated_at": "2021-04-07T12:45:03Z",
        "author_association": "NONE",
        "body": "Hey!!\r\nI'd like to work this issue, specifically on the following methods:\r\n- to_string\r\n- first_valid_index\r\n- last_valid_index\r\n\r\nThese seemed like good methods to pick for my first contribution to Dask. I'd love any input or suggestions on what other methods should take up or any specifics regarding the methods chosen.\r\nFor reference I've gone through the [Pandas documentation](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html) and looked at the descriptions given there.\r\n\r\nCC: @mrocklin @TomAugspurger @postelrich",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/814883873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/814892151",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-814892151",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 814892151,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDg5MjE1MQ==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-07T12:57:59Z",
        "updated_at": "2021-04-07T12:57:59Z",
        "author_association": "MEMBER",
        "body": "> I'd love any input or suggestions on what other methods should take up or any specifics regarding the methods chosen.\r\n\r\nI think you're best off implementing what you can, and then coming back for more.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/814892151/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/821539656",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-821539656",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 821539656,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTUzOTY1Ng==",
        "user": {
            "login": "freyam",
            "id": 62539811,
            "node_id": "MDQ6VXNlcjYyNTM5ODEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62539811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/freyam",
            "html_url": "https://github.com/freyam",
            "followers_url": "https://api.github.com/users/freyam/followers",
            "following_url": "https://api.github.com/users/freyam/following{/other_user}",
            "gists_url": "https://api.github.com/users/freyam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/freyam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/freyam/subscriptions",
            "organizations_url": "https://api.github.com/users/freyam/orgs",
            "repos_url": "https://api.github.com/users/freyam/repos",
            "events_url": "https://api.github.com/users/freyam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/freyam/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-16T20:21:41Z",
        "updated_at": "2021-04-16T20:21:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "What do you expect as the return value for the `axes()` when it comes to Dask DataFrames?\r\n\r\nOver at Pandas, `pandas.DataFrame.axes`\r\n> Return a list representing the axes of the DataFrame.\r\n> It has the row axis labels and column axis labels as the only members. They are returned in that order.\r\n\r\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.axes.html",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/821539656/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/825638806",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-825638806",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 825638806,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyNTYzODgwNg==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-23T12:55:24Z",
        "updated_at": "2021-04-23T12:55:24Z",
        "author_association": "MEMBER",
        "body": "I would expect `axes()` to return a list containing:\r\n- `df.index` (which is a  `dask.dataframe Index`)\r\n- `df.columns` (which is a  `pandas Index`)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/825638806/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1921393672",
        "html_url": "https://github.com/dask/dask/issues/1259#issuecomment-1921393672",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/1259",
        "id": 1921393672,
        "node_id": "IC_kwDOAbcwm85yhiQI",
        "user": {
            "login": "mobley-trent",
            "id": 67474838,
            "node_id": "MDQ6VXNlcjY3NDc0ODM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/67474838?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mobley-trent",
            "html_url": "https://github.com/mobley-trent",
            "followers_url": "https://api.github.com/users/mobley-trent/followers",
            "following_url": "https://api.github.com/users/mobley-trent/following{/other_user}",
            "gists_url": "https://api.github.com/users/mobley-trent/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mobley-trent/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mobley-trent/subscriptions",
            "organizations_url": "https://api.github.com/users/mobley-trent/orgs",
            "repos_url": "https://api.github.com/users/mobley-trent/repos",
            "events_url": "https://api.github.com/users/mobley-trent/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mobley-trent/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-01T14:00:03Z",
        "updated_at": "2024-02-01T14:00:03Z",
        "author_association": "NONE",
        "body": "Hello @postelrich is this issue still open ?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1921393672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]