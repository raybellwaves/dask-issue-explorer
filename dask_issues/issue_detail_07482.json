{
    "url": "https://api.github.com/repos/dask/dask/issues/7482",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/7482/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/7482/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/7482/events",
    "html_url": "https://github.com/dask/dask/issues/7482",
    "id": 843451063,
    "node_id": "MDU6SXNzdWU4NDM0NTEwNjM=",
    "number": 7482,
    "title": "Array unique fails with cupy backed arrays during cpu/gpu setitem",
    "user": {
        "login": "beckernick",
        "id": 8457388,
        "node_id": "MDQ6VXNlcjg0NTczODg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/beckernick",
        "html_url": "https://github.com/beckernick",
        "followers_url": "https://api.github.com/users/beckernick/followers",
        "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
        "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
        "organizations_url": "https://api.github.com/users/beckernick/orgs",
        "repos_url": "https://api.github.com/users/beckernick/repos",
        "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
        "received_events_url": "https://api.github.com/users/beckernick/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2021-03-29T14:51:42Z",
    "updated_at": "2021-10-14T07:44:28Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "When we call `unique` on a cupy backed dask array, we fail due to a setitem on a numpy array with a cupy array. Perhaps using `np.empty_like` rather than `np.empty` may help resolve this, though there may be more complexity due to the complex dimension/dtype handling:\r\n\r\nhttps://github.com/dask/dask/blob/cdb89fe317a43393f6c89cd780b54a3260839fd3/dask/array/routines.py#L1041-L1059\r\n\r\n```python-traceback\r\nimport dask.array as da\r\nimport numpy as np\r\nimport cupy as cp\r\n\u200b\r\narr = np.random.randint(0, 5, 20)\r\ndarr = da.from_array(arr)\r\nda.unique(darr).compute() # array([0, 1, 2, 3, 4])\r\n\u200b\r\narr = cp.random.randint(0, 5, 20)\r\ndarr = da.from_array(arr)\r\nda.unique(darr).compute()\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-19-2d8a28a02ebf> in <module>\r\n      9 arr = cp.random.randint(0, 5, 20)\r\n     10 darr = da.from_array(arr)\r\n---> 11 da.unique(darr).compute()\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/base.py in compute(self, **kwargs)\r\n    281         dask.base.compute\r\n    282         \"\"\"\r\n--> 283         (result,) = compute(self, traverse=False, **kwargs)\r\n    284         return result\r\n    285 \r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/base.py in compute(*args, **kwargs)\r\n    563         postcomputes.append(x.__dask_postcompute__())\r\n    564 \r\n--> 565     results = schedule(dsk, keys, **kwargs)\r\n    566     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    567 \r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/threaded.py in get(dsk, result, cache, num_workers, pool, **kwargs)\r\n     74                 pools[thread][num_workers] = pool\r\n     75 \r\n---> 76     results = get_async(\r\n     77         pool.apply_async,\r\n     78         len(pool._pool),\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/local.py in get_async(apply_async, num_workers, dsk, result, cache, get_id, rerun_exceptions_locally, pack_exception, raise_exception, callbacks, dumps, loads, **kwargs)\r\n    485                         _execute_task(task, data)  # Re-execute locally\r\n    486                     else:\r\n--> 487                         raise_exception(exc, tb)\r\n    488                 res, worker_id = loads(res_info)\r\n    489                 state[\"cache\"][key] = res\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/local.py in reraise(exc, tb)\r\n    315     if exc.__traceback__ is not tb:\r\n    316         raise exc.with_traceback(tb)\r\n--> 317     raise exc\r\n    318 \r\n    319 \r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/local.py in execute_task(key, task_info, dumps, loads, get_id, pack_exception)\r\n    220     try:\r\n    221         task, data = loads(task_info)\r\n--> 222         result = _execute_task(task, data)\r\n    223         id = get_id()\r\n    224         result = dumps((result, id))\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/core.py in _execute_task(arg, cache, dsk)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/core.py in <genexpr>(.0)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/core.py in _execute_task(arg, cache, dsk)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/core.py in <genexpr>(.0)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/core.py in _execute_task(arg, cache, dsk)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/core.py in <genexpr>(.0)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/core.py in _execute_task(arg, cache, dsk)\r\n    113     \"\"\"\r\n    114     if isinstance(arg, list):\r\n--> 115         return [_execute_task(a, cache) for a in arg]\r\n    116     elif istask(arg):\r\n    117         func, args = arg[0], arg[1:]\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/core.py in <listcomp>(.0)\r\n    113     \"\"\"\r\n    114     if isinstance(arg, list):\r\n--> 115         return [_execute_task(a, cache) for a in arg]\r\n    116     elif istask(arg):\r\n    117         func, args = arg[0], arg[1:]\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/core.py in _execute_task(arg, cache, dsk)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/optimization.py in __call__(self, *args)\r\n    961         if not len(args) == len(self.inkeys):\r\n    962             raise ValueError(\"Expected %d args, got %d\" % (len(self.inkeys), len(args)))\r\n--> 963         return core.get(self.dsk, self.outkey, dict(zip(self.inkeys, args)))\r\n    964 \r\n    965     def __reduce__(self):\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/core.py in get(dsk, out, cache)\r\n    149     for key in toposort(dsk):\r\n    150         task = dsk[key]\r\n--> 151         result = _execute_task(task, cache)\r\n    152         cache[key] = result\r\n    153     result = _execute_task(out, cache)\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/core.py in _execute_task(arg, cache, dsk)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/core.py in <genexpr>(.0)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/core.py in _execute_task(arg, cache, dsk)\r\n    119         # temporaries by their reference count and can execute certain\r\n    120         # operations in-place.\r\n--> 121         return func(*(_execute_task(a, cache) for a in args))\r\n    122     elif not ishashable(arg):\r\n    123         return arg\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/utils.py in apply(func, args, kwargs)\r\n     33 def apply(func, args, kwargs=None):\r\n     34     if kwargs:\r\n---> 35         return func(*args, **kwargs)\r\n     36     else:\r\n     37         return func(*args)\r\n\r\n/raid/nicholasb/miniconda3/envs/cuml-dev/lib/python3.8/site-packages/dask/array/routines.py in _unique_internal(ar, indices, counts, return_inverse)\r\n   1048 \r\n   1049     r = np.empty(u.shape, dtype=dt)\r\n-> 1050     r[\"values\"] = u\r\n   1051     if return_inverse:\r\n   1052         r[\"inverse\"] = np.arange(len(r), dtype=np.intp)\r\n\r\ncupy/core/core.pyx in cupy.core.core.ndarray.__array__()\r\n\r\nTypeError: Implicit conversion to a NumPy array is not allowed. Please use `.get()` to construct a NumPy array explicitly.\r\n```\r\n\r\n```\r\nconda list | grep \"dask\\|cupy\\|numpy\"\r\ncupy                      8.5.0            py38ha0d87d6_1    conda-forge\r\ndask                      2021.3.0+56.g913a192f          pypi_0    pypi\r\ndask-cuda                 0.19.0a210326           py38_45    rapidsai-nightly\r\ndask-cudf                 0.19.0a210326   py38_gad5452d7eb_288    rapidsai-nightly\r\ndask-glm                  0.2.1.dev52+g1daf4c5.d20210326           dev_0    <develop>\r\ndask-labextension         4.0.1              pyhd8ed1ab_0    conda-forge\r\ndask-ml                   1.8.0              pyhd8ed1ab_0    conda-forge\r\nnumpy                     1.20.1           py38h18fd61f_0    conda-forge\r\nnumpydoc                  1.1.0                      py_1    conda-forge\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/7482/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/7482/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}