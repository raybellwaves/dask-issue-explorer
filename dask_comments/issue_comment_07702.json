[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/848313944",
        "html_url": "https://github.com/dask/dask/issues/7702#issuecomment-848313944",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7702",
        "id": 848313944,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg0ODMxMzk0NA==",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-05-25T22:36:24Z",
        "updated_at": "2021-05-25T22:36:24Z",
        "author_association": "MEMBER",
        "body": "Thanks for raising an issue @mlondschien. More recent versions of `dask` / `distributed` allow you to specify task priority using [Dask's annotation machinery](https://docs.dask.org/en/latest/api.html#dask.annotate). This let's you attach specific `priority` values to Dask collections like DataFrames and delayed objects which are then used when these objects are passed to the `distributed` scheduler. You might find that useful for your particular workload ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/848313944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/848657607",
        "html_url": "https://github.com/dask/dask/issues/7702#issuecomment-848657607",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7702",
        "id": 848657607,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg0ODY1NzYwNw==",
        "user": {
            "login": "mlondschien",
            "id": 61679398,
            "node_id": "MDQ6VXNlcjYxNjc5Mzk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/61679398?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mlondschien",
            "html_url": "https://github.com/mlondschien",
            "followers_url": "https://api.github.com/users/mlondschien/followers",
            "following_url": "https://api.github.com/users/mlondschien/following{/other_user}",
            "gists_url": "https://api.github.com/users/mlondschien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mlondschien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mlondschien/subscriptions",
            "organizations_url": "https://api.github.com/users/mlondschien/orgs",
            "repos_url": "https://api.github.com/users/mlondschien/repos",
            "events_url": "https://api.github.com/users/mlondschien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mlondschien/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-05-26T10:30:08Z",
        "updated_at": "2021-06-02T11:12:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks @jrbourbeau! I have given `dask.annotate` a try. However this has not yielded the expected results. Here ist some minimal reproducible code:\r\n\r\n```python\r\nimport dask\r\nfrom dask import delayed, graph_manipulation\r\n\r\n\r\ndef reduce(df, args):\r\n    return {\"n\": len(df), \"n_missing\": df[args[\"column\"]].isna().sum()}\r\n\r\n\r\ndef combine(results, args):\r\n    n_missing = sum(result[\"n_missing\"] for result in results)\r\n    n = sum(result[\"n\"] for result in results)\r\n    return n_missing / n\r\n\r\n\r\n# create dataframe with 2 partitions\r\nddf = dask.datasets.timeseries(start=\"2000-01-01\", end=\"2000-01-03\")\r\nlist_of_args = [{\"column\": \"id\"}, {\"column\": \"x\"}, {\"column\": \"y\"}]\r\n\r\n\r\n# Create graph without dask.annotate\r\ndef my_function(ddf, list_of_args):\r\n    ddf_tasks = ddf.to_delayed()\r\n\r\n    reduced_results = []\r\n    for args in list_of_args:\r\n        reduced_results.append([delayed(reduce)(task, args) for task in ddf_tasks])\r\n\r\n    combined_results = [delayed(combine)(result, args) for result in reduced_results]\r\n    return combined_results\r\n\r\n\r\n# Use dask.annotate to change priority of reduced_results\r\ndef my_function_annotated(ddf, list_of_args):\r\n    ddf_tasks = ddf.to_delayed()\r\n\r\n    reduced_results = []\r\n    for args in list_of_args:\r\n        reduced_results.append([])\r\n        for i, task in enumerate(ddf_tasks):\r\n            with dask.annotate(priority=100 + i):\r\n                reduced_result = delayed(reduce)(task, args)\r\n            reduced_results[-1].append(reduced_result)\r\n\r\n    combined_results = [delayed(combine)(result, args) for result in reduced_results]\r\n    return combined_results\r\n\r\n\r\n# Use dask.annotate plus graph_manipulation.checkpoint\r\ndef my_function_checkpoint(ddf, list_of_args):\r\n    ddf_tasks = ddf.to_delayed()\r\n\r\n    reduced_results = []\r\n    for args in list_of_args:\r\n        reduced_results.append([delayed(reduce)(task, args) for task in ddf_tasks])\r\n\r\n    checkpoints = []\r\n    for i in range(len(ddf_tasks)):\r\n        tasks = [result[i] for result in reduced_results]\r\n        with dask.annotate(priority=100 + i):\r\n            checkpoint = graph_manipulation.checkpoint(*tasks)\r\n        checkpoints.append(checkpoint)\r\n\r\n    combined_results = [delayed(combine)(result, args) for result in reduced_results]\r\n\r\n    return combined_results + checkpoints\r\n\r\n\r\ndask.visualize(\r\n    my_function(ddf, list_of_args),\r\n    filename=\"default.jpeg\",\r\n    color=\"order\",\r\n    cmap=\"autumn\",\r\n    optimize_graph=True,\r\n)\r\n\r\n\r\ndask.visualize(\r\n    my_function_annotated(ddf, list_of_args),\r\n    filename=\"annotated.jpeg\",\r\n    color=\"order\",\r\n    cmap=\"autumn\",\r\n    optimize_graph=True,\r\n)\r\n\r\ndask.visualize(\r\n    my_function_checkpoint(ddf, list_of_args),\r\n    filename=\"checkpoint.jpeg\",\r\n    color=\"order\",\r\n    cmap=\"autumn\",\r\n    optimize_graph=True,\r\n)\r\n```\r\n\r\n`default.jpeg`:\r\n![default](https://user-images.githubusercontent.com/61679398/119642264-d19bae00-be1a-11eb-803c-30a13206a1a8.jpeg)\r\n\r\n`annotated.jpeg`:\r\n![annotated](https://user-images.githubusercontent.com/61679398/119642292-d8c2bc00-be1a-11eb-87c5-c9aea755adf2.jpeg)\r\n\r\n`checkpoint.jpeg`:\r\n![checkpoint](https://user-images.githubusercontent.com/61679398/119642310-dfe9ca00-be1a-11eb-829d-b3af1ed835e3.jpeg)\r\n\r\nThe first two graphs look exactly the same and no priority switching seems to have taken place. In the third graph the checkpoints (10, 18) do not get prioritized (18 is bright yellow). To make sure this is not an issue in `visualize`, I have run both the code with annotations and the code with checkpoints on our use-case with more tasks and partitions. In both cases I see the same data spilling to disk. In the second use-case the checkpoints do obviously not get prioritized (they don't get run before all data is loaded into memory). What am I doing wrong here?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/848657607/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/851358693",
        "html_url": "https://github.com/dask/dask/issues/7702#issuecomment-851358693",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7702",
        "id": 851358693,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTM1ODY5Mw==",
        "user": {
            "login": "mlondschien",
            "id": 61679398,
            "node_id": "MDQ6VXNlcjYxNjc5Mzk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/61679398?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mlondschien",
            "html_url": "https://github.com/mlondschien",
            "followers_url": "https://api.github.com/users/mlondschien/followers",
            "following_url": "https://api.github.com/users/mlondschien/following{/other_user}",
            "gists_url": "https://api.github.com/users/mlondschien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mlondschien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mlondschien/subscriptions",
            "organizations_url": "https://api.github.com/users/mlondschien/orgs",
            "repos_url": "https://api.github.com/users/mlondschien/repos",
            "events_url": "https://api.github.com/users/mlondschien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mlondschien/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-05-31T09:31:47Z",
        "updated_at": "2021-05-31T09:31:47Z",
        "author_association": "CONTRIBUTOR",
        "body": "@jrbourbeau any suggestions on what I am doing wrong here?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/851358693/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]