[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/390436015",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-390436015",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 390436015,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQzNjAxNQ==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-19T22:12:16Z",
        "updated_at": "2018-05-19T22:12:16Z",
        "author_association": "MEMBER",
        "body": "This may be silly, but is there a case for building the graph in local threads?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/390436015/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/390502785",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-390502785",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 390502785,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDUwMjc4NQ==",
        "user": {
            "login": "alimanfoo",
            "id": 703554,
            "node_id": "MDQ6VXNlcjcwMzU1NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/703554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alimanfoo",
            "html_url": "https://github.com/alimanfoo",
            "followers_url": "https://api.github.com/users/alimanfoo/followers",
            "following_url": "https://api.github.com/users/alimanfoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/alimanfoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alimanfoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alimanfoo/subscriptions",
            "organizations_url": "https://api.github.com/users/alimanfoo/orgs",
            "repos_url": "https://api.github.com/users/alimanfoo/repos",
            "events_url": "https://api.github.com/users/alimanfoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alimanfoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-20T18:49:59Z",
        "updated_at": "2018-05-20T18:49:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "Not sure if this helps at all, but might be worth taking a look at how nextflow handles large task graphs. I saw a talk the other week by nextflow lead developer and he specifically pointed out that they chose not to build the full graph up front because of problems with very large graphs. I don't know exactly what they do instead though. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/390502785/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/390645733",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-390645733",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 390645733,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDY0NTczMw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-21T12:54:59Z",
        "updated_at": "2018-05-21T12:54:59Z",
        "author_association": "MEMBER",
        "body": "> This may be silly, but is there a case for building the graph in local threads?\r\n\r\nCurrently building the graph is a Pure-Python process, so I don't think that threads would help much here.  Additionally, not all of the costs are in graph construction.  Sending the tasks over the wire and storing them can also be bottlenecks.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/390645733/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/390646091",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-390646091",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 390646091,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDY0NjA5MQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-21T12:56:40Z",
        "updated_at": "2018-05-21T12:56:40Z",
        "author_association": "MEMBER",
        "body": "> Not sure if this helps at all, but might be worth taking a look at how nextflow handles large task graphs. I saw a talk the other week by nextflow lead developer and he specifically pointed out that they chose not to build the full graph up front because of problems with very large graphs. I don't know exactly what they do instead though.\r\n\r\nYes, this is a popular technique also with very numerical linear algebra systems.  It's a neat idea and would help with many of these problems.  It would probably require a biggish change to the dask.array codebase.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/390646091/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/390769314",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-390769314",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 390769314,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDc2OTMxNA==",
        "user": {
            "login": "rabernat",
            "id": 1197350,
            "node_id": "MDQ6VXNlcjExOTczNTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1197350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rabernat",
            "html_url": "https://github.com/rabernat",
            "followers_url": "https://api.github.com/users/rabernat/followers",
            "following_url": "https://api.github.com/users/rabernat/following{/other_user}",
            "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions",
            "organizations_url": "https://api.github.com/users/rabernat/orgs",
            "repos_url": "https://api.github.com/users/rabernat/repos",
            "events_url": "https://api.github.com/users/rabernat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rabernat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-21T20:16:53Z",
        "updated_at": "2018-05-21T20:16:53Z",
        "author_association": "MEMBER",
        "body": "> In this case it's mostly a UX problem as people feel concerned that their computation hasn't started yet.\r\n\r\nJust a comment on the UX problem. If there could be a dask option to output a progress bar while building large graphs, that could help a lot in the interim.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/390769314/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/391746968",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-391746968",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 391746968,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTc0Njk2OA==",
        "user": {
            "login": "tjcrone",
            "id": 5667194,
            "node_id": "MDQ6VXNlcjU2NjcxOTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5667194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjcrone",
            "html_url": "https://github.com/tjcrone",
            "followers_url": "https://api.github.com/users/tjcrone/followers",
            "following_url": "https://api.github.com/users/tjcrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjcrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjcrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjcrone/subscriptions",
            "organizations_url": "https://api.github.com/users/tjcrone/orgs",
            "repos_url": "https://api.github.com/users/tjcrone/repos",
            "events_url": "https://api.github.com/users/tjcrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjcrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-24T15:00:35Z",
        "updated_at": "2018-05-24T15:00:35Z",
        "author_association": "NONE",
        "body": "I've been running into memory issues when generating lists of delayed functions, using delayed, when the list is only a few hundred or maybe 1000 elements in length. This is really surprising. This is on a notebook pod with access to 8 GB of RAM, which to me seems like a moderately large amount. Why would the building of a task graph require so much ram when building lists of delayed functions? What tools are there to debug this issue? Are there better approaches when using delayed that can solve this problem?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/391746968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/391757321",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-391757321",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 391757321,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTc1NzMyMQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-24T15:29:05Z",
        "updated_at": "2018-05-24T15:29:05Z",
        "author_association": "MEMBER",
        "body": "I would like to avoid having this issue used to diagnose particular problems so that it can focus on the bigger picture.  @tjcrone if you're looking to have a conversation about your issue then can I ask you to raise a separate issue?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/391757321/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/391770342",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-391770342",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 391770342,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTc3MDM0Mg==",
        "user": {
            "login": "tjcrone",
            "id": 5667194,
            "node_id": "MDQ6VXNlcjU2NjcxOTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5667194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjcrone",
            "html_url": "https://github.com/tjcrone",
            "followers_url": "https://api.github.com/users/tjcrone/followers",
            "following_url": "https://api.github.com/users/tjcrone/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjcrone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjcrone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjcrone/subscriptions",
            "organizations_url": "https://api.github.com/users/tjcrone/orgs",
            "repos_url": "https://api.github.com/users/tjcrone/repos",
            "events_url": "https://api.github.com/users/tjcrone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjcrone/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-24T16:06:07Z",
        "updated_at": "2018-05-24T16:06:07Z",
        "author_association": "NONE",
        "body": "Sorry. Sure.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/391770342/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/391772650",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-391772650",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 391772650,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTc3MjY1MA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-24T16:13:06Z",
        "updated_at": "2018-05-24T16:13:06Z",
        "author_association": "MEMBER",
        "body": "> ...specifically pointed out that they chose not to build the full graph up front because of problems with very large graphs.\r\n\r\nThis was my thinking as well when first glancing at this issue. Given there are generators in Python, could imagine one slowly constructing pieces of the graph through this mechanism. There might be a fair bit of trickery here. Not sure how one optimizes such a graph or more directly how one makes good choices about tasks to submit with this kind of graph.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/391772650/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/391798170",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-391798170",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 391798170,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTc5ODE3MA==",
        "user": {
            "login": "rabernat",
            "id": 1197350,
            "node_id": "MDQ6VXNlcjExOTczNTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1197350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rabernat",
            "html_url": "https://github.com/rabernat",
            "followers_url": "https://api.github.com/users/rabernat/followers",
            "following_url": "https://api.github.com/users/rabernat/following{/other_user}",
            "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions",
            "organizations_url": "https://api.github.com/users/rabernat/orgs",
            "repos_url": "https://api.github.com/users/rabernat/repos",
            "events_url": "https://api.github.com/users/rabernat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rabernat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-24T17:35:18Z",
        "updated_at": "2018-05-24T17:35:18Z",
        "author_association": "MEMBER",
        "body": "A possibly related issue is that, at least in my use cases, all the tasks first go to just a few workers. Then they get spread around. Here is what my cluster looks like immediately after a big job hits the scheduler. \r\n\r\n![image](https://user-images.githubusercontent.com/1197350/40501879-32580dfe-5f57-11e8-84a2-886a2044549b.png)\r\n(there are 80 workers in this cluster)\r\n\r\nThis seems like a good way to crash workers.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/391798170/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/391799248",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-391799248",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 391799248,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTc5OTI0OA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-24T17:38:56Z",
        "updated_at": "2018-05-24T17:38:56Z",
        "author_association": "MEMBER",
        "body": "That shouldn't happen and is, I think, likely related to something\nincidental.  I recommend raising a separate issue about it and having a\nconversation there.  To be clear, I'd like to keep this issue about the\ngeneral topic of how to handle very large arrays, and not a place for\npeople to ask for help on current-day problems.\n\nOn Thu, May 24, 2018 at 1:35 PM, Ryan Abernathey <notifications@github.com>\nwrote:\n\n> A possibly related issue is that, at least in my use cases, all the tasks\n> first go to just a few workers. Then they get spread around. Here is what\n> my cluster looks like immediately after a big job hits the scheduler.\n>\n> [image: image]\n> <https://user-images.githubusercontent.com/1197350/40501879-32580dfe-5f57-11e8-84a2-886a2044549b.png>\n> (there are 80 workers in this cluster)\n>\n> This seems like a good way to crash workers.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3514#issuecomment-391798170>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AASszNr6V-IhKKWcu0yrHM2ZB72E9zi4ks5t1u9XgaJpZM4UFq6w>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/391799248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/391809642",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-391809642",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 391809642,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTgwOTY0Mg==",
        "user": {
            "login": "rabernat",
            "id": 1197350,
            "node_id": "MDQ6VXNlcjExOTczNTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1197350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rabernat",
            "html_url": "https://github.com/rabernat",
            "followers_url": "https://api.github.com/users/rabernat/followers",
            "following_url": "https://api.github.com/users/rabernat/following{/other_user}",
            "gists_url": "https://api.github.com/users/rabernat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rabernat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rabernat/subscriptions",
            "organizations_url": "https://api.github.com/users/rabernat/orgs",
            "repos_url": "https://api.github.com/users/rabernat/repos",
            "events_url": "https://api.github.com/users/rabernat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rabernat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-24T18:12:26Z",
        "updated_at": "2018-05-24T18:12:26Z",
        "author_association": "MEMBER",
        "body": "I understand that. I thought this issue of all-tasks-to-one-worker was\nindeed a general problem affecting very large arrays, possibly a\nlow-hanging fruit. Thanks for correcting my misunderstanding.\n\nOn Thu, May 24, 2018 at 1:39 PM, Matthew Rocklin <notifications@github.com>\nwrote:\n\n> That shouldn't happen and is, I think, likely related to something\n> incidental. I recommend raising a separate issue about it and having a\n> conversation there. To be clear, I'd like to keep this issue about the\n> general topic of how to handle very large arrays, and not a place for\n> people to ask for help on current-day problems.\n>\n> On Thu, May 24, 2018 at 1:35 PM, Ryan Abernathey <notifications@github.com\n> >\n> wrote:\n>\n> > A possibly related issue is that, at least in my use cases, all the tasks\n> > first go to just a few workers. Then they get spread around. Here is what\n> > my cluster looks like immediately after a big job hits the scheduler.\n> >\n> > [image: image]\n> > <https://user-images.githubusercontent.com/1197350/\n> 40501879-32580dfe-5f57-11e8-84a2-886a2044549b.png>\n> > (there are 80 workers in this cluster)\n> >\n> > This seems like a good way to crash workers.\n> >\n> > \u2014\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/dask/dask/issues/3514#issuecomment-391798170>, or\n> mute\n> > the thread\n> > <https://github.com/notifications/unsubscribe-auth/AASszNr6V-\n> IhKKWcu0yrHM2ZB72E9zi4ks5t1u9XgaJpZM4UFq6w>\n>\n> > .\n> >\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3514#issuecomment-391799248>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABJFJl_6yG-xc3nokFFUf9Z4n5lIwYIHks5t1vA2gaJpZM4UFq6w>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/391809642/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/391916126",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-391916126",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 391916126,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTkxNjEyNg==",
        "user": {
            "login": "rainwoodman",
            "id": 138060,
            "node_id": "MDQ6VXNlcjEzODA2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/138060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rainwoodman",
            "html_url": "https://github.com/rainwoodman",
            "followers_url": "https://api.github.com/users/rainwoodman/followers",
            "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
            "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
            "repos_url": "https://api.github.com/users/rainwoodman/repos",
            "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-25T01:43:14Z",
        "updated_at": "2018-05-25T01:43:14Z",
        "author_association": "CONTRIBUTOR",
        "body": "Is it possible to distribute the scheduler or have a hierarchy of schedulers?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/391916126/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392835373",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-392835373",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 392835373,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjgzNTM3Mw==",
        "user": {
            "login": "rainwoodman",
            "id": 138060,
            "node_id": "MDQ6VXNlcjEzODA2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/138060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rainwoodman",
            "html_url": "https://github.com/rainwoodman",
            "followers_url": "https://api.github.com/users/rainwoodman/followers",
            "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
            "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
            "repos_url": "https://api.github.com/users/rainwoodman/repos",
            "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-29T16:09:38Z",
        "updated_at": "2018-05-29T16:11:23Z",
        "author_association": "CONTRIBUTOR",
        "body": "For example, the central scheduler distributes 'super-chunks' to sub-schedulers, who further divides the `super-chunks` into `chunks` and work on the sub-graphs with the resources (whatever it is called in dask -- computing nodes, processes, threads?) pre-assigned to the sub-scheduler. \r\n\r\nI am picturing the central scheduler shall be made more or less static, as we will have to make assumptions about the state of resources (free, busy) on the sub-scheduler -- it will be costly to maintain an accurate representation of the load on the domain represented by the sub-schedulers anyways (centralized synchronization is expensive)\r\n\r\nEither schedulers (central or sub) can largely reuse the current code for building graphs, I suppose. The size of the super-chunks (likely in number of chunks) can be a per-site configuration, so as the number of sub-schedulers; in contrast to the size of chunk who remains a per-object configuration.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392835373/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392835731",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-392835731",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 392835731,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjgzNTczMQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-29T16:11:00Z",
        "updated_at": "2018-05-29T16:11:00Z",
        "author_association": "MEMBER",
        "body": "That is certainly a sensible architecture.  It would probably be a\nsubstantial rewrite and require substantial investment.\n\nOn Tue, May 29, 2018 at 12:09 PM, Yu Feng <notifications@github.com> wrote:\n\n> For example, the central scheduler distributes 'super-chunks' to\n> sub-schedulers, who further divides the chunks into the real chunks and\n> work on the sub-graphs with the resources assigned to the sub-scheduler.\n>\n> The central scheduler shall be made more or less static, as we will have\n> to make assumptions about the state of resources on the sub-scheduler -- it\n> will be costly to maintain an accurate representation of the load on the\n> domain represented by the sub-schedulers anyways.\n>\n> Either schedulers (central or sub) can largely reuse the current code for\n> building graphs, I suppose. The size of the super-chunks (likely in number\n> of chunks) can be a per-site configuration, so as the number of\n> sub-schedulers; in contrast to the size of chunk who remains a per-object\n> configuration.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3514#issuecomment-392835373>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AASszHcTYTv0S1ucjnzH7UCisCWZzqqmks5t3XLFgaJpZM4UFq6w>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392835731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392836868",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-392836868",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 392836868,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjgzNjg2OA==",
        "user": {
            "login": "rainwoodman",
            "id": 138060,
            "node_id": "MDQ6VXNlcjEzODA2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/138060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rainwoodman",
            "html_url": "https://github.com/rainwoodman",
            "followers_url": "https://api.github.com/users/rainwoodman/followers",
            "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
            "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
            "repos_url": "https://api.github.com/users/rainwoodman/repos",
            "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-29T16:14:19Z",
        "updated_at": "2018-05-29T16:14:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "I yet have to read the code to evaluate how non-invasive this can be done. A starting point would be refactoring the scheduler to support to classes of schedulers. \r\n\r\nI am not so certain about the flexibility of keeping the central scheduler static, or if the two tier arch will be sufficient for the future, or if considerations shall be made to leave possibility to make this three tiers.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392836868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392837314",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-392837314",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 392837314,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjgzNzMxNA==",
        "user": {
            "login": "rainwoodman",
            "id": 138060,
            "node_id": "MDQ6VXNlcjEzODA2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/138060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rainwoodman",
            "html_url": "https://github.com/rainwoodman",
            "followers_url": "https://api.github.com/users/rainwoodman/followers",
            "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
            "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
            "repos_url": "https://api.github.com/users/rainwoodman/repos",
            "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-29T16:15:34Z",
        "updated_at": "2018-05-29T16:15:34Z",
        "author_association": "CONTRIBUTOR",
        "body": "Which files contain the current scheduler and graph building routines?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392837314/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392839831",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-392839831",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 392839831,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjgzOTgzMQ==",
        "user": {
            "login": "rainwoodman",
            "id": 138060,
            "node_id": "MDQ6VXNlcjEzODA2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/138060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rainwoodman",
            "html_url": "https://github.com/rainwoodman",
            "followers_url": "https://api.github.com/users/rainwoodman/followers",
            "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
            "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
            "repos_url": "https://api.github.com/users/rainwoodman/repos",
            "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-29T16:23:27Z",
        "updated_at": "2018-05-29T16:23:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "`base.py` delivers graphs to schedulers.\r\n\r\nIndividual objects build the dsk graphs at creation time with more or less of a raw API, based on their per-object chunk size settings. \r\n\r\nPerhaps an experiment can start with a special class of objects that only builds super-chunks, and a new type of scheduler / worker / `get`-method (equiv of multiprocess.py or thread.py) that internally create new dsk graphs for individual super chunks and run them.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392839831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392862286",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-392862286",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 392862286,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mjg2MjI4Ng==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-29T17:18:35Z",
        "updated_at": "2018-05-29T17:18:35Z",
        "author_association": "MEMBER",
        "body": "https://github.com/dask/distributed/blob/master/distributed/scheduler.py\n\nOn Tue, May 29, 2018 at 12:23 PM, Yu Feng <notifications@github.com> wrote:\n\n> base.py delivers graphs to schedulers.\n>\n> Individual objects build the dsk graphs at creation time with more or less\n> of a raw API, based on their per-object chunk size settings.\n>\n> Perhaps an experiment can start with a special class of objects that only\n> builds super-chunks, and a new type of scheduler / worker / get-method\n> (equiv of multiprocess.py or thread.py) that internally create new dsk\n> graphs and run them.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3514#issuecomment-392839831>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AASszBw_MYaLZvq-QJ1eEbloYfb6cDYCks5t3XYBgaJpZM4UFq6w>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392862286/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392925496",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-392925496",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 392925496,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjkyNTQ5Ng==",
        "user": {
            "login": "crusaderky",
            "id": 6213168,
            "node_id": "MDQ6VXNlcjYyMTMxNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6213168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crusaderky",
            "html_url": "https://github.com/crusaderky",
            "followers_url": "https://api.github.com/users/crusaderky/followers",
            "following_url": "https://api.github.com/users/crusaderky/following{/other_user}",
            "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions",
            "organizations_url": "https://api.github.com/users/crusaderky/orgs",
            "repos_url": "https://api.github.com/users/crusaderky/repos",
            "events_url": "https://api.github.com/users/crusaderky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crusaderky/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-29T20:05:53Z",
        "updated_at": "2018-05-29T20:08:44Z",
        "author_association": "MEMBER",
        "body": "My personal take, as I very much hit my head for literal months on this:\r\n\r\nAs little as 3 million tasks will make the scheduler implode. In my use case, I have many more.\r\nI personally sponged the problem by introducing many (6000+) intermediate optimization steps. Each step takes the keys from the final array and compresses everything else into it. This works great for embarassignly parallel problems like mine, and sucks whenever chunks of the final result would be better off sharing chunks of the intermediate steps.\r\n\r\nThis way, instead of having 8-something million keys to optimize at once, which not only take hours but typically completely kill my 64 GB of RAM machine (_before the graph even starts being resolved), I end up with a final dask graph of ~25k keys, which the scheduler has no problems with.\r\n\r\nSee my more in-depth solution and code at #1916.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392925496/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393417681",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-393417681",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 393417681,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzQxNzY4MQ==",
        "user": {
            "login": "tjb900",
            "id": 1707852,
            "node_id": "MDQ6VXNlcjE3MDc4NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1707852?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjb900",
            "html_url": "https://github.com/tjb900",
            "followers_url": "https://api.github.com/users/tjb900/followers",
            "following_url": "https://api.github.com/users/tjb900/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjb900/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjb900/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjb900/subscriptions",
            "organizations_url": "https://api.github.com/users/tjb900/orgs",
            "repos_url": "https://api.github.com/users/tjb900/repos",
            "events_url": "https://api.github.com/users/tjb900/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjb900/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-31T06:14:37Z",
        "updated_at": "2018-05-31T06:14:37Z",
        "author_association": "NONE",
        "body": "Regarding the overhead of sending the graph from the Client to the Scheduler, what about instead sending a function which returns the graph (or returns key/value pairs as a generator, perhaps)?  This is essentially a user-controlled form of compression on the graph, and these huge graphs must, I suspect, have a lot of repeating patterns.  Ours certainly do.\r\n\r\nOr, rather than a function, perhaps even a more general subgraph-esque object, which could have a method to return the dependencies/dependents for any given key.  This would remove the need to store the graph explicitly on the scheduler side.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393417681/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393533081",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-393533081",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 393533081,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzUzMzA4MQ==",
        "user": {
            "login": "crusaderky",
            "id": 6213168,
            "node_id": "MDQ6VXNlcjYyMTMxNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6213168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crusaderky",
            "html_url": "https://github.com/crusaderky",
            "followers_url": "https://api.github.com/users/crusaderky/followers",
            "following_url": "https://api.github.com/users/crusaderky/following{/other_user}",
            "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions",
            "organizations_url": "https://api.github.com/users/crusaderky/orgs",
            "repos_url": "https://api.github.com/users/crusaderky/repos",
            "events_url": "https://api.github.com/users/crusaderky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crusaderky/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-31T13:39:25Z",
        "updated_at": "2018-05-31T13:39:25Z",
        "author_association": "MEMBER",
        "body": "See link above for my take on the issue :)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393533081/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393603885",
        "html_url": "https://github.com/dask/dask/issues/3514#issuecomment-393603885",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3514",
        "id": 393603885,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzYwMzg4NQ==",
        "user": {
            "login": "rainwoodman",
            "id": 138060,
            "node_id": "MDQ6VXNlcjEzODA2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/138060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rainwoodman",
            "html_url": "https://github.com/rainwoodman",
            "followers_url": "https://api.github.com/users/rainwoodman/followers",
            "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}",
            "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions",
            "organizations_url": "https://api.github.com/users/rainwoodman/orgs",
            "repos_url": "https://api.github.com/users/rainwoodman/repos",
            "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rainwoodman/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-31T17:07:39Z",
        "updated_at": "2018-05-31T17:07:39Z",
        "author_association": "CONTRIBUTOR",
        "body": "After reading crusaderky's ticket, I think improving around the current single scheduler should suffice for a long time. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393603885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]