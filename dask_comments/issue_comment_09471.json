[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1239891524",
        "html_url": "https://github.com/dask/dask/issues/9471#issuecomment-1239891524",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9471",
        "id": 1239891524,
        "node_id": "IC_kwDOAbcwm85J5z5E",
        "user": {
            "login": "rhshadrach",
            "id": 45562402,
            "node_id": "MDQ6VXNlcjQ1NTYyNDAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/45562402?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rhshadrach",
            "html_url": "https://github.com/rhshadrach",
            "followers_url": "https://api.github.com/users/rhshadrach/followers",
            "following_url": "https://api.github.com/users/rhshadrach/following{/other_user}",
            "gists_url": "https://api.github.com/users/rhshadrach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rhshadrach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rhshadrach/subscriptions",
            "organizations_url": "https://api.github.com/users/rhshadrach/orgs",
            "repos_url": "https://api.github.com/users/rhshadrach/repos",
            "events_url": "https://api.github.com/users/rhshadrach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rhshadrach/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-07T21:14:56Z",
        "updated_at": "2022-09-07T21:14:56Z",
        "author_association": "NONE",
        "body": "> Ideally, `dask` would emit the same deprecation `pandas` does and users wouldn't see any deprecations due to `dask`s internal use of `pandas`.\r\n\r\nI'm guessing that it is not easy / feasible to separate off internal vs non-internal use of pandas, as otherwise you'd be able to wrap internal uses with `warnings.catch_warnings`. Is that right?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1239891524/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1341961696",
        "html_url": "https://github.com/dask/dask/issues/9471#issuecomment-1341961696",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9471",
        "id": 1341961696,
        "node_id": "IC_kwDOAbcwm85P_LXg",
        "user": {
            "login": "rhshadrach",
            "id": 45562402,
            "node_id": "MDQ6VXNlcjQ1NTYyNDAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/45562402?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rhshadrach",
            "html_url": "https://github.com/rhshadrach",
            "followers_url": "https://api.github.com/users/rhshadrach/followers",
            "following_url": "https://api.github.com/users/rhshadrach/following{/other_user}",
            "gists_url": "https://api.github.com/users/rhshadrach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rhshadrach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rhshadrach/subscriptions",
            "organizations_url": "https://api.github.com/users/rhshadrach/orgs",
            "repos_url": "https://api.github.com/users/rhshadrach/repos",
            "events_url": "https://api.github.com/users/rhshadrach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rhshadrach/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-08T04:03:58Z",
        "updated_at": "2022-12-08T04:03:58Z",
        "author_association": "NONE",
        "body": "@jrbourbeau - not sure if this is important, but all the deprecations involving `numeric_only` have been enforced on the main branch of pandas.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1341961696/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1363383997",
        "html_url": "https://github.com/dask/dask/issues/9471#issuecomment-1363383997",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9471",
        "id": 1363383997,
        "node_id": "IC_kwDOAbcwm85RQ5a9",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-22T21:55:15Z",
        "updated_at": "2022-12-22T21:55:15Z",
        "author_association": "MEMBER",
        "body": "Thanks for the heads up @rhshadrach! I'm seeing some test failures in our upstream build (xref https://github.com/dask/dask/issues/9736) that I think are related. I know you lead the `numeric_only` efforts on the `pandas` side -- do you happen to have interest / bandwidth to help make the corresponding changes on the `dask` side? (no obligation though) ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1363383997/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1366370855",
        "html_url": "https://github.com/dask/dask/issues/9471#issuecomment-1366370855",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9471",
        "id": 1366370855,
        "node_id": "IC_kwDOAbcwm85RcSon",
        "user": {
            "login": "rhshadrach",
            "id": 45562402,
            "node_id": "MDQ6VXNlcjQ1NTYyNDAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/45562402?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rhshadrach",
            "html_url": "https://github.com/rhshadrach",
            "followers_url": "https://api.github.com/users/rhshadrach/followers",
            "following_url": "https://api.github.com/users/rhshadrach/following{/other_user}",
            "gists_url": "https://api.github.com/users/rhshadrach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rhshadrach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rhshadrach/subscriptions",
            "organizations_url": "https://api.github.com/users/rhshadrach/orgs",
            "repos_url": "https://api.github.com/users/rhshadrach/repos",
            "events_url": "https://api.github.com/users/rhshadrach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rhshadrach/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-28T05:04:33Z",
        "updated_at": "2022-12-28T05:04:33Z",
        "author_association": "NONE",
        "body": "Happy to assist in summarizing/understanding the pandas changes, and fixing pandas if something is off, but I don't have the bandwidth to make changes to dask.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1366370855/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1377944559",
        "html_url": "https://github.com/dask/dask/issues/9471#issuecomment-1377944559",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9471",
        "id": 1377944559,
        "node_id": "IC_kwDOAbcwm85SIcPv",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-10T21:57:09Z",
        "updated_at": "2023-01-10T21:57:09Z",
        "author_association": "MEMBER",
        "body": "No worries @rhshadrach -- totally understand\r\n\r\n@charlesbluca is this something you have interest in / bandwidth to work on? ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1377944559/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1403133704",
        "html_url": "https://github.com/dask/dask/issues/9471#issuecomment-1403133704",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9471",
        "id": 1403133704,
        "node_id": "IC_kwDOAbcwm85Toh8I",
        "user": {
            "login": "j-bennet",
            "id": 637013,
            "node_id": "MDQ6VXNlcjYzNzAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/637013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-bennet",
            "html_url": "https://github.com/j-bennet",
            "followers_url": "https://api.github.com/users/j-bennet/followers",
            "following_url": "https://api.github.com/users/j-bennet/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-bennet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-bennet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-bennet/subscriptions",
            "organizations_url": "https://api.github.com/users/j-bennet/orgs",
            "repos_url": "https://api.github.com/users/j-bennet/repos",
            "events_url": "https://api.github.com/users/j-bennet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-bennet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-25T06:00:20Z",
        "updated_at": "2023-01-25T06:00:20Z",
        "author_association": "MEMBER",
        "body": "I slightly modified the code from https://github.com/pandas-dev/pandas/issues/46072, to compare pandas 2.0 vs 1.5 behavior with aggregations on `DataFrameGroupBy` object, here is my version:\r\n\r\n<details>\r\n<summary>Show the code</summary>\r\n\r\n\r\n```python\r\nimport pandas as pd\r\nimport warnings\r\nimport itertools as it\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    numeric = [1, 1]\r\n    nonnumeric_noagg = [object, object]\r\n    nonnumeric_agg = [\"2\", \"2\"]\r\n    for agg_func in ('sum', 'mean', 'std'):\r\n        output = []\r\n        print(\"=\" * 60)\r\n        print(f\"Agg: {agg_func}\")\r\n        for has_numeric, has_nonnumeric_agg, has_nonnumeric_noagg in it.product(['x', ''], repeat=3):\r\n            for numeric_only in [True, False, None]:\r\n                row = [has_numeric, has_nonnumeric_agg, has_nonnumeric_noagg, numeric_only, \"\", \"\", \"\"]\r\n                df = pd.DataFrame({\"A\": [1, 1]})\r\n                if has_numeric:\r\n                    df[\"B\"] = numeric\r\n                if has_nonnumeric_agg:\r\n                    df[\"C\"] = nonnumeric_agg\r\n                if has_nonnumeric_noagg:\r\n                    df[\"D\"] = nonnumeric_noagg\r\n                warning_msg = \"\"\r\n                try:\r\n                    with warnings.catch_warnings(record=True) as w:\r\n                        result = getattr(df.groupby(\"A\"), agg_func)(numeric_only=numeric_only)\r\n                        if len(w) > 0:\r\n                            warning_msg = {str(x.message)[:20] for x in w}\r\n                except TypeError:\r\n                    row[-3] = \"x\"\r\n                else:\r\n                    row[-2] = result.columns.tolist()\r\n                    row[-1] = warning_msg\r\n                output.append(row)\r\n        out = (pd.DataFrame(\r\n                output,\r\n                columns=[\"has_num\", \"has_str\", \"has_obj\", \"numeric_only\", \"type_err\", \"cols\", \"warning\"])\r\n               .sort_values(by=\"numeric_only\").reset_index(drop=True))\r\n        print(out)\r\n```\r\n\r\n</details>\r\n\r\nFor example, the following output is with Pandas 1.5, for `std` agg:\r\n\r\n```\r\nAgg: std\r\n   has_num has_str has_obj numeric_only type_err    cols                 warning\r\n0        x       x       x        False           [B, C]  {Dropping invalid col}\r\n1        x       x                False           [B, C]\r\n2        x               x        False              [B]  {Dropping invalid col}\r\n3        x                        False              [B]\r\n4                x       x        False              [C]  {Dropping invalid col}\r\n5                x                False              [C]\r\n6                        x        False        x\r\n7                                 False               []\r\n8        x       x       x         True              [B]\r\n9        x       x                 True              [B]\r\n10       x               x         True              [B]\r\n11       x                         True              [B]\r\n12               x       x         True        x\r\n13               x                 True        x\r\n14                       x         True        x\r\n15                                 True               []\r\n16       x       x       x         None           [B, C]  {Dropping invalid col}\r\n17       x       x                 None           [B, C]\r\n18       x               x         None              [B]  {Dropping invalid col}\r\n19       x                         None              [B]\r\n20               x       x         None              [C]  {Dropping invalid col}\r\n21               x                 None              [C]\r\n22                       x         None        x\r\n23                                 None               []\r\n```\r\n\r\nAnd this is `std` with Pandas 2.0:\r\n\r\n```\r\nAgg: std\r\n   has_num has_str has_obj numeric_only type_err    cols warning\r\n0        x       x       x        False        x\r\n1        x       x                False           [B, C]\r\n2        x               x        False        x\r\n3        x                        False              [B]\r\n4                x       x        False        x\r\n5                x                False              [C]\r\n6                        x        False        x\r\n7                                 False               []\r\n8        x       x       x         True              [B]\r\n9        x       x                 True              [B]\r\n10       x               x         True              [B]\r\n11       x                         True              [B]\r\n12               x       x         True        x\r\n13               x                 True        x\r\n14                       x         True        x\r\n15                                 True               []\r\n16       x       x       x         None        x\r\n17       x       x                 None           [B, C]\r\n18       x               x         None        x\r\n19       x                         None              [B]\r\n20               x       x         None        x\r\n21               x                 None              [C]\r\n22                       x         None        x\r\n23                                 None               []\r\n```\r\n\r\nSo `std` behavior in 1.5 was as follows:\r\n\r\n* `TypeError` happens when all columns would be dropped by `numeric_only`\r\n* if `numeric_only` is `False/None`, non-aggregatable columns are dropped with a warning\r\n\r\nIn 2.0:\r\n\r\n* `TypeError` happens when all columns would be dropped by `numeric_only`\r\n* `TypeError` also happens when a non-aggregatable column is present\r\n\r\nNot all aggs behave the same - have to look at the rest of the groupby aggs.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1403133704/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1409764434",
        "html_url": "https://github.com/dask/dask/issues/9471#issuecomment-1409764434",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9471",
        "id": 1409764434,
        "node_id": "IC_kwDOAbcwm85UB0xS",
        "user": {
            "login": "rhshadrach",
            "id": 45562402,
            "node_id": "MDQ6VXNlcjQ1NTYyNDAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/45562402?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rhshadrach",
            "html_url": "https://github.com/rhshadrach",
            "followers_url": "https://api.github.com/users/rhshadrach/followers",
            "following_url": "https://api.github.com/users/rhshadrach/following{/other_user}",
            "gists_url": "https://api.github.com/users/rhshadrach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rhshadrach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rhshadrach/subscriptions",
            "organizations_url": "https://api.github.com/users/rhshadrach/orgs",
            "repos_url": "https://api.github.com/users/rhshadrach/repos",
            "events_url": "https://api.github.com/users/rhshadrach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rhshadrach/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-31T05:05:25Z",
        "updated_at": "2023-01-31T05:05:25Z",
        "author_association": "NONE",
        "body": "> * `TypeError` happens when all columns would be dropped by `numeric_only`\r\n\r\nI think this is a bug. When `as_index=True` it should return an empty DataFrame with the index being the groups. When `as_index=False` the groups should be in the columns instead. I've opened https://github.com/pandas-dev/pandas/issues/51080.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1409764434/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]