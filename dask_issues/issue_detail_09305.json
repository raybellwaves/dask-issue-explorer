{
    "url": "https://api.github.com/repos/dask/dask/issues/9305",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9305/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9305/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9305/events",
    "html_url": "https://github.com/dask/dask/issues/9305",
    "id": 1317395340,
    "node_id": "I_kwDOAbcwm85OhduM",
    "number": 9305,
    "title": "Rolling operations fail with unknown divisions",
    "user": {
        "login": "gjoseph92",
        "id": 3309802,
        "node_id": "MDQ6VXNlcjMzMDk4MDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gjoseph92",
        "html_url": "https://github.com/gjoseph92",
        "followers_url": "https://api.github.com/users/gjoseph92/followers",
        "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
        "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
        "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
        "repos_url": "https://api.github.com/users/gjoseph92/repos",
        "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3798450413,
            "node_id": "LA_kwDOAbcwm87iZ8Dt",
            "url": "https://api.github.com/repos/dask/dask/labels/bug",
            "name": "bug",
            "color": "faadaf",
            "default": true,
            "description": "Something is broken"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-07-25T21:26:52Z",
    "updated_at": "2022-08-29T02:15:28Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport dask.dataframe as dd\r\n\r\ndf = dd.demo.make_timeseries()\r\n\r\n# Works with divisions\r\ndf.x.rolling(\"50D\").mean().compute()\r\n# timestamp\r\n# 2000-01-31 00:00:00    0.637020\r\n# 2000-01-31 00:00:10   -0.179649\r\n# 2000-01-31 00:00:20   -0.343737\r\n# 2000-01-31 00:00:30   -0.206287\r\n# 2000-01-31 00:00:40   -0.206965\r\n#                          ...   \r\n# 2000-12-30 23:59:10    0.000851\r\n# 2000-12-30 23:59:20    0.000850\r\n# 2000-12-30 23:59:30    0.000849\r\n# 2000-12-30 23:59:40    0.000848\r\n# 2000-12-30 23:59:50    0.000846\r\n# Freq: 10S, Name: x, Length: 2894400, dtype: float64\r\n\r\n# Fails without divisions\r\ndfc = df.clear_divisions()\r\ndfc.x.rolling(\"50D\").mean().compute()\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [5], in <cell line: 1>()\r\n----> 1 dfc.x.rolling(\"50D\").mean().compute()\r\n\r\nFile ~/dev/dask/dask/dataframe/rolling.py:534, in Rolling.mean(self)\r\n    532 @derived_from(pd_Rolling)\r\n    533 def mean(self):\r\n--> 534     return self._call_method(\"mean\")\r\n\r\nFile ~/dev/dask/dask/dataframe/rolling.py:507, in Rolling._call_method(self, method_name, *args, **kwargs)\r\n    505     before = self.window - 1\r\n    506     after = 0\r\n--> 507 return map_overlap(\r\n    508     self.pandas_rolling_method,\r\n    509     self.obj,\r\n    510     before,\r\n    511     after,\r\n    512     rolling_kwargs,\r\n    513     method_name,\r\n    514     *args,\r\n    515     token=method_name,\r\n    516     meta=meta,\r\n    517     **kwargs,\r\n    518 )\r\n\r\nFile ~/dev/dask/dask/dataframe/rolling.py:229, in map_overlap(func, df, before, after, meta, enforce_metadata, transform_divisions, align_dataframes, *args, **kwargs)\r\n    227 for arg in args:\r\n    228     if isinstance(arg, _Frame):\r\n--> 229         arg = _handle_frame_argument(arg)\r\n    230         args2.append(arg)\r\n    231         dependencies.append(arg)\r\n\r\nFile ~/dev/dask/dask/dataframe/rolling.py:211, in map_overlap.<locals>._handle_frame_argument(arg)\r\n    208 def _handle_frame_argument(arg):\r\n    209     dsk = {}\r\n--> 211     prevs_parts_dsk, prevs = _get_previous_partitions(arg, before)\r\n    212     dsk.update(prevs_parts_dsk)\r\n    214     nexts_parts_dsk, nexts = _get_nexts_partitions(arg, after)\r\n\r\nFile ~/dev/dask/dask/dataframe/rolling.py:349, in _get_previous_partitions(df, before)\r\n    346 elif isinstance(before, datetime.timedelta):\r\n    347     # Assumes monotonic (increasing?) index\r\n    348     divs = pd.Series(df.divisions)\r\n--> 349     deltas = divs.diff().iloc[1:-1]\r\n    351     # In the first case window-size is larger than at least one partition, thus it is\r\n    352     # necessary to calculate how many partitions must be used for each rolling task.\r\n    353     # Otherwise, these calculations can be skipped (faster)\r\n    355     if (before > deltas).any():\r\n\r\nFile ~/dev/dask-playground/env/lib/python3.9/site-packages/pandas/core/series.py:2697, in Series.diff(self, periods)\r\n   2612 @doc(\r\n   2613     klass=\"Series\",\r\n   2614     extra_params=\"\",\r\n   (...)\r\n   2660 )\r\n   2661 def diff(self, periods: int = 1) -> Series:\r\n   2662     \"\"\"\r\n   2663     First discrete difference of element.\r\n   2664 \r\n   (...)\r\n   2695     {examples}\r\n   2696     \"\"\"\r\n-> 2697     result = algorithms.diff(self._values, periods)\r\n   2698     return self._constructor(result, index=self.index).__finalize__(\r\n   2699         self, method=\"diff\"\r\n   2700     )\r\n\r\nFile ~/dev/dask-playground/env/lib/python3.9/site-packages/pandas/core/algorithms.py:1647, in diff(arr, n, axis)\r\n   1644     _lag_indexer[axis] = slice(None, -n) if n > 0 else slice(-n, None)\r\n   1645     lag_indexer = tuple(_lag_indexer)\r\n-> 1647     out_arr[res_indexer] = op(arr[res_indexer], arr[lag_indexer])\r\n   1649 if is_timedelta:\r\n   1650     out_arr = out_arr.view(\"timedelta64[ns]\")\r\n\r\nTypeError: unsupported operand type(s) for -: 'NoneType' and 'NoneType'\r\n```\r\n\r\nThe problem is that this `_get_previous_partitions` helper assumes the dataframe has known divisions:\r\nhttps://github.com/dask/dask/blob/b7846b986632d0b20668ff632d839bcfb0d5469f/dask/dataframe/rolling.py#L346-L349\r\n\r\nI don't know anything about rolling operations\u2014without known divisions, is it even possible to do them? I'm not sure here if the solution is a different algorithm, or just an informative error message.\r\n\r\n**Environment**:\r\n\r\n- Dask version: 2022.7.1\r\n- Python version: 3.9\r\n- Operating System: macOS\r\n- Install method (conda, pip, source): source\r\n\r\ncc @jsignell",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9305/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9305/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}