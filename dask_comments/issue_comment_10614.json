[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1798277290",
        "html_url": "https://github.com/dask/dask/issues/10614#issuecomment-1798277290",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10614",
        "id": 1798277290,
        "node_id": "IC_kwDOAbcwm85rL4iq",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-07T10:58:16Z",
        "updated_at": "2023-11-07T10:58:16Z",
        "author_association": "MEMBER",
        "body": "We're actually mimicking the pandas API here.\r\n\r\nFrom an implementation POV it's also much more difficult to preserve the index for a distributed dataframe after a join since the join requires us to re-sort the dataframe already. Preserving the index after the merge would require us to sort the data yet again.\r\n\r\nIf you do want to preserve the index values w/out the knowledge of dataframe divisions, I recommend resetting the index before the merge\r\n\r\n```python\r\ndata_left.reset_index().merge(data_right, how='left', left_on='key', right_on='key')\r\n```\r\n\r\nyields\r\n\r\n```python\r\n\tindex\tkey\tvalue1\tvalue2\r\n0\tid_A\tA\taa\taa\r\n0\tid_C\tC\tcc\tcc\r\n1\tid_B1\tB\tbb\tbb\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1798277290/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1798497144",
        "html_url": "https://github.com/dask/dask/issues/10614#issuecomment-1798497144",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10614",
        "id": 1798497144,
        "node_id": "IC_kwDOAbcwm85rMuN4",
        "user": {
            "login": "joelplantinga",
            "id": 36266064,
            "node_id": "MDQ6VXNlcjM2MjY2MDY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/36266064?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joelplantinga",
            "html_url": "https://github.com/joelplantinga",
            "followers_url": "https://api.github.com/users/joelplantinga/followers",
            "following_url": "https://api.github.com/users/joelplantinga/following{/other_user}",
            "gists_url": "https://api.github.com/users/joelplantinga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joelplantinga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joelplantinga/subscriptions",
            "organizations_url": "https://api.github.com/users/joelplantinga/orgs",
            "repos_url": "https://api.github.com/users/joelplantinga/repos",
            "events_url": "https://api.github.com/users/joelplantinga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joelplantinga/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-07T13:21:19Z",
        "updated_at": "2023-11-07T13:21:19Z",
        "author_association": "NONE",
        "body": "Thank you for your quick reply. For anyone running into the same problem, I provide my workaround. Given that I only needed a single column from `data_right` and data_right was small enough to be a Pandas DataFrame, I could do it similar to the following:\r\n\r\n```python\r\ndef add_val2(data_left, data_right):\r\n\r\n    value2 = data_left.merge(data_right, how='left', on='key')['value2']\r\n    data_left['value2'] = value2.values\r\n    return data_left\r\n    \r\ndata_left = dd.from_pandas(pd.DataFrame({'index': [\"id_A\", \"id_B\", \"id_C\"], 'key': ['A', 'B', 'C'], 'value1': ['aa','bb','cc']}), npartitions=2)\r\ndata_left = data_left.set_index('index', sort=True)\r\n\r\ndata_right = pd.DataFrame({'key': [\"A\", \"B\", \"C\"], 'value2': ['aa','bb','cc']})\r\n\r\ndata_left = data_left.map_partitions(lambda df: add_val2(df, data_right))\r\n\r\nprint(data_left.compute())\r\n```\r\n\r\n```\r\n      key value1 value2\r\nindex                  \r\nid_A    A     aa     aa\r\nid_B    B     bb     bb\r\nid_C    C     cc     cc\r\n```\r\n\r\nIn this way I did not need to reset my index (which would be very expensive) while being able left-join the particular column that I needed. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1798497144/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]