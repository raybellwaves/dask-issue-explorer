[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686496575",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686496575",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686496575,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjQ5NjU3NQ==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T13:35:59Z",
        "updated_at": "2020-09-03T13:35:59Z",
        "author_association": "MEMBER",
        "body": "Thanks for reporting this @odovad. I am not sure if this is a pyarrow bug or not (ping @jorisvandenbossche just in case). \r\n\r\nAs a workaround you can specify the schema explicitly. For instance the following seems to work as expected:\r\n\r\n```python\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\nimport pyarrow as pa\r\n\r\nnames = [ 'name']\r\naddress = names\r\n\r\ndf1 = dd.from_pandas(pd.DataFrame({'name':names}), npartitions=1)\r\ndf2 = dd.from_pandas(pd.DataFrame({'address':address}), npartitions=1)\r\ndf1['name'] = df1['name'].astype('category')\r\n\r\ndf = dd.concat([df1, df2])\r\ndel df['address']\r\n\r\ndf.to_parquet('does_not_work', engine=\"pyarrow\", schema={\"name\": pa.string()})\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686496575/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686515854",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686515854",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686515854,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjUxNTg1NA==",
        "user": {
            "login": "jorisvandenbossche",
            "id": 1020496,
            "node_id": "MDQ6VXNlcjEwMjA0OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1020496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorisvandenbossche",
            "html_url": "https://github.com/jorisvandenbossche",
            "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
            "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
            "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
            "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
            "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T14:05:43Z",
        "updated_at": "2020-09-03T14:05:43Z",
        "author_association": "MEMBER",
        "body": "Hmm, with both pyarrow master and dask master, the example of the OP works for me. \r\n\r\nWith released versions it indeed fails. So it might be a recent change in dask fixed it? In any case, in principle the issue with empty / all null partitions should only come up with *object dtype* columns, where pyarrow then cannot correctly infer the type. But in theory for categorical columns this shouldn't be a problem.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686515854/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686525831",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686525831",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686525831,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjUyNTgzMQ==",
        "user": {
            "login": "jorisvandenbossche",
            "id": 1020496,
            "node_id": "MDQ6VXNlcjEwMjA0OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1020496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorisvandenbossche",
            "html_url": "https://github.com/jorisvandenbossche",
            "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
            "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
            "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
            "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
            "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T14:21:17Z",
        "updated_at": "2020-09-03T14:21:17Z",
        "author_association": "MEMBER",
        "body": "> Hmm, with both pyarrow master and dask master, the example of the OP works for me.\r\n\r\nWhoops, sorry, in my dev environment I have also fastparquet installed, which was being used by default. With `engine=\"pyarrow\"` it still fails with master versions of both.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686525831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686528817",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686528817",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686528817,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjUyODgxNw==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T14:25:40Z",
        "updated_at": "2020-09-03T14:25:40Z",
        "author_association": "MEMBER",
        "body": "> With engine=\"pyarrow\" it still fails with master versions of both.\r\n\r\nOk phew. I was starting to get paranoid :) ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686528817/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686534720",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686534720",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686534720,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjUzNDcyMA==",
        "user": {
            "login": "odovad",
            "id": 3889145,
            "node_id": "MDQ6VXNlcjM4ODkxNDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3889145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/odovad",
            "html_url": "https://github.com/odovad",
            "followers_url": "https://api.github.com/users/odovad/followers",
            "following_url": "https://api.github.com/users/odovad/following{/other_user}",
            "gists_url": "https://api.github.com/users/odovad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/odovad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/odovad/subscriptions",
            "organizations_url": "https://api.github.com/users/odovad/orgs",
            "repos_url": "https://api.github.com/users/odovad/repos",
            "events_url": "https://api.github.com/users/odovad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/odovad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T14:34:03Z",
        "updated_at": "2020-09-03T14:35:45Z",
        "author_association": "NONE",
        "body": "Thanks @jsignell @jorisvandenbossche. \r\nI agree, it seems to work when specifying the schema, but we have to pass a pa.schema like `pa.schema({'name':pa.dictionary('int16', 'string')})`. \r\nI thought I could have issues with the dtype of the \"index_type\" of pa.dictionary since dask df._meta represents all \"dictionary\" fields with int8 by default and I thought the issue was due to a mismatch linked to dtypes of categories. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686534720/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686539031",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686539031",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686539031,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjUzOTAzMQ==",
        "user": {
            "login": "jorisvandenbossche",
            "id": 1020496,
            "node_id": "MDQ6VXNlcjEwMjA0OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1020496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorisvandenbossche",
            "html_url": "https://github.com/jorisvandenbossche",
            "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
            "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
            "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
            "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
            "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T14:40:30Z",
        "updated_at": "2020-09-03T14:40:30Z",
        "author_association": "MEMBER",
        "body": "So looking a bit into it: the problem is that the two partitions (at least the actaul pandas dataframe stored in it) have a different categorical dtype: \r\n\r\n```\r\nIn [21]: df.partitions[0].compute().name.dtype\r\nOut[21]: CategoricalDtype(categories=['name'], ordered=False)\r\n\r\nIn [22]: df.partitions[1].compute().name.dtype\r\nOut[22]: CategoricalDtype(categories=[], ordered=False)\r\n```\r\n\r\nwhich results in different pyarrow Table schemas (from putting a `print` statement in dask's `write_partition` after converting the pandas dataframe to an arrow table and before writing it to parquet):\r\n\r\n```\r\npyarrow.Table\r\nname: dictionary<values=string, indices=int8, ordered=0>\r\n__null_dask_index__: int64\r\npyarrow.Table\r\nname: dictionary<values=null, indices=int8, ordered=0>\r\n__null_dask_index__: int64\r\n```\r\n\r\nSo indeed, that gives a mismatch in the dtypes of the categories (\"values\" in the pyarrow repr above)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686539031/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686542578",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686542578",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686542578,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjU0MjU3OA==",
        "user": {
            "login": "odovad",
            "id": 3889145,
            "node_id": "MDQ6VXNlcjM4ODkxNDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3889145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/odovad",
            "html_url": "https://github.com/odovad",
            "followers_url": "https://api.github.com/users/odovad/followers",
            "following_url": "https://api.github.com/users/odovad/following{/other_user}",
            "gists_url": "https://api.github.com/users/odovad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/odovad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/odovad/subscriptions",
            "organizations_url": "https://api.github.com/users/odovad/orgs",
            "repos_url": "https://api.github.com/users/odovad/repos",
            "events_url": "https://api.github.com/users/odovad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/odovad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T14:45:46Z",
        "updated_at": "2020-09-03T14:46:20Z",
        "author_association": "NONE",
        "body": "Thanks @jorisvandenbossche and Pyarrow was more permissive before now, right?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686542578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686544444",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686544444",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686544444,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjU0NDQ0NA==",
        "user": {
            "login": "jorisvandenbossche",
            "id": 1020496,
            "node_id": "MDQ6VXNlcjEwMjA0OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1020496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorisvandenbossche",
            "html_url": "https://github.com/jorisvandenbossche",
            "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
            "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
            "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
            "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
            "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T14:48:36Z",
        "updated_at": "2020-09-03T14:48:36Z",
        "author_association": "MEMBER",
        "body": "Indeed, and more speciifically, pyarrow started to require that when creating a single `_metadata` file that gathers the metadata of all partitions, the schemas are all equal (because that is the implicit assumption of such a `_metadata` file)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686544444/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686546477",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686546477",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686546477,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjU0NjQ3Nw==",
        "user": {
            "login": "jorisvandenbossche",
            "id": 1020496,
            "node_id": "MDQ6VXNlcjEwMjA0OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1020496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorisvandenbossche",
            "html_url": "https://github.com/jorisvandenbossche",
            "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
            "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
            "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
            "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
            "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T14:51:33Z",
        "updated_at": "2020-09-03T14:51:33Z",
        "author_association": "MEMBER",
        "body": "So in the and, this comes a bit down to what I mentioned originally: in theory this issue only happens with empty or all null *object* dtype columns. But here it's a categorical columns but where the `categories` are an empty object dtype Index .. (so if pandas would have a proper string dtype, and support for that in categorical dtype, dask could ensure that the categorical dtype, even if empty, has the correct dtype for the categories).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686546477/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686557256",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686557256",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686557256,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjU1NzI1Ng==",
        "user": {
            "login": "odovad",
            "id": 3889145,
            "node_id": "MDQ6VXNlcjM4ODkxNDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3889145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/odovad",
            "html_url": "https://github.com/odovad",
            "followers_url": "https://api.github.com/users/odovad/followers",
            "following_url": "https://api.github.com/users/odovad/following{/other_user}",
            "gists_url": "https://api.github.com/users/odovad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/odovad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/odovad/subscriptions",
            "organizations_url": "https://api.github.com/users/odovad/orgs",
            "repos_url": "https://api.github.com/users/odovad/repos",
            "events_url": "https://api.github.com/users/odovad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/odovad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T15:07:37Z",
        "updated_at": "2020-09-03T15:07:37Z",
        "author_association": "NONE",
        "body": "Ok, thanks. So for now, we have to specify the full schema? Because I've noticed that the columns passed to schema in to_parquet are the columns we'll get in our final parquet file. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686557256/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686559888",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686559888",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686559888,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjU1OTg4OA==",
        "user": {
            "login": "jorisvandenbossche",
            "id": 1020496,
            "node_id": "MDQ6VXNlcjEwMjA0OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1020496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorisvandenbossche",
            "html_url": "https://github.com/jorisvandenbossche",
            "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
            "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
            "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
            "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
            "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T15:11:54Z",
        "updated_at": "2020-09-03T15:12:08Z",
        "author_association": "MEMBER",
        "body": "According to the docstring of the `schema` keyword, if you pass a `pyarrow.Schema` object, it needs to be the full schema, but if you pass a dict, you should be able to only specify a single column, and the rest still gets inferred:\r\n\r\nhttps://github.com/dask/dask/blob/0ca1607aa14cb81520ca9526f871b631fe6706fa/dask/dataframe/io/parquet/core.py#L349-L358\r\n\r\nSo if that's not happening, that would be a bug in the new keyword.\r\n\r\nNote that in your case, you might also be able to get away with `schema=\"infer\"` (at least for the toy example)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686559888/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686561955",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686561955",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686561955,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjU2MTk1NQ==",
        "user": {
            "login": "odovad",
            "id": 3889145,
            "node_id": "MDQ6VXNlcjM4ODkxNDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3889145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/odovad",
            "html_url": "https://github.com/odovad",
            "followers_url": "https://api.github.com/users/odovad/followers",
            "following_url": "https://api.github.com/users/odovad/following{/other_user}",
            "gists_url": "https://api.github.com/users/odovad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/odovad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/odovad/subscriptions",
            "organizations_url": "https://api.github.com/users/odovad/orgs",
            "repos_url": "https://api.github.com/users/odovad/repos",
            "events_url": "https://api.github.com/users/odovad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/odovad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T15:15:06Z",
        "updated_at": "2020-09-03T15:15:06Z",
        "author_association": "NONE",
        "body": "Thanks, when passing a dict (like in @jsignell example), I get a `'dict' object has no attribute 'names'` error.\r\nI'm the only one or dicts do work ?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686561955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686565710",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686565710",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686565710,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjU2NTcxMA==",
        "user": {
            "login": "jorisvandenbossche",
            "id": 1020496,
            "node_id": "MDQ6VXNlcjEwMjA0OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1020496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jorisvandenbossche",
            "html_url": "https://github.com/jorisvandenbossche",
            "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
            "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
            "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
            "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
            "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
            "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T15:20:57Z",
        "updated_at": "2020-09-03T15:20:57Z",
        "author_association": "MEMBER",
        "body": "For me the example of @jsignell works using dask 2.25 and pyarrow 1.0 (the example does only have one column though, so it doesn't really ensure the other columns were not dropped)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686565710/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/686570915",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-686570915",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 686570915,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjU3MDkxNQ==",
        "user": {
            "login": "odovad",
            "id": 3889145,
            "node_id": "MDQ6VXNlcjM4ODkxNDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3889145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/odovad",
            "html_url": "https://github.com/odovad",
            "followers_url": "https://api.github.com/users/odovad/followers",
            "following_url": "https://api.github.com/users/odovad/following{/other_user}",
            "gists_url": "https://api.github.com/users/odovad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/odovad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/odovad/subscriptions",
            "organizations_url": "https://api.github.com/users/odovad/orgs",
            "repos_url": "https://api.github.com/users/odovad/repos",
            "events_url": "https://api.github.com/users/odovad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/odovad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-03T15:29:03Z",
        "updated_at": "2020-09-14T15:13:36Z",
        "author_association": "NONE",
        "body": "It works also for me, I was using dask 2.21. Thanks @jorisvandenbossche !",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/686570915/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/692106446",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-692106446",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 692106446,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjEwNjQ0Ng==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-14T14:46:26Z",
        "updated_at": "2020-09-14T14:46:26Z",
        "author_association": "MEMBER",
        "body": "@rjzamora in case you have thoughts on whether we can do something better from the dask side. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/692106446/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/692228987",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-692228987",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 692228987,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjIyODk4Nw==",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-14T18:20:34Z",
        "updated_at": "2020-09-14T18:21:02Z",
        "author_association": "MEMBER",
        "body": "Thanks for the ping - It looks like the new schema options address this issue reasonably well. I think the docstring is reasonably clear, but I guess the error message could be improved:\r\n\r\n```\r\nRuntimeError: Schemas are inconsistent, try using `to_parquet(..., schema=\"infer\")`, or pass an explicit pyarrow schema.\r\n```\r\n\r\nThis clearly states that the user should try modifying the `schema`, but `\"infer\"` will definitely not work correctly for mismatched `Categorical` dtypes. Perhaps we need to improve the recommendation to refer to the `schema` argument more generally?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/692228987/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/693427595",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-693427595",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 693427595,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzQyNzU5NQ==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-16T14:03:25Z",
        "updated_at": "2020-09-16T14:03:25Z",
        "author_association": "MEMBER",
        "body": "Is there a scenario where `schema=\"infer\"` is really the solution for resolving this error?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/693427595/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/693455025",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-693455025",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 693455025,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzQ1NTAyNQ==",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-16T14:46:17Z",
        "updated_at": "2020-09-16T14:46:17Z",
        "author_association": "MEMBER",
        "body": "> Is there a scenario where schema=\"infer\" is really the solution for resolving this error?\r\n\r\nGood question - With `schema=\"infer\"`, the first partition will be used to infer a pyarrow schema, and then other partitions will be sampled if the first partition contains null \"object\"-type columns (we keep sampling untill we hve a non-null partition for each \"object\" column). Overall, we are targeting pandas \"object\" types, rather than Categorical.\r\n\r\nWe *may* be able to improve `\"infer\"` to handle mismatched categorical columns, but it may make more sense to ensure the `concat` operation results in a consistent type accross partitions?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/693455025/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/696141537",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-696141537",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 696141537,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjE0MTUzNw==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-21T14:13:24Z",
        "updated_at": "2020-09-21T14:13:24Z",
        "author_association": "MEMBER",
        "body": "Ah ok. Thanks for explaining that. I think improving concat makes more sense in this case, but the error message is a nice low-hanging fruit. I'll open a PR for that in the meantime. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/696141537/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/748650266",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-748650266",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 748650266,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODY1MDI2Ng==",
        "user": {
            "login": "chrisroat",
            "id": 1053153,
            "node_id": "MDQ6VXNlcjEwNTMxNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1053153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisroat",
            "html_url": "https://github.com/chrisroat",
            "followers_url": "https://api.github.com/users/chrisroat/followers",
            "following_url": "https://api.github.com/users/chrisroat/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisroat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisroat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisroat/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisroat/orgs",
            "repos_url": "https://api.github.com/users/chrisroat/repos",
            "events_url": "https://api.github.com/users/chrisroat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisroat/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-20T19:29:14Z",
        "updated_at": "2020-12-20T19:29:14Z",
        "author_association": "CONTRIBUTOR",
        "body": "I don't want to hijack this thread, but I hit the empty dataframe w/ object dtype issue and the internet lead me here.  The error message was helpful @jsignell, and I was able to workaround.  I had a column with a variable length array, and I could make it work with a pa.list_(pa.float32()) type.\r\n\r\nIs there a place this is being tracked/discussed, as there are now 3 levels where to sync up the schema to be ready for empty partitions:\r\n- During initial calculation of dataframe, if data is empty. (In an ideal world, returning None is easier than a faked empty dataframe)\r\n- As the meta argument for `dd.from_delayed` (I re-use the function from the previous point)\r\n- During I/O to pyarrow (for just object columns, in a likely different section of code, using pyarrow data types)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/748650266/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1079260420",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-1079260420",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 1079260420,
        "node_id": "IC_kwDOAbcwm85AVDUE",
        "user": {
            "login": "bryanwweber",
            "id": 4396228,
            "node_id": "MDQ6VXNlcjQzOTYyMjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4396228?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bryanwweber",
            "html_url": "https://github.com/bryanwweber",
            "followers_url": "https://api.github.com/users/bryanwweber/followers",
            "following_url": "https://api.github.com/users/bryanwweber/following{/other_user}",
            "gists_url": "https://api.github.com/users/bryanwweber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bryanwweber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bryanwweber/subscriptions",
            "organizations_url": "https://api.github.com/users/bryanwweber/orgs",
            "repos_url": "https://api.github.com/users/bryanwweber/repos",
            "events_url": "https://api.github.com/users/bryanwweber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bryanwweber/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-25T17:46:26Z",
        "updated_at": "2022-03-25T17:46:26Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rjzamora I can't reproduce the issue in the OP. \r\n\r\n> We may be able to improve \"infer\" to handle mismatched categorical columns, but it may make more sense to ensure the concat operation results in a consistent type accross partitions?\r\n\r\nRegarding the quote above, should this issue be closed, or is there more to do in the `concat` operation?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1079260420/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1092905934",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-1092905934",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 1092905934,
        "node_id": "IC_kwDOAbcwm85BJGvO",
        "user": {
            "login": "msebbah",
            "id": 5494857,
            "node_id": "MDQ6VXNlcjU0OTQ4NTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5494857?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/msebbah",
            "html_url": "https://github.com/msebbah",
            "followers_url": "https://api.github.com/users/msebbah/followers",
            "following_url": "https://api.github.com/users/msebbah/following{/other_user}",
            "gists_url": "https://api.github.com/users/msebbah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/msebbah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/msebbah/subscriptions",
            "organizations_url": "https://api.github.com/users/msebbah/orgs",
            "repos_url": "https://api.github.com/users/msebbah/repos",
            "events_url": "https://api.github.com/users/msebbah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/msebbah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-08T14:13:00Z",
        "updated_at": "2022-04-08T14:13:00Z",
        "author_association": "NONE",
        "body": "Same issue for me. \r\nI've been through with this workaround:\r\n`                                    \r\n  for c in  df.dtypes[df.dtypes == 'category'].index :                                                                              \r\n            df[c] = df[c].cat.add_categories(['default'])\r\n`",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1092905934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1093001299",
        "html_url": "https://github.com/dask/dask/issues/6587#issuecomment-1093001299",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6587",
        "id": 1093001299,
        "node_id": "IC_kwDOAbcwm85BJeBT",
        "user": {
            "login": "bryanwweber",
            "id": 4396228,
            "node_id": "MDQ6VXNlcjQzOTYyMjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4396228?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bryanwweber",
            "html_url": "https://github.com/bryanwweber",
            "followers_url": "https://api.github.com/users/bryanwweber/followers",
            "following_url": "https://api.github.com/users/bryanwweber/following{/other_user}",
            "gists_url": "https://api.github.com/users/bryanwweber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bryanwweber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bryanwweber/subscriptions",
            "organizations_url": "https://api.github.com/users/bryanwweber/orgs",
            "repos_url": "https://api.github.com/users/bryanwweber/repos",
            "events_url": "https://api.github.com/users/bryanwweber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bryanwweber/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-08T15:24:28Z",
        "updated_at": "2022-04-08T15:24:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "@msebbah Can you please provide a complete minimal example to reproduce this issue? What version of Dask are you using?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1093001299/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]