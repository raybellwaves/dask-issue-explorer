{
    "url": "https://api.github.com/repos/dask/dask/issues/5211",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/5211/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/5211/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/5211/events",
    "html_url": "https://github.com/dask/dask/issues/5211",
    "id": 476120535,
    "node_id": "MDU6SXNzdWU0NzYxMjA1MzU=",
    "number": 5211,
    "title": "Computing windowed statistics",
    "user": {
        "login": "alimanfoo",
        "id": 703554,
        "node_id": "MDQ6VXNlcjcwMzU1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/703554?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alimanfoo",
        "html_url": "https://github.com/alimanfoo",
        "followers_url": "https://api.github.com/users/alimanfoo/followers",
        "following_url": "https://api.github.com/users/alimanfoo/following{/other_user}",
        "gists_url": "https://api.github.com/users/alimanfoo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alimanfoo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alimanfoo/subscriptions",
        "organizations_url": "https://api.github.com/users/alimanfoo/orgs",
        "repos_url": "https://api.github.com/users/alimanfoo/repos",
        "events_url": "https://api.github.com/users/alimanfoo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alimanfoo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2019-08-02T10:51:20Z",
    "updated_at": "2020-02-10T09:16:33Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I have a use case where I need to compute some statistic over windows of a 1D input array. In some cases these are moving windows with a regular size and step, but in other cases the size and step of the windows may be irregular. I'm trying to figure out the best strategy for constructing this as a Dask graph.\r\n\r\nIn general I have some input data which is a dask array, e.g. for illustration:\r\n\r\n```python\r\nx = da.arange(1000, chunks=100)\r\n```\r\n\r\n... and I have an array of window start and stop indices, e.g.:\r\n\r\n```python\r\nindices = np.array([[i, i+100] for i in range(0, 500, 50)])\r\n```\r\n\r\nI can see how to manually construct a graph which has the input values for each window, e.g.:\r\n\r\n```\r\ndsk = {\r\n    ('windows', c): (dask.base.getitem, x, (slice(start, stop),))\r\n    for c, (start, stop) in enumerate(indices)\r\n}\r\nchunks = (tuple(stop - start for start, stop in indices),)\r\nwindows = da.Array(dsk, name='windows', chunks=chunks, dtype=x.dtype)\r\n```\r\n\r\n...and from there I can see how to use `map_blocks` to compute a statistic for each window, e.g.:\r\n\r\n```\r\nresult = windows.map_blocks(np.mean, chunks=((1,) * len(windows.chunks[0]),), dtype=np.float64, keepdims=True)\r\n```\r\n\r\nIs this the best strategy? Am I missing an easier or more efficient way?\r\n\r\nA follow-up question, what if the input array has much larger chunk sizes than the window sizes? I.e., multiple windows fall into each input chunk (which a few windows overlapping two chunks)? Will the above strategy have inefficiencies in that case (e.g., causing input chunks to be computed multiple times)?\r\n\r\nI did look at `map_overlaps()` but I think because the windows have arbitrary starts and stops then I need something different.\r\n\r\nThanks in advance.\r\n\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/5211/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/5211/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}