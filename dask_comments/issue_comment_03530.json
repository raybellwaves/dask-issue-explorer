[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/391815196",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-391815196",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 391815196,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTgxNTE5Ng==",
        "user": {
            "login": "pitrou",
            "id": 1721820,
            "node_id": "MDQ6VXNlcjE3MjE4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pitrou",
            "html_url": "https://github.com/pitrou",
            "followers_url": "https://api.github.com/users/pitrou/followers",
            "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
            "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
            "organizations_url": "https://api.github.com/users/pitrou/orgs",
            "repos_url": "https://api.github.com/users/pitrou/repos",
            "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pitrou/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-24T18:30:57Z",
        "updated_at": "2018-05-24T18:30:57Z",
        "author_association": "MEMBER",
        "body": "See discussion in https://bugs.python.org/issue33444",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/391815196/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/391817775",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-391817775",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 391817775,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTgxNzc3NQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-24T18:39:39Z",
        "updated_at": "2018-05-24T18:39:39Z",
        "author_association": "MEMBER",
        "body": "Hrm, interesting.  I set `export MALLOC_ARENA_MAX=1`, then start a jupyter notebook and work from there.\r\n\r\nSometimes I get no leak, sometimes I get a much bigger leak at 1.4GB.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/391817775/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392185089",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-392185089",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 392185089,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjE4NTA4OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-25T20:56:24Z",
        "updated_at": "2018-05-25T20:56:24Z",
        "author_association": "MEMBER",
        "body": "cc @stefanv and @mattip",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392185089/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392185395",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-392185395",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 392185395,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjE4NTM5NQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-25T20:57:46Z",
        "updated_at": "2018-05-25T20:57:46Z",
        "author_association": "MEMBER",
        "body": "Also, as suggested by @stuartarchibald \r\n\r\n```\r\nmrocklin@carbon:~/workspace/play$ python memory-sharding.py \r\n52.20 MB\r\n[########################################] | 100% Completed |  7.4s\r\n568.71 MB\r\nmrocklin@carbon:~/workspace/play$ export MALLOC_MMAP_THRESHOLD_=0\r\n\r\nmrocklin@carbon:~/workspace/play$ python memory-sharding.py \r\n142.88 MB\r\n[########################################] | 100% Completed |  7.3s\r\n147.49 MB\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392185395/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392186290",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-392186290",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 392186290,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjE4NjI5MA==",
        "user": {
            "login": "pitrou",
            "id": 1721820,
            "node_id": "MDQ6VXNlcjE3MjE4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pitrou",
            "html_url": "https://github.com/pitrou",
            "followers_url": "https://api.github.com/users/pitrou/followers",
            "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
            "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
            "organizations_url": "https://api.github.com/users/pitrou/orgs",
            "repos_url": "https://api.github.com/users/pitrou/repos",
            "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pitrou/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-25T21:01:28Z",
        "updated_at": "2018-05-25T21:01:28Z",
        "author_association": "MEMBER",
        "body": "You probably don't want 0 for `MALLOC_MMAP_THRESHOLD_` but a round number of 4kB pages (for example 16384 bytes). Smaller allocations should probably still go through the normal allocator.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392186290/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392263282",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-392263282",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 392263282,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI2MzI4Mg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T13:57:41Z",
        "updated_at": "2018-05-26T13:57:41Z",
        "author_association": "MEMBER",
        "body": "@pitrou , long term what do you think should happen here?  Can this issue be globally resolved through changes in CPython?  Should Numpy change the way it calls `malloc`?  Or can this not safely be resolved in libraries and we need to encourage people to set environment variables?  ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392263282/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392263549",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-392263549",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 392263549,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI2MzU0OQ==",
        "user": {
            "login": "pitrou",
            "id": 1721820,
            "node_id": "MDQ6VXNlcjE3MjE4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pitrou",
            "html_url": "https://github.com/pitrou",
            "followers_url": "https://api.github.com/users/pitrou/followers",
            "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
            "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
            "organizations_url": "https://api.github.com/users/pitrou/orgs",
            "repos_url": "https://api.github.com/users/pitrou/repos",
            "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pitrou/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T14:01:51Z",
        "updated_at": "2018-05-26T14:01:51Z",
        "author_association": "MEMBER",
        "body": "I think you couid add a documentation section about memory consumption issues and mention those environment variables there.\r\n\r\nIt's not Numpy's or Python's business to make global decisions about the system memory allocator's heuristics in the process they execute in, IMHO. What Dask/distributed could perhaps do is, on Linux, call C `mallopt` with the right arguments (such as `mallopt(M_MMAP_THRESHOLD, 16*1024)`). This will require something like a ctypes wrapper, but it should be trivial given the `mallopt` signature.\r\n\r\ncc'ing @njsmith just in case.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392263549/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392263810",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-392263810",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 392263810,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI2MzgxMA==",
        "user": {
            "login": "pitrou",
            "id": 1721820,
            "node_id": "MDQ6VXNlcjE3MjE4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pitrou",
            "html_url": "https://github.com/pitrou",
            "followers_url": "https://api.github.com/users/pitrou/followers",
            "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
            "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
            "organizations_url": "https://api.github.com/users/pitrou/orgs",
            "repos_url": "https://api.github.com/users/pitrou/repos",
            "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pitrou/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T14:06:16Z",
        "updated_at": "2018-05-26T14:06:36Z",
        "author_association": "MEMBER",
        "body": "From `/usr/include/malloc.h`:\r\n```c\r\n/* mallopt options that actually do something */\r\n#define M_TRIM_THRESHOLD    -1\r\n#define M_TOP_PAD           -2\r\n#define M_MMAP_THRESHOLD    -3\r\n#define M_MMAP_MAX          -4\r\n#define M_CHECK_ACTION      -5\r\n#define M_PERTURB           -6\r\n#define M_ARENA_TEST        -7\r\n#define M_ARENA_MAX         -8\r\n```\r\n\r\nHere is an example call from Python:\r\n```\r\n>>> from ctypes import *\r\n>>> libc = CDLL('libc.so.6')\r\n>>> mallopt = libc.mallopt\r\n>>> mallopt.argtypes = [c_int, c_int]\r\n>>> mallopt.restype = c_int\r\n>>> \r\n>>> M_MMAP_THRESHOLD = -3\r\n# The following would return 0 on error\r\n>>> mallopt(M_MMAP_THRESHOLD, 16*1024)\r\n1\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392263810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392264145",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-392264145",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 392264145,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI2NDE0NQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T14:12:16Z",
        "updated_at": "2018-05-26T14:12:16Z",
        "author_association": "MEMBER",
        "body": "Also, for comparison with `MALLOC_ARENA_MAX=1`\r\n\r\n```\r\nmrocklin@carbon:~/workspace/play$ python memory-sharding.py \r\n52.40 MB\r\n[########################################] | 100% Completed |  6.9s\r\n[########################################] | 100% Completed |  0.1s\r\n760.98 MB\r\nmrocklin@carbon:~/workspace/play$ export MALLOC_ARENA_MAX=1\r\nmrocklin@carbon:~/workspace/play$ python memory-sharding.py \r\n52.08 MB\r\n[########################################] | 100% Completed |  5.8s\r\n[########################################] | 100% Completed |  0.1s\r\n966.14 MB\r\nmrocklin@carbon:~/workspace/play$ python memory-sharding.py \r\n52.21 MB\r\n[########################################] | 100% Completed |  5.9s\r\n[########################################] | 100% Completed |  0.1s\r\n57.24 MB\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392264145/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392264287",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-392264287",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 392264287,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI2NDI4Nw==",
        "user": {
            "login": "pitrou",
            "id": 1721820,
            "node_id": "MDQ6VXNlcjE3MjE4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pitrou",
            "html_url": "https://github.com/pitrou",
            "followers_url": "https://api.github.com/users/pitrou/followers",
            "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
            "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
            "organizations_url": "https://api.github.com/users/pitrou/orgs",
            "repos_url": "https://api.github.com/users/pitrou/repos",
            "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pitrou/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T14:15:25Z",
        "updated_at": "2018-05-26T14:15:25Z",
        "author_association": "MEMBER",
        "body": "Interesting. According to the `mallopt` man page:\r\n\r\n> Arenas are thread safe and therefore may have multiple concurrent memory requests.  The trade-off is between the number of threads and the number of arenas. The  more arenas you have, the lower the per-thread contention, but the higher the memory usage.\r\n\r\nHave you tried something like `MALLOC_MMAP_THRESHOLD_=16384`? With `MALLOC_MMAP_THRESHOLD_=0`, your `memory-sharding.py` example starts at 142 MB instead of 52 MB, which doesn't seem desirable.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392264287/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392264820",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-392264820",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 392264820,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI2NDgyMA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T14:25:08Z",
        "updated_at": "2018-05-26T14:25:08Z",
        "author_association": "MEMBER",
        "body": "Yes, this seems nicer.\r\n\r\n```\r\nmrocklin@carbon:~/workspace/play$ python memory-sharding.py \r\n52.22 MB\r\n[########################################] | 100% Completed |  6.5s\r\n[########################################] | 100% Completed |  0.1s\r\n697.00 MB\r\nmrocklin@carbon:~/workspace/play$ export MALLOC_MMAP_THRESHOLD_=16384\r\nmrocklin@carbon:~/workspace/play$ python memory-sharding.py \r\n52.42 MB\r\n[########################################] | 100% Completed |  7.3s\r\n[########################################] | 100% Completed |  0.1s\r\n56.50 MB\r\n```\r\n\r\nIt does reliably seem to increase runtimes, though that would be acceptable.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392264820/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392265024",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-392265024",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 392265024,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI2NTAyNA==",
        "user": {
            "login": "pitrou",
            "id": 1721820,
            "node_id": "MDQ6VXNlcjE3MjE4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pitrou",
            "html_url": "https://github.com/pitrou",
            "followers_url": "https://api.github.com/users/pitrou/followers",
            "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
            "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
            "organizations_url": "https://api.github.com/users/pitrou/orgs",
            "repos_url": "https://api.github.com/users/pitrou/repos",
            "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pitrou/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T14:28:42Z",
        "updated_at": "2018-05-26T14:28:42Z",
        "author_association": "MEMBER",
        "body": "One downside of `mmap` is that it can cost more CPU (for example because it always returns zero-initialized memory). That's why the libc is cautious about using it.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392265024/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392265241",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-392265241",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 392265241,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI2NTI0MQ==",
        "user": {
            "login": "pitrou",
            "id": 1721820,
            "node_id": "MDQ6VXNlcjE3MjE4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1721820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pitrou",
            "html_url": "https://github.com/pitrou",
            "followers_url": "https://api.github.com/users/pitrou/followers",
            "following_url": "https://api.github.com/users/pitrou/following{/other_user}",
            "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions",
            "organizations_url": "https://api.github.com/users/pitrou/orgs",
            "repos_url": "https://api.github.com/users/pitrou/repos",
            "events_url": "https://api.github.com/users/pitrou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pitrou/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T14:32:17Z",
        "updated_at": "2018-05-26T14:32:17Z",
        "author_association": "MEMBER",
        "body": "By the way, an orthogonal possibility would be for Anaconda to link its Python builds with an alternative malloc library such as [jemalloc](http://jemalloc.net/). Perhaps that would improve the numbers, or not.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392265241/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392265910",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-392265910",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 392265910,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI2NTkxMA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-26T14:43:25Z",
        "updated_at": "2018-05-26T14:43:25Z",
        "author_association": "MEMBER",
        "body": "cc @mingwandroid",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392265910/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/392556922",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-392556922",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 392556922,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjU1NjkyMg==",
        "user": {
            "login": "stuartarchibald",
            "id": 907717,
            "node_id": "MDQ6VXNlcjkwNzcxNw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/907717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stuartarchibald",
            "html_url": "https://github.com/stuartarchibald",
            "followers_url": "https://api.github.com/users/stuartarchibald/followers",
            "following_url": "https://api.github.com/users/stuartarchibald/following{/other_user}",
            "gists_url": "https://api.github.com/users/stuartarchibald/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stuartarchibald/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stuartarchibald/subscriptions",
            "organizations_url": "https://api.github.com/users/stuartarchibald/orgs",
            "repos_url": "https://api.github.com/users/stuartarchibald/repos",
            "events_url": "https://api.github.com/users/stuartarchibald/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stuartarchibald/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-28T15:36:50Z",
        "updated_at": "2018-05-28T15:36:50Z",
        "author_association": "CONTRIBUTOR",
        "body": "RE https://github.com/dask/dask/issues/3530#issuecomment-392185395 setting `MALLOC_MMAP_THRESHOLD_=0` was with view of illustrating the issue, in practice this isn't a good idea as `mmap` is expensive and most of the time isn't really needed, as noted by @pitrou.\r\n\r\nThe details of the behaviour of the `mmap` thresholds are in [the comments](https://code.woboq.org/userspace/glibc/malloc/malloc.c.html#922) of `malloc.c`.\r\nThere is a dynamic threshold level (`MALLOC_MMAP_THRESHOLD_`) that is used to adjust the balance between `mmap` and `brk`. Essentially memory requests over the `MALLOC_MMAP_THRESHOLD_` size go to `mmap`, once this memory is unmapped the size of the unmapped chunk is fed back to the threshold so that `brk` is used next time for that size chunk. This is intended to have the effect of large long term allocations being `mmap`'d and large but transient allocations being initially `mmap`'d but subsequently `brk`'d. It seems like the whole point of this is to balance the cost of using `mmap` against irretrievably fragmented heaps and to help \"size\" the heap to the size of common transient allocation requests.\r\n\r\nIt should also be noted that if `MALLOC_MMAP_THRESHOLD_` is employed the dynamic adjustment of the threshold is disabled. I imagine if a program's memory allocation requirement is distinctly bimodal with a \"small\" and a \"very large\" peak, then setting this to somewhere in the middle of the two peaks may have a good effect on heap memory usage as a fragmented heap is less likely.\r\n\r\nIn the explicit case above, this means that if the `.compute()` is called in e.g. a loop, then the dynamic threshold adjustment will yield a potentially high but long term relatively stable memory usage pattern as the first run through the loop will `size` the heap/thresholds and as such subsequent allocations should be quick and not necessarily fragment the heap further. In the case of a single run of this sort of operation the threshold adjustment may not have a noticeable benefit, as demonstrated by the original reported issue.\r\n\r\nExperimenting with the above, the chunks are `(100*2e4*8)` bytes (just under `16Mb`), therefore setting `MALLOC_MMAP_THRESHOLD_=14680064` (`14Mb`), should force the chunks to `mmap` from the outset and yield a small `RSS`. Locally this gives `RSS` `107Mb` before and `122Mb` after the call to `.compute()`.\r\n\r\nIt is also worth noting:\r\n * `mallinfo` only sees the main arena, so in a multithreaded context may not be ideal.\r\n * That some members of the `mallinfo` struct are typed as `int` but implemented using `long`, so are subject to overflow/wraparound and may well be \"inaccurate\".\r\n\r\nThoughts on any of this are most welcome...!\r\n\r\nAlso, here's some somewhat hacky but functioning piece of code that records and plots `mallinfo` across a few iterations of the `.compute()`. Needs `pandas` and `matplotlib` along with the usual. Thanks to @pitrou for the `MallInfo` binding :)\r\n\r\n```python\r\nimport ctypes\r\nimport gc\r\nimport threading\r\nimport time\r\nimport datetime\r\nfrom pandas import DataFrame as df\r\nimport matplotlib.pyplot as plt\r\nfrom distributed.utils import format_bytes\r\nimport dask.array as da\r\nimport psutil\r\n\r\n\r\nclass MallInfo(ctypes.Structure):\r\n    _fields_ = [(name, ctypes.c_int)\r\n                for name in ('arena', 'ordblks', 'smblks', 'hblks', 'hblkhd',\r\n                             'usmblks', 'fsmblks', 'uordblks', 'fordblks',\r\n                             'keepcost')]\r\n\r\n\r\nlibc = ctypes.CDLL(\"libc.so.6\")\r\nmallinfo = libc.mallinfo\r\nmallinfo.argtypes = []\r\nmallinfo.restype = MallInfo\r\n\r\n\r\ndef get_mallinfo():\r\n    info = mallinfo()\r\n    fields = [(name, getattr(info, name)) for name, _ in info._fields_]\r\n    return {k: v for k, v in fields}\r\n\r\n\r\ndef show_mallinfo():\r\n    print(\"Malloc info:\")\r\n    for name, value in get_mallinfo().items():\r\n        print(f\"- {name}: {value}\")\r\n    print(\"\")\r\n\r\n\r\nshow_mallinfo()\r\nx = da.ones((2e4, 2e4), chunks=(2e4, 220))\r\ny = x.rechunk((100, 2e4))\r\nz = y.rechunk((2e4, 100))\r\n\r\nproc = psutil.Process()\r\n\r\nprint(format_bytes(proc.memory_info().rss))\r\nprint(proc.memory_full_info())\r\n\r\n\r\ndef malloc_spy(signal, wait, ticks, current_op):\r\n    while not signal.wait(1e-4):\r\n        now = datetime.datetime.now()\r\n        minfo = get_mallinfo()\r\n        # add in current op info\r\n        minfo['current_op'] = current_op['name']\r\n        ticks.append((now, minfo))\r\n        time.sleep(wait)\r\n\r\n\r\nsignal = threading.Event()  # to signal stop\r\nticks = []  # mutable, holds ticks\r\ncurrent_op = {'name': -1}  # mutable, current operation/iteration\r\n\r\nthr = threading.Thread(\r\n    target=malloc_spy,\r\n    args=(\r\n        signal,\r\n        1e-3,\r\n        ticks,\r\n        current_op))\r\nthr.start()\r\n\r\nniterations = 5\r\n\r\nfor i in range(niterations):\r\n    current_op['name'] = i\r\n    print(str(i).center(80, '-'))\r\n    z.sum().compute(scheduler='threads')\r\n    print(format_bytes(proc.memory_info().rss))\r\n    print(proc.memory_full_info())\r\n\r\n# kill the malloc_spy\r\nsignal.set()\r\nthr.join()\r\n\r\n# process into a plot\r\ninfo = df.from_dict({x[0]: x[1] for x in ticks}).transpose()\r\ninfo.plot(subplots=True, style='.-')\r\nplt.show() # hblkhd looks strange due to signed int overflow\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/392556922/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393033615",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393033615",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393033615,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzAzMzYxNQ==",
        "user": {
            "login": "mattip",
            "id": 823911,
            "node_id": "MDQ6VXNlcjgyMzkxMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattip",
            "html_url": "https://github.com/mattip",
            "followers_url": "https://api.github.com/users/mattip/followers",
            "following_url": "https://api.github.com/users/mattip/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
            "organizations_url": "https://api.github.com/users/mattip/orgs",
            "repos_url": "https://api.github.com/users/mattip/repos",
            "events_url": "https://api.github.com/users/mattip/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattip/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-30T05:19:29Z",
        "updated_at": "2018-05-30T05:19:29Z",
        "author_association": "NONE",
        "body": "What python are you using? See this issue in cpython, which was fixed for python 3.3 but not for python 2.7\r\nhttps://bugs.python.org/issue11849\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393033615/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393048049",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393048049",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393048049,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzA0ODA0OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-30T06:43:00Z",
        "updated_at": "2018-05-30T06:43:00Z",
        "author_association": "MEMBER",
        "body": "3.6\n\nOn Wed, May 30, 2018 at 1:19 AM, Matti Picus <notifications@github.com>\nwrote:\n\n> What python are you using? See this issue in cpython, which was fixed for\n> python 3.3 but not for python 2.7\n> https://bugs.python.org/issue11849\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3530#issuecomment-393033615>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AASszIjrP2Cbm9jwSWFa30tnaZKsSHL2ks5t3ivhgaJpZM4UMvR7>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393048049/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393328080",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393328080",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393328080,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzMyODA4MA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-30T21:38:05Z",
        "updated_at": "2018-05-30T21:38:05Z",
        "author_association": "MEMBER",
        "body": "> By the way, an orthogonal possibility would be for Anaconda to link its Python builds with an alternative malloc library such as jemalloc. Perhaps that would improve the numbers, or not.\r\n\r\n@mattip and I were talking about this option, and also discussing the possibility of doing it within NumPy itself rather than Anaconda.\r\n\r\n@pitrou do you have any thoughts or concerns about a library like NumPy using jemalloc?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393328080/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393329868",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393329868",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393329868,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzMyOTg2OA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-30T21:44:48Z",
        "updated_at": "2018-05-30T21:44:48Z",
        "author_association": "MEMBER",
        "body": "Also seeing a leak. Prints out 655.65 MB at the end. Running on macOS 10.11 using 2.3 GHz Intel Core i7.\r\n\r\n<details>\r\n<summary>Environment:</summary>\r\n\r\n```yaml\r\nname: test\r\nchannels:\r\n  - conda-forge\r\n  - defaults\r\ndependencies:\r\n  - alabaster=0.7.10=py36_1\r\n  - appnope=0.1.0=py36_0\r\n  - asciitree=0.3.3=py36_1\r\n  - asn1crypto=0.24.0=py36_0\r\n  - babel=2.5.3=py36_0\r\n  - backcall=0.1.0=py_0\r\n  - backports=1.0=py36_1\r\n  - backports.functools_lru_cache=1.5=py36_0\r\n  - backports.shutil_get_terminal_size=1.0.0=py_3\r\n  - bkcharts=0.2=py36_0\r\n  - blas=1.1=openblas\r\n  - bleach=2.1.3=py_0\r\n  - bokeh=0.12.15=py36_0\r\n  - boost=1.66.0=py36_1\r\n  - boost-cpp=1.66.0=1\r\n  - boto3=1.7.21=py_0\r\n  - botocore=1.10.21=py_0\r\n  - bottleneck=1.2.1=py36_1\r\n  - bzip2=1.0.6=1\r\n  - ca-certificates=2018.4.16=0\r\n  - certifi=2018.4.16=py36_0\r\n  - cffi=1.11.5=py36_0\r\n  - chardet=3.0.4=py36_0\r\n  - clangdev=6.0.0=default_0\r\n  - click=6.7=py_1\r\n  - cloudpickle=0.5.3=py_0\r\n  - coverage=4.5.1=py36_0\r\n  - cryptography=2.2.1=py36_0\r\n  - cycler=0.10.0=py36_0\r\n  - cytoolz=0.9.0.1=py36_0\r\n  - dask=0.17.4=py_0\r\n  - dask-core=0.17.4=py_0\r\n  - dask-distance=0.2.0=py_0\r\n  - dask-glm=0.1.0=0\r\n  - dask-imread=0.1.1=py36_0\r\n  - dask-ml=0.4.1=py36_0\r\n  - dask-ndfilters=0.1.2=py36_0\r\n  - dask-ndfourier=0.1.2=py36_0\r\n  - dask-ndmeasure=0.1.1=py36_0\r\n  - dask-ndmorph=0.1.1=py36_0\r\n  - dask-searchcv=0.2.0=py_0\r\n  - dbus=1.11.0=0\r\n  - decorator=4.3.0=py_0\r\n  - distributed=1.21.8=py36_0\r\n  - docutils=0.14=py36_0\r\n  - entrypoints=0.2.3=py36_1\r\n  - expat=2.2.5=0\r\n  - fasteners=0.14.1=py36_2\r\n  - fftw=3.3.7=0\r\n  - freetype=2.8.1=0\r\n  - future=0.16.0=py36_0\r\n  - gettext=0.19.8.1=0\r\n  - glances=2.11.1=py_0\r\n  - glib=2.55.0=0\r\n  - graphviz=2.38.0=7\r\n  - h5py=2.8.0=py36h470a237_0\r\n  - hdf5=1.10.1=2\r\n  - heapdict=1.0.0=py36_0\r\n  - html5lib=1.0.1=py_0\r\n  - icu=58.2=0\r\n  - idna=2.6=py36_1\r\n  - imageio=2.3.0=py36_0\r\n  - imagesize=1.0.0=py36_0\r\n  - imgroi=0.0.2=py36_0\r\n  - ipykernel=4.8.2=py36_0\r\n  - ipyparallel=6.0.2=py36_0\r\n  - ipython=6.4.0=py36_0\r\n  - ipython_genutils=0.2.0=py36_0\r\n  - ipywidgets=7.2.1=py36_1\r\n  - jbig=2.1=0\r\n  - jedi=0.12.0=py36_0\r\n  - jinja2=2.10=py36_0\r\n  - jmespath=0.9.3=py36_0\r\n  - jpeg=9b=2\r\n  - jq=1.5=4\r\n  - jsonschema=2.6.0=py36_1\r\n  - jupyter_client=5.2.3=py36_0\r\n  - jupyter_contrib_core=0.3.3=py36_1\r\n  - jupyter_contrib_nbextensions=0.5.0=py36_0\r\n  - jupyter_core=4.4.0=py_0\r\n  - jupyter_highlight_selected_word=0.2.0=py36_0\r\n  - jupyter_latex_envs=1.4.4=py36_0\r\n  - jupyter_nbextensions_configurator=0.4.0=py36_0\r\n  - kenjutsu=0.5.1=py36_0\r\n  - kiwisolver=1.0.1=py36_1\r\n  - libcxx=6.0.0=0\r\n  - libedit=3.1.20170329=0\r\n  - libffi=3.2.1=3\r\n  - libgfortran=3.0.0=0\r\n  - libiconv=1.15=0\r\n  - libpng=1.6.34=0\r\n  - libsodium=1.0.16=0\r\n  - libtiff=4.0.9=0\r\n  - libxml2=2.9.8=0\r\n  - libxslt=1.1.32=0\r\n  - line_profiler=2.1.2=py36_0\r\n  - llvm-meta=6.0.0=0\r\n  - llvmdev=6.0.0=default_2\r\n  - locket=0.2.0=py36_1\r\n  - lxml=4.2.1=py36_0\r\n  - mahotas=1.4.4=py36_0\r\n  - markupsafe=1.0=py36_0\r\n  - matplotlib=2.2.2=py36_1\r\n  - metawrap=0.0.2=py36_0\r\n  - mistune=0.8.3=py36_1\r\n  - mock=2.0.0=py36_0\r\n  - monotonic=1.5=py_0\r\n  - mplview=0.0.5=py_0\r\n  - msgpack-python=0.5.6=py36h2d50403_2\r\n  - multipledispatch=0.5.0=py36_0\r\n  - nbconvert=5.3.1=py_1\r\n  - nbformat=4.4.0=py36_0\r\n  - ncurses=5.9=10\r\n  - networkx=2.1=py36_0\r\n  - nose=1.3.7=py36_2\r\n  - notebook=5.5.0=py36_0\r\n  - npctypes=0.0.4=py36_0\r\n  - numcodecs=0.5.5=py36_0\r\n  - numpy=1.14.3=py36_blas_openblas_200\r\n  - olefile=0.45.1=py36_0\r\n  - oniguruma=6.8.0=0\r\n  - openblas=0.2.20=7\r\n  - openssl=1.0.2o=0\r\n  - packaging=17.1=py_0\r\n  - pandas=0.23.0=py36_0\r\n  - pandoc=2.2.1=hde52d81_0\r\n  - pandocfilters=1.4.2=py36_0\r\n  - parso=0.2.0=py_0\r\n  - partd=0.3.8=py36_0\r\n  - pbr=4.0.2=py_0\r\n  - pcre=8.41=1\r\n  - pexpect=4.5.0=py36_0\r\n  - pickleshare=0.7.4=py36_0\r\n  - pillow=5.1.0=py36_0\r\n  - pims=0.4.1=py_1\r\n  - pip=9.0.3=py36_0\r\n  - prompt_toolkit=1.0.15=py36_0\r\n  - psutil=5.4.5=py36_0\r\n  - ptyprocess=0.5.2=py36_0\r\n  - pycparser=2.18=py36_0\r\n  - pyfftw=0.10.4=py36_3\r\n  - pygments=2.2.0=py36_0\r\n  - pyopenssl=17.5.0=py36_1\r\n  - pyparsing=2.2.0=py36_0\r\n  - pyqt=5.6.0=py36_5\r\n  - pysocks=1.6.8=py36_1\r\n  - python=3.6.5=1\r\n  - python-dateutil=2.7.3=py_0\r\n  - python-graphviz=0.8.3=py36_0\r\n  - python-spams=2.6=py36_blas_openblas_203\r\n  - python.app=1.2=py36_0\r\n  - pytz=2018.4=py_0\r\n  - pywavelets=0.5.2=py36_1\r\n  - pyyaml=3.12=py36_1\r\n  - pyzmq=17.0.0=py36_4\r\n  - qt=5.6.2=h9e3eb04_4\r\n  - rank_filter=0.4.15=py36_0\r\n  - readline=7.0=0\r\n  - requests=2.18.4=py36_1\r\n  - runipy=0.1.5=py36_1\r\n  - s3fs=0.1.5=py_0\r\n  - s3transfer=0.1.13=py36_0\r\n  - scikit-image=0.13.1=py36_0\r\n  - scikit-learn=0.19.1=py36_blas_openblas_201\r\n  - scipy=1.1.0=py36_blas_openblas_200\r\n  - send2trash=1.5.0=py_0\r\n  - setuptools=39.1.0=py36_0\r\n  - simplegeneric=0.8.1=py36_0\r\n  - sip=4.18=py36_1\r\n  - six=1.11.0=py36_1\r\n  - slicerator=0.9.8=py_1\r\n  - snowballstemmer=1.2.1=py36_0\r\n  - sortedcontainers=1.5.10=py36_0\r\n  - sphinx=1.7.4=py36_0\r\n  - sphinxcontrib-websupport=1.0.1=py36_0\r\n  - sqlite=3.20.1=2\r\n  - tblib=1.3.2=py36_0\r\n  - terminado=0.8.1=py36_0\r\n  - testpath=0.3.1=py36_0\r\n  - tifffile=0.14.0=py36_1\r\n  - tk=8.6.7=0\r\n  - toolz=0.9.0=py_0\r\n  - tornado=5.0.2=py36_0\r\n  - traitlets=4.3.2=py36_0\r\n  - typing=3.6.4=py36_0\r\n  - unidecode=1.0.22=py36_0\r\n  - urllib3=1.22=py36_0\r\n  - vigra=1.11.1=py36_6\r\n  - wcwidth=0.1.7=py36_0\r\n  - webcolors=1.8.1=py_0\r\n  - webencodings=0.5.1=py36_0\r\n  - wheel=0.31.0=py36_0\r\n  - widgetsnbextension=3.2.1=py36_0\r\n  - xnumpy=0.1.2=py36_0\r\n  - xz=5.2.3=0\r\n  - yail=0.0.2=py36_0\r\n  - yaml=0.1.7=0\r\n  - zarr=2.2.0=py_1\r\n  - zeromq=4.2.5=1\r\n  - zict=0.1.3=py_0\r\n  - zlib=1.2.11=0\r\n  - libgcc=4.8.5=1\r\n```\r\n\r\n</details>",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393329868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393330885",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393330885",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393330885,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzMzMDg4NQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-30T21:48:49Z",
        "updated_at": "2018-05-30T21:48:49Z",
        "author_association": "MEMBER",
        "body": "Any thoughts on the usage of `jemalloc` and possibly building things to use it, @mingwandroid?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393330885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393355692",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393355692",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393355692,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzM1NTY5Mg==",
        "user": {
            "login": "mattip",
            "id": 823911,
            "node_id": "MDQ6VXNlcjgyMzkxMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattip",
            "html_url": "https://github.com/mattip",
            "followers_url": "https://api.github.com/users/mattip/followers",
            "following_url": "https://api.github.com/users/mattip/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
            "organizations_url": "https://api.github.com/users/mattip/orgs",
            "repos_url": "https://api.github.com/users/mattip/repos",
            "events_url": "https://api.github.com/users/mattip/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattip/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-30T23:52:28Z",
        "updated_at": "2018-05-30T23:52:28Z",
        "author_association": "NONE",
        "body": "Just to be clear, currently NumPy uses `PyObject_Malloc` to allocate its basic `PyArrayObject` (in `array_alloc`), but calls `malloc` via a very small caching mechanism to allocate `dims`, `strides`, and `data` fields (in `npy_alloc_cache`). `PyObject_Malloc` uses the host python's pool management. So there are at least these things in play:\r\n- python's pool mechanism from `PyObject_Malloc`\r\n- numpy's caching mechanism for `dims`, `strides`, and small blocks of data\r\n- large data blocks allocated via `malloc`\r\n- `malloc`'s own arena mechanism",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393355692/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393360431",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393360431",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393360431,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzM2MDQzMQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-31T00:17:50Z",
        "updated_at": "2018-05-31T00:17:50Z",
        "author_association": "MEMBER",
        "body": "In conversation with @njsmith he raised a concern with the idea that Numpy might use a different malloc implementation than Python.  Python might allocate some memory and then pass that to Numpy.  Numpy would need to remember to call the right free based on if it allocated the data or someone else did.  This seems error prone.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393360431/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393364046",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393364046",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393364046,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzM2NDA0Ng==",
        "user": {
            "login": "stefanv",
            "id": 45071,
            "node_id": "MDQ6VXNlcjQ1MDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stefanv",
            "html_url": "https://github.com/stefanv",
            "followers_url": "https://api.github.com/users/stefanv/followers",
            "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
            "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
            "organizations_url": "https://api.github.com/users/stefanv/orgs",
            "repos_url": "https://api.github.com/users/stefanv/repos",
            "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stefanv/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-31T00:38:54Z",
        "updated_at": "2018-05-31T00:38:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "I thought about this, but couldn't figure out when that situation would \noccur. Do you have an example?\n\n\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393364046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393367302",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393367302",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393367302,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzM2NzMwMg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-31T00:59:48Z",
        "updated_at": "2018-05-31T00:59:48Z",
        "author_association": "MEMBER",
        "body": "This might happen in Dask when we get bytes from a socket and use those to create a Numpy array.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393367302/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393372082",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393372082",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393372082,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzM3MjA4Mg==",
        "user": {
            "login": "mattip",
            "id": 823911,
            "node_id": "MDQ6VXNlcjgyMzkxMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattip",
            "html_url": "https://github.com/mattip",
            "followers_url": "https://api.github.com/users/mattip/followers",
            "following_url": "https://api.github.com/users/mattip/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
            "organizations_url": "https://api.github.com/users/mattip/orgs",
            "repos_url": "https://api.github.com/users/mattip/repos",
            "events_url": "https://api.github.com/users/mattip/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattip/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-31T01:25:29Z",
        "updated_at": "2018-05-31T01:25:29Z",
        "author_association": "NONE",
        "body": "IMO then that buffer should become the `base` property of the `ndarray`, allowing the buffer to manage itself, unless someone is messing directly with the `PyArrayObject_field`'s `data` pointer on the C level",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393372082/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393427330",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393427330",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393427330,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzQyNzMzMA==",
        "user": {
            "login": "stefanv",
            "id": 45071,
            "node_id": "MDQ6VXNlcjQ1MDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stefanv",
            "html_url": "https://github.com/stefanv",
            "followers_url": "https://api.github.com/users/stefanv/followers",
            "following_url": "https://api.github.com/users/stefanv/following{/other_user}",
            "gists_url": "https://api.github.com/users/stefanv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stefanv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stefanv/subscriptions",
            "organizations_url": "https://api.github.com/users/stefanv/orgs",
            "repos_url": "https://api.github.com/users/stefanv/repos",
            "events_url": "https://api.github.com/users/stefanv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stefanv/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-31T06:53:32Z",
        "updated_at": "2018-05-31T06:53:32Z",
        "author_association": "CONTRIBUTOR",
        "body": "Right, so when does the parent allocator \"give up\" control of its own memory, forcing NumPy to take on its management? ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393427330/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393433504",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393433504",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393433504,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzQzMzUwNA==",
        "user": {
            "login": "njsmith",
            "id": 609896,
            "node_id": "MDQ6VXNlcjYwOTg5Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/609896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/njsmith",
            "html_url": "https://github.com/njsmith",
            "followers_url": "https://api.github.com/users/njsmith/followers",
            "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
            "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
            "organizations_url": "https://api.github.com/users/njsmith/orgs",
            "repos_url": "https://api.github.com/users/njsmith/repos",
            "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
            "received_events_url": "https://api.github.com/users/njsmith/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-31T07:18:55Z",
        "updated_at": "2018-05-31T07:18:55Z",
        "author_association": "NONE",
        "body": "After reminding myself of how this is supposed to work: in theory everyone is supposed to use `PyDataMem_NEW`, so it might be fine. But there are enough weird C API functions (including e.g. ones that take a `data` point and construct an array around it), and people who like to play games with raw C struct access, that it's something you'd want to double-check...\r\n\r\n@mrocklin A silly but possibly simple workaround you might want to look into: what if you occasionally kill the threads and restart them? (Spawning a new thread is *very* fast, like ~100 \u00b5s on my laptop.)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393433504/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393443534",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393443534",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393443534,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzQ0MzUzNA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-31T07:54:08Z",
        "updated_at": "2018-05-31T08:01:00Z",
        "author_association": "MEMBER",
        "body": "FWIW people do see this issue outside the context of NumPy.\r\n\r\nHere's a [nice article]( https://zapier.com/engineering/celery-python-jemalloc/ ) discussing this issue with Python and Celery. They also conclude memory fragmentation is the problem and compare using `jemalloc` to system `malloc`. Unfortunately they didn't share test code, but did show how they invoked it.\r\n\r\nAlso here's a [bunch of links]( http://vstinner.readthedocs.io/heap_fragmentation.html ) to similar sounding problems. Have skimmed a few, but not all.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393443534/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393444329",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393444329",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393444329,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzQ0NDMyOQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-31T07:57:11Z",
        "updated_at": "2018-05-31T07:57:11Z",
        "author_association": "MEMBER",
        "body": "Should add that one can use an `LD_PRELOAD` hack (or `DYLD_INSERT_LIBRARIES` on macOS) to try out using `jemalloc`. Did so myself and got 8.28 GB at the end.\r\n\r\nIf we do decide to go this route, we should actually build things with `jemalloc` instead of hacking them in like this afterwards.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393444329/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/393558880",
        "html_url": "https://github.com/dask/dask/issues/3530#issuecomment-393558880",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3530",
        "id": 393558880,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzU1ODg4MA==",
        "user": {
            "login": "mattip",
            "id": 823911,
            "node_id": "MDQ6VXNlcjgyMzkxMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/823911?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattip",
            "html_url": "https://github.com/mattip",
            "followers_url": "https://api.github.com/users/mattip/followers",
            "following_url": "https://api.github.com/users/mattip/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattip/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattip/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattip/subscriptions",
            "organizations_url": "https://api.github.com/users/mattip/orgs",
            "repos_url": "https://api.github.com/users/mattip/repos",
            "events_url": "https://api.github.com/users/mattip/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattip/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-31T14:58:26Z",
        "updated_at": "2018-05-31T14:58:26Z",
        "author_association": "NONE",
        "body": "> Right, so when does the parent allocator \"give up\" control of its own memory, forcing NumPy to take on its management?\r\n\r\nThe API is designed so that the answer should be \"never\". As Nathaniel says, we should\r\n- scan our (NumPy's) code to make sure this is true, but I am pretty confident it is\r\n- make it clear to C-API consumers that they should never write to ndarray internals exposed via `PyArray_DATA`, `PyArray_DESCR` , ...",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/393558880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]