[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/312439699",
        "html_url": "https://github.com/dask/dask/issues/2497#issuecomment-312439699",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2497",
        "id": 312439699,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjQzOTY5OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-01T15:53:33Z",
        "updated_at": "2017-07-01T15:53:33Z",
        "author_association": "MEMBER",
        "body": "These two seem most relevant:\r\n\r\n1.  https://github.com/IntelPython/BlackScholes_bench/blob/master/bs_erf_dask.py\r\n2.  https://github.com/IntelPython/BlackScholes_bench/blob/master/bs_erf_dask_numpy.py",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/312439699/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/312439741",
        "html_url": "https://github.com/dask/dask/issues/2497#issuecomment-312439741",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2497",
        "id": 312439741,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjQzOTc0MQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-01T15:54:10Z",
        "updated_at": "2017-07-01T15:54:10Z",
        "author_association": "MEMBER",
        "body": "cc @anton-malakhov for reference (he created these benchmarks)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/312439741/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/312492375",
        "html_url": "https://github.com/dask/dask/issues/2497#issuecomment-312492375",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2497",
        "id": 312492375,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjQ5MjM3NQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-02T13:35:53Z",
        "updated_at": "2017-07-02T13:35:53Z",
        "author_association": "MEMBER",
        "body": "https://github.com/dask/dask/issues/2034",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/312492375/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/318205904",
        "html_url": "https://github.com/dask/dask/issues/2497#issuecomment-318205904",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2497",
        "id": 318205904,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxODIwNTkwNA==",
        "user": {
            "login": "jcrist",
            "id": 2783717,
            "node_id": "MDQ6VXNlcjI3ODM3MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcrist",
            "html_url": "https://github.com/jcrist",
            "followers_url": "https://api.github.com/users/jcrist/followers",
            "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
            "organizations_url": "https://api.github.com/users/jcrist/orgs",
            "repos_url": "https://api.github.com/users/jcrist/repos",
            "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcrist/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-26T22:51:59Z",
        "updated_at": "2017-07-26T22:51:59Z",
        "author_association": "MEMBER",
        "body": "I spent some time benchmarking two implementations (see code in [this gist](https://gist.github.com/jcrist/739001882738b1bde1125feb4ac3899e), heavily lifted from the code referenced above):\r\n\r\n- `array_api`: uses normal dask array api (operators, dask ufuncs, etc...)\r\n- `map_blocks`: uses a single function and apply it to the input arrays using a single call to `da.map_blocks`.\r\n\r\n## Results:\r\n\r\nOn my computer the fastest implementation for a given input array size was `map_blocks` using `chunks=1e5`. For `nopt=1e7` (the input size) and `chunks=1e7` we can break the execution into 4 stages (build, optimize, compute, and finalize):\r\n\r\n```bash\r\n(dask) jcrist dask $ python bench.py --nopt=1e7 --chunksize=1e5\r\nusing_map_blocks\r\n=======================\r\nchunksize:       100000\r\nnumblocks:       100\r\n-----------------------\r\nGraph Size:      400\r\nOptimized Size:  400\r\n-----------------------\r\nBuild:          0.003 s\r\nOptimize:       0.005 s\r\nCompute:        0.314 s\r\nFinalize:       0.088 s\r\nTotal:          0.411 s\r\n\r\nusing_array_api\r\n=======================\r\nchunksize:       100000\r\nnumblocks:       100\r\n-----------------------\r\nGraph Size:      2900\r\nOptimized Size:  2500\r\n-----------------------\r\nBuild:          0.017 s\r\nOptimize:       0.059 s\r\nCompute:        0.473 s\r\nFinalize:       0.088 s\r\nTotal:          0.638 s\r\n```\r\n\r\nLooking at the above, the array api version is slower due to:\r\n- Higher optimize and build cost. This is mostly due to the larger graph size (2900 tasks vs 400).\r\n- Higher compute cost. This turns out to be mostly due to the increased relevance of scheduler overhead at this relatively small chunksize. The single mapped function in the `map_blocks` function takes much longer than a single `add` call, so the overhead is less relevant there.\r\n\r\nThe array api version performs much better for larger chunk sizes:\r\n\r\n![chunksize3](https://user-images.githubusercontent.com/2783717/28646743-d951d27e-7228-11e7-9fc3-ef67009122e3.png)\r\n\r\nNote that for larger chunks the `map_blocks` call performs much worse. This is due to the single function taking longer and fewer opportunities for parallelism (fewer blocks overall). In contrast the `array_api` version has plenty of smaller tasks still leaving opportunities for parallelism.\r\n\r\nNote that at larger chunk sizes the relevance of graph build and optimize time also goes down. This scales fairly linearly with number of blocks (log scale to show both lines).\r\n\r\n![numblocks](https://user-images.githubusercontent.com/2783717/28646871-8ef584ae-7229-11e7-899b-e44fc69cae13.png)\r\n\r\n*For this test case* using the array api leads to ~10x slowdown on build and optimize, but for chunks of sufficient size this is negligible compared to compute cost.\r\n\r\n---\r\n\r\n## Opportunities for speedups\r\n\r\nThis is a weird benchmark because it's very sensitive to chunksize. The best performance occurred when all the operations were grouped together into a single task and the chunksize was relatively small.  This works fine, and is fairly readable, but it'd be nice to speedup the `array_api` version to be more compatible.\r\n\r\n- In #2538 it was suggested that by delaying graph building from `atop` operations (most everything here) we can fuse tasks at build time. This would speedup build time (fewer calls to atop) and optimize time (smaller graph to optimize). It's not clear if it would speed up compute time, as the result should be similar to that of our normal task fusion. It would lower the overhead of using smaller chunk sizes though.\r\n\r\n- In #1946 it was suggested that we might interpret fused tasks to intelligently use`out` keywords, or jit fused tasks with `numba` to speedup individual tasks. This would probably speedup compute time, but also is a bit magicical.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/318205904/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/318208769",
        "html_url": "https://github.com/dask/dask/issues/2497#issuecomment-318208769",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2497",
        "id": 318208769,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxODIwODc2OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-26T23:06:35Z",
        "updated_at": "2017-07-26T23:06:35Z",
        "author_association": "MEMBER",
        "body": "FWIW I'm fine with optional magic.  I would be curious to know how well dask.array + numba would work here.  \r\n\r\nIt's interesting to see the graph construction and optimization time to be so low for the `map_blocks` case (and presumably the fused-array case if we were to implement #2538).  This low-overhead regime opens up questions about how small we could take chunks before overhead become a factor again.  Something to shoot for (not sure if we can make it) is to try to hit some of the processor cache sizes.  If we could get there (and again that's not a given) then this is the sort of thing that might be able to show off modern hardware.\r\n\r\nDid you also compare with a numba-ized version that avoided intermediates?  It would be interesting to see the benefits of reusing memory.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/318208769/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/318209181",
        "html_url": "https://github.com/dask/dask/issues/2497#issuecomment-318209181",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2497",
        "id": 318209181,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxODIwOTE4MQ==",
        "user": {
            "login": "jcrist",
            "id": 2783717,
            "node_id": "MDQ6VXNlcjI3ODM3MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcrist",
            "html_url": "https://github.com/jcrist",
            "followers_url": "https://api.github.com/users/jcrist/followers",
            "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
            "organizations_url": "https://api.github.com/users/jcrist/orgs",
            "repos_url": "https://api.github.com/users/jcrist/repos",
            "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcrist/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-26T23:09:11Z",
        "updated_at": "2017-07-26T23:09:11Z",
        "author_association": "MEMBER",
        "body": "> Did you also compare with a numba-ized version that avoided intermediates? It would be interesting to see the benefits of reusing memory.\r\n\r\nI did, but didn't include it here. The numba-vectorized mapped function took 75% the time it took the numpy version. I didn't bother diving in deeper to figure out if there were more speedups that could be done (smarter code, faster `erf`, etc...).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/318209181/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/318209400",
        "html_url": "https://github.com/dask/dask/issues/2497#issuecomment-318209400",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2497",
        "id": 318209400,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxODIwOTQwMA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-26T23:10:40Z",
        "updated_at": "2017-07-26T23:10:40Z",
        "author_association": "MEMBER",
        "body": "Right `erf` can be quite expensive if I recall correctly.  I wonder what these numbers would look like without that operation.  Presumably compute time would decrease significantly relative to overhead times.  We might be hiding Dask overhead underneath the cost of that function call.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/318209400/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/318216911",
        "html_url": "https://github.com/dask/dask/issues/2497#issuecomment-318216911",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2497",
        "id": 318216911,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxODIxNjkxMQ==",
        "user": {
            "login": "jcrist",
            "id": 2783717,
            "node_id": "MDQ6VXNlcjI3ODM3MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2783717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcrist",
            "html_url": "https://github.com/jcrist",
            "followers_url": "https://api.github.com/users/jcrist/followers",
            "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
            "organizations_url": "https://api.github.com/users/jcrist/orgs",
            "repos_url": "https://api.github.com/users/jcrist/repos",
            "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcrist/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-26T23:54:55Z",
        "updated_at": "2017-07-26T23:54:55Z",
        "author_association": "MEMBER",
        "body": "I swapped out `erf` for `sign` and still saw similar numbers. I think the important bits here are:\r\n\r\n- Smaller chunks can be more cache efficient\r\n- Smaller chunks don't play well with the normal dask api (too many chunks are bad, too short of tasks are bad).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/318216911/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/318217699",
        "html_url": "https://github.com/dask/dask/issues/2497#issuecomment-318217699",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2497",
        "id": 318217699,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxODIxNzY5OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-26T23:59:42Z",
        "updated_at": "2017-07-26T23:59:42Z",
        "author_association": "MEMBER",
        "body": "As you decrease the chunksize presumably the compute time to overhead time ratio changes.  In the run for which you've produced numbers above this ratio is very good.  However it might be interesting to also see regimes where this ratio is less good.  In particular we probably want to look at what happens when this ratio transitions to the point where scheduler costs dominate.  It might be interesting to see when this transition happens, and when it does what the dominant costs are.  Then that might inform work that we can do to bring that transition point closer and closer to cache sizes.\r\n\r\nWhen doing benchmarks like these we probably shouldn't be seeking optimal parameters for performance, but rather finding regions where things perform poorly so that we can figure out how to optimize in the future.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/318217699/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/319056735",
        "html_url": "https://github.com/dask/dask/issues/2497#issuecomment-319056735",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2497",
        "id": 319056735,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTA1NjczNQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-07-31T12:45:50Z",
        "updated_at": "2017-07-31T12:45:50Z",
        "author_association": "MEMBER",
        "body": "So with chunksizes of 1e3 only about 5% of our runtime is actual computation.  I plan to take a look at this today while on a flight.  At first glance profiling with snakeviz it appears that we can probably shave of 20% or so relatively easily.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/319056735/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/319453619",
        "html_url": "https://github.com/dask/dask/issues/2497#issuecomment-319453619",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2497",
        "id": 319453619,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTQ1MzYxOQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-01T18:18:31Z",
        "updated_at": "2017-08-01T18:18:31Z",
        "author_association": "MEMBER",
        "body": "So I think that there are two major ways to improve performance at low chunk sizes:\r\n\r\n1.   Reduce the number of chunks though large-scale operator fusion before we generate tasks.  This is the work proposed by @jcrist at #2538 .  This will, I think provide the largest gains.\r\n2.  Reduce graph processing overhead.  I'm doing a bit of this at https://github.com/dask/dask/pull/2578 and am pulling 2% and 5% optimizations out that I suspect will add up to something like a 30% boost",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/319453619/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/324480868",
        "html_url": "https://github.com/dask/dask/issues/2497#issuecomment-324480868",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2497",
        "id": 324480868,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDQ4MDg2OA==",
        "user": {
            "login": "anton-malakhov",
            "id": 7475946,
            "node_id": "MDQ6VXNlcjc0NzU5NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7475946?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anton-malakhov",
            "html_url": "https://github.com/anton-malakhov",
            "followers_url": "https://api.github.com/users/anton-malakhov/followers",
            "following_url": "https://api.github.com/users/anton-malakhov/following{/other_user}",
            "gists_url": "https://api.github.com/users/anton-malakhov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anton-malakhov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anton-malakhov/subscriptions",
            "organizations_url": "https://api.github.com/users/anton-malakhov/orgs",
            "repos_url": "https://api.github.com/users/anton-malakhov/repos",
            "events_url": "https://api.github.com/users/anton-malakhov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anton-malakhov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-23T22:29:00Z",
        "updated_at": "2017-08-23T22:29:07Z",
        "author_association": "NONE",
        "body": "Hi folks! I'm back from vacation and happy to see that you see some problems here and are looking for solution.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/324480868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/324515449",
        "html_url": "https://github.com/dask/dask/issues/2497#issuecomment-324515449",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2497",
        "id": 324515449,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDUxNTQ0OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-08-24T02:31:48Z",
        "updated_at": "2017-08-24T02:31:48Z",
        "author_association": "MEMBER",
        "body": "I was with @jcrist this weekend and had a chance to look at his atop-fusion work.  It had impressive results.  We can take the size of the blocks down another order of magnitude before we start running into overhead problems.  \r\n\r\nIn this particular problem though the `erf` function dominates costs.  It's not actually that hard to avoid overhead with `erf` filling up the benchmark.  This computation is genuinely CPU bound rather than bound by the memory hierarchy.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/324515449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]