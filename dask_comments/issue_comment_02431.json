[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/306852455",
        "html_url": "https://github.com/dask/dask/issues/2431#issuecomment-306852455",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2431",
        "id": 306852455,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg1MjQ1NQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T16:37:52Z",
        "updated_at": "2017-06-07T16:37:52Z",
        "author_association": "MEMBER",
        "body": "We're certainly in a better place now that we can swap in and out optimizations.  We can build optimizations that are not always-on.  ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/306852455/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/306855726",
        "html_url": "https://github.com/dask/dask/issues/2431#issuecomment-306855726",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2431",
        "id": 306855726,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg1NTcyNg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T16:49:24Z",
        "updated_at": "2017-06-07T16:49:24Z",
        "author_association": "MEMBER",
        "body": "I understand the first case of `(x + 1)[...] -> x[...] + 1` however I don't understand either of the second two cases.  Can you elaborate?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/306855726/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/306858503",
        "html_url": "https://github.com/dask/dask/issues/2431#issuecomment-306858503",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2431",
        "id": 306858503,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg1ODUwMw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T16:59:04Z",
        "updated_at": "2017-06-07T16:59:04Z",
        "author_association": "MEMBER",
        "body": "My first inclination on swapping elementwise operations is to do this in two steps:\r\n\r\n1.  Fuse ufuncs together (I think that this will be useful in its own right)\r\n    ```python\r\n    (add, (mul, x, y), 1) -> (ufunc_apply, add_mul, x, y, z)\r\n    ```\r\n2.  Swap getitems and these apply nodes.\r\n\r\nAlthough I should look more closely at @jcrist 's past work to see what troubles arose.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/306858503/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/306858584",
        "html_url": "https://github.com/dask/dask/issues/2431#issuecomment-306858584",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2431",
        "id": 306858584,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg1ODU4NA==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T16:59:22Z",
        "updated_at": "2017-06-07T16:59:22Z",
        "author_association": "MEMBER",
        "body": "Case two would be the optimization `(x + y)[...] -> x[...] + y[...]`, only if `x.shape == y.shape`.\r\n\r\nCase three is related, basically `x + y` -> `x2 + y2` with `x2, y2 = np.broadcast_arrays(x, y)` (and then doing the case two optimization).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/306858584/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/306859579",
        "html_url": "https://github.com/dask/dask/issues/2431#issuecomment-306859579",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2431",
        "id": 306859579,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg1OTU3OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T17:02:49Z",
        "updated_at": "2017-06-07T17:02:49Z",
        "author_association": "MEMBER",
        "body": "Given a ufunc and a subsequent getitem call my hope would be that rules to apply the index to the arguments would be straightforward.\r\n\r\nFor example given the following:\r\n\r\n```python\r\nx = np.ones((10, 1))\r\ny = np.ones((1, 10))\r\n\r\nz = (x + y)[a, b]\r\n```\r\nWe know that we can rewrite this as \r\n```python\r\nz = (x[a] + y[b])\r\n```\r\n\r\nCorrect?\r\n\r\nI imagine that we can probably do the slicing prior to broadcasting if we are clever about it.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/306859579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/306859997",
        "html_url": "https://github.com/dask/dask/issues/2431#issuecomment-306859997",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2431",
        "id": 306859997,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg1OTk5Nw==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T17:04:06Z",
        "updated_at": "2017-06-07T17:04:06Z",
        "author_association": "MEMBER",
        "body": "My understand of why @jcrist's past work broke down is that there wasn't a good way to do this optimization when the shapes of the arguments differed, and doing broadcasting in every case added too much overhead (~10% to every dask array operation, whether it needed this optimization or not). Hence my later two suggestions, to make this optional.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/306859997/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/306863533",
        "html_url": "https://github.com/dask/dask/issues/2431#issuecomment-306863533",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2431",
        "id": 306863533,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg2MzUzMw==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T17:16:47Z",
        "updated_at": "2017-06-07T17:16:47Z",
        "author_association": "MEMBER",
        "body": "> We know that we can rewrite this as\r\n> `z = (x[a] + y[b])`\r\n> Correct?\r\n\r\nYes, absolutely. But I'm not sure this is actually worth the trouble, as I haven't seen this specific sort of access pattern come up for geo-data. Often indexing can't be factorized over elementwise arguments -- either there's only one non-array or all arrays have the same shape.\r\n\r\nThe \"broadcast first\" solution could solve this nearly as well, with only some constant run-time overhead:\r\n```python\r\nx2, y2 = broadcast_arrays(x, y)\r\nz = (x2[a, b] + y2[a, b])\r\n```\r\n...though it would certainly help to defer automatic rechunking until *after* the optimization pass (which of course isn't really possible with the current dask.array design).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/306863533/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/306864470",
        "html_url": "https://github.com/dask/dask/issues/2431#issuecomment-306864470",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2431",
        "id": 306864470,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg2NDQ3MA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T17:19:57Z",
        "updated_at": "2017-06-07T17:19:57Z",
        "author_association": "MEMBER",
        "body": "Yeah, sorry, to be clear the arrays I'm thinking about here are numpy arrays.  I assume that this optimization would kick in only after generic task fusion and slicing-fusion had occurred so that we had large complex tasks that we then wanted to reorder.  \r\n\r\nRechunking after expression-creation would require taking on something like Blaze (or other).  Lets leave that as off-topic for now.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/306864470/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/306865074",
        "html_url": "https://github.com/dask/dask/issues/2431#issuecomment-306865074",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2431",
        "id": 306865074,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg2NTA3NA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T17:21:36Z",
        "updated_at": "2017-06-07T17:21:36Z",
        "author_association": "MEMBER",
        "body": "What costs does `broadcast_arrays` add?  Does it perform an allocation or is everything handled with numpy metadata?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/306865074/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/306866527",
        "html_url": "https://github.com/dask/dask/issues/2431#issuecomment-306866527",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2431",
        "id": 306866527,
        "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjg2NjUyNw==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-06-07T17:26:45Z",
        "updated_at": "2017-06-07T17:26:45Z",
        "author_association": "MEMBER",
        "body": "> Does it perform an allocation or is everything handled with numpy metadata?\r\n\r\nIt's all done with metadata, effectively just inserting new dimensions with a stride of `0`.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/306866527/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]