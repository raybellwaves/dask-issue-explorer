[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1025962414",
        "html_url": "https://github.com/dask/dask/issues/8635#issuecomment-1025962414",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8635",
        "id": 1025962414,
        "node_id": "IC_kwDOAbcwm849JvGu",
        "user": {
            "login": "quasiben",
            "id": 1403768,
            "node_id": "MDQ6VXNlcjE0MDM3Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1403768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quasiben",
            "html_url": "https://github.com/quasiben",
            "followers_url": "https://api.github.com/users/quasiben/followers",
            "following_url": "https://api.github.com/users/quasiben/following{/other_user}",
            "gists_url": "https://api.github.com/users/quasiben/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quasiben/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quasiben/subscriptions",
            "organizations_url": "https://api.github.com/users/quasiben/orgs",
            "repos_url": "https://api.github.com/users/quasiben/repos",
            "events_url": "https://api.github.com/users/quasiben/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quasiben/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-31T16:24:38Z",
        "updated_at": "2022-01-31T16:24:38Z",
        "author_association": "MEMBER",
        "body": "I'm +1 on on having the concatenated name -- this information is really useful when debugging and trying to understand performance or what happened and when",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1025962414/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1026108057",
        "html_url": "https://github.com/dask/dask/issues/8635#issuecomment-1026108057",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8635",
        "id": 1026108057,
        "node_id": "IC_kwDOAbcwm849KSqZ",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-31T19:03:30Z",
        "updated_at": "2022-01-31T19:03:57Z",
        "author_association": "MEMBER",
        "body": "Ah, right. I knew that blockwise fusion didn't change the name, but I didn't realize that \"low-level\" fusion actually did. In that case, we are indeed making the dashboard less intuitive with the move to blockwise fusion everywhere possible :/\r\n\r\nI think your general idea to get the necessary information to the scheduler makes sense.  Challenges like this are also making me wonder how much simpler things would be if we took the approach of #8633 for (non-culling) optimizations in general, and just applied optimizations like fusion eagerly as soon as a \"fusable\" layer was added to a collection. If we took that approach, we have the option of setting the name to whatever we want, because no dependencies exist yet.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1026108057/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1026160270",
        "html_url": "https://github.com/dask/dask/issues/8635#issuecomment-1026160270",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8635",
        "id": 1026160270,
        "node_id": "IC_kwDOAbcwm849KfaO",
        "user": {
            "login": "gjoseph92",
            "id": 3309802,
            "node_id": "MDQ6VXNlcjMzMDk4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjoseph92",
            "html_url": "https://github.com/gjoseph92",
            "followers_url": "https://api.github.com/users/gjoseph92/followers",
            "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
            "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
            "repos_url": "https://api.github.com/users/gjoseph92/repos",
            "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-31T20:06:05Z",
        "updated_at": "2022-01-31T20:06:05Z",
        "author_association": "MEMBER",
        "body": "Eager fusion seems reasonable to me. It probably simplifies the optimization code a bit too, and makes `len(dsk)` and the task counts show in reprs much more realistic.\r\n\r\nI'm not sure how much of an undertaking that'll be, though? It probably requires changing every place where Blockwise layers are constructed, and explicitly deriving them from the previous layer. Naively, both this and https://github.com/dask/dask/pull/8633 would require every place where graph-construction code is written to \"opt in\" to this optimization; it wouldn't be applied automatically. This would even further increase the barrier to using HLGs effectively.\r\n\r\nThe better approach might be adding a framework to `HighLevelGraph.from_collections` for applying eager optimizations in some way. So there'd be compute-time full-graph optimizations as usual, and a new set of optimizations that can be applied at HLG construction time.\r\n\r\nEither way, I bet it'll also break a lot of current tests :)\r\n\r\nSince this seems like a moderately large undertaking, should we consider adding support for a `task-group-key` and `task-prefix-key` annotation on the scheduler for now as a stopgap?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1026160270/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1026166466",
        "html_url": "https://github.com/dask/dask/issues/8635#issuecomment-1026166466",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8635",
        "id": 1026166466,
        "node_id": "IC_kwDOAbcwm849Kg7C",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-31T20:13:03Z",
        "updated_at": "2022-01-31T20:13:03Z",
        "author_association": "MEMBER",
        "body": ">Since this seems like a moderately large undertaking, should we consider adding support for a task-group-key and task-prefix-key annotation on the scheduler for now as a stopgap?\r\n\r\nRight - Although eager optimizations may be pretty easy to implement, it would be a large enough change to require serious discussion.  I can also imagine a few ugly edge cases and assume that many existing tests would break for sure :)\r\n\r\nAs long as the stopgap doesn't get out of hand, I agree that we shouldn't rely on eager optimizations yet (just wanted to highlight this as a posible motivation).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1026166466/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1056111785",
        "html_url": "https://github.com/dask/dask/issues/8635#issuecomment-1056111785",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8635",
        "id": 1056111785,
        "node_id": "IC_kwDOAbcwm84-8vyp",
        "user": {
            "login": "gjoseph92",
            "id": 3309802,
            "node_id": "MDQ6VXNlcjMzMDk4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjoseph92",
            "html_url": "https://github.com/gjoseph92",
            "followers_url": "https://api.github.com/users/gjoseph92/followers",
            "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
            "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
            "repos_url": "https://api.github.com/users/gjoseph92/repos",
            "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-02T03:12:44Z",
        "updated_at": "2022-03-02T03:12:44Z",
        "author_association": "MEMBER",
        "body": "Just want to note that I've been using Dask to do some \"actual data science\" for the past few hours, and I've been repeatedly thrown off by misleading task names on the dashboard. Wondering things like \"why is my cluster OOMing trying to do `df.size.compute()`,\" only to realize much later that `size` is fused onto the end of a shuffle, and the OOMing is actually because I've picked bad divisions for my `set_index`. As a normal user, I'd be _so_ confused by this, and would probably never be able to figure it out. The dashboard loses a lot of its value when the names of tasks are somewhat meaningless.\r\n\r\nI think we should consider this higher priority. As unappetizing as it is, https://github.com/dask/distributed/issues/5742 seems like a pretty easy fix to the UX problem right now.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1056111785/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1265829178",
        "html_url": "https://github.com/dask/dask/issues/8635#issuecomment-1265829178",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8635",
        "id": 1265829178,
        "node_id": "IC_kwDOAbcwm85LcwU6",
        "user": {
            "login": "gjoseph92",
            "id": 3309802,
            "node_id": "MDQ6VXNlcjMzMDk4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjoseph92",
            "html_url": "https://github.com/gjoseph92",
            "followers_url": "https://api.github.com/users/gjoseph92/followers",
            "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
            "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
            "repos_url": "https://api.github.com/users/gjoseph92/repos",
            "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-03T18:02:05Z",
        "updated_at": "2022-10-03T18:02:05Z",
        "author_association": "MEMBER",
        "body": "Just noting again that we're seeing users in real life run into this. It makes it difficult to understand or diagnose performance at a glance when you think a task is one thing, but is actually something else.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1265829178/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1410195491",
        "html_url": "https://github.com/dask/dask/issues/8635#issuecomment-1410195491",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8635",
        "id": 1410195491,
        "node_id": "IC_kwDOAbcwm85UDeAj",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-31T11:32:19Z",
        "updated_at": "2023-01-31T11:32:19Z",
        "author_association": "MEMBER",
        "body": "xref There is also an actual functional problem with this besides mere UX https://github.com/dask/dask/issues/9888 ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1410195491/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]