[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1369345420",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1369345420",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1369345420,
        "node_id": "IC_kwDOAbcwm85Rno2M",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-03T02:59:06Z",
        "updated_at": "2023-01-03T02:59:06Z",
        "author_association": "MEMBER",
        "body": "Quote from the original issue:\r\n\r\n> when optimization is invoked the process collapses the graph to a single node.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1369345420/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1372537369",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1372537369",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1372537369,
        "node_id": "IC_kwDOAbcwm85Rz0IZ",
        "user": {
            "login": "jpivarski",
            "id": 1852447,
            "node_id": "MDQ6VXNlcjE4NTI0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1852447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpivarski",
            "html_url": "https://github.com/jpivarski",
            "followers_url": "https://api.github.com/users/jpivarski/followers",
            "following_url": "https://api.github.com/users/jpivarski/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpivarski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpivarski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpivarski/subscriptions",
            "organizations_url": "https://api.github.com/users/jpivarski/orgs",
            "repos_url": "https://api.github.com/users/jpivarski/repos",
            "events_url": "https://api.github.com/users/jpivarski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpivarski/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-05T17:48:24Z",
        "updated_at": "2023-01-05T17:48:24Z",
        "author_association": "NONE",
        "body": "As a minimally reproducing example, consider this:\r\n\r\n```python\r\nimport sys\r\nimport dask.array as da\r\n\r\nsys.setrecursionlimit(10000)\r\n\r\ndef make_graph(num_layers):\r\n    array = da.zeros(1000, chunks=(100,))\r\n    for i in range(num_layers):\r\n        array = array + 1\r\n    return array\r\n```\r\n\r\nThis is a simple, very optimizable graph: adding `1` to an array `num_layers` times can be collapsed into a single node that runs on one machine. This example is deceptively simple, since I could have rewritten the expression more intelligently, but it's a stand-in for more complex\u2014but optimizable\u2014processes that we can't just rewrite algebraically.\r\n\r\nHere's what the unoptimized graph looks like with 3 layers:\r\n\r\n![download](https://user-images.githubusercontent.com/1852447/210843909-9e220c76-18a7-431b-aabb-b806d83b50f6.png)\r\n\r\nand here's the optimized version:\r\n\r\n![download](https://user-images.githubusercontent.com/1852447/210843974-9514aacf-2e8a-43b2-b62d-0de37086c557.png)\r\n\r\nNow we scale `num_layers` into the thousands. (Imagine a script that, when function calls are expanded to their definitions, results in a thousand lines of NumPy manipulations. This is not unreasonable.) The graph-optimization scales quadratically, so that (on one machine) you get the odd case of non-optimized workloads running faster than optimized ones.\r\n\r\n![image](https://user-images.githubusercontent.com/1852447/210844848-245df7a0-0c68-4b20-937c-0acc6a1f77c3.png)\r\n\r\nBut the real issue is the scaling.\r\n\r\n```python\r\nplt.plot(num_layers_trials, without_optimization)\r\nplt.plot(num_layers_trials, with_optimization)\r\n```\r\n\r\n![download](https://user-images.githubusercontent.com/1852447/210844909-4d0f1214-b632-4b2a-91ae-918f3dfc0ec0.png)\r\n\r\n(Without increasing Python's recursion limit, the stack trace hits its limit at `num_layers == 1500`.)\r\n\r\nIt seems to me that graph-optimization should scale linearly. If you're asking the question, \"Can these two graph nodes be executed on the same machine?\" you could accumulate a growing \"run\" of nodes that can. Maybe it's because I'm imagining this as an in-place mutation, and it's more complex if graph-modifications are immutable?\r\n\r\nIs there a fundamental reason why this must be an $\\mathcal{O}(n^2)$ algorithm? Because it's a problem in practice for particle physics workloads adopting Dask (the dask-contrib/dask-awkward#138 that @martindurant referenced). Thanks for any feedback!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1372537369/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1372605801",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1372605801",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1372605801,
        "node_id": "IC_kwDOAbcwm85R0E1p",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-05T18:52:31Z",
        "updated_at": "2023-01-05T18:52:31Z",
        "author_association": "MEMBER",
        "body": "Right now my inclination is to ping @rjzamora and @fjetter who I think plan to think about reworking HLGs generally this quarter mostly so that they have scalability in mind.  My sense is that we shouldn't try to do much right now though on the current system unless this is very very painful.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1372605801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1372669223",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1372669223",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1372669223,
        "node_id": "IC_kwDOAbcwm85R0UUn",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-05T19:58:35Z",
        "updated_at": "2023-01-05T19:58:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mrocklin Thanks for the reply!\r\n\r\nMy reply as a library developer & user of dask_awkward is split along those lines.\r\n\r\nAs a library developer this isn't very urgent because I can always manually inline/fuse steps and get the graphs to a reasonable size for testing and making demonstrations.\r\n\r\nAs a user this is a bit of a problem because the above-mentioned gigantic graph (which I've manually fused down to ~300 nodes that are human readable) is a very commonly used among various high-energy physics analyses, so you can almost consider this a minimal graph size. At this graph size `optimize_graph=True` vs `optimize_graph=False` run in equal times for execution speed in non-io-limited tests. Once users add to this it's probably another couple hundred nodes, including histogram fills, cuts, corrections, etc., so we're back to seeing the scaling problem. \r\n\r\nFor quick data explorations or bashing out code to get an analysis going and testing along the way the accumulation of overhead will likely get noticed quickly. For full-data runs on large clusters this optimization overhead will likely not be noticed.\r\n\r\nSo I'm a little skeptical to push people to use it if it's going to cause noticeable performance regressions.\r\n\r\nSo I would say that while it's \"good enough\" for making demonstrations, as things are at present I would not recommend that users start adopting this in full analysis considering the optimization scaling alone. There is yet some functionality to address in `dask_awkward` and `dask_histogram` as well, which will take some time to fix. We also have a conference deadline in May to show the full stack working together in realistic physics analysis, but we'd like to start promoting users to take advantage of these packages before that!\r\n\r\nBoiling all that down - I think the answer is really \"some time this quarter is OK, but it really is necessary within that time period\".",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1372669223/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1372677144",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1372677144",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1372677144,
        "node_id": "IC_kwDOAbcwm85R0WQY",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-05T20:05:52Z",
        "updated_at": "2023-01-05T20:05:52Z",
        "author_association": "MEMBER",
        "body": "Makes sense.  Also, just to be clear, if anyone can make improvements then those improvements would be welcome.  What I perhaps should have said is \"a lot of this code is under consideration for being rewritten, so there is some possibility that things improve in the moderate future without anyone else doing any additional work\".  That being said, if things are important and if people want to do that work then hopefully there are some good low hanging fruit around.  \r\n\r\nIf I were to try to solve this problem I would make a very small dataset (single partition, no data) and then create the large scale graph and profile it.  Then I would go wherever those profiles pointed me.  If other folks want to engage here then please do.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1372677144/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1372680761",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1372680761",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1372680761,
        "node_id": "IC_kwDOAbcwm85R0XI5",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-05T20:08:57Z",
        "updated_at": "2023-01-05T20:08:57Z",
        "author_association": "MEMBER",
        "body": "For reference, the critical N**2 loop is [here](https://github.com/dask/dask/blob/main/dask/blockwise.py#L1517): 70 lines including comments. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1372680761/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1380005206",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1380005206",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1380005206,
        "node_id": "IC_kwDOAbcwm85SQTVW",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-12T09:00:57Z",
        "updated_at": "2023-01-12T09:00:57Z",
        "author_association": "MEMBER",
        "body": "I'm currently digging through the existing HLG code to understand the problems and limitations better. This issue is very helpful. I'll provide an update about our next steps asap.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1380005206/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1440670071",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1440670071",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1440670071,
        "node_id": "IC_kwDOAbcwm85V3uF3",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-22T19:24:47Z",
        "updated_at": "2023-02-24T21:39:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hey everyone - how goes understanding this issue? @fjetter @rjzamora ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1440670071/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1480119589",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1480119589",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1480119589,
        "node_id": "IC_kwDOAbcwm85YONUl",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-22T19:11:18Z",
        "updated_at": "2023-03-31T14:31:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "@fjetter @rjzamora Have you been able to make any progress on this? Time is getting short for me and I'm now at the point with some fairly straightforward high energy physics analysis code that I can easily generate ~~180k node~~ 1981 layer HLGs (see below, predominantly from dealing with systematic variations) which take quite some time to optimize. I am happy to give you reproducers to help you see what's going on in a realistic situation.\r\n\r\nI would *really* like to keep the fairly large starting graph because it is much easier to debug if something goes wrong for myself and likely for regular users.\r\n\r\nHowever, Jim's example above is sufficient to demonstrate the behavior for working on the code. Anyway, I'm happy to help in any way that I can!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1480119589/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1491915861",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1491915861",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1491915861,
        "node_id": "IC_kwDOAbcwm85Y7NRV",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T13:19:27Z",
        "updated_at": "2023-03-31T13:19:27Z",
        "author_association": "MEMBER",
        "body": "There hasn't been a lot of progress on this, yet. Specifically not about speeding up this particular optimization.\r\n\r\nWe recently merged a change that reduces technical debt and will allow us to move a bit more quickly (see https://github.com/dask/dask/pull/9988). Our current intention is that the next step will attempt a partial rewrite of `HighLevelGraphs` as a standalone POC instead of incrementally modifying the existing code base. I anticipate this to take a couple of months before it actually hits the main project in its entirety.\r\n\r\nI believe at this stage it is not entirely clear how this new approach would affect your case. It is highly uncommon to generate graphs with 180k **HLG nodes** and my default reaction to this is to recommend changing how this graph is being generated. Even if our optimization was linear (I agree it should be but isn't) such a large graph may be an indication for problem in user code.\r\n\r\n@martindurant I am not familiar with dask awkward/histogram. Is this intended behavior?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1491915861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1491926126",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1491926126",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1491926126,
        "node_id": "IC_kwDOAbcwm85Y7Pxu",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T13:27:39Z",
        "updated_at": "2023-03-31T13:27:58Z",
        "author_association": "MEMBER",
        "body": "I would say it is not such a factor of dask-awkward or histogram, but the way in which high-energy physics code is formulated to use them. This is not user code, but analysis library code. Some of that is legacy and maybe could be simplified in the calling code to produce fewer layers, and that has already been done to some extent. This is, in effect, doing the job of dask optimisation (combining some linear chains) beforehand.\r\n\r\n>  It is highly uncommon to generate graphs with 180k HLG nodes\r\n\r\nwould we know if users tried this kind of thing but hit the slow wall and gave up? I see many stackoverflow posts trying to repeatedly reassign columns in dataframes in a loop, so big numbers are probably possible and actively used. How big, it is hard to say.\r\n\r\nI was planning on coming back to this in a couple of weeks. My plan is either to remove the N**2 dependence altogether or, if I fail to understand the current code sufficiently, add a previous loop looking only for strictly linear parts and joining those - which would run in linear time and yield a smaller graph to the N**2 part.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1491926126/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1491934226",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1491934226",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1491934226,
        "node_id": "IC_kwDOAbcwm85Y7RwS",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T13:33:54Z",
        "updated_at": "2023-03-31T13:35:18Z",
        "author_association": "CONTRIBUTOR",
        "body": "That number comes from a mock up of a realistic analysis in high energy physics. The number of starting nodes is driven by variations from systematic errors, an complex scheme (by itself is ~100 nodes for all variations) for applying those corrections to objects we want to vary, and then having a large number of input files / partitions.\r\n\r\nOne thing I can do, even though it would reduce ability to introspect by the user, is fold more of the complex scheme into a single HLG node. Right now it's very much splayed out to make it known which function to evaluate as late as possible, so we can always cull if things aren't needed. The user could also drive that from configuration of what corrections and variations they want and then we, later, assume they always want all variations.\r\n\r\nThe basic operation, however, of looping over systematics and filling histograms with those variations, will generate a ton of nodes by its very nature (even a simple analysis will have 20 variations and perhaps 5k-10k input files). Perhaps we should also look into how dask-histogram is dispatching things at the start a bit more closely?\r\n\r\n@douglasdavis ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1491934226/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1491937212",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1491937212",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1491937212,
        "node_id": "IC_kwDOAbcwm85Y7Se8",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T13:36:03Z",
        "updated_at": "2023-03-31T13:36:03Z",
        "author_association": "MEMBER",
        "body": "@lgray , perhaps you could explain how the number of files/partitions enters into the number of layers? We typically think of a layer as an operation over each partition, so more partitions does not mean more layers.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1491937212/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1491940905",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1491940905",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1491940905,
        "node_id": "IC_kwDOAbcwm85Y7TYp",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T13:38:57Z",
        "updated_at": "2023-03-31T13:42:33Z",
        "author_association": "CONTRIBUTOR",
        "body": "Oh interesting - I should try this with parquet to see what it does. For root input files I get a pretty big HLG (from `.visualize()` or just looking at `.dask`) already from just the splay over the input partitions? Or am I interpreting this incorrectly?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1491940905/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1491947445",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1491947445",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1491947445,
        "node_id": "IC_kwDOAbcwm85Y7U-1",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T13:43:16Z",
        "updated_at": "2023-03-31T13:43:16Z",
        "author_association": "CONTRIBUTOR",
        "body": "And then anything on top of that is replicated over the input partitions, so any big nasty clump of nodes has a multiplying effect.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1491947445/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1491951268",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1491951268",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1491951268,
        "node_id": "IC_kwDOAbcwm85Y7V6k",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T13:46:10Z",
        "updated_at": "2023-03-31T13:46:10Z",
        "author_association": "MEMBER",
        "body": "I would naively expect a `read_root()` (or whatever it's called) to produce a dask-awkward object with a graph of exactly one layer, whatever the number of input files. It would evaluate to one *task* per input file, but only when expanded on the scheduler. This is definitely what parquet/JSON do. However, I gather that with root, you don't necessarily know the number of inputs without some preliminary scanning already in a task?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1491951268/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1491959494",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1491959494",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1491959494,
        "node_id": "IC_kwDOAbcwm85Y7X7G",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T13:52:21Z",
        "updated_at": "2023-03-31T13:52:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "So for 100 uproot input files I get:\r\n<img width=\"1237\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1068089/229138938-ec9014c8-c7b0-47f5-b6ce-c9956833c447.png\">\r\n\r\nIndeed only one layer, with 100 outputs in this case.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1491959494/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1491967914",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1491967914",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1491967914,
        "node_id": "IC_kwDOAbcwm85Y7Z-q",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T13:58:30Z",
        "updated_at": "2023-03-31T14:06:34Z",
        "author_association": "CONTRIBUTOR",
        "body": "OK mild point of confusion here, len(something.dask) gives the number of nodes (keys), where print(something.dask) gives you the number of layers. This ~180k *key* graph has 1981 layers (that are predominantly histogram filling as you may expect).\r\n\r\nSo the point there we build ~180k nodes / 1981 layers is here, entirely, then:\r\n<img width=\"962\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1068089/229140068-3dc1d3b8-4fe9-41c4-bd2c-a0770c98db56.png\">\r\n\r\nWhich yields 333 layers:\r\n<img width=\"540\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1068089/229142802-5a49f91f-e945-48b3-b1c7-3a87b1f8b9d3.png\">\r\n\r\nSo perhaps this really just indicates that more thinking is needed on dask-histogram's dispatch patterns?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1491967914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1491969576",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1491969576",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1491969576,
        "node_id": "IC_kwDOAbcwm85Y7aYo",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T13:59:34Z",
        "updated_at": "2023-03-31T14:09:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "There's also a rather large amount of layers that are coming just from `toplevel.intermediate.some_value`, since our data is highly structured - lots of getitems.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1491969576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1491980385",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1491980385",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1491980385,
        "node_id": "IC_kwDOAbcwm85Y7dBh",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T14:06:38Z",
        "updated_at": "2023-03-31T14:07:50Z",
        "author_association": "MEMBER",
        "body": "Taking the length of the `HighLevelGraph` object will loop over all layers and count the number of tasks within each layer. That operation is not counting layers (like `len(dask.layers)` would be).\r\n\r\n**EDIT**: Ah - Looks like there was an edit in an earlier comment while I was typing this.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1491980385/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1491982866",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1491982866",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1491982866,
        "node_id": "IC_kwDOAbcwm85Y7doS",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-31T14:07:51Z",
        "updated_at": "2023-03-31T14:07:51Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes! Just figured that out and have adjusted my claims above.\r\n\r\nStill, it's noticeably slow at 2k layers.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1491982866/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1494436368",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1494436368",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1494436368,
        "node_id": "IC_kwDOAbcwm85ZE0oQ",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-03T14:30:35Z",
        "updated_at": "2023-04-03T14:30:35Z",
        "author_association": "MEMBER",
        "body": "> So the point there we build ~180k nodes / 1981 layers is here, entirely, then:\r\n\r\nThis sounds better. 180k ordinary nodes shouldn't be a problem. 2k layers still sounds like a lot\r\n\r\n> There's also a rather large amount of layers that are coming just from toplevel.intermediate.some_value, since our data is highly structured - lots of getitems.\r\n\r\nI assume this nested attribute access is a dask-awkward feature or what exactly is this doing?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1494436368/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1494441685",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1494441685",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1494441685,
        "node_id": "IC_kwDOAbcwm85ZE17V",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-03T14:33:50Z",
        "updated_at": "2023-04-03T14:33:50Z",
        "author_association": "MEMBER",
        "body": "Yes, dask_awkward produces a layer for each getitem, so array.field.subfield.thing is costly, especially if then you combine them. @douglasdavis , is there a possibility of providing a getitem like array[\"field.subfield.thing\"] ? I suppose no, since dots are not strictly disallowed in field names. However, chained getitems layers like this should be super easy to spot and combine in linear time.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1494441685/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1494447562",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1494447562",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1494447562,
        "node_id": "IC_kwDOAbcwm85ZE3XK",
        "user": {
            "login": "douglasdavis",
            "id": 3202090,
            "node_id": "MDQ6VXNlcjMyMDIwOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3202090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/douglasdavis",
            "html_url": "https://github.com/douglasdavis",
            "followers_url": "https://api.github.com/users/douglasdavis/followers",
            "following_url": "https://api.github.com/users/douglasdavis/following{/other_user}",
            "gists_url": "https://api.github.com/users/douglasdavis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/douglasdavis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/douglasdavis/subscriptions",
            "organizations_url": "https://api.github.com/users/douglasdavis/orgs",
            "repos_url": "https://api.github.com/users/douglasdavis/repos",
            "events_url": "https://api.github.com/users/douglasdavis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/douglasdavis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-03T14:36:59Z",
        "updated_at": "2023-04-03T14:39:36Z",
        "author_association": "MEMBER",
        "body": "> However, chained getitems layers like this should be super easy to spot and combine in linear time.\r\n\r\nI was just about to type up the same thing-- yes in this specific case we should be able to have\r\n\r\n```python\r\nthing = array.field.subfield.subsubfield   # 3 layers\r\n```\r\nrewritten as\r\n\r\n```python\r\nthing = array[\"field\", \"subfield\", \"subsubfield\"]   # 1 layer\r\n```\r\nwithout too much difficulty",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1494447562/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1533633282",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1533633282",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1533633282,
        "node_id": "IC_kwDOAbcwm85baWMC",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-03T19:45:40Z",
        "updated_at": "2023-05-03T19:53:48Z",
        "author_association": "CONTRIBUTOR",
        "body": "Howdy folks! After lots of digging around and optimizing we're pleasantly handling 7000 layer task graphs with few partitions. It's working out quite well!\r\n\r\nHowever, there's one portion that scales with the number of input partitions in a somewhat nasty way.\r\nThat being said, we are somewhat uncomfortably handling 200k input partitions (this is ~normal for a full modern HEP analysis), which when coupled with a 7000 layer task graph starts to slow down quite a lot!\r\n\r\nThe following trace is for such a situations:\r\n```\r\n  _     ._   __/__   _ _  _  _ _/_   Recorded: 14:15:45  Samples:  53821\r\n /_//_/// /_\\ / //_// / //_'/ //     Duration: 123.727   CPU time: 118.303\r\n/   _/                      v4.3.0\r\n\r\nProgram: yimu_test5.py\r\n\r\n123.726 <module>  yimu_test5.py:1\r\n\u2514\u2500 123.726 optimize  dask/base.py:484\r\n   \u251c\u2500 120.744 collections_to_dsk  dask/base.py:352\r\n   \u2502  \u2514\u2500 120.739 optimize  dask_histogram/core.py:387\r\n   \u2502     \u251c\u2500 110.274 cull  dask/highlevelgraph.py:687\r\n   \u2502     \u2502  \u251c\u2500 84.380 cull  dask/blockwise.py:580\r\n   \u2502     \u2502  \u2502  \u251c\u2500 74.164 _cull_dependencies  dask/blockwise.py:507\r\n   \u2502     \u2502  \u2502  \u2502  \u251c\u2500 71.431 [self]  \r\n   \u2502     \u2502  \u2502  \u2502  \u2514\u2500 1.908 <genexpr>  dask/blockwise.py:545\r\n   \u2502     \u2502  \u2502  \u2514\u2500 9.063 [self]  \r\n   \u2502     \u2502  \u251c\u2500 7.844 [self]  \r\n   \u2502     \u2502  \u251c\u2500 7.010 get_output_keys  dask/blockwise.py:477\r\n   \u2502     \u2502  \u2502  \u2514\u2500 6.550 <setcomp>  dask/blockwise.py:483\r\n   \u2502     \u2502  \u2502     \u2514\u2500 6.513 [self]  \r\n   \u2502     \u2502  \u251c\u2500 3.859 get_all_external_keys  dask/highlevelgraph.py:538\r\n   \u2502     \u2502  \u2502  \u2514\u2500 2.827 get_output_keys  dask/blockwise.py:477\r\n   \u2502     \u2502  \u2502     \u2514\u2500 2.578 <setcomp>  dask/blockwise.py:483\r\n   \u2502     \u2502  \u2502        \u2514\u2500 2.564 [self]  \r\n   \u2502     \u2502  \u251c\u2500 3.419 set.intersection  <built-in>:0\r\n   \u2502     \u2502  \u2514\u2500 2.611 dict.update  <built-in>:0\r\n   \u2502     \u251c\u2500 5.565 [self]  \r\n   \u2502     \u2514\u2500 3.948 optimize  dask_awkward/lib/optimize.py:58\r\n   \u2502        \u2514\u2500 3.878 optimize_columns  dask_awkward/lib/optimize.py:76\r\n   \u2502           \u2514\u2500 3.854 _necessary_columns  dask_awkward/lib/optimize.py:393\r\n   \u2502              \u2514\u2500 3.850 _get_column_reports  dask_awkward/lib/optimize.py:332\r\n   \u2502                 \u2514\u2500 3.631 get_sync  dask/local.py:551\r\n   \u2502                    \u2514\u2500 3.631 get_async  dask/local.py:350\r\n   \u2502                       \u2514\u2500 3.242 fire_tasks  dask/local.py:452\r\n   \u2502                          \u2514\u2500 3.189 submit  dask/local.py:539\r\n   \u2502                             \u2514\u2500 3.153 batch_execute_tasks  dask/local.py:234\r\n   \u2502                                \u2514\u2500 3.151 <listcomp>  dask/local.py:238\r\n   \u2502                                   \u2514\u2500 3.149 execute_task  dask/local.py:214\r\n   \u2502                                      \u2514\u2500 3.147 _execute_task  dask/core.py:82\r\n   \u2502                                         \u2514\u2500 3.122 __call__  dask/optimization.py:987\r\n   \u2502                                            \u2514\u2500 3.112 get  dask/core.py:128\r\n   \u2502                                               \u2514\u2500 3.083 _execute_task  dask/core.py:82\r\n   \u2514\u2500 2.981 [self]\r\n   ```\r\n   \r\nThe 71 seconds spent in [self] in `_cull_dependencies` is most likely in these lines\r\n(mostly confident from wrapping them with `time.monotonic()`):\r\nhttps://github.com/dask/dask/blob/main/dask/blockwise.py#L538-L554\r\n\r\n@martindurant relayed some ideas on how to possibly reduce this time, but @fjetter @rjzamora could chime in too if this digging helps at all!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1533633282/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1533643613",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1533643613",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1533643613,
        "node_id": "IC_kwDOAbcwm85baYtd",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-03T19:50:35Z",
        "updated_at": "2023-05-03T19:50:35Z",
        "author_association": "MEMBER",
        "body": "Here is the linear blockwise layer fuser, for those interested: https://github.com/dask-contrib/dask-awkward/blob/main/src/dask_awkward/lib/optimize.py#L216",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1533643613/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1533651782",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1533651782",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1533651782,
        "node_id": "IC_kwDOAbcwm85baatG",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-03T19:57:27Z",
        "updated_at": "2023-05-03T20:58:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "In particular, it looks like the layer fusion shaved a good 10 seconds off the cull by significantly reducing the number of layers and corresponding keys ( 7k layers down to 5k, 1.4 billion keys to 900 million ;-) ). Still some ways to go though.\r\n\r\nThe final number of layers / keys in the optimized graph is 234 and ~21 million.\r\n\r\nSeems we could probably be smarter about what portions of the graph we actually need to test for culling?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1533651782/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1535149549",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1535149549",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1535149549,
        "node_id": "IC_kwDOAbcwm85bgIXt",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-04T17:29:11Z",
        "updated_at": "2023-05-04T19:03:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "I can bring this to 96s by replacing the often encountered special case in `dask_awkward` of a layer having a single index with partitions being eaten by blockwise, with a simple dict comprehension:\r\n\r\n\"index\" is the name of the layer that we depend upon.\r\n```python3\r\nkey_deps = {(self.output, out_coord[0]): {(index, out_coord[0])} for out_coord in output_blocks}\r\n```\r\n\r\nThis works and produces correct results in an very complex HEP analysis.\r\nAny ideas on how to make that faster?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1535149549/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1535481529",
        "html_url": "https://github.com/dask/dask/issues/9795#issuecomment-1535481529",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9795",
        "id": 1535481529,
        "node_id": "IC_kwDOAbcwm85bhZa5",
        "user": {
            "login": "lgray",
            "id": 1068089,
            "node_id": "MDQ6VXNlcjEwNjgwODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1068089?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lgray",
            "html_url": "https://github.com/lgray",
            "followers_url": "https://api.github.com/users/lgray/followers",
            "following_url": "https://api.github.com/users/lgray/following{/other_user}",
            "gists_url": "https://api.github.com/users/lgray/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lgray/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lgray/subscriptions",
            "organizations_url": "https://api.github.com/users/lgray/orgs",
            "repos_url": "https://api.github.com/users/lgray/repos",
            "events_url": "https://api.github.com/users/lgray/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lgray/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-04T22:19:11Z",
        "updated_at": "2023-05-04T22:19:11Z",
        "author_association": "CONTRIBUTOR",
        "body": "I've gotten really close to taking this special case off the map (this is a simplified version that only handles one blockwise index):\r\n```python3\r\nimport numba as nb\r\n\r\n_coords_kernel_input_type = nb.types.Set(nb.types.UniTuple(nb.types.int64, 1), reflected=True)\r\n_coords_kernel_keyval_type = nb.types.Tuple([nb.types.unicode_type, nb.types.int64])\r\n_coords_kernel_return_type = nb.types.DictType(\r\n    _coords_kernel_keyval_type,\r\n    _coords_kernel_keyval_type,\r\n)\r\n\r\n@nb.jit(_coords_kernel_return_type(_coords_kernel_input_type, nb.types.unicode_type, nb.types.unicode_type), nopython=True)\r\ndef _coords_single_input_kernel(output_blocks, output_key, index_key):\r\n    output = nb.typed.Dict.empty(\r\n        _coords_kernel_keyval_type,\r\n        _coords_kernel_keyval_type,\r\n    )\r\n    for out_coord in output_blocks:\r\n        output[(output_key, out_coord[0])] = (index_key, out_coord[0])\r\n    return output\r\n```\r\n\r\nwhich takes a pretty uniform 0.03s even for 200k partitions for varying inputs, an enormous time save (10x -100x better depending on the layer being optimized).\r\n\r\nHowever - it needs to output a `set(tuple(string, int, ...))` rather than `tuple(string, int)`, and I'm stuck doing the conversion.\r\nNumba doesn't yet allow sets to be dict values, so a bit of a show stopper.\r\n\r\nThat's about as far as I can really go right now, would appreciate further thoughts to try to get us there. :-)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1535481529/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]