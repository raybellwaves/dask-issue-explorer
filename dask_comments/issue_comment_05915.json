[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/589835781",
        "html_url": "https://github.com/dask/dask/issues/5915#issuecomment-589835781",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5915",
        "id": 589835781,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTgzNTc4MQ==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-21T21:08:44Z",
        "updated_at": "2020-02-21T21:08:44Z",
        "author_association": "MEMBER",
        "body": "Hi Peter, thanks for raising an issue. I think it would probably be helpful to pull in @ihnorton here since it looks like they did most of the TileDB implementation. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/589835781/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/589842061",
        "html_url": "https://github.com/dask/dask/issues/5915#issuecomment-589842061",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5915",
        "id": 589842061,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTg0MjA2MQ==",
        "user": {
            "login": "ihnorton",
            "id": 327706,
            "node_id": "MDQ6VXNlcjMyNzcwNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/327706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ihnorton",
            "html_url": "https://github.com/ihnorton",
            "followers_url": "https://api.github.com/users/ihnorton/followers",
            "following_url": "https://api.github.com/users/ihnorton/following{/other_user}",
            "gists_url": "https://api.github.com/users/ihnorton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ihnorton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ihnorton/subscriptions",
            "organizations_url": "https://api.github.com/users/ihnorton/orgs",
            "repos_url": "https://api.github.com/users/ihnorton/repos",
            "events_url": "https://api.github.com/users/ihnorton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ihnorton/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-21T21:26:40Z",
        "updated_at": "2020-02-21T21:26:40Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for the ping @jsignell, I will take a look.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/589842061/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/589965748",
        "html_url": "https://github.com/dask/dask/issues/5915#issuecomment-589965748",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5915",
        "id": 589965748,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTk2NTc0OA==",
        "user": {
            "login": "ihnorton",
            "id": 327706,
            "node_id": "MDQ6VXNlcjMyNzcwNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/327706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ihnorton",
            "html_url": "https://github.com/ihnorton",
            "followers_url": "https://api.github.com/users/ihnorton/followers",
            "following_url": "https://api.github.com/users/ihnorton/following{/other_user}",
            "gists_url": "https://api.github.com/users/ihnorton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ihnorton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ihnorton/subscriptions",
            "organizations_url": "https://api.github.com/users/ihnorton/orgs",
            "repos_url": "https://api.github.com/users/ihnorton/repos",
            "events_url": "https://api.github.com/users/ihnorton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ihnorton/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-22T15:18:44Z",
        "updated_at": "2020-02-22T15:23:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "Some quick notes here, will look further on Monday:\r\n- @DPeterK the first issue is that you are passing `attribute='attr'`, which should instead be `attribute='test'`. This seems to be failing internally to TileDB-Py, I believe in the Cython layer, and ending up with the segfault  -- I will dig in to this in TileDB-Py to improve the failure mode and error reporting here.\r\n- after fixing the above, the second issue is a memory error when dask creates the chunk list:\r\n\r\n<details>\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/cmn/condaenvs/tiledb/lib/python3.7/site-packages/dask/array/tiledb_io.py\", line 72, in from_tiledb\r\n    return core.from_array(tdb, chunks, name=\"tiledb-%s\" % uri)\r\n  File \"/cmn/condaenvs/tiledb/lib/python3.7/site-packages/dask/array/core.py\", line 2725, in from_array\r\n    chunks, x.shape, dtype=x.dtype, previous_chunks=previous_chunks\r\n  File \"/cmn/condaenvs/tiledb/lib/python3.7/site-packages/dask/array/core.py\", line 2459, in normalize_chunks\r\n    (),\r\n  File \"/cmn/condaenvs/tiledb/lib/python3.7/site-packages/dask/array/core.py\", line 2457, in <genexpr>\r\n    for s, c in zip(shape, chunks)\r\n  File \"/cmn/condaenvs/tiledb/lib/python3.7/site-packages/dask/array/core.py\", line 954, in blockdims_from_blockshape\r\n    for d, bd in zip(shape, chunks)\r\n  File \"/cmn/condaenvs/tiledb/lib/python3.7/site-packages/dask/array/core.py\", line 954, in <genexpr>\r\n    for d, bd in zip(shape, chunks)\r\nMemoryError\r\n```\r\n\r\n</details>\r\n\r\nIt looks like this happens because dask.array is trying to cover the shape of the tiledb array -- which is the entire requested domain:\r\n```\r\n> /cmn/condaenvs/tiledb/lib/python3.7/site-packages/dask/array/tiledb_io.py(72)from_tiledb()\r\n-> return core.from_array(tdb, chunks, name=\"tiledb-%s\" % uri)\r\n(Pdb) p tdb.shape\r\n(18446744073709550615, 101)\r\n(Pdb) p chunks\r\n[1000, 10]\r\n```\r\n\r\nDask [supports `np.nan`](https://stackoverflow.com/questions/51144464/can-i-create-a-dask-array-with-a-delayed-shape) as a dimension shape, but then it seems the array [can't be sliced on that dimension](https://docs.dask.org/en/latest/array-chunks.html#unknown-chunks). I'll have to take a deeper look at if/how this is handled in Dask for other storage backends.\r\n\r\nAlternatively, we may be able to add an option in TileDB-Py to take a view on a subset of a dimension (as suggested by @DPeterK), which would make the `.shape` of the TileDB.Array object reasonably small enough for dask to cover with chunks. Will think this through a bit on Monday w/ @stavrospapadopoulos.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/589965748/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/592045724",
        "html_url": "https://github.com/dask/dask/issues/5915#issuecomment-592045724",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5915",
        "id": 592045724,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjA0NTcyNA==",
        "user": {
            "login": "ihnorton",
            "id": 327706,
            "node_id": "MDQ6VXNlcjMyNzcwNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/327706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ihnorton",
            "html_url": "https://github.com/ihnorton",
            "followers_url": "https://api.github.com/users/ihnorton/followers",
            "following_url": "https://api.github.com/users/ihnorton/following{/other_user}",
            "gists_url": "https://api.github.com/users/ihnorton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ihnorton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ihnorton/subscriptions",
            "organizations_url": "https://api.github.com/users/ihnorton/orgs",
            "repos_url": "https://api.github.com/users/ihnorton/repos",
            "events_url": "https://api.github.com/users/ihnorton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ihnorton/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-27T16:18:59Z",
        "updated_at": "2020-02-27T16:18:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "For the MemoryError relating to the chunk list, I believe the dimension size for non-delayed arrays is inherently limited by the memory available on the main node, because chunk lists are calculated eagerly (there are some open issues about task graph size which might also come in to play). Hopefully a dask dev will comment if I missed something.\r\n\r\nThe large dimension scenario might be a good fit for a delayed array or delayed dataframe (given that you will be creating arrays with multiple attributes).\r\n\r\nThe first issue w/ attribute name mismatch leading to crash is now fixed in the TileDB-Py dev tree and will be included in the next release.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/592045724/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/592473819",
        "html_url": "https://github.com/dask/dask/issues/5915#issuecomment-592473819",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5915",
        "id": 592473819,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjQ3MzgxOQ==",
        "user": {
            "login": "DPeterK",
            "id": 3473068,
            "node_id": "MDQ6VXNlcjM0NzMwNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3473068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DPeterK",
            "html_url": "https://github.com/DPeterK",
            "followers_url": "https://api.github.com/users/DPeterK/followers",
            "following_url": "https://api.github.com/users/DPeterK/following{/other_user}",
            "gists_url": "https://api.github.com/users/DPeterK/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DPeterK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DPeterK/subscriptions",
            "organizations_url": "https://api.github.com/users/DPeterK/orgs",
            "repos_url": "https://api.github.com/users/DPeterK/repos",
            "events_url": "https://api.github.com/users/DPeterK/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DPeterK/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-28T11:30:23Z",
        "updated_at": "2020-02-28T11:30:23Z",
        "author_association": "NONE",
        "body": "Thanks @jsignell and @ihnorton for engaging with this issue, and apologies for the slight mistake in the example code! I've updated the code example so that the array name is consistent - but I'm glad that mistake led to some improved error reporting.\r\n\r\nI've just tried using the indexing approach that I tentatively suggested above:\r\n\r\n```python\r\ntdb = tiledb.open(tdb_data_path, attr='surface_air_pressure')\r\npoints = da.from_array(tdb[0:60096, 0:219, 0:286], chunks)\r\n```\r\n\r\nGiven that my Jupyter kernal keeps dying, it seems this approach is trying to realise all of the indexed TileDB array contents in memory then write it to a dask array, rather than streaming or proxying the data into the TileDB - as I was concerned about above. And yes this is a large volume of data, but that's sort of the point here!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/592473819/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/593417117",
        "html_url": "https://github.com/dask/dask/issues/5915#issuecomment-593417117",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5915",
        "id": 593417117,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzQxNzExNw==",
        "user": {
            "login": "DPeterK",
            "id": 3473068,
            "node_id": "MDQ6VXNlcjM0NzMwNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3473068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DPeterK",
            "html_url": "https://github.com/DPeterK",
            "followers_url": "https://api.github.com/users/DPeterK/followers",
            "following_url": "https://api.github.com/users/DPeterK/following{/other_user}",
            "gists_url": "https://api.github.com/users/DPeterK/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DPeterK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DPeterK/subscriptions",
            "organizations_url": "https://api.github.com/users/DPeterK/orgs",
            "repos_url": "https://api.github.com/users/DPeterK/repos",
            "events_url": "https://api.github.com/users/DPeterK/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DPeterK/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-02T14:03:25Z",
        "updated_at": "2020-03-02T14:03:25Z",
        "author_association": "NONE",
        "body": "I've realised that Iris already has a solution for the problem I described just above, in the form of the data proxy classes. Data proxy classes duck-type to being array-like, but only maintain a reference to the array on disk, rather than actually loading the array into memory. The only time the array is loaded into memory is on an indexing request, when only the subset defined by the index is loaded. I've a functional implementation of this for TileDB at https://github.com/informatics-lab/tiledb_netcdf/blob/master/nctotdb/readers.py#L38.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/593417117/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/593630759",
        "html_url": "https://github.com/dask/dask/issues/5915#issuecomment-593630759",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5915",
        "id": 593630759,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzYzMDc1OQ==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-02T21:26:17Z",
        "updated_at": "2020-03-02T21:26:17Z",
        "author_association": "MEMBER",
        "body": "Great! So are you all good? If so I'll close the issue.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/593630759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/593834598",
        "html_url": "https://github.com/dask/dask/issues/5915#issuecomment-593834598",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5915",
        "id": 593834598,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzgzNDU5OA==",
        "user": {
            "login": "DPeterK",
            "id": 3473068,
            "node_id": "MDQ6VXNlcjM0NzMwNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3473068?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DPeterK",
            "html_url": "https://github.com/DPeterK",
            "followers_url": "https://api.github.com/users/DPeterK/followers",
            "following_url": "https://api.github.com/users/DPeterK/following{/other_user}",
            "gists_url": "https://api.github.com/users/DPeterK/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DPeterK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DPeterK/subscriptions",
            "organizations_url": "https://api.github.com/users/DPeterK/orgs",
            "repos_url": "https://api.github.com/users/DPeterK/repos",
            "events_url": "https://api.github.com/users/DPeterK/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DPeterK/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-03T08:46:40Z",
        "updated_at": "2020-03-03T08:46:40Z",
        "author_association": "NONE",
        "body": "I personally am sorted, but others using dask with TileDB in cases like I've described here will still hit memory errors \ud83d\ude09 I feel this might still be worth a fix in dask itself.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/593834598/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/593982987",
        "html_url": "https://github.com/dask/dask/issues/5915#issuecomment-593982987",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5915",
        "id": 593982987,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5Mzk4Mjk4Nw==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-03T14:37:25Z",
        "updated_at": "2020-03-03T14:37:25Z",
        "author_association": "MEMBER",
        "body": "Fair enough. I'll leave it open in case it helps others. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/593982987/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/594100378",
        "html_url": "https://github.com/dask/dask/issues/5915#issuecomment-594100378",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5915",
        "id": 594100378,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDEwMDM3OA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-03T18:33:21Z",
        "updated_at": "2020-03-03T18:33:21Z",
        "author_association": "MEMBER",
        "body": "What's the summary of the current understanding? Is it the case that\r\n\r\n```python\r\ntdb = tiledb.open(tdb_data_path, attr='surface_air_pressure')\r\npoints = da.from_array(tdb[0:60096, 0:219, 0:286], chunks)\r\n```\r\n\r\ninvolves materializing `tdb` in memory? Do we know why that is? With, for example, an h5py.H5File object there, you wouldn't have any issues I think.\r\n\r\nWhat's the next step for Dask to take?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/594100378/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/594169724",
        "html_url": "https://github.com/dask/dask/issues/5915#issuecomment-594169724",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5915",
        "id": 594169724,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDE2OTcyNA==",
        "user": {
            "login": "ihnorton",
            "id": 327706,
            "node_id": "MDQ6VXNlcjMyNzcwNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/327706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ihnorton",
            "html_url": "https://github.com/ihnorton",
            "followers_url": "https://api.github.com/users/ihnorton/followers",
            "following_url": "https://api.github.com/users/ihnorton/following{/other_user}",
            "gists_url": "https://api.github.com/users/ihnorton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ihnorton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ihnorton/subscriptions",
            "organizations_url": "https://api.github.com/users/ihnorton/orgs",
            "repos_url": "https://api.github.com/users/ihnorton/repos",
            "events_url": "https://api.github.com/users/ihnorton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ihnorton/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-03T21:09:05Z",
        "updated_at": "2020-03-03T21:09:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hi @TomAugspurger,\r\n\r\n- with regard to Peter's suggestion, slicing `tdb[0:60096, 0:219, 0:286]` does eagerly materialize the result as a 28GB, in-memory, `ndarray`. I believe h5py and most other NumPy-like objects would do the same -- e.g. see this test script using `h5py.H5File`:\r\n\r\n<details>\r\n\r\n```\r\nimport h5py\r\nimport numpy as np\r\n\r\ndata = np.zeros((60097, 220, 287), dtype=np.uint64)\r\n\r\nwith h5py.File('/tmp/data.h5', 'w') as hf:\r\n    dset = hf.create_dataset('test', data=data)\r\n\r\na = h5py.File('/tmp/data.h5', 'r')\r\n\r\ns = a['test'][0:60096, 0:219, 0:286]\r\nprint(\"type: \", type(s))\r\nprint(\"dtype: \", s.dtype)\r\nprint(\"shape: \", s.shape)\r\nprint(\"nbytes: \", s.nbytes, \" MB: \", s.nbytes / 1024**2)\r\n```\r\n\r\n--- output:\r\n\r\n```\r\ntype:  <class 'numpy.ndarray'>\r\ndtype:  uint64\r\nshape:  (60096, 219, 286)\r\nnbytes:  30112422912  MB:  28717.4443359375\r\n```\r\n\r\n</details>\r\n\r\n- however, note that _opening_ the `TileDB.Array` `tdb` object [a few lines above](https://github.com/dask/dask/blob/2b7945ed783bc1be7bb67ab78b4ca246adfa9804/dask/array/tiledb_io.py#L51) does not materialize anything substantial into memory (just a wrapper object)\r\n\r\n- I am looking at adding a subset option to `tiledb.array.open` which would allow the array to present a smaller `.shape` than is saved in the underlying schema/data (restricting indexing to that shape, etc.). I will submit a PR to support this in dask, if/when it is available.\r\n\r\n---\r\n\r\nSome other notes below:\r\n<details>\r\n\r\n- the `tdb` object is array-like and reports a `.shape` of `(18446744073709550615, 101)`\r\n- Regarding the `MemoryError` that led to Peter's proposal, based on the reported `.shape`, dask tries to create a very large chunk list and hits a MemoryError (see [this comment](https://github.com/dask/dask/issues/5915#issuecomment-589965748)). The same thing happens with Zarr or h5py. Here's an example:\r\n\r\n```\r\nimport h5py\r\nimport dask.array as da\r\n\r\nchunks = (1000,100)\r\n\r\nshape = (9223372036854775807, 100)\r\n\r\nwith h5py.File('data.h5', 'w') as h:\r\n    dset = h.create_dataset('/data', shape=shape, chunks=chunks, dtype='f8')\r\n\r\na = h5py.File('data.h5', 'r')\r\na_data = a['/data']\r\n\r\nda.from_array(a_data)\r\n```\r\n\r\nRunning the above script gives a `MemoryError` in the same place, because it is trying to create a tuple w/ 10^17 elements:\r\n\r\n```\r\nchunks = (1000,100)\r\nshape = (9223372036854775807, 101)\r\n\r\n# dask/array/core.py:954\r\ntuple(\r\n        ((bd,) * (d // bd) + ((d % bd,) if d % bd else ()) if d else (0,))\r\n        for d, bd in zip(shape, chunks)\r\n    )\r\n```\r\n\r\n-> also `MemoryError`.\r\n\r\n(note that I am using `div(BigInt(typemax(UInt64))-1, 2) == 9223372036854775807` because h5py doesn't like `typemax(UInt64)-1` -- I get `Unable to create dataset (unable to get the next power of 2)`)\r\n\r\n</details>",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/594169724/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]