[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/830983574",
        "html_url": "https://github.com/dask/dask/issues/7622#issuecomment-830983574",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7622",
        "id": 830983574,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgzMDk4MzU3NA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-05-03T01:47:08Z",
        "updated_at": "2021-05-03T01:47:08Z",
        "author_association": "MEMBER",
        "body": "I think this is the correct behavior, though the error message might be clearer. `meta={'age': int}` says you're user-defined function is returning a DataFrame with the one column `name`. But the function instead returns a Series. The `meta=('age', int)` works, since it's indicating a series is returned.\r\n\r\n@fuglede are you interested in looking around `apply_and_enforce` to see if the error message can be improved? Perhaps a check like `if is_dataframe_like(meta) is not is_dataframe_like(df)`, and likewise for series?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/830983574/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/832464859",
        "html_url": "https://github.com/dask/dask/issues/7622#issuecomment-832464859",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7622",
        "id": 832464859,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjQ2NDg1OQ==",
        "user": {
            "login": "fuglede",
            "id": 6169306,
            "node_id": "MDQ6VXNlcjYxNjkzMDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6169306?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuglede",
            "html_url": "https://github.com/fuglede",
            "followers_url": "https://api.github.com/users/fuglede/followers",
            "following_url": "https://api.github.com/users/fuglede/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuglede/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuglede/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuglede/subscriptions",
            "organizations_url": "https://api.github.com/users/fuglede/orgs",
            "repos_url": "https://api.github.com/users/fuglede/repos",
            "events_url": "https://api.github.com/users/fuglede/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuglede/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-05-05T07:09:10Z",
        "updated_at": "2021-05-05T07:09:10Z",
        "author_association": "CONTRIBUTOR",
        "body": "I see. Then I think it could be useful if the docs could be spelled out on that point as well.\r\n\r\nIn any case, I'm afraid I doubt I'll find the time to dig in myself any time soon, but thanks for the kickstarting pointers!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/832464859/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/832740615",
        "html_url": "https://github.com/dask/dask/issues/7622#issuecomment-832740615",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7622",
        "id": 832740615,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjc0MDYxNQ==",
        "user": {
            "login": "ThomasA",
            "id": 971307,
            "node_id": "MDQ6VXNlcjk3MTMwNw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/971307?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ThomasA",
            "html_url": "https://github.com/ThomasA",
            "followers_url": "https://api.github.com/users/ThomasA/followers",
            "following_url": "https://api.github.com/users/ThomasA/following{/other_user}",
            "gists_url": "https://api.github.com/users/ThomasA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ThomasA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ThomasA/subscriptions",
            "organizations_url": "https://api.github.com/users/ThomasA/orgs",
            "repos_url": "https://api.github.com/users/ThomasA/repos",
            "events_url": "https://api.github.com/users/ThomasA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ThomasA/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-05-05T14:36:28Z",
        "updated_at": "2021-05-05T14:36:28Z",
        "author_association": "NONE",
        "body": "Thanks for clarifying this @TomAugspurger. I missed the DataFrame/Series distinction when reading the docs.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/832740615/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/927001513",
        "html_url": "https://github.com/dask/dask/issues/7622#issuecomment-927001513",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7622",
        "id": 927001513,
        "node_id": "IC_kwDOAbcwm843QOup",
        "user": {
            "login": "kesmit13",
            "id": 6206744,
            "node_id": "MDQ6VXNlcjYyMDY3NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6206744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kesmit13",
            "html_url": "https://github.com/kesmit13",
            "followers_url": "https://api.github.com/users/kesmit13/followers",
            "following_url": "https://api.github.com/users/kesmit13/following{/other_user}",
            "gists_url": "https://api.github.com/users/kesmit13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kesmit13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kesmit13/subscriptions",
            "organizations_url": "https://api.github.com/users/kesmit13/orgs",
            "repos_url": "https://api.github.com/users/kesmit13/repos",
            "events_url": "https://api.github.com/users/kesmit13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kesmit13/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-25T03:11:50Z",
        "updated_at": "2021-09-25T03:11:50Z",
        "author_association": "NONE",
        "body": "I'm running into the same error when I do want to return a `DataFrame`. It seems as though calling `func` in `apply_and_enforce` is always returning a `Series` rather than a `DataFrame`.\r\n```\r\nimport dask.dataframe as dd\r\ndf = dd.read_csv(\"test.csv\")\r\nresult = df.apply(lambda x: pd.DataFrame([[x[0] * 2, x[1] * 2]], columns=['x', 'y']), axis=1, meta=df)\r\nresult.compute()\r\n```\r\nResults in:\r\n```\r\n/opt/python3.8/site-packages/dask/dataframe/core.py in apply_and_enforce(*args, **kwargs)\r\n   5671             c = meta.columns\r\n   5672         else:\r\n-> 5673             c = meta.name\r\n   5674         return _rename(c, df)\r\n   5675     return df\r\n\r\n/opt/python3.8/site-packages/pandas/core/generic.py in __getattr__(self, name)\r\n   5463             if self._info_axis._can_hold_identifiers_and_holds_name(name):\r\n   5464                 return self[name]\r\n-> 5465             return object.__getattribute__(self, name)\r\n   5466\r\n   5467     def __setattr__(self, name: str, value) -> None:\r\n\r\nAttributeError: 'DataFrame' object has no attribute 'name'\r\n> /opt/python3.8/site-packages/pandas/core/generic.py(5465)__getattr__()\r\n   5463             if self._info_axis._can_hold_identifiers_and_holds_name(name):\r\n   5464                 return self[name]\r\n-> 5465             return object.__getattribute__(self, name)\r\n   5466\r\n   5467     def __setattr__(self, name: str, value) -> None:\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/927001513/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/927966167",
        "html_url": "https://github.com/dask/dask/issues/7622#issuecomment-927966167",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7622",
        "id": 927966167,
        "node_id": "IC_kwDOAbcwm843T6PX",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-27T15:07:40Z",
        "updated_at": "2021-09-27T15:07:40Z",
        "author_association": "MEMBER",
        "body": "It's unclear to me what you are trying to achieve. Please provide a reproducible example using either dask or plain pandas.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/927966167/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]