{
    "url": "https://api.github.com/repos/dask/dask/issues/9030",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9030/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9030/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9030/events",
    "html_url": "https://github.com/dask/dask/issues/9030",
    "id": 1226771088,
    "node_id": "I_kwDOAbcwm85JHwqQ",
    "number": 9030,
    "title": "Cannot slice a string index",
    "user": {
        "login": "ian-r-rose",
        "id": 5728311,
        "node_id": "MDQ6VXNlcjU3MjgzMTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5728311?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ian-r-rose",
        "html_url": "https://github.com/ian-r-rose",
        "followers_url": "https://api.github.com/users/ian-r-rose/followers",
        "following_url": "https://api.github.com/users/ian-r-rose/following{/other_user}",
        "gists_url": "https://api.github.com/users/ian-r-rose/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ian-r-rose/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ian-r-rose/subscriptions",
        "organizations_url": "https://api.github.com/users/ian-r-rose/orgs",
        "repos_url": "https://api.github.com/users/ian-r-rose/repos",
        "events_url": "https://api.github.com/users/ian-r-rose/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ian-r-rose/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 3798450413,
            "node_id": "LA_kwDOAbcwm87iZ8Dt",
            "url": "https://api.github.com/repos/dask/dask/labels/bug",
            "name": "bug",
            "color": "faadaf",
            "default": true,
            "description": "Something is broken"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-05-05T14:43:58Z",
    "updated_at": "2022-08-25T17:34:04Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**What happened**:\r\n\r\nI attempted to use the slicing string method on a Dask index and it ran into trouble:\r\n\r\n```python\r\nimport dask.dataframe as dd\r\nimport pandas\r\n\r\ndf = pandas.DataFrame(\r\n    {\r\n        \"A\": [1, 2, 3, 4, 5, 6]\r\n    },\r\n    index = [\"aa\", \"aa\", \"bb\", \"bb\", \"cc\", \"cc\"]\r\n)\r\nddf = dd.from_pandas(df, npartitions=2)\r\n\r\nddf.index.str.slice(0,1).compute()\r\n```\r\nproduces\r\n\r\n<details>\r\n\r\n```python-traceback\r\nAttributeError                            Traceback (most recent call last)\r\nInput In [13], in <cell line: 1>()\r\n----> 1 ddf.index.str.slice(0,1).compute()\r\n\r\nFile ~/miniconda3/envs/census/lib/python3.9/site-packages/dask/base.py:292, in DaskMethodsMixin.compute(self, **kwargs)\r\n    268 def compute(self, **kwargs):\r\n    269     \"\"\"Compute this dask collection\r\n    270 \r\n    271     This turns a lazy Dask collection into its in-memory equivalent.\r\n   (...)\r\n    290     dask.base.compute\r\n    291     \"\"\"\r\n--> 292     (result,) = compute(self, traverse=False, **kwargs)\r\n    293     return result\r\n\r\nFile ~/miniconda3/envs/census/lib/python3.9/site-packages/dask/base.py:575, in compute(traverse, optimize_graph, scheduler, get, *args, **kwargs)\r\n    572     keys.append(x.__dask_keys__())\r\n    573     postcomputes.append(x.__dask_postcompute__())\r\n--> 575 results = schedule(dsk, keys, **kwargs)\r\n    576 return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n\r\nFile ~/miniconda3/envs/census/lib/python3.9/site-packages/dask/threaded.py:81, in get(dsk, result, cache, num_workers, pool, **kwargs)\r\n     78     elif isinstance(pool, multiprocessing.pool.Pool):\r\n     79         pool = MultiprocessingPoolExecutor(pool)\r\n---> 81 results = get_async(\r\n     82     pool.submit,\r\n     83     pool._max_workers,\r\n     84     dsk,\r\n     85     result,\r\n     86     cache=cache,\r\n     87     get_id=_thread_get_id,\r\n     88     pack_exception=pack_exception,\r\n     89     **kwargs,\r\n     90 )\r\n     92 # Cleanup pools associated to dead threads\r\n     93 with pools_lock:\r\n\r\nFile ~/miniconda3/envs/census/lib/python3.9/site-packages/dask/local.py:508, in get_async(submit, num_workers, dsk, result, cache, get_id, rerun_exceptions_locally, pack_exception, raise_exception, callbacks, dumps, loads, chunksize, **kwargs)\r\n    506         _execute_task(task, data)  # Re-execute locally\r\n    507     else:\r\n--> 508         raise_exception(exc, tb)\r\n    509 res, worker_id = loads(res_info)\r\n    510 state[\"cache\"][key] = res\r\n\r\nFile ~/miniconda3/envs/census/lib/python3.9/site-packages/dask/local.py:316, in reraise(exc, tb)\r\n    314 if exc.__traceback__ is not tb:\r\n    315     raise exc.with_traceback(tb)\r\n--> 316 raise exc\r\n\r\nFile ~/miniconda3/envs/census/lib/python3.9/site-packages/dask/local.py:221, in execute_task(key, task_info, dumps, loads, get_id, pack_exception)\r\n    219 try:\r\n    220     task, data = loads(task_info)\r\n--> 221     result = _execute_task(task, data)\r\n    222     id = get_id()\r\n    223     result = dumps((result, id))\r\n\r\nFile ~/miniconda3/envs/census/lib/python3.9/site-packages/dask/core.py:119, in _execute_task(arg, cache, dsk)\r\n    115     func, args = arg[0], arg[1:]\r\n    116     # Note: Don't assign the subtask results to a variable. numpy detects\r\n    117     # temporaries by their reference count and can execute certain\r\n    118     # operations in-place.\r\n--> 119     return func(*(_execute_task(a, cache) for a in args))\r\n    120 elif not ishashable(arg):\r\n    121     return arg\r\n\r\nFile ~/miniconda3/envs/census/lib/python3.9/site-packages/dask/dataframe/methods.py:88, in boundary_slice(df, start, stop, right_boundary, left_boundary, kind)\r\n     56 def boundary_slice(df, start, stop, right_boundary=True, left_boundary=True, kind=None):\r\n     57     \"\"\"Index slice start/stop. Can switch include/exclude boundaries.\r\n     58 \r\n     59     Examples\r\n   (...)\r\n     86     Index: []\r\n     87     \"\"\"\r\n---> 88     if len(df.index) == 0:\r\n     89         return df\r\n     91     if PANDAS_GT_131:\r\n\r\nAttributeError: 'Index' object has no attribute 'index'\r\n```\r\n\r\n</details>\r\n\r\n- Dask version: `main`\r\n- Python version: `3.8`\r\n- Operating System: `ubuntu`\r\n- Install method (conda, pip, source): source\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9030/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9030/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}