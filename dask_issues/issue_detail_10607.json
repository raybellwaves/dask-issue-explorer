{
    "url": "https://api.github.com/repos/dask/dask/issues/10607",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10607/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10607/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10607/events",
    "html_url": "https://github.com/dask/dask/issues/10607",
    "id": 1967207100,
    "node_id": "I_kwDOAbcwm851QTK8",
    "number": 10607,
    "title": "Unexpected exception \"ValueError: divisions must be sorted\" when resampling sorted time index",
    "user": {
        "login": "mfenner1",
        "id": 913036,
        "node_id": "MDQ6VXNlcjkxMzAzNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/913036?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mfenner1",
        "html_url": "https://github.com/mfenner1",
        "followers_url": "https://api.github.com/users/mfenner1/followers",
        "following_url": "https://api.github.com/users/mfenner1/following{/other_user}",
        "gists_url": "https://api.github.com/users/mfenner1/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mfenner1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mfenner1/subscriptions",
        "organizations_url": "https://api.github.com/users/mfenner1/orgs",
        "repos_url": "https://api.github.com/users/mfenner1/repos",
        "events_url": "https://api.github.com/users/mfenner1/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mfenner1/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-10-29T23:20:40Z",
    "updated_at": "2023-12-04T01:46:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the issue**:\r\nWhen resampling a sorted time index I raise an unexpected exception:  ValueError: divisions must be sorted.\r\n\r\n**MCVE**\r\nI wish I had a more complete bug report, but I likely will lose time to generate a true mcve and I want to report what I have.  \r\n\r\nAfter seeing some odd behavior, I expected the following to *be* a good mcve, however it doesn't show the bug.  \r\n\r\n```python\r\nfrom dask.datasets import timeseries\r\nimport dask.dataframe as dd\r\nimport dask\r\nimport pandas as pd\r\nprint('dask: ', dask.__version__)\r\nprint('pandas:', pd.__version__)\r\n```\r\n```\r\ndask:  2023.10.1\r\npandas: 2.0.3\r\n```\r\n```python\r\nddf = timeseries(start='2023-01-01', end='2023-12-31', freq='1d')\r\nprint(ddf.resample('Q').size().compute())\r\nprint(ddf.resample('QS').size().compute())\r\n```\r\n```\r\ntimestamp\r\n2023-03-31    90\r\n2023-06-30    91\r\n2023-09-30    92\r\nFreq: Q-DEC, dtype: int64\r\ntimestamp\r\n2023-01-01    90\r\n2023-04-01    91\r\n2023-07-01    92\r\n2023-10-01    91\r\nFreq: QS-JAN, dtype: int64\r\n```\r\n\r\nHere is the best I can extract from the running code that does show unexpected (to me) behavior.  I'm hoping someone with better Dask-fu than myself can use this info to craft a proper mcve.  My guess is that it has to do with an index with repeated values in the index, but I haven't been able to test that yet.  \r\n\r\nIn a dataframe with the following divisions:\r\n\r\n```python\r\nnew_ddf.divisions\r\n```\r\n```\r\n(Timestamp('2008-03-11 22:02:00'),\r\n Timestamp('2008-04-01 22:02:00'),\r\n Timestamp('2008-05-01 22:02:00'),\r\n Timestamp('2008-06-01 22:02:00'),\r\n Timestamp('2008-07-01 22:02:00'),\r\n Timestamp('2008-08-01 22:02:00'),\r\n Timestamp('2008-09-01 22:02:00'),\r\n Timestamp('2008-10-01 22:02:00'),\r\n Timestamp('2008-11-01 22:02:00'),\r\n Timestamp('2008-12-01 22:02:00'),\r\n Timestamp('2008-12-31 23:58:00'))\r\n```\r\nThis works:\r\n```python\r\nnew_ddf.resample('QS').size().compute()\r\n```\r\n```\r\noccurred\r\n2008-01-01      85310\r\n2008-04-01     832889\r\n2008-07-01     580117\r\n2008-10-01    1283544\r\nFreq: QS-JAN, dtype: int64\r\n```\r\nAnd this fails:\r\n```python\r\nnew_ddf.resample('Q').size().compute()\r\n```\r\n```python-traceback\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nCell In[31], line 1\r\n----> 1 new_ddf.resample('Q').size().compute()\r\n\r\nFile ~/anaconda3/lib/python3.11/site-packages/dask/dataframe/tseries/resample.py:255, in Resampler.size(self)\r\n    253 @derived_from(pd_Resampler)\r\n    254 def size(self):\r\n--> 255     return self._agg(\"size\", fill_value=0)\r\n\r\nFile ~/anaconda3/lib/python3.11/site-packages/dask/dataframe/tseries/resample.py:199, in Resampler._agg(self, how, meta, fill_value, how_args, how_kwargs)\r\n    197 if isinstance(meta, pd.DataFrame):\r\n    198     return DataFrame(graph, name, meta, outdivs)\r\n--> 199 return Series(graph, name, meta, outdivs)\r\n\r\nFile ~/anaconda3/lib/python3.11/site-packages/dask/dataframe/core.py:419, in _Frame.__init__(self, dsk, name, meta, divisions)\r\n    414     raise TypeError(\r\n    415         f\"Expected meta to specify type {type(self).__name__}, got type \"\r\n    416         f\"{typename(type(meta))}\"\r\n    417     )\r\n    418 self._meta = meta\r\n--> 419 self.divisions = tuple(divisions)\r\n    421 # Optionally cast object dtypes to `pyarrow` strings.\r\n    422 # By default, if `pyarrow` and `pandas>=2` are installed,\r\n    423 # we convert to pyarrow strings.\r\n    424 if pyarrow_strings_enabled():\r\n\r\nFile ~/anaconda3/lib/python3.11/site-packages/dask/dataframe/core.py:552, in _Frame.divisions(self, value)\r\n    548     if not (\r\n    549         isinstance(index_dtype, pd.CategoricalDtype) and index_dtype.ordered\r\n    550     ):\r\n    551         if value != tuple(sorted(value)):\r\n--> 552             raise ValueError(\"divisions must be sorted\")\r\n    554 self._divisions = value\r\n\r\nValueError: divisions must be sorted\r\n```\r\nWith a very interesting  value for the variable `value` in that deepest function call.  I captured the value with a debugger below:  the last timestamp is a *duplicate of a prior value* and *out of order*.  So, it appears that `resample` (in at least some scenarios) might not be generating a properly sorted index for use in the outgoing Dask dataframe.\r\n\r\n```python\r\n> /Users/mfenner/anaconda3/lib/python3.11/site-packages/dask/dataframe/core.py(552)divisions()\r\n    550             ):\r\n    551                 if value != tuple(sorted(value)):\r\n--> 552                     raise ValueError(\"divisions must be sorted\")\r\n    553 \r\n    554         self._divisions = value\r\n\r\nipdb> p value\r\n(Timestamp('2008-03-31 00:00:00'), Timestamp('2008-06-30 00:00:00'), Timestamp('2008-09-30 00:00:00'), Timestamp('2008-12-31 00:00:00'), Timestamp('2008-09-30 00:00:00'))\r\n```\r\n\r\n**Environment**:\r\n\r\n- Dask version:  dask:  2023.10.1 / pandas: 2.0.3\r\n- Python version: 3.11.5\r\n- Operating System: OSX\r\n- Install method (conda, pip, source): conda + conda-forge for more recent dask\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10607/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10607/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}