{
    "url": "https://api.github.com/repos/dask/dask/issues/3546",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/3546/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/3546/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/3546/events",
    "html_url": "https://github.com/dask/dask/issues/3546",
    "id": 327821705,
    "node_id": "MDU6SXNzdWUzMjc4MjE3MDU=",
    "number": 3546,
    "title": "Better error message when using single-machine schedulers to compute a graph with distributed Future",
    "user": {
        "login": "TomAugspurger",
        "id": 1312546,
        "node_id": "MDQ6VXNlcjEzMTI1NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TomAugspurger",
        "html_url": "https://github.com/TomAugspurger",
        "followers_url": "https://api.github.com/users/TomAugspurger/followers",
        "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
        "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
        "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
        "repos_url": "https://api.github.com/users/TomAugspurger/repos",
        "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 386719400,
            "node_id": "MDU6TGFiZWwzODY3MTk0MDA=",
            "url": "https://api.github.com/repos/dask/dask/labels/scheduler",
            "name": "scheduler",
            "color": "D10945",
            "default": false,
            "description": ""
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-05-30T17:12:17Z",
    "updated_at": "2021-10-12T04:48:55Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "This was a confusing error. We were persisting a dask array with a a distributed Client active, and then (unknowingly) using the threaded scheduler to do the compute.\r\n\r\nIs there any hope of detecting this, and raising a better error message?\r\n\r\n```python\r\nIn [19]: import dask.array as da\r\n\r\nIn [20]: from distributed import Client\r\n\r\nIn [21]: import dask\r\n\r\nIn [22]: client = Client()\r\n\r\nIn [23]: X, = dask.persist(da.random.uniform(size=(10, 10), chunks=5))\r\n\r\nIn [24]: X.compute(scheduler='threads')\r\n```\r\n\r\n```pytb\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-23-ae77d51b34af> in <module>()\r\n----> 1 X.compute(scheduler='threads')\r\n\r\n~/sandbox/dask/dask/base.py in compute(self, **kwargs)\r\n    154         dask.base.compute\r\n    155         \"\"\"\r\n--> 156         (result,) = compute(self, traverse=False, **kwargs)\r\n    157         return result\r\n    158\r\n\r\n~/sandbox/dask/dask/base.py in compute(*args, **kwargs)\r\n    399     postcomputes = [x.__dask_postcompute__() for x in collections]\r\n    400     results = schedule(dsk, keys, **kwargs)\r\n--> 401     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    402\r\n    403\r\n\r\n~/sandbox/dask/dask/base.py in <listcomp>(.0)\r\n    399     postcomputes = [x.__dask_postcompute__() for x in collections]\r\n    400     results = schedule(dsk, keys, **kwargs)\r\n--> 401     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    402\r\n    403\r\n\r\n~/sandbox/dask/dask/array/core.py in finalize(results)\r\n    986     while isinstance(results2, (tuple, list)):\r\n    987         if len(results2) > 1:\r\n--> 988             return concatenate3(results)\r\n    989         else:\r\n    990             results2 = results2[0]\r\n\r\n~/sandbox/dask/dask/array/core.py in concatenate3(arrays)\r\n   3363     if not ndim:\r\n   3364         return arrays\r\n-> 3365     chunks = chunks_from_arrays(arrays)\r\n   3366     shape = tuple(map(sum, chunks))\r\n   3367\r\n\r\n~/sandbox/dask/dask/array/core.py in chunks_from_arrays(arrays)\r\n   3189\r\n   3190     while isinstance(arrays, (list, tuple)):\r\n-> 3191         result.append(tuple([shape(deepfirst(a))[dim] for a in arrays]))\r\n   3192         arrays = arrays[0]\r\n   3193         dim += 1\r\n\r\n~/sandbox/dask/dask/array/core.py in <listcomp>(.0)\r\n   3189\r\n   3190     while isinstance(arrays, (list, tuple)):\r\n-> 3191         result.append(tuple([shape(deepfirst(a))[dim] for a in arrays]))\r\n   3192         arrays = arrays[0]\r\n   3193         dim += 1\r\n\r\nIndexError: tuple index out of range\r\n\r\n\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/3546/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/3546/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}