{
    "url": "https://api.github.com/repos/dask/dask/issues/11070",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/11070/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/11070/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/11070/events",
    "html_url": "https://github.com/dask/dask/issues/11070",
    "id": 2263580366,
    "node_id": "I_kwDOAbcwm86G637O",
    "number": 11070,
    "title": "Turning off query planning is difficult",
    "user": {
        "login": "jtilly",
        "id": 6807275,
        "node_id": "MDQ6VXNlcjY4MDcyNzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6807275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtilly",
        "html_url": "https://github.com/jtilly",
        "followers_url": "https://api.github.com/users/jtilly/followers",
        "following_url": "https://api.github.com/users/jtilly/following{/other_user}",
        "gists_url": "https://api.github.com/users/jtilly/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jtilly/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jtilly/subscriptions",
        "organizations_url": "https://api.github.com/users/jtilly/orgs",
        "repos_url": "https://api.github.com/users/jtilly/repos",
        "events_url": "https://api.github.com/users/jtilly/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jtilly/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-04-25T13:24:11Z",
    "updated_at": "2024-04-26T13:34:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I mentioned this in #11067, but maybe this deserves its own issue: I find it difficult to turn off query planning using the Python API. Using `dask.config.set` only works if `dask.dataframe` hasn't been imported up until that point.\r\n\r\nThis works (query planner is turned off):\r\n\r\n```python\r\nimport dask\r\nimport pandas as pd\r\n\r\nwith dask.config.set({\"dataframe.query-planning\": False}):\r\n    import dask.dataframe as dd  # delayed import\r\n    ddf = dd.from_pandas(pd.DataFrame({\"x\": [1, 2, 3]}), chunksize=1)\r\n    out = ddf.mean()\r\n    print(hasattr(out, \"_expr\"))  # False\r\n```\r\n\r\nThis doesn't work (query planner is turned on):\r\n\r\n```python\r\nimport dask\r\nimport pandas as pd\r\nimport dask.dataframe as dd  # I moved this import up\r\n\r\nwith dask.config.set({\"dataframe.query-planning\": False}):\r\n    ddf = dd.from_pandas(pd.DataFrame({\"x\": [1, 2, 3]}), chunksize=1)\r\n    out = ddf.mean()\r\n    print(hasattr(out, \"_expr\"))  # True\r\n```\r\n\r\nWhen I write library code, I typically can't control what users already imported.\r\n\r\nYes, adding `dd = importlib.reload(dd)` inside the context also fixes the issue in this example, but that doesn't work in all settings. \r\n\r\nE.g., imagine that I write a library with a function that _some user_ can call with a dask dataframe:\r\n\r\n```python\r\n# my library code\r\nimport dask\r\n\r\ndef my_func(ddf):\r\n    with dask.config.set({\"dataframe.query-planning\": False}):\r\n        # reloading dask.dataframe here of course doesn't make a difference\r\n        out = ddf.mean()\r\n        print(hasattr(out, \"_expr\"))  # True\r\n```\r\n\r\n```python\r\n# user code\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\n\r\nfrom my_library import my_func\r\n\r\nddf = dd.from_pandas(pd.DataFrame({\"x\": [1, 2, 3]}), chunksize=1)\r\nmy_func(ddf)\r\n```\r\n\r\nIs there a clever way around this? I have drastic ideas like building a conda package that sets the `DASK_DATAFRAME__QUERY_PLANNING` environment variable, but that might be a bit much. I would much rather turn the query planner off selectively.\r\n\r\nAs an aside: maybe all of this is moot once #11067 is fixed.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/11070/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/11070/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}