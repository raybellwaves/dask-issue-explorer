[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1775427591",
        "html_url": "https://github.com/dask/dask/issues/10586#issuecomment-1775427591",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10586",
        "id": 1775427591,
        "node_id": "IC_kwDOAbcwm85p0uAH",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-23T15:11:39Z",
        "updated_at": "2023-10-23T15:11:39Z",
        "author_association": "MEMBER",
        "body": "Thanks for the issue @orlandombaa. Locally this example works for me when using the latest `dask` + `distributed` + `pandas` versions \r\n\r\n```python\r\nIn [1]: from dask.distributed import Client, LocalCluster\r\n   ...:\r\n   ...: # Crear un cl\u00faster local\r\n   ...: cluster = LocalCluster()\r\n   ...:\r\n   ...: # Conectar un cliente a ese cl\u00faster\r\n   ...: client = Client(address=cluster, timeout=\"600s\", name=\"ETL\")\r\n   ...:\r\n   ...: #from dask.distributed import Client\r\n   ...: #client = Client(timeout=\"600s\")  # Aumenta seg\u00fan sea necesario\r\n   ...:\r\n   ...: import pandas as pd\r\n   ...: import dask.dataframe as dd\r\n   ...:\r\n   ...: # Crear un pandas DF\r\n   ...:\r\n   ...: test = {\"nombre\":[\"Orlando\", \"Fernando\", \"Rosario\", \"Cuah\", \"Ver\u00f3nica\"],\r\n   ...:         \"sexo\":[\"M\", \"M\",\"F\",\"M\",\"F\"],\r\n   ...:         \"edad\":[30,40,50,60,56]}\r\n   ...:\r\n   ...: test=pd.DataFrame(data=test)\r\n   ...:\r\n   ...: # Creamos un dask df a partir de un pandas df\r\n   ...: test= dd.from_pandas(data=test, npartitions=2)\r\n   ...: print(\"Tipo de objeto:\", type(test))\r\n   ...: test.head()\r\n   ...:\r\nTipo de objeto: <class 'dask.dataframe.core.DataFrame'>\r\n/Users/james/projects/dask/dask/dask/dataframe/core.py:8260: UserWarning: Insufficient elements for `head`. 5 elements requested, only 3 elements available. Try passing larger `npartitions` to `head`.\r\n  warnings.warn(\r\nOut[1]:\r\n     nombre sexo  edad\r\n0   Orlando    M    30\r\n1  Fernando    M    40\r\n2   Rosario    F    50\r\n```\r\n\r\nCan you say more about what versions you have installed? What's the output of `dask info versions` in the command line? Can you post a full traceback, or output you get when running this example? ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1775427591/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1775465194",
        "html_url": "https://github.com/dask/dask/issues/10586#issuecomment-1775465194",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10586",
        "id": 1775465194,
        "node_id": "IC_kwDOAbcwm85p03Lq",
        "user": {
            "login": "orlandombaa",
            "id": 48104481,
            "node_id": "MDQ6VXNlcjQ4MTA0NDgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48104481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orlandombaa",
            "html_url": "https://github.com/orlandombaa",
            "followers_url": "https://api.github.com/users/orlandombaa/followers",
            "following_url": "https://api.github.com/users/orlandombaa/following{/other_user}",
            "gists_url": "https://api.github.com/users/orlandombaa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orlandombaa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orlandombaa/subscriptions",
            "organizations_url": "https://api.github.com/users/orlandombaa/orgs",
            "repos_url": "https://api.github.com/users/orlandombaa/repos",
            "events_url": "https://api.github.com/users/orlandombaa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orlandombaa/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-23T15:29:54Z",
        "updated_at": "2023-10-23T15:29:54Z",
        "author_association": "NONE",
        "body": "Hello @jrbourbeau thank you for your answer!. \r\n\r\nSure, the versions that I have are the following: \r\n\r\n```\r\n{\r\n  \"Python\": \"3.11.0\",\r\n  \"Platform\": \"Darwin\",\r\n  \"dask\": \"2023.6.0\",\r\n  \"distributed\": \"2023.6.0\",\r\n  \"numpy\": \"1.26.0\",\r\n  \"pandas\": \"2.1.1\",\r\n  \"cloudpickle\": \"2.2.1\",\r\n  \"fsspec\": \"2023.9.2\",\r\n  \"bokeh\": \"3.3.0\",\r\n  \"fastparquet\": null,\r\n  \"pyarrow\": \"11.0.0\",\r\n  \"zarr\": null\r\n}%                   \r\n```\r\n\r\nOn the other hand, the traceback is the following: \r\n\r\n\r\n```\r\nCancelledError                            Traceback (most recent call last)\r\nCell In[2], line 4\r\n      2 test= dd.from_pandas(data=test, npartitions=2)\r\n      3 print(\"Tipo de objeto:\", type(test))\r\n----> 4 test.head()\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/dask/dataframe/core.py:1397, in _Frame.head(self, n, npartitions, compute)\r\n   1395 # No need to warn if we're already looking at all partitions\r\n   1396 safe = npartitions != self.npartitions\r\n-> 1397 return self._head(n=n, npartitions=npartitions, compute=compute, safe=safe)\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/dask/dataframe/core.py:1431, in _Frame._head(self, n, npartitions, compute, safe)\r\n   1426 result = new_dd_object(\r\n   1427     graph, name, self._meta, [self.divisions[0], self.divisions[npartitions]]\r\n   1428 )\r\n   1430 if compute:\r\n-> 1431     result = result.compute()\r\n   1432 return result\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/dask/base.py:310, in DaskMethodsMixin.compute(self, **kwargs)\r\n    286 def compute(self, **kwargs):\r\n    287     \"\"\"Compute this dask collection\r\n    288 \r\n    289     This turns a lazy Dask collection into its in-memory equivalent.\r\n   (...)\r\n    308     dask.compute\r\n    309     \"\"\"\r\n--> 310     (result,) = compute(self, traverse=False, **kwargs)\r\n    311     return result\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/dask/base.py:595, in compute(traverse, optimize_graph, scheduler, get, *args, **kwargs)\r\n    592     keys.append(x.__dask_keys__())\r\n    593     postcomputes.append(x.__dask_postcompute__())\r\n--> 595 results = schedule(dsk, keys, **kwargs)\r\n    596 return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/distributed/client.py:3243, in Client.get(self, dsk, keys, workers, allow_other_workers, resources, sync, asynchronous, direct, retries, priority, fifo_timeout, actors, **kwargs)\r\n   3241         should_rejoin = False\r\n   3242 try:\r\n-> 3243     results = self.gather(packed, asynchronous=asynchronous, direct=direct)\r\n   3244 finally:\r\n   3245     for f in futures.values():\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/dask/base.py:595, in compute(traverse, optimize_graph, scheduler, get, *args, **kwargs)\r\n    592     keys.append(x.__dask_keys__())\r\n    593     postcomputes.append(x.__dask_postcompute__())\r\n--> 595 results = schedule(dsk, keys, **kwargs)\r\n    596 return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/distributed/client.py:3243, in Client.get(self, dsk, keys, workers, allow_other_workers, resources, sync, asynchronous, direct, retries, priority, fifo_timeout, actors, **kwargs)\r\n   3241         should_rejoin = False\r\n   3242 try:\r\n-> 3243     results = self.gather(packed, asynchronous=asynchronous, direct=direct)\r\n   3244 finally:\r\n   3245     for f in futures.values():\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/distributed/client.py:2368, in Client.gather(self, futures, errors, direct, asynchronous)\r\n   2366 except ValueError:\r\n   2367     local_worker = None\r\n-> 2368 return self.sync(\r\n   2369     self._gather,\r\n   2370     futures,\r\n   2371     errors=errors,\r\n   2372     direct=direct,\r\n   2373     local_worker=local_worker,\r\n   2374     asynchronous=asynchronous,\r\n   2375 )\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/distributed/utils.py:351, in SyncMethodMixin.sync(self, func, asynchronous, callback_timeout, *args, **kwargs)\r\n    349     return future\r\n    350 else:\r\n--> 351     return sync(\r\n    352         self.loop, func, *args, callback_timeout=callback_timeout, **kwargs\r\n    353     )\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/distributed/utils.py:418, in sync(loop, func, callback_timeout, *args, **kwargs)\r\n    416 if error:\r\n    417     typ, exc, tb = error\r\n--> 418     raise exc.with_traceback(tb)\r\n    419 else:\r\n    420     return result\r\n\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/distributed/utils.py:391, in sync.<locals>.f()\r\n    389         future = wait_for(future, callback_timeout)\r\n    390     future = asyncio.ensure_future(future)\r\n--> 391     result = yield future\r\n    392 except Exception:\r\n    393     error = sys.exc_info()\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/tornado/gen.py:767, in Runner.run(self)\r\n    765 try:\r\n    766     try:\r\n--> 767         value = future.result()\r\n    768     except Exception as e:\r\n    769         # Save the exception for later. It's important that\r\n    770         # gen.throw() not be called inside this try/except block\r\n    771         # because that makes sys.exc_info behave unexpectedly.\r\n    772         exc: Optional[Exception] = e\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/distributed/client.py:2232, in Client._gather(self, futures, errors, direct, local_worker)\r\n   2230     else:\r\n   2231         raise exception.with_traceback(traceback)\r\n-> 2232     raise exc\r\n   2233 if errors == \"skip\":\r\n   2234     bad_keys.add(key)\r\n\r\nCancelledError: ('head-1-5-from_pandas-375c4c87e7cf346616f57a65a2dfc407', 0)\r\n\r\n```\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1775465194/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1775492715",
        "html_url": "https://github.com/dask/dask/issues/10586#issuecomment-1775492715",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10586",
        "id": 1775492715,
        "node_id": "IC_kwDOAbcwm85p095r",
        "user": {
            "login": "orlandombaa",
            "id": 48104481,
            "node_id": "MDQ6VXNlcjQ4MTA0NDgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48104481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/orlandombaa",
            "html_url": "https://github.com/orlandombaa",
            "followers_url": "https://api.github.com/users/orlandombaa/followers",
            "following_url": "https://api.github.com/users/orlandombaa/following{/other_user}",
            "gists_url": "https://api.github.com/users/orlandombaa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/orlandombaa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/orlandombaa/subscriptions",
            "organizations_url": "https://api.github.com/users/orlandombaa/orgs",
            "repos_url": "https://api.github.com/users/orlandombaa/repos",
            "events_url": "https://api.github.com/users/orlandombaa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/orlandombaa/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-23T15:44:33Z",
        "updated_at": "2023-10-23T15:44:33Z",
        "author_association": "NONE",
        "body": "I just upgrade some of the libraries and now I have the following versions: \r\n\r\n\r\n```\r\n \"Python\": \"3.11.0\",\r\n  \"Platform\": \"Darwin\",\r\n  \"dask\": \"2023.10.0\",\r\n  \"distributed\": \"2023.10.0\",\r\n  \"numpy\": \"1.26.0\",\r\n  \"pandas\": \"2.1.1\",\r\n  \"cloudpickle\": \"2.2.1\",\r\n  \"fsspec\": \"2023.9.2\",\r\n  \"bokeh\": \"3.3.0\",\r\n  \"fastparquet\": null,\r\n  \"pyarrow\": \"11.0.0\",\r\n  \"zarr\": null\r\n```\r\n\r\nHowever, I still get a similar error: \r\n```\r\n---------------------------------------------------------------------------\r\nCancelledError                            Traceback (most recent call last)\r\nCell In[2], line 4\r\n      2 test= dd.from_pandas(data=test, npartitions=2)\r\n      3 print(\"Tipo de objeto:\", type(test))\r\n----> 4 test.head()\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/dask/dataframe/core.py:1437, in _Frame.head(self, n, npartitions, compute)\r\n   1435 # No need to warn if we're already looking at all partitions\r\n   1436 safe = npartitions != self.npartitions\r\n-> 1437 return self._head(n=n, npartitions=npartitions, compute=compute, safe=safe)\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/dask/dataframe/core.py:1471, in _Frame._head(self, n, npartitions, compute, safe)\r\n   1466 result = new_dd_object(\r\n   1467     graph, name, self._meta, [self.divisions[0], self.divisions[npartitions]]\r\n   1468 )\r\n   1470 if compute:\r\n-> 1471     result = result.compute()\r\n   1472 return result\r\n\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/dask/base.py:342, in DaskMethodsMixin.compute(self, **kwargs)\r\n    318 def compute(self, **kwargs):\r\n    319     \"\"\"Compute this dask collection\r\n    320 \r\n    321     This turns a lazy Dask collection into its in-memory equivalent.\r\n   (...)\r\n    340     dask.compute\r\n    341     \"\"\"\r\n--> 342     (result,) = compute(self, traverse=False, **kwargs)\r\n    343     return result\r\n\r\nget, *args, **kwargs)\r\n    625     postcomputes.append(x.__dask_postcompute__())\r\n    627 with shorten_traceback():\r\n--> 628     results = schedule(dsk, keys, **kwargs)\r\n    630 return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n\r\nFile ~/miniconda3/envs/Dask/lib/python3.11/site-packages/distributed/client.py:2245, in Client._gather(self, futures, errors, direct, local_worker)\r\n   2243     else:\r\n   2244         raise exception.with_traceback(traceback)\r\n-> 2245     raise exc\r\n   2246 if errors == \"skip\":\r\n   2247     bad_keys.add(key)\r\n\r\nCancelledError: ('head-1-5-from_pandas-375c4c87e7cf346616f57a65a2dfc407', 0)\r\n\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1775492715/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]