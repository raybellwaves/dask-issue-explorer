[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/692103006",
        "html_url": "https://github.com/dask/dask/issues/6636#issuecomment-692103006",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6636",
        "id": 692103006,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjEwMzAwNg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-14T14:40:47Z",
        "updated_at": "2020-09-14T14:40:47Z",
        "author_association": "MEMBER",
        "body": "> To solve this, at the moment pint will pass through attribute access for methods it doesn't know.\r\n\r\nThis doesn't sound terrible to me.  I'm generally more open to messy things than other array computing folks though.    I don't understand the point about removing nesting.  I do understand the shadow methods concern, although I'll bet that this policy would still be pleasant 95% of the time.  \r\n\r\nMy main concern is if the method isn't fully parallelizable.  What we're likely to do is check that the attribute exists on the sub-array, call `map_blocks` with the function, and then get back a new dask array with whatever the type of the output was.  If the function is an attribute access or embarrassingly parallel function call then this will work well.  If it is something like a reduction then it won't.  ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/692103006/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/692370489",
        "html_url": "https://github.com/dask/dask/issues/6636#issuecomment-692370489",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6636",
        "id": 692370489,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjM3MDQ4OQ==",
        "user": {
            "login": "keewis",
            "id": 14808389,
            "node_id": "MDQ6VXNlcjE0ODA4Mzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14808389?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/keewis",
            "html_url": "https://github.com/keewis",
            "followers_url": "https://api.github.com/users/keewis/followers",
            "following_url": "https://api.github.com/users/keewis/following{/other_user}",
            "gists_url": "https://api.github.com/users/keewis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/keewis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/keewis/subscriptions",
            "organizations_url": "https://api.github.com/users/keewis/orgs",
            "repos_url": "https://api.github.com/users/keewis/repos",
            "events_url": "https://api.github.com/users/keewis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/keewis/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-14T23:25:44Z",
        "updated_at": "2020-09-15T12:48:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "> I don't understand the point about removing nesting.\r\n\r\nDid you mean \"the explanation is not clear enough\" or \"I don't think this is an issue\"? Just to make sure, what I was thinking of while writing this was conversion methods like `sparse.COO.todense` or `cupy.Array.get` which replace themselves with a different duck array. For these, it would be convenient to somehow get this to work without any of the involved duck arrays actually knowing what the duck array a level higher / lower is doing. Of course, methods like `sparse.COO.mean` which have a similar `numpy` function should not be called that way.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/692370489/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]