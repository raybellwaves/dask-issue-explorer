[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1383020758",
        "html_url": "https://github.com/dask/dask/pull/9835#issuecomment-1383020758",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9835",
        "id": 1383020758,
        "node_id": "IC_kwDOAbcwm85SbzjW",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-15T01:46:34Z",
        "updated_at": "2023-01-15T01:46:34Z",
        "author_association": "MEMBER",
        "body": "Sorry, I should have given more details upfront. I had meant this as a draft until Doug has had a chance to look at it.\r\n\r\nThis came up from implementing sizeof for awkward arrays, which caused a cyclical import. We could have solved that, but it seemed strange that the dask workers should be importing dask-awkward (and maybe awkward) just because the entrypoint was defined. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1383020758/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1383039233",
        "html_url": "https://github.com/dask/dask/pull/9835#issuecomment-1383039233",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9835",
        "id": 1383039233,
        "node_id": "IC_kwDOAbcwm85Sb4EB",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-15T02:59:49Z",
        "updated_at": "2023-01-15T02:59:49Z",
        "author_association": "MEMBER",
        "body": "(to be sure: our circular import is fixed, and in our workflows, we will always want awkward imported, so this is not high priority at all)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1383039233/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1383622583",
        "html_url": "https://github.com/dask/dask/pull/9835#issuecomment-1383622583",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9835",
        "id": 1383622583,
        "node_id": "IC_kwDOAbcwm85SeGe3",
        "user": {
            "login": "agoose77",
            "id": 1248413,
            "node_id": "MDQ6VXNlcjEyNDg0MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1248413?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agoose77",
            "html_url": "https://github.com/agoose77",
            "followers_url": "https://api.github.com/users/agoose77/followers",
            "following_url": "https://api.github.com/users/agoose77/following{/other_user}",
            "gists_url": "https://api.github.com/users/agoose77/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agoose77/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agoose77/subscriptions",
            "organizations_url": "https://api.github.com/users/agoose77/orgs",
            "repos_url": "https://api.github.com/users/agoose77/repos",
            "events_url": "https://api.github.com/users/agoose77/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agoose77/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-16T07:59:11Z",
        "updated_at": "2023-01-16T08:36:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "@martindurant I think I implemented the original PR - the motivation was actually Awkward Array (but pre awkward-dask). In that PR, the entry-point name had no special meaning; it was just the mechanism used to load the user plugin. \r\n\r\nThe intention of the PR was to decouple registration of a `sizeof` implementation. I had wanted to avoid the constraint that the top-level name be used like this, but with some distance from the PR I'm less bothered. \r\n\r\nIt might be easier (and more backwards compatible) to create an additional plugin group `dask.awkward.lazy`. This way, you can explicitly change the plugin API to avoid the `_lazy` hack, i.e.\r\n```python\r\ndef _register_entry_point_plugins():\r\n    \"\"\"Register sizeof implementations exposed by the entry_point mechanism.\"\"\"\r\n    for entry_point in entry_points(group=\"dask.sizeof\"):\r\n        registrar = entry_point.load()\r\n        try:\r\n            registrar(sizeof)\r\n        except Exception:\r\n            logger.exception(\r\n                f\"Failed to register sizeof entry point {entry_point.name}\"\r\n            )\r\n    for entry_point in entry_points(group=\"dask.sizeof.lazy\"):\r\n        @sizeof.register_lazy(entry_point.name)\r\n        def register_it(ep=entry_point):\r\n            registrar = ep.load()\r\n            try:\r\n                registrar(sizeof)\r\n            except Exception:\r\n                logger.exception(f\"Failed to register sizeof entry point {ep.name}\")\r\n```\r\n\r\nI am AFK for a minute, and I can't remember what constraints apply to the entrypoint group name, but I _think_ `dask.sizeof.lazy` is valid.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1383622583/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1384142987",
        "html_url": "https://github.com/dask/dask/pull/9835#issuecomment-1384142987",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9835",
        "id": 1384142987,
        "node_id": "IC_kwDOAbcwm85SgFiL",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-16T14:24:28Z",
        "updated_at": "2023-01-16T14:24:28Z",
        "author_association": "MEMBER",
        "body": "@agoose77 , your code would import all modules mentioned in the entrypoints as before, which I think should be avoided. \r\n\r\nUse of _lazy could be avoided with a method on Dispatch, but that's a pretty central piecce of code to dask, I wouldn't choose to mess with it in any way.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1384142987/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1384149037",
        "html_url": "https://github.com/dask/dask/pull/9835#issuecomment-1384149037",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9835",
        "id": 1384149037,
        "node_id": "IC_kwDOAbcwm85SgHAt",
        "user": {
            "login": "agoose77",
            "id": 1248413,
            "node_id": "MDQ6VXNlcjEyNDg0MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1248413?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agoose77",
            "html_url": "https://github.com/agoose77",
            "followers_url": "https://api.github.com/users/agoose77/followers",
            "following_url": "https://api.github.com/users/agoose77/following{/other_user}",
            "gists_url": "https://api.github.com/users/agoose77/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agoose77/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agoose77/subscriptions",
            "organizations_url": "https://api.github.com/users/agoose77/orgs",
            "repos_url": "https://api.github.com/users/agoose77/repos",
            "events_url": "https://api.github.com/users/agoose77/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agoose77/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-16T14:29:32Z",
        "updated_at": "2023-01-16T14:29:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "@martindurant In my snippet above, only the original `dask.sizeof` group would be eagerly loaded, unless I'm missing something? I think this is reasonable, as people will already be using this non-lazily? If we don't want this support in Dask, i.e. if users *have* to provide a name instead of a type object, then we could deprecate the former in the documentation.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1384149037/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1384152865",
        "html_url": "https://github.com/dask/dask/pull/9835#issuecomment-1384152865",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9835",
        "id": 1384152865,
        "node_id": "IC_kwDOAbcwm85SgH8h",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-16T14:32:34Z",
        "updated_at": "2023-01-16T14:42:27Z",
        "author_association": "MEMBER",
        "body": "Oh yes, you're right.\r\nBut for the lazy group, if the registrar functions are actually decorated with lazy loading, then the first call to use the indicated sizeof function will fail, because all it does is register a new lazy registrar. Further calls will also fail if they don't happen to have matching names.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1384152865/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1384167153",
        "html_url": "https://github.com/dask/dask/pull/9835#issuecomment-1384167153",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9835",
        "id": 1384167153,
        "node_id": "IC_kwDOAbcwm85SgLbx",
        "user": {
            "login": "agoose77",
            "id": 1248413,
            "node_id": "MDQ6VXNlcjEyNDg0MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1248413?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agoose77",
            "html_url": "https://github.com/agoose77",
            "followers_url": "https://api.github.com/users/agoose77/followers",
            "following_url": "https://api.github.com/users/agoose77/following{/other_user}",
            "gists_url": "https://api.github.com/users/agoose77/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agoose77/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agoose77/subscriptions",
            "organizations_url": "https://api.github.com/users/agoose77/orgs",
            "repos_url": "https://api.github.com/users/agoose77/repos",
            "events_url": "https://api.github.com/users/agoose77/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agoose77/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-16T14:44:45Z",
        "updated_at": "2023-01-16T14:48:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes, I'm thinking that would be a design constraint - use `dask.sizeof.lazy` for lazy implementations, or `dask.sizeof` for eager ones? But I realise I might not be following exactly what you're talking about with non-matching names.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1384167153/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]