{
    "url": "https://api.github.com/repos/dask/dask/issues/7722",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/7722/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/7722/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/7722/events",
    "html_url": "https://github.com/dask/dask/issues/7722",
    "id": 904534132,
    "node_id": "MDU6SXNzdWU5MDQ1MzQxMzI=",
    "number": 7722,
    "title": "[Discussion] Proposed layer reorganization",
    "user": {
        "login": "ian-r-rose",
        "id": 5728311,
        "node_id": "MDQ6VXNlcjU3MjgzMTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5728311?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ian-r-rose",
        "html_url": "https://github.com/ian-r-rose",
        "followers_url": "https://api.github.com/users/ian-r-rose/followers",
        "following_url": "https://api.github.com/users/ian-r-rose/following{/other_user}",
        "gists_url": "https://api.github.com/users/ian-r-rose/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ian-r-rose/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ian-r-rose/subscriptions",
        "organizations_url": "https://api.github.com/users/ian-r-rose/orgs",
        "repos_url": "https://api.github.com/users/ian-r-rose/repos",
        "events_url": "https://api.github.com/users/ian-r-rose/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ian-r-rose/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 1372867996,
            "node_id": "MDU6TGFiZWwxMzcyODY3OTk2",
            "url": "https://api.github.com/repos/dask/dask/labels/discussion",
            "name": "discussion",
            "color": "bebaf4",
            "default": false,
            "description": "Discussing a topic with no specific actions yet"
        },
        {
            "id": 2156573524,
            "node_id": "MDU6TGFiZWwyMTU2NTczNTI0",
            "url": "https://api.github.com/repos/dask/dask/labels/highlevelgraph",
            "name": "highlevelgraph",
            "color": "8c24d6",
            "default": false,
            "description": "Issues relating to HighLevelGraphs."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 19,
    "created_at": "2021-05-28T02:00:42Z",
    "updated_at": "2021-10-14T07:52:29Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "High level graph `Layer` implementations have a number of constraints on them which makes their design and location within the project somewhat subtle. For security reasons they cannot deserialize or otherwise run arbitrary python code, and in general they cannot depend on numpy, pandas, or other such complex dependencies. As a result of the latter requirement, many `Layer` implementations have been  placed in `dask.layers` and, where they can be safely referenced without triggering unwanted imports (cf #7381).\r\n\r\nDuring some discussions, @gjoseph92, @GenevieveBuckley and I have become concerned about the size and maintainability of `layers.py`. As we look towards implementing more layers, this file will get more unwieldy: each layer will typically have an implementation and possibly a set of utility functions, and the module will eventually become a significant fraction of dask.\r\n\r\nSince the natural location for these layers (near userland code that instantiates them) isn't workable due to the unwanted imports, we have sketched out a proposed structure for making this easier to organize and maintain going forward. The basic idea is to keep shadow submodules of `dask.array` and `dask.dataframe` (and possibly `dask.bag`) as siblings of those submodules, each containing layer implementations for their counterpart. So `dask.array_layers` would have `Layer` classes and all the supporting utilities for `dask.array`. This could look something like (conceptually, not literally):\r\n\r\n```\r\n\u251c\u2500\u2500 core.py\r\n\u251c\u2500\u2500 base.py\r\n\u251c\u2500\u2500 array\r\n      \u251c\u2500\u2500 overlap.py (user code for overlap)\r\n      \u2514\u2500\u2500  slicing.py (user code for slicing)\r\n\u251c\u2500\u2500 dataframe\r\n      \u251c\u2500\u2500 shuffle.py (user code for shuffles)\r\n      \u2514\u2500\u2500 io.py (user code for read_csv, read_parquet, etc)\r\n\u251c\u2500\u2500 array_layers\r\n      \u251c\u2500\u2500 overlap.py (layers for overlap)\r\n      \u2514\u2500\u2500  slicing.py (layers for slicing)\r\n\u2514\u2500\u2500 dataframe_layers\r\n      \u251c\u2500\u2500 shuffle.py (layers for shuffles)\r\n      \u2514\u2500\u2500 io.py (layers for read_csv, read_parquet, etc)\r\n```\r\n\r\nCode from `dask.array` could freely import code from `dask.array_layers`, but not the reverse. I don't think the layers submodules would exactly mirror their counterparts, but a rough correspondence for collection-producing operations would make it much easier to keep things organized and avoid having `layers.py` be an enormous dumping ground.\r\n\r\nThoughts? especially cc @rjzamora and @jrbourbeau ",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/7722/reactions",
        "total_count": 2,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 2,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/7722/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}