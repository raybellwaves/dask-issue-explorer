[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/785201829",
        "html_url": "https://github.com/dask/dask/issues/7266#issuecomment-785201829",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7266",
        "id": 785201829,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTIwMTgyOQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-24T16:31:21Z",
        "updated_at": "2021-02-24T16:31:21Z",
        "author_association": "MEMBER",
        "body": "Hi @devin-petersohn !\r\n\r\nRegarding interoperability are you familiar with https://docs.dask.org/en/latest/custom-collections.html ?\r\n\r\nRegarding dask-xgboost it seems like the easiest solution would be to make it easy to convert a Modin dataframe into a Dask dataframe and then use the existing solution.  My guess is that this is relatively straightforward.  \r\n\r\nRegarding conversion, my understanding is that you care about cases where there are very many columns.  In this case I would encourage you to look at Xarray more deeply. \r\n\r\n> Are there issues that are unable to be compromised (e.g. must sort row label values, must support certain operators, etc.)?\r\n> What do Dask/Modin Dataframe users care about?\r\n> What does Dask/Modin Dataframe allow that Modin/Dask does not?\r\n\r\nI don't think that there are cohesive answers to these questions.  There isn't a single group of Dask dataframe users.  There are many different groups, each of which has divergent requirements.  I'm not sure that thinking about these questions makes a ton of sense.\r\n\r\n> I think Dask Dataframe users would benefit from the academic research work we've done (some yet unpublished)\r\n> I also think there are engineering features that Modin has that would interest Dask Dataframe users as well\r\n\r\nI would love to hear more about these.  My understanding is that you have a decent comprehension of how Dask dataframe is laid out.  Can you think of a specific opportunities for collaboration to start out?  Some low-hanging fruit to get things started?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/785201829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/785396205",
        "html_url": "https://github.com/dask/dask/issues/7266#issuecomment-785396205",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7266",
        "id": 785396205,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc4NTM5NjIwNQ==",
        "user": {
            "login": "devin-petersohn",
            "id": 10732128,
            "node_id": "MDQ6VXNlcjEwNzMyMTI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/10732128?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/devin-petersohn",
            "html_url": "https://github.com/devin-petersohn",
            "followers_url": "https://api.github.com/users/devin-petersohn/followers",
            "following_url": "https://api.github.com/users/devin-petersohn/following{/other_user}",
            "gists_url": "https://api.github.com/users/devin-petersohn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/devin-petersohn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/devin-petersohn/subscriptions",
            "organizations_url": "https://api.github.com/users/devin-petersohn/orgs",
            "repos_url": "https://api.github.com/users/devin-petersohn/repos",
            "events_url": "https://api.github.com/users/devin-petersohn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/devin-petersohn/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-02-24T21:28:08Z",
        "updated_at": "2021-02-24T21:28:08Z",
        "author_association": "CONTRIBUTOR",
        "body": ">Regarding dask-xgboost it seems like the easiest solution would be to make it easy to convert a Modin dataframe into a Dask dataframe and then use the existing solution. My guess is that this is relatively straightforward.\r\n\r\nYes, I agree it would likely be straightforward. There are other options, like adding the ability to create a `DaskDMatrix` from a Modin Dataframe. I'd personally be in favor of the latter, but those changes would likely go in xgboost itself.\r\n\r\n>Regarding conversion, my understanding is that you care about cases where there are very many columns.\r\n\r\nNot completely. Modin is designed to scale horizontally, but there is more to the design than handling a large number of columns. Dask Dataframe can handle hundreds of columns, and we don't see many users who have much more than that (maybe a handful have in the low 1000s). Conversion to/from Dask Dataframe and Modin would benefit everyone. I am familiar with Xarray, I point people there from time to time, but I believe we're solving different problems.\r\n\r\n>I don't think that there are cohesive answers to these questions.\r\n\r\nI'm sure there are concrete answers to the first and last question. The second question is perhaps too broad, and maybe could be phrased as \"Are there any features that any Dask/Modin users could not operate without?\".  I do think the questions are important to consider, not as pitting Modin vs Dask rather in the interest of learning from each other. Comparisons are hard, but there's some common ground and it's likely a good place to start if we want to \"combine forces\" (do we?). It'd also be good to get acquainted with each other's way of thinking.\r\n\r\n>I would love to hear more about these.\r\n\r\nI think there's a cost/benefit to be considered here, so I'd first like to list a couple of the lowest hanging fruits \ud83d\ude04. These are also mutually beneficial.\r\n\r\n1. Conversion to and from Modin from Dask Dataframe\r\n  a. Should be easy for no-copy partition conversion\r\n  b. Modin can handle the partitions Dask gives it and provide the partitions in a layout Dask can directly consume\r\n  c. (Downside) Metadata might be hard (e.g. unsorted row labels)\r\n2. Add ability to query Dask dataframe directly using Modin\r\n  a. Benefit of Modin's architecture without directly changing Dask\r\n  b. (Downside) Not everything will be supported in Dask dataframe that Modin on Dask currently supports\r\n\r\nI think it's easier to justify the non-trivial time spent on building these features if there's some common middle-long term goal in mind for collaborating. Expectations should be set first, I believe.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/785396205/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2129397832",
        "html_url": "https://github.com/dask/dask/issues/7266#issuecomment-2129397832",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7266",
        "id": 2129397832,
        "node_id": "IC_kwDOAbcwm85-7AhI",
        "user": {
            "login": "YarShev",
            "id": 26389732,
            "node_id": "MDQ6VXNlcjI2Mzg5NzMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/26389732?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YarShev",
            "html_url": "https://github.com/YarShev",
            "followers_url": "https://api.github.com/users/YarShev/followers",
            "following_url": "https://api.github.com/users/YarShev/following{/other_user}",
            "gists_url": "https://api.github.com/users/YarShev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YarShev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YarShev/subscriptions",
            "organizations_url": "https://api.github.com/users/YarShev/orgs",
            "repos_url": "https://api.github.com/users/YarShev/repos",
            "events_url": "https://api.github.com/users/YarShev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YarShev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-05-24T12:18:38Z",
        "updated_at": "2024-05-24T12:18:38Z",
        "author_association": "NONE",
        "body": "Hi folks, it's been a while since opening this issue :) 3 years later Modin added support for conversion of a Modin DF to a Dask DF and vice versa. By converting a Modin DF to a Dask DF, there will be opportunity for conversion to other Dask data formats, as well as for usage of Dask XGBoost. We are going to open a PR to update the Dask documentation so after that one can consider this issue as resolved.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2129397832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]