[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/592306832",
        "html_url": "https://github.com/dask/dask/issues/5953#issuecomment-592306832",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5953",
        "id": 592306832,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjMwNjgzMg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-28T04:24:38Z",
        "updated_at": "2020-02-28T04:24:38Z",
        "author_association": "MEMBER",
        "body": "> However, it seems that there is likely a bit of overhead with rechunking to this extreme just to write to a store on-disc\r\n\r\nNot necessarily.  We would need to rechunk anyway.  I think that using rechunk before to_zarr is likely as good as we can do here.  I'm inclined to leave things as they are.  It might make sense to add a line in the docstring of `to_zarr` to point people to `rechunk` if they want to control chunking though.  \r\n\r\nI may not fully understand things.  Is there a particular reason why you're concerned about rechunking, or is this just a general concern about uncertainty around rechunking performance.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/592306832/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/592313734",
        "html_url": "https://github.com/dask/dask/issues/5953#issuecomment-592313734",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5953",
        "id": 592313734,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjMxMzczNA==",
        "user": {
            "login": "manzt",
            "id": 24403730,
            "node_id": "MDQ6VXNlcjI0NDAzNzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24403730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manzt",
            "html_url": "https://github.com/manzt",
            "followers_url": "https://api.github.com/users/manzt/followers",
            "following_url": "https://api.github.com/users/manzt/following{/other_user}",
            "gists_url": "https://api.github.com/users/manzt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manzt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manzt/subscriptions",
            "organizations_url": "https://api.github.com/users/manzt/orgs",
            "repos_url": "https://api.github.com/users/manzt/repos",
            "events_url": "https://api.github.com/users/manzt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manzt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-28T04:57:31Z",
        "updated_at": "2020-02-28T04:59:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for the response. This is generally a concern about rechunking performance but I very well could be off in my understanding. Maybe I need to look into `dask.array.to_zarr` a bit further, but in the current implementation I'm guessing one dask chunk is written to a corresponding chunk in the zarr store. \r\n\r\nIf the dask chunks sizes are some multiple of the zarr chunks, then would it be possible for that dask chunk to write to multiple zarr chunks rather than needing to rechunk? Maybe this is quite minor in terms of performance...\r\n\r\nI would like to used delayed + dask array like this, but if I understand correctly using delayed with other dask collections should be avoided: \r\n```python\r\nimport dask.array as da\r\nfrom dask import delayed\r\nimport zarr\r\n\r\nz = zarr.open(\"my_data.zarr\", shape=(50000, 50000), chunks=(512, 512)) # create mutable store\r\nx = da.random.random((50000, 50000), chunks=(4096, 4096))\r\n\r\n@delayed\r\ndef write_chunks(z, x, selection):\r\n    z[selection] = x[selection]\r\n\r\ntasks = []\r\nfor i in range(0, 50000, 4096):\r\n    task = write_chunks(z, x, (slice(i, i + 4096), slice(i, i + 4096)))\r\n    tasks.append(task)\r\n\r\ndask.compute(tasks)\r\n``` \r\n\r\nIn this senario, each dask chunk is responsible for writing to 16 zarr chunks and there shouldn't be issues with trying to write to the same chunks.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/592313734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/593027724",
        "html_url": "https://github.com/dask/dask/issues/5953#issuecomment-593027724",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5953",
        "id": 593027724,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzAyNzcyNA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-01T01:27:53Z",
        "updated_at": "2020-03-01T01:27:53Z",
        "author_association": "MEMBER",
        "body": "> If the dask chunks sizes are some multiple of the zarr chunks, then would it be possible for that dask chunk to write to multiple zarr chunks rather than needing to rechunk?\r\n\r\nThat sounds like a reasonable use case that is not currently supported .  cc @jakirkham , who works in this space in case he has interest.\r\n\r\n> I would like to used delayed + dask array like this, but if I understand correctly using delayed with other dask collections should be avoided:\r\n\r\nUsing Dask array with Dask delayed is definitely doable, but there are many ways to shoot yourself in the foot.  The way that you have proposed is one such way.  I recommend not doing that.  When you pass a Dask array into a delayed function the dask array will become a numpy array.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/593027724/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/593030111",
        "html_url": "https://github.com/dask/dask/issues/5953#issuecomment-593030111",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5953",
        "id": 593030111,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzAzMDExMQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-01T02:03:10Z",
        "updated_at": "2020-03-01T02:03:10Z",
        "author_association": "MEMBER",
        "body": "Yeah sounds reasonable. Are you interested in doing a PR? \ud83d\ude09",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/593030111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/593109188",
        "html_url": "https://github.com/dask/dask/issues/5953#issuecomment-593109188",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5953",
        "id": 593109188,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzEwOTE4OA==",
        "user": {
            "login": "manzt",
            "id": 24403730,
            "node_id": "MDQ6VXNlcjI0NDAzNzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24403730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manzt",
            "html_url": "https://github.com/manzt",
            "followers_url": "https://api.github.com/users/manzt/followers",
            "following_url": "https://api.github.com/users/manzt/following{/other_user}",
            "gists_url": "https://api.github.com/users/manzt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manzt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manzt/subscriptions",
            "organizations_url": "https://api.github.com/users/manzt/orgs",
            "repos_url": "https://api.github.com/users/manzt/repos",
            "events_url": "https://api.github.com/users/manzt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manzt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-01T15:23:08Z",
        "updated_at": "2020-03-01T15:23:08Z",
        "author_association": "CONTRIBUTOR",
        "body": "I am interested in doing a PR! However, considering my first suggestion seems to be a foot-gun I would appreciate some guidance in approach. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/593109188/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/797592954",
        "html_url": "https://github.com/dask/dask/issues/5953#issuecomment-797592954",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5953",
        "id": 797592954,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzU5Mjk1NA==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-12T16:14:41Z",
        "updated_at": "2021-03-12T16:14:41Z",
        "author_association": "MEMBER",
        "body": "If you are still interested in doing this PR @manzt it seems to me like you could just tweak `to_zarr` to accept chunks, and then pass chunks to `zarr.create` or `zarr.array` if #7379 merges. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/797592954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/797597531",
        "html_url": "https://github.com/dask/dask/issues/5953#issuecomment-797597531",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5953",
        "id": 797597531,
        "node_id": "MDEyOklzc3VlQ29tbWVudDc5NzU5NzUzMQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-03-12T16:21:33Z",
        "updated_at": "2021-03-12T16:21:33Z",
        "author_association": "MEMBER",
        "body": "Yeah I think the normal way to do this would be to `rechunk` since Dask isn't doing anything with locking.\r\n\r\nIf the chunks in Zarr are smaller than those in Dask and all Zarr chunks fit within Dask chunks, that may be safe to use without locking. However any deviations will require we use Zarr locking. I'm not totally sure how we will handle that when using the Distributed Scheduler.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/797597531/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]