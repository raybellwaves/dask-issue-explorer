[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/645312400",
        "html_url": "https://github.com/dask/dask/issues/6329#issuecomment-645312400",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6329",
        "id": 645312400,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTMxMjQwMA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-17T11:16:50Z",
        "updated_at": "2020-06-17T11:16:50Z",
        "author_association": "MEMBER",
        "body": "That could be added, with a caveat about how it breaks ties when there are\nmultiple modes.\n\nOn Tue, Jun 16, 2020 at 10:53 PM Ray Bell <notifications@github.com> wrote:\n\n> There's an example of a mode custom aggregation on SO\n> https://stackoverflow.com/a/46082075/6046019\n>\n> Do you think it would be of benefit to add it the docs as another example\n> at the bottom of\n> https://docs.dask.org/en/latest/dataframe-groupby.html#aggregate?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/6329>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAKAOISEFWW356OEVNUMUR3RXA45FANCNFSM4OAGNRVQ>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/645312400/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/656699266",
        "html_url": "https://github.com/dask/dask/issues/6329#issuecomment-656699266",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6329",
        "id": 656699266,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjY5OTI2Ng==",
        "user": {
            "login": "raybellwaves",
            "id": 17162724,
            "node_id": "MDQ6VXNlcjE3MTYyNzI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/17162724?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raybellwaves",
            "html_url": "https://github.com/raybellwaves",
            "followers_url": "https://api.github.com/users/raybellwaves/followers",
            "following_url": "https://api.github.com/users/raybellwaves/following{/other_user}",
            "gists_url": "https://api.github.com/users/raybellwaves/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raybellwaves/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raybellwaves/subscriptions",
            "organizations_url": "https://api.github.com/users/raybellwaves/orgs",
            "repos_url": "https://api.github.com/users/raybellwaves/repos",
            "events_url": "https://api.github.com/users/raybellwaves/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raybellwaves/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-10T14:15:42Z",
        "updated_at": "2020-07-11T17:44:45Z",
        "author_association": "MEMBER",
        "body": "> That could be added, with a caveat about how it breaks ties when there are multiple modes.\r\n\r\nInteresting. I see that in pandas as well.\r\n\r\nNote: the code below is WIP.\r\n\r\n```\r\nimport pandas as pd\r\nimport pandas._testing as tm\r\nimport dask.dataframe as dd \r\n\r\nd = {'col1': [1, 1, 1, 1, 1], 'col2': [5, 6, 6, 6, 7]} # Works\r\n#d = {'col1': [1, 1, 1, 1, 1], 'col2': [5, 5, 6, 6, 7]} # Does not work\r\ndf = pd.DataFrame(data=d)\r\nexpected = df.groupby('col1').agg({'col2':pd.Series.mode})\r\n\r\nddf = dd.from_pandas(df, npartitions=2)\r\n\r\nmode = dd.Aggregation(\r\n    name=\"mode\",\r\n    chunk=lambda s: s.value_counts(),\r\n    agg=lambda s0: s0._selected_obj.groupby(\r\n        level=list(range(s0._selected_obj.index.nlevels))\r\n    ).sum(),\r\n    finalize=lambda s1: s1.groupby(level=list(range(s1.index.nlevels - 1))).apply(\r\n        lambda x: x.reset_index(\r\n            level=list(range(x.index.nlevels - 1)), drop=True\r\n        ).argmax()\r\n    ),\r\n)\r\n\r\nactual = ddf.groupby('col1').agg({'col2':mode}).compute()\r\n\r\n\r\ndef chunk(s):\r\n    return s.value_counts()\r\n\r\ndef agg(s):\r\n    return s.apply(lambda s: s.groupby(level=-1).sum())\r\n\r\ndef finalize(s):\r\n    level = list(range(s.index.nlevels - 1))\r\n    return (\r\n        s.groupby(level=level)\r\n        .apply(lambda s: s.reset_index(level=level, drop=True).argmax())\r\n    )\r\n\r\nmode = dd.Aggregation('mode', chunk, agg, finalize)\r\n\r\nactual = ddf.groupby('col1').agg({'col2':mode}).compute()",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/656699266/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/918533989",
        "html_url": "https://github.com/dask/dask/issues/6329#issuecomment-918533989",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6329",
        "id": 918533989,
        "node_id": "IC_kwDOAbcwm842v7dl",
        "user": {
            "login": "ncclementi",
            "id": 7526622,
            "node_id": "MDQ6VXNlcjc1MjY2MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7526622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ncclementi",
            "html_url": "https://github.com/ncclementi",
            "followers_url": "https://api.github.com/users/ncclementi/followers",
            "following_url": "https://api.github.com/users/ncclementi/following{/other_user}",
            "gists_url": "https://api.github.com/users/ncclementi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ncclementi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ncclementi/subscriptions",
            "organizations_url": "https://api.github.com/users/ncclementi/orgs",
            "repos_url": "https://api.github.com/users/ncclementi/repos",
            "events_url": "https://api.github.com/users/ncclementi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ncclementi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-13T20:06:16Z",
        "updated_at": "2021-09-13T20:06:16Z",
        "author_association": "MEMBER",
        "body": "@raybellwaves  Are you still interested in adding the example above or some version of it? I'm noticing there are no PR's linked to this issue. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/918533989/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1800752960",
        "html_url": "https://github.com/dask/dask/issues/6329#issuecomment-1800752960",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6329",
        "id": 1800752960,
        "node_id": "IC_kwDOAbcwm85rVU9A",
        "user": {
            "login": "zmbc",
            "id": 13357648,
            "node_id": "MDQ6VXNlcjEzMzU3NjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13357648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zmbc",
            "html_url": "https://github.com/zmbc",
            "followers_url": "https://api.github.com/users/zmbc/followers",
            "following_url": "https://api.github.com/users/zmbc/following{/other_user}",
            "gists_url": "https://api.github.com/users/zmbc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zmbc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zmbc/subscriptions",
            "organizations_url": "https://api.github.com/users/zmbc/orgs",
            "repos_url": "https://api.github.com/users/zmbc/repos",
            "events_url": "https://api.github.com/users/zmbc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zmbc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-08T00:39:26Z",
        "updated_at": "2023-11-08T00:39:26Z",
        "author_association": "NONE",
        "body": "For what it's worth: I could not get the above code to work, and spent a bit of time debugging it before realizing that `.argmax` in the `finalize` function is getting the _integer position_ of the most common value, not the value itself; replacing with `.idxmax` works.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1800752960/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1871500476",
        "html_url": "https://github.com/dask/dask/issues/6329#issuecomment-1871500476",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6329",
        "id": 1871500476,
        "node_id": "IC_kwDOAbcwm85vjNS8",
        "user": {
            "login": "SultanOrazbayev",
            "id": 20208402,
            "node_id": "MDQ6VXNlcjIwMjA4NDAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/20208402?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SultanOrazbayev",
            "html_url": "https://github.com/SultanOrazbayev",
            "followers_url": "https://api.github.com/users/SultanOrazbayev/followers",
            "following_url": "https://api.github.com/users/SultanOrazbayev/following{/other_user}",
            "gists_url": "https://api.github.com/users/SultanOrazbayev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SultanOrazbayev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SultanOrazbayev/subscriptions",
            "organizations_url": "https://api.github.com/users/SultanOrazbayev/orgs",
            "repos_url": "https://api.github.com/users/SultanOrazbayev/repos",
            "events_url": "https://api.github.com/users/SultanOrazbayev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SultanOrazbayev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-12-28T21:28:06Z",
        "updated_at": "2023-12-28T21:28:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "Slightly modified code that also allows for multiple values of the mode (as seen on [StackOverflow](https://stackoverflow.com/a/77729244/10693596)):\r\n\r\n<details>\r\n\r\n```python\r\nfrom pandas import DataFrame, Series, NA\r\nfrom dask.dataframe import from_pandas, Aggregation\r\n\r\ndata = DataFrame(\r\n    {\r\n        \"status\": [\r\n            \"pending\",\r\n            \"pending\",\r\n            \"pending\",\r\n            \"canceled\",\r\n            \"canceled\",\r\n            \"canceled\",\r\n            \"confirmed\",\r\n            \"confirmed\",\r\n            \"confirmed\",\r\n        ],\r\n        \"clientId\": [\"A\", \"B\", \"C\", \"A\", \"D\", \"C\", \"A\", \"B\", \"C\"],\r\n        \"partner\": [\"A\", NA, \"C\", \"A\", NA, \"C\", \"A\", NA, \"C\"],\r\n        \"product\": [\r\n            \"afiliates\",\r\n            \"pre-paid\",\r\n            \"giftcard\",\r\n            \"afiliates\",\r\n            \"pre-paid\",\r\n            \"giftcard\",\r\n            \"afiliates\",\r\n            \"pre-paid\",\r\n            \"giftcard\",\r\n        ],\r\n        \"brand\": [\r\n            \"brand_4\",\r\n            \"brand_2\",\r\n            \"brand_3\",\r\n            \"brand_1\",\r\n            \"brand_2\",\r\n            \"brand_3\",\r\n            \"brand_1\",\r\n            \"brand_3\",\r\n            \"brand_3\",\r\n        ],\r\n        \"gmv\": [100, 100, 100, 100, 100, 100, 100, 100, 100],\r\n    }\r\n)\r\n\r\ndata = data.astype(\r\n    {\r\n        \"partner\": \"category\",\r\n        \"status\": \"category\",\r\n        \"product\": \"category\",\r\n        \"brand\": \"category\",\r\n    }\r\n)\r\nmode_pandas = data.groupby([\"clientId\", \"product\"], observed=True).agg(\r\n    {\"brand\": Series.mode}\r\n)\r\n\r\ndf = from_pandas(data, npartitions=1)\r\n\r\n\r\ndef chunk(s):\r\n    return s.value_counts()\r\n\r\n\r\ndef agg(s0):\r\n    _intermediate = s0._selected_obj.groupby(level=s0._selected_obj.index.names).sum()\r\n    _intermediate = _intermediate[_intermediate > 0]\r\n    return _intermediate\r\n\r\n\r\ndef finalize(s):\r\n    level = list(range(s.index.nlevels - 1))\r\n    return s.groupby(level=level, group_keys=False).apply(lambda s: s[s == s.max()])\r\n\r\n\r\nmode = Aggregation(\r\n    name=\"mode\",\r\n    chunk=chunk,\r\n    agg=agg,\r\n    finalize=finalize,\r\n)\r\n\r\n\r\nmode_dask = df.groupby([\"clientId\", \"product\"], observed=True, dropna=True).aggregate(\r\n    {\"brand\": mode}\r\n).compute()\r\n\r\nprint(mode_pandas)\r\nprint(mode_dask)\r\n```\r\n\r\n</details>",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1871500476/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1874997979",
        "html_url": "https://github.com/dask/dask/issues/6329#issuecomment-1874997979",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6329",
        "id": 1874997979,
        "node_id": "IC_kwDOAbcwm85vwjLb",
        "user": {
            "login": "hendrikmakait",
            "id": 2699097,
            "node_id": "MDQ6VXNlcjI2OTkwOTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2699097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hendrikmakait",
            "html_url": "https://github.com/hendrikmakait",
            "followers_url": "https://api.github.com/users/hendrikmakait/followers",
            "following_url": "https://api.github.com/users/hendrikmakait/following{/other_user}",
            "gists_url": "https://api.github.com/users/hendrikmakait/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hendrikmakait/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hendrikmakait/subscriptions",
            "organizations_url": "https://api.github.com/users/hendrikmakait/orgs",
            "repos_url": "https://api.github.com/users/hendrikmakait/repos",
            "events_url": "https://api.github.com/users/hendrikmakait/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hendrikmakait/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-03T08:25:10Z",
        "updated_at": "2024-01-03T08:25:10Z",
        "author_association": "MEMBER",
        "body": "@SultanOrazbayev: Thanks for providing this example! Would you be interested in contributing a PR that adds the example or a simplified version to the Dask documentation? ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1874997979/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]