[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1786945695",
        "html_url": "https://github.com/dask/dask/issues/10564#issuecomment-1786945695",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10564",
        "id": 1786945695,
        "node_id": "IC_kwDOAbcwm85qgqCf",
        "user": {
            "login": "benrutter",
            "id": 55319792,
            "node_id": "MDQ6VXNlcjU1MzE5Nzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/55319792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benrutter",
            "html_url": "https://github.com/benrutter",
            "followers_url": "https://api.github.com/users/benrutter/followers",
            "following_url": "https://api.github.com/users/benrutter/following{/other_user}",
            "gists_url": "https://api.github.com/users/benrutter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benrutter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benrutter/subscriptions",
            "organizations_url": "https://api.github.com/users/benrutter/orgs",
            "repos_url": "https://api.github.com/users/benrutter/repos",
            "events_url": "https://api.github.com/users/benrutter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benrutter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-31T10:34:45Z",
        "updated_at": "2023-10-31T10:34:45Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hi @Martmists-GH, do you have any detail on this?\r\n\r\nI tried to recreate the issue and I guess this is the issue you're talking about:\r\n\r\n```python\r\nimport pandas as pd\r\nimport dask.dataframe as dd\r\n\r\ndf = pd.DataFrame({\"a\": [1, 2, 3]})\r\n\r\nwith open(\"eg.csv\", \"w\") as file:\r\n    df.to_csv(file)\r\n\r\nddf = dd.from_pandas(df, npartitions=2)\r\n\r\nwith open(\"eg.csv\", \"w\") as file:\r\n    ddf.to_csv(file)\r\n```\r\n\r\npandas will write fine to an io stream object like that, but dask throws a \"UnsupportedOperation\".\r\n\r\nI'm not really an authority at all on anything much, but it seems like if it was implemented, it would mean write operations couldn't be parallelized (dask will by default save to lots of different csvs which is really handy for big data).\r\n\r\nWould a more expressive error message saying something along those lines been nicer? Or is there something specific you're trying to achieve that involves writing to a file-like object>",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1786945695/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1787056491",
        "html_url": "https://github.com/dask/dask/issues/10564#issuecomment-1787056491",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10564",
        "id": 1787056491,
        "node_id": "IC_kwDOAbcwm85qhFFr",
        "user": {
            "login": "Martmists-GH",
            "id": 16361449,
            "node_id": "MDQ6VXNlcjE2MzYxNDQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/16361449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Martmists-GH",
            "html_url": "https://github.com/Martmists-GH",
            "followers_url": "https://api.github.com/users/Martmists-GH/followers",
            "following_url": "https://api.github.com/users/Martmists-GH/following{/other_user}",
            "gists_url": "https://api.github.com/users/Martmists-GH/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Martmists-GH/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Martmists-GH/subscriptions",
            "organizations_url": "https://api.github.com/users/Martmists-GH/orgs",
            "repos_url": "https://api.github.com/users/Martmists-GH/repos",
            "events_url": "https://api.github.com/users/Martmists-GH/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Martmists-GH/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-31T11:45:34Z",
        "updated_at": "2023-10-31T11:45:34Z",
        "author_association": "NONE",
        "body": "Hmm, I'm not getting an UnsupportedOperation but an AttributeError:\r\n\r\n```py\r\n>>> import pandas as pd\r\n>>> import dask.dataframe as dd\r\n>>> import io\r\n>>> df = pd.DataFrame({\"a\":[1,2,3],\"b\":[4,5,6]})\r\n>>> ddf = dd.from_pandas(df, npartitions=1)\r\n>>> out = io.StringIO()\r\n>>> ddf.to_csv(out)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\M66G898\\.pyenv-win-venv\\envs\\nn_monitoring\\Lib\\site-packages\\dask\\dataframe\\core.py\", line 1897, in to_csv\r\n    return to_csv(self, filename, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\M66G898\\.pyenv-win-venv\\envs\\nn_monitoring\\Lib\\site-packages\\dask\\dataframe\\io\\csv.py\", line 955, in to_csv\r\n    files = open_files(\r\n            ^^^^^^^^^^^\r\n  File \"C:\\Users\\M66G898\\.pyenv-win-venv\\envs\\nn_monitoring\\Lib\\site-packages\\fsspec\\core.py\", line 280, in open_files\r\n    fs, fs_token, paths = get_fs_token_paths(\r\n                          ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\M66G898\\.pyenv-win-venv\\envs\\nn_monitoring\\Lib\\site-packages\\fsspec\\core.py\", line 610, in get_fs_token_paths\r\n    chain = _un_chain(urlpath0, storage_options or {})\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\M66G898\\.pyenv-win-venv\\envs\\nn_monitoring\\Lib\\site-packages\\fsspec\\core.py\", line 331, in _un_chain\r\n    bit = cls._strip_protocol(bit)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\M66G898\\.pyenv-win-venv\\envs\\nn_monitoring\\Lib\\site-packages\\fsspec\\implementations\\local.py\", line 214, in _strip_protocol\r\n    if path.startswith(\"file://\"):\r\n       ^^^^^^^^^^^^^^^\r\nAttributeError: '_io.StringIO' object has no attribute 'startswith'\r\n```\r\n\r\nIt's fine if it's not fully parallelized for writing as (at least for our use-case) it will only write aggregated results. Perhaps it would be an idea to support file-like objects without parallelizing, but warn the user about the writes not being parallel?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1787056491/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1787385130",
        "html_url": "https://github.com/dask/dask/issues/10564#issuecomment-1787385130",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10564",
        "id": 1787385130,
        "node_id": "IC_kwDOAbcwm85qiVUq",
        "user": {
            "login": "benrutter",
            "id": 55319792,
            "node_id": "MDQ6VXNlcjU1MzE5Nzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/55319792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benrutter",
            "html_url": "https://github.com/benrutter",
            "followers_url": "https://api.github.com/users/benrutter/followers",
            "following_url": "https://api.github.com/users/benrutter/following{/other_user}",
            "gists_url": "https://api.github.com/users/benrutter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benrutter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benrutter/subscriptions",
            "organizations_url": "https://api.github.com/users/benrutter/orgs",
            "repos_url": "https://api.github.com/users/benrutter/repos",
            "events_url": "https://api.github.com/users/benrutter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benrutter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-31T14:55:49Z",
        "updated_at": "2023-10-31T14:55:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "That makes sense, the dask documentation calls that first argument \"filename\" and says it has to be a string or a list. Someone closer to the project could probably comment better, but it doesn't look like writing to IO objects is part of the designed behaviour.\r\n\r\nIf you did need to do that for some reason, you could compute first (you'd need everything stored in memory to have it in a single IO object anyway)\r\n\r\n```python\r\nddf.compute().to_csv(out)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1787385130/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]