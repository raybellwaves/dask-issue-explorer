[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/345677497",
        "html_url": "https://github.com/dask/dask/issues/2900#issuecomment-345677497",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2900",
        "id": 345677497,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTY3NzQ5Nw==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-20T12:08:14Z",
        "updated_at": "2017-11-20T12:08:14Z",
        "author_association": "MEMBER",
        "body": "@morganics could you take a look to see how difficult this would be? I'm guessing we have at least some code in there for handling type mismatches (e.g. int with NaN -> float). There may be an opportunity to check this there.\r\n\r\nHowever, if it's too difficult I think it's OK to just document this behavior. `read_sql_table` is for reading a table into a dataframe :) If people want to be doing sql operations, I'd recommend getting a connection from the `engine` they pass in.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/345677497/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/346246324",
        "html_url": "https://github.com/dask/dask/issues/2900#issuecomment-346246324",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2900",
        "id": 346246324,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjI0NjMyNA==",
        "user": {
            "login": "ed-alertedh",
            "id": 24605895,
            "node_id": "MDQ6VXNlcjI0NjA1ODk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/24605895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ed-alertedh",
            "html_url": "https://github.com/ed-alertedh",
            "followers_url": "https://api.github.com/users/ed-alertedh/followers",
            "following_url": "https://api.github.com/users/ed-alertedh/following{/other_user}",
            "gists_url": "https://api.github.com/users/ed-alertedh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ed-alertedh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ed-alertedh/subscriptions",
            "organizations_url": "https://api.github.com/users/ed-alertedh/orgs",
            "repos_url": "https://api.github.com/users/ed-alertedh/repos",
            "events_url": "https://api.github.com/users/ed-alertedh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ed-alertedh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-22T05:18:28Z",
        "updated_at": "2017-11-22T05:18:28Z",
        "author_association": "NONE",
        "body": "Perhaps this should be a separate issue, but read_sql_table gives a similar error message in another scenario too:\r\npd.read_sql can sometimes produce dataframes with dtypes that are different between partitions when columns contain NULL. See pandas-dev/pandas#13049",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/346246324/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/346375178",
        "html_url": "https://github.com/dask/dask/issues/2900#issuecomment-346375178",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2900",
        "id": 346375178,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjM3NTE3OA==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-22T15:00:10Z",
        "updated_at": "2017-11-22T15:00:10Z",
        "author_association": "MEMBER",
        "body": "It would be reasonable to take a sample (first N rows), check its dtypes and apply to all partitions. read_csv does something like that. Alternatively, we could accept a meta=, specifying the expected look of each partition.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/346375178/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/346375631",
        "html_url": "https://github.com/dask/dask/issues/2900#issuecomment-346375631",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2900",
        "id": 346375631,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjM3NTYzMQ==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-22T15:01:28Z",
        "updated_at": "2017-11-22T15:01:28Z",
        "author_association": "MEMBER",
        "body": "Actually, we already *do* take a sample of exactly five rows, but don't apply its types to the partitions (it is passed to dd.from_delayed).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/346375631/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/346500941",
        "html_url": "https://github.com/dask/dask/issues/2900#issuecomment-346500941",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2900",
        "id": 346500941,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjUwMDk0MQ==",
        "user": {
            "login": "ed-alertedh",
            "id": 24605895,
            "node_id": "MDQ6VXNlcjI0NjA1ODk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/24605895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ed-alertedh",
            "html_url": "https://github.com/ed-alertedh",
            "followers_url": "https://api.github.com/users/ed-alertedh/followers",
            "following_url": "https://api.github.com/users/ed-alertedh/following{/other_user}",
            "gists_url": "https://api.github.com/users/ed-alertedh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ed-alertedh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ed-alertedh/subscriptions",
            "organizations_url": "https://api.github.com/users/ed-alertedh/orgs",
            "repos_url": "https://api.github.com/users/ed-alertedh/repos",
            "events_url": "https://api.github.com/users/ed-alertedh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ed-alertedh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-22T23:34:29Z",
        "updated_at": "2017-11-22T23:34:29Z",
        "author_association": "NONE",
        "body": "In our database, the first five rows happens to be all NULL for various columns, which causes the inference to conclude these columns are object (in fact they are nullable float). Ideally the dtype information would come from the database schema instead, but that would probably require changes to the underlying pandas implementation...",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/346500941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/346501399",
        "html_url": "https://github.com/dask/dask/issues/2900#issuecomment-346501399",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2900",
        "id": 346501399,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjUwMTM5OQ==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-22T23:37:11Z",
        "updated_at": "2017-11-22T23:37:11Z",
        "author_association": "MEMBER",
        "body": "I am not aware of how to get the dtypes of a set of columns out of a query without extracting data. I'd be glad to see it!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/346501399/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/346502771",
        "html_url": "https://github.com/dask/dask/issues/2900#issuecomment-346502771",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2900",
        "id": 346502771,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjUwMjc3MQ==",
        "user": {
            "login": "ed-alertedh",
            "id": 24605895,
            "node_id": "MDQ6VXNlcjI0NjA1ODk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/24605895?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ed-alertedh",
            "html_url": "https://github.com/ed-alertedh",
            "followers_url": "https://api.github.com/users/ed-alertedh/followers",
            "following_url": "https://api.github.com/users/ed-alertedh/following{/other_user}",
            "gists_url": "https://api.github.com/users/ed-alertedh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ed-alertedh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ed-alertedh/subscriptions",
            "organizations_url": "https://api.github.com/users/ed-alertedh/orgs",
            "repos_url": "https://api.github.com/users/ed-alertedh/repos",
            "events_url": "https://api.github.com/users/ed-alertedh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ed-alertedh/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-11-22T23:47:05Z",
        "updated_at": "2017-11-22T23:47:05Z",
        "author_association": "NONE",
        "body": "It requires vendor-specific queries on the DB - [SQLAlchemy can do it](http://docs.sqlalchemy.org/en/latest/core/metadata.html#sqlalchemy.schema.Table.params.autoload) , but dask is not using that lib directly. Short of rewriting the pandas functionality I don't have a proposed \"quick fix\" \u2639\ufe0f  I just thought it was worth noting",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/346502771/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]