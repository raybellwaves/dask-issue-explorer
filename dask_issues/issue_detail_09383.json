{
    "url": "https://api.github.com/repos/dask/dask/issues/9383",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9383/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9383/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9383/events",
    "html_url": "https://github.com/dask/dask/issues/9383",
    "id": 1337965221,
    "node_id": "I_kwDOAbcwm85Pv7ql",
    "number": 9383,
    "title": "dataframe.read_sql_query does not work with datetime index",
    "user": {
        "login": "ljmc-github",
        "id": 26164870,
        "node_id": "MDQ6VXNlcjI2MTY0ODcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/26164870?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ljmc-github",
        "html_url": "https://github.com/ljmc-github",
        "followers_url": "https://api.github.com/users/ljmc-github/followers",
        "following_url": "https://api.github.com/users/ljmc-github/following{/other_user}",
        "gists_url": "https://api.github.com/users/ljmc-github/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ljmc-github/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ljmc-github/subscriptions",
        "organizations_url": "https://api.github.com/users/ljmc-github/orgs",
        "repos_url": "https://api.github.com/users/ljmc-github/repos",
        "events_url": "https://api.github.com/users/ljmc-github/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ljmc-github/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 3798450413,
            "node_id": "LA_kwDOAbcwm87iZ8Dt",
            "url": "https://api.github.com/repos/dask/dask/labels/bug",
            "name": "bug",
            "color": "faadaf",
            "default": true,
            "description": "Something is broken"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-08-13T13:27:32Z",
    "updated_at": "2022-09-02T15:48:20Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**What happened**:\r\n\r\nDask failed to read_sql_query for a datetime index.\r\n\r\nSee SO question [here](https://stackoverflow.com/questions/73340732/loading-dask-dataframe-with-sqlalchemy-fails/73344622#73344622) (not mine, only reporting from it), and MCVE below.\r\n\r\n**What you expected to happen**:\r\n\r\nDask reads the database and returns a df.\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```py\r\nfrom datetime import datetime\r\n\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\nfrom sqlalchemy import Column, DateTime, Integer, create_engine, select\r\nfrom sqlalchemy.orm import Session, declarative_base\r\n\r\nBase = declarative_base()\r\n\r\n\r\nclass Loan(Base):\r\n    __tablename__ = \"test_loans\"\r\n    id = Column(Integer, primary_key=True)\r\n    date = Column(DateTime)\r\n    balance = Column(Integer)\r\n\r\n\r\nengine = create_engine(\"sqlite:////tmp/so.db\", future=True, echo=True)\r\n\r\nBase.metadata.create_all(engine)\r\n\r\nwith Session(engine) as session:\r\n    session.add_all(\r\n        [\r\n            Loan(date=datetime.min, balance=10),\r\n            Loan(date=datetime.min, balance=11),\r\n            Loan(date=datetime.min, balance=12),\r\n            Loan(date=datetime.min, balance=13),\r\n        ]\r\n    )\r\n    session.commit()\r\n\r\ndd.read_sql_query(\r\n    select([Loan.date, Loan.balance]),\r\n    con=\"sqlite:////tmp/so.db\",\r\n    index_col=\"date\",\r\n    npartitions=3,\r\n    engine_kwargs={\"echo\": True},\r\n)\r\n```\r\n\r\n**Anything else we need to know?**:\r\n\r\nThe issue appears to come from this block which calculates the limits before dividing them into partitions:\r\n\r\nhttps://github.com/dask/dask/blob/8b95f983c232c1bd628e9cba0695d3ef229d290b/dask/dataframe/io/sql.py#L130-L137\r\n\r\nWhich essentially runs the following:\r\n\r\n```py\r\npd.read_sql(select([func.min(Loan.date), func.max(Loan.date)]), con=engine.connect())\r\n```\r\n\r\nWhose output is \r\n\r\n```none\r\n                 min_1                max_1\r\n0  0001-01-01 00:00:00  0001-01-01 00:00:00\r\n```\r\n\r\nand dtypes are objects since by default the `parse_dates` kwarg is None and datetimes don't get parsed \r\n\r\n```none\r\nmin_1    object\r\nmax_1    object\r\ndtype: object\r\n```\r\n\r\nWith dtype being `object` then dask falls to \r\n\r\nhttps://github.com/dask/dask/blob/8b95f983c232c1bd628e9cba0695d3ef229d290b/dask/dataframe/io/sql.py#L160-L164\r\n\r\nand raises the exception.\r\n\r\n**Environment**:\r\n\r\n- Dask version: dask-2022.8.0\r\n- Python version: 3.10.5\r\n- Operating System: N/A\r\n- Install method (conda, pip, source): pip",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9383/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9383/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}