{
    "url": "https://api.github.com/repos/dask/dask/issues/11046",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/11046/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/11046/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/11046/events",
    "html_url": "https://github.com/dask/dask/issues/11046",
    "id": 2237856409,
    "node_id": "I_kwDOAbcwm86FYvqZ",
    "number": 11046,
    "title": "ValueError: memoryview is too large (dask.array.histogram)",
    "user": {
        "login": "lsc64",
        "id": 86673488,
        "node_id": "MDQ6VXNlcjg2NjczNDg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/86673488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lsc64",
        "html_url": "https://github.com/lsc64",
        "followers_url": "https://api.github.com/users/lsc64/followers",
        "following_url": "https://api.github.com/users/lsc64/following{/other_user}",
        "gists_url": "https://api.github.com/users/lsc64/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lsc64/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lsc64/subscriptions",
        "organizations_url": "https://api.github.com/users/lsc64/orgs",
        "repos_url": "https://api.github.com/users/lsc64/repos",
        "events_url": "https://api.github.com/users/lsc64/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lsc64/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2024-04-11T14:23:16Z",
    "updated_at": "2024-04-11T16:06:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!-- Please include a self-contained copy-pastable example that generates the issue if possible.\r\n\r\nPlease be concise with code posted. See guidelines below on how to provide a good bug report:\r\n\r\n- Craft Minimal Bug Reports http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports\r\n- Minimal Complete Verifiable Examples https://stackoverflow.com/help/mcve\r\n\r\nBug reports that follow these guidelines are easier to diagnose, and so are often handled much more quickly.\r\n-->\r\n\r\n**Describe the issue**:\r\nI'm trying to compute a histogram over a 12 TB array of pairwise distances and it fails.\r\nReturns either `ValueError: memoryview is too large`\r\n<details>\r\n\r\n``` \r\nhttp://127.0.0.1:8787/status\r\n[/opt/conda/lib/python3.11/site-packages/distributed/client.py:3169](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:3169): UserWarning: Sending large graph of size 12.22 GiB.\r\nThis may cause some slowdown.\r\nConsider scattering data ahead of time and using futures.\r\n  warnings.warn(\r\n2024-04-11 16:18:18,764 - distributed.protocol.core - CRITICAL - Failed to Serialize\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.11/site-packages/distributed/protocol/core.py\", line 109, in dumps\r\n    frames[0] = msgpack.dumps(msg, default=_encode_default, use_bin_type=True)\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/conda/lib/python3.11/site-packages/msgpack/__init__.py\", line 36, in packb\r\n    return Packer(**kwargs).pack(o)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"msgpack/_packer.pyx\", line 294, in msgpack._cmsgpack.Packer.pack\r\n  File \"msgpack/_packer.pyx\", line 300, in msgpack._cmsgpack.Packer.pack\r\n  File \"msgpack/_packer.pyx\", line 297, in msgpack._cmsgpack.Packer.pack\r\n  File \"msgpack/_packer.pyx\", line 264, in msgpack._cmsgpack.Packer._pack\r\n  File \"msgpack/_packer.pyx\", line 231, in msgpack._cmsgpack.Packer._pack\r\n  File \"msgpack/_packer.pyx\", line 264, in msgpack._cmsgpack.Packer._pack\r\n  File \"msgpack/_packer.pyx\", line 272, in msgpack._cmsgpack.Packer._pack\r\nValueError: memoryview is too large\r\n2024-04-11 16:18:18,768 - distributed.comm.utils - ERROR - memoryview is too large\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.11/site-packages/distributed/comm/utils.py\", line 34, in _to_frames\r\n    return list(protocol.dumps(msg, **kwargs))\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/conda/lib/python3.11/site-packages/distributed/protocol/core.py\", line 109, in dumps\r\n    frames[0] = msgpack.dumps(msg, default=_encode_default, use_bin_type=True)\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/conda/lib/python3.11/site-packages/msgpack/__init__.py\", line 36, in packb\r\n    return Packer(**kwargs).pack(o)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"msgpack/_packer.pyx\", line 294, in msgpack._cmsgpack.Packer.pack\r\n  File \"msgpack/_packer.pyx\", line 300, in msgpack._cmsgpack.Packer.pack\r\n  File \"msgpack/_packer.pyx\", line 297, in msgpack._cmsgpack.Packer.pack\r\n  File \"msgpack/_packer.pyx\", line 264, in msgpack._cmsgpack.Packer._pack\r\n  File \"msgpack/_packer.pyx\", line 231, in msgpack._cmsgpack.Packer._pack\r\n  File \"msgpack/_packer.pyx\", line 264, in msgpack._cmsgpack.Packer._pack\r\n  File \"msgpack/_packer.pyx\", line 272, in msgpack._cmsgpack.Packer._pack\r\nValueError: memoryview is too large\r\n2024-04-11 16:18:18,770 - distributed.batched - ERROR - Error in batched write\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.11/site-packages/distributed/batched.py\", line 115, in _background_send\r\n    nbytes = yield coro\r\n             ^^^^^^^^^^\r\n  File \"/opt/conda/lib/python3.11/site-packages/tornado/gen.py\", line 767, in run\r\n    value = future.result()\r\n            ^^^^^^^^^^^^^^^\r\n  File \"/opt/conda/lib/python3.11/site-packages/distributed/comm/tcp.py\", line 264, in write\r\n    frames = await to_frames(\r\n             ^^^^^^^^^^^^^^^^\r\n  File \"/opt/conda/lib/python3.11/site-packages/distributed/comm/utils.py\", line 50, in to_frames\r\n    return _to_frames()\r\n           ^^^^^^^^^^^^\r\n  File \"/opt/conda/lib/python3.11/site-packages/distributed/comm/utils.py\", line 34, in _to_frames\r\n    return list(protocol.dumps(msg, **kwargs))\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/conda/lib/python3.11/site-packages/distributed/protocol/core.py\", line 109, in dumps\r\n    frames[0] = msgpack.dumps(msg, default=_encode_default, use_bin_type=True)\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/conda/lib/python3.11/site-packages/msgpack/__init__.py\", line 36, in packb\r\n    return Packer(**kwargs).pack(o)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"msgpack/_packer.pyx\", line 294, in msgpack._cmsgpack.Packer.pack\r\n  File \"msgpack/_packer.pyx\", line 300, in msgpack._cmsgpack.Packer.pack\r\n  File \"msgpack/_packer.pyx\", line 297, in msgpack._cmsgpack.Packer.pack\r\n  File \"msgpack/_packer.pyx\", line 264, in msgpack._cmsgpack.Packer._pack\r\n  File \"msgpack/_packer.pyx\", line 231, in msgpack._cmsgpack.Packer._pack\r\n  File \"msgpack/_packer.pyx\", line 264, in msgpack._cmsgpack.Packer._pack\r\n  File \"msgpack/_packer.pyx\", line 272, in msgpack._cmsgpack.Packer._pack\r\nValueError: memoryview is too large\r\n---------------------------------------------------------------------------\r\nCancelledError                            Traceback (most recent call last)\r\nCell In[5], [line 4](vscode-notebook-cell:?execution_count=5&line=4)\r\n      [2](vscode-notebook-cell:?execution_count=5&line=2) distances = pairwise_distances(darr, darr.compute(), metric=\"cosine\")\r\n      [3](vscode-notebook-cell:?execution_count=5&line=3) hist, bins = da.histogram(distances, bins=100, range=[0,2])\r\n----> [4](vscode-notebook-cell:?execution_count=5&line=4) hist.compute()\r\n\r\nFile [/opt/conda/lib/python3.11/site-packages/dask/base.py:375](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:375), in DaskMethodsMixin.compute(self, **kwargs)\r\n    [351](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:351) def compute(self, **kwargs):\r\n    [352](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:352)     \"\"\"Compute this dask collection\r\n    [353](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:353) \r\n    [354](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:354)     This turns a lazy Dask collection into its in-memory equivalent.\r\n   (...)\r\n    [373](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:373)     dask.compute\r\n    [374](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:374)     \"\"\"\r\n--> [375](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:375)     (result,) = compute(self, traverse=False, **kwargs)\r\n    [376](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:376)     return result\r\n\r\nFile [/opt/conda/lib/python3.11/site-packages/dask/base.py:661](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:661), in compute(traverse, optimize_graph, scheduler, get, *args, **kwargs)\r\n    [658](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:658)     postcomputes.append(x.__dask_postcompute__())\r\n    [660](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:660) with shorten_traceback():\r\n--> [661](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:661)     results = schedule(dsk, keys, **kwargs)\r\n    [663](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:663) return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n\r\nFile [/opt/conda/lib/python3.11/site-packages/distributed/client.py:2245](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:2245), in Client._gather(self, futures, errors, direct, local_worker)\r\n   [2243](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:2243)     else:\r\n   [2244](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:2244)         raise exception.with_traceback(traceback)\r\n-> [2245](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:2245)     raise exc\r\n   [2246](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:2246) if errors == \"skip\":\r\n   [2247](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:2247)     bad_keys.add(key)\r\n\r\nCancelledError: ('sum-aggregate-147f6c70731d6bcc47a228e1974422e8', 0)\r\n```\r\n\r\n</details>\r\n\r\nor just cancels\r\n\r\n<details>\r\n\r\n``` \r\n\r\n[/opt/conda/lib/python3.11/site-packages/distributed/client.py:3169](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:3169): UserWarning: Sending large graph of size 12.22 GiB.\r\nThis may cause some slowdown.\r\nConsider scattering data ahead of time and using futures.\r\n  warnings.warn(\r\n---------------------------------------------------------------------------\r\nCancelledError                            Traceback (most recent call last)\r\nCell In[18], [line 4](vscode-notebook-cell:?execution_count=18&line=4)\r\n      [2](vscode-notebook-cell:?execution_count=18&line=2) distances = pairwise_distances(darr, darr.compute(), metric=\"cosine\")\r\n      [3](vscode-notebook-cell:?execution_count=18&line=3) hist, bins = da.histogram(distances, bins=100, range=[0,2])\r\n----> [4](vscode-notebook-cell:?execution_count=18&line=4) hist.compute()\r\n\r\nFile [/opt/conda/lib/python3.11/site-packages/dask/base.py:375](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:375), in DaskMethodsMixin.compute(self, **kwargs)\r\n    [351](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:351) def compute(self, **kwargs):\r\n    [352](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:352)     \"\"\"Compute this dask collection\r\n    [353](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:353) \r\n    [354](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:354)     This turns a lazy Dask collection into its in-memory equivalent.\r\n   (...)\r\n    [373](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:373)     dask.compute\r\n    [374](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:374)     \"\"\"\r\n--> [375](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:375)     (result,) = compute(self, traverse=False, **kwargs)\r\n    [376](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:376)     return result\r\n\r\nFile [/opt/conda/lib/python3.11/site-packages/dask/base.py:661](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:661), in compute(traverse, optimize_graph, scheduler, get, *args, **kwargs)\r\n    [658](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:658)     postcomputes.append(x.__dask_postcompute__())\r\n    [660](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:660) with shorten_traceback():\r\n--> [661](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:661)     results = schedule(dsk, keys, **kwargs)\r\n    [663](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/dask/base.py:663) return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n\r\nFile [/opt/conda/lib/python3.11/site-packages/distributed/client.py:2245](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:2245), in Client._gather(self, futures, errors, direct, local_worker)\r\n   [2243](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:2243)     else:\r\n   [2244](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:2244)         raise exception.with_traceback(traceback)\r\n-> [2245](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:2245)     raise exc\r\n   [2246](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:2246) if errors == \"skip\":\r\n   [2247](https://vscode-remote+attached-002dcontainer-002b7b22636f6e7461696e65724e616d65223a222f6a7570797465722d6a7570797465722d31222c2273657474696e6773223a7b22686f7374223a22756e69783a2f2f2f72756e2f757365722f3732373630363637382f646f636b65722e736f636b227d7d-0040ssh-002dremote-002bdgx2.vscode-resource.vscode-cdn.net/opt/conda/lib/python3.11/site-packages/distributed/client.py:2247)     bad_keys.add(key)\r\n\r\nCancelledError: ('sum-aggregate-3a00e4279a13a440e2503725c63a585b', 0)\r\n\r\n```\r\n</details>\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport dask.array as da\r\nfrom dask_ml.metrics import pairwise_distances\r\ndarr = da.random.normal(size=(1281167, 1280))\r\ndistances = pairwise_distances(darr, darr.compute(), metric=\"cosine\")\r\nhist, bins = da.histogram(distances, bins=100, range=[0,2])\r\nhist.compute() # error\r\n```\r\n\r\n**Anything else we need to know?**:\r\nJust computing the histogram of such a large matrix works\r\n```python\r\ndarr = da.random.normal(size=(1281167, 1281167))\r\nhist, bins = da.histogram(darr, bins=100, range=[0,2])\r\nhist.compute() # works\r\n```\r\n\r\n**Environment**:\r\n\r\n- Dask version: 2024.2.1\r\n- Python version: 3.11\r\n- Operating System: Ubuntu 22.04 (in Docker)\r\n- Install method (conda, pip, source): pip\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/11046/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/11046/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}