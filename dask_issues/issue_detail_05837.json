{
    "url": "https://api.github.com/repos/dask/dask/issues/5837",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/5837/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/5837/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/5837/events",
    "html_url": "https://github.com/dask/dask/issues/5837",
    "id": 556471657,
    "node_id": "MDU6SXNzdWU1NTY0NzE2NTc=",
    "number": 5837,
    "title": "Individual aggregations work, multiple fail",
    "user": {
        "login": "joshua-gould",
        "id": 5237151,
        "node_id": "MDQ6VXNlcjUyMzcxNTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5237151?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joshua-gould",
        "html_url": "https://github.com/joshua-gould",
        "followers_url": "https://api.github.com/users/joshua-gould/followers",
        "following_url": "https://api.github.com/users/joshua-gould/following{/other_user}",
        "gists_url": "https://api.github.com/users/joshua-gould/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/joshua-gould/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/joshua-gould/subscriptions",
        "organizations_url": "https://api.github.com/users/joshua-gould/orgs",
        "repos_url": "https://api.github.com/users/joshua-gould/repos",
        "events_url": "https://api.github.com/users/joshua-gould/events{/privacy}",
        "received_events_url": "https://api.github.com/users/joshua-gould/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-01-28T21:12:54Z",
    "updated_at": "2020-05-01T17:28:47Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I have a custom aggregation that computes the mode for a categorical column. The aggregation works fine when applied individually, but fails with the message metadata inference failed when combined with aggregating by the min for another column.\r\n```\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\nimport scipy.sparse\r\n\r\ntest_df = pd.DataFrame(scipy.sparse.eye(10).toarray())\r\ntest_df['x'] =  ['a', 'b', 'a', 'c', 'b', 'a', 'a', 'b', 'e', 'x']\r\ntest_df['x'] = test_df['x'].astype('category')\r\ntest_dd = dd.from_pandas(test_df, 2)\r\n\r\n\r\ndef mode_chunk(x):\r\n    return x.value_counts(sort=False)\r\n\r\n\r\ndef mode_agg(x):\r\n    return x.apply(lambda s: s.groupby(level=-1).sum())\r\n\r\n\r\ndef mode_finalize(x):\r\n    # return x.groupby(level=level).apply(lambda s: s.reset_index(level=level, drop=True).idxmax())\r\n    return x.groupby(level=0).agg(lambda s: s.nlargest(1).index[0][1])\r\n\r\n\r\ndask_agg_mode = dd.Aggregation(\r\n    name='dd_mode',\r\n    chunk=mode_chunk,\r\n    agg=mode_agg,\r\n    finalize=mode_finalize\r\n)\r\ntest_dd.groupby(0).agg({'x': dask_agg_mode}).compute()  # works\r\ntest_dd.groupby(0).agg({1: 'min'}).compute()  # works\r\ntest_dd.groupby(0).agg({'x': dask_agg_mode, 1: 'min'}).compute()  # fails\r\n\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/5837/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/5837/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}