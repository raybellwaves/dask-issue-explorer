[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1570154660",
        "html_url": "https://github.com/dask/dask/issues/10325#issuecomment-1570154660",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10325",
        "id": 1570154660,
        "node_id": "IC_kwDOAbcwm85dlqik",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-31T12:36:00Z",
        "updated_at": "2023-05-31T12:36:00Z",
        "author_association": "MEMBER",
        "body": "I'm definitely in favor of removing low level task fusion long-term.  \ud83d\udc4d\r\n\r\nHowever, today I suspect that it's necessary for array slicing.  There are many array slicing optimizations that only work when stacked slicing operations are fused into the same tasks.  Historically this has been particularly important for dask.array / xarray / geospatial workloads.  \r\n\r\nMy *hope* is that we eventually have much better high level optimizations around array slicing.  After that occurs I don't know of any other common workflow that benefits strongly from low-level task fusion, especially given the task queuing work from late last year.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1570154660/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1570225456",
        "html_url": "https://github.com/dask/dask/issues/10325#issuecomment-1570225456",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10325",
        "id": 1570225456,
        "node_id": "IC_kwDOAbcwm85dl70w",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-31T13:21:14Z",
        "updated_at": "2023-05-31T13:21:14Z",
        "author_association": "MEMBER",
        "body": "Layer fusion should not require materializing and can be done in linear time\r\n\r\n> Here is the linear blockwise layer fuser, for those interested: https://github.com/dask-contrib/dask-awkward/blob/main/src/dask_awkward/lib/optimize.py#L216\r\n\r\nHaving done that, or the slower dask/dask layer fusion, on a graph that is (mostly) layered/blockwise, I would agree that task fusions probably has diminishing returns.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1570225456/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1570499794",
        "html_url": "https://github.com/dask/dask/issues/10325#issuecomment-1570499794",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10325",
        "id": 1570499794,
        "node_id": "IC_kwDOAbcwm85dm-zS",
        "user": {
            "login": "crusaderky",
            "id": 6213168,
            "node_id": "MDQ6VXNlcjYyMTMxNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6213168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crusaderky",
            "html_url": "https://github.com/crusaderky",
            "followers_url": "https://api.github.com/users/crusaderky/followers",
            "following_url": "https://api.github.com/users/crusaderky/following{/other_user}",
            "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions",
            "organizations_url": "https://api.github.com/users/crusaderky/orgs",
            "repos_url": "https://api.github.com/users/crusaderky/repos",
            "events_url": "https://api.github.com/users/crusaderky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crusaderky/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-31T15:55:25Z",
        "updated_at": "2023-05-31T15:55:32Z",
        "author_association": "MEMBER",
        "body": "> However, today I suspect that it's necessary for array slicing. There are many array slicing optimizations that only work when stacked slicing operations are fused into the same tasks. Historically this has been particularly important for dask.array / xarray / geospatial workloads.\r\n\r\nSounds like we might be missing the use case in coiled/benchmarks?\r\nDo you have an example?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1570499794/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]