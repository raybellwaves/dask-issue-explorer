{
    "url": "https://api.github.com/repos/dask/dask/issues/6380",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/6380/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/6380/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/6380/events",
    "html_url": "https://github.com/dask/dask/issues/6380",
    "id": 653673583,
    "node_id": "MDU6SXNzdWU2NTM2NzM1ODM=",
    "number": 6380,
    "title": "First class Future object",
    "user": {
        "login": "jakirkham",
        "id": 3019665,
        "node_id": "MDQ6VXNlcjMwMTk2NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jakirkham",
        "html_url": "https://github.com/jakirkham",
        "followers_url": "https://api.github.com/users/jakirkham/followers",
        "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
        "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
        "organizations_url": "https://api.github.com/users/jakirkham/orgs",
        "repos_url": "https://api.github.com/users/jakirkham/repos",
        "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jakirkham/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 1342304743,
            "node_id": "MDU6TGFiZWwxMzQyMzA0NzQz",
            "url": "https://api.github.com/repos/dask/dask/labels/core",
            "name": "core",
            "color": "000000",
            "default": false,
            "description": ""
        },
        {
            "id": 1372867996,
            "node_id": "MDU6TGFiZWwxMzcyODY3OTk2",
            "url": "https://api.github.com/repos/dask/dask/labels/discussion",
            "name": "discussion",
            "color": "bebaf4",
            "default": false,
            "description": "Discussing a topic with no specific actions yet"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-07-09T00:18:32Z",
    "updated_at": "2021-10-13T06:40:12Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Currently with Distributed we have [`Future`s]( https://distributed.dask.org/en/latest/api.html#future ) in that context. However there doesn't exist a first class `Future` object within Dask itself. It would be useful to have a first class `Future` object within Dask. This would enable a wider set of algorithms and provided some needed flexibility for various problems people run into today.\r\n\r\nFirst having a `Future` object would be useful in cases where we want to submit some work to start and then construct later operations with the knowledge that these results will soon become available (one example might be writing these to disk). Second this can be a useful way to prioritize elements of a workflow where we know what we want to prioritize (like working with large chunks of memory first). Third can help in cases where we want to interleave work between subtasks (recentering, normalizing, binning, etc.). Fourth this can be useful when the results of tasks are needed to more informatively generate new work (working with unknown chunks, selection based on data values, etc.). Fifth this can be a useful way of cutting down on large task graph handling issues (this is something other distributed libraries use https://github.com/dask/dask/issues/3514#issuecomment-390502785 ). Sixth use cases that involve some form of iteration where the intermediate result needs to be checked to see if the task is done. There may be more ways this functionality could be used, but hopefully this provides some ideas on where/how it might help.\r\n\r\nAdditionally have gone through the issue tracker and identified issues/cases where this would either solve or help solve the underlying problem. This is not necessarily comprehensive. Also some issues may require more work on top of this. However in all cases this seems to provide a meaningful base to build on. Here's the list:\r\n\r\n* https://github.com/dask/dask/issues/874\r\n* https://github.com/dask/dask/issues/1519\r\n* https://github.com/dask/dask/issues/2156 (at least practically)\r\n* https://github.com/dask/dask/issues/3074 (useful for)\r\n* https://github.com/dask/dask/issues/3255 (useful for)\r\n* https://github.com/dask/dask/issues/3514\r\n* https://github.com/dask/dask/issues/3587#issuecomment-396729211\r\n* https://github.com/dask/dask/issues/3595#issuecomment-396971956\r\n* https://github.com/dask/dask/issues/4156 (useful for)\r\n* https://github.com/dask/dask/issues/4149 (useful for)\r\n* https://github.com/dask/dask/issues/4544\r\n\r\nNote this likely (though happy to be proven wrong) depends on moving to `concurrent.futures` as documented in issue ( https://github.com/dask/dask/issues/6220 ). May also need `secede` from PR ( https://github.com/dask/distributed/pull/471 ) and `rejoin` from PR ( https://github.com/dask/distributed/pull/1462 ).",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/6380/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/6380/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}