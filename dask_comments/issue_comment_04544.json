[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/488023186",
        "html_url": "https://github.com/dask/dask/issues/4544#issuecomment-488023186",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4544",
        "id": 488023186,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODAyMzE4Ng==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-30T16:34:12Z",
        "updated_at": "2019-04-30T16:34:12Z",
        "author_association": "MEMBER",
        "body": "I agree that this will be ideal.  This will also force all of the data to be in memory at once (need to compute min/max before we can compute any histogram).  Given that, do we still want this behavior, or should we inform the user about the limitation and let them make their own choice?\r\n\r\nIn practice, my guess is that some other algorithm like approximate quantiles is likely to be more useful for users.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/488023186/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/488068668",
        "html_url": "https://github.com/dask/dask/issues/4544#issuecomment-488068668",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4544",
        "id": 488068668,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODA2ODY2OA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-30T18:44:19Z",
        "updated_at": "2019-04-30T18:44:19Z",
        "author_association": "MEMBER",
        "body": "Let's ask @GenevieveBuckley and @jni if they have thoughts \ud83d\ude42",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/488068668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/488216255",
        "html_url": "https://github.com/dask/dask/issues/4544#issuecomment-488216255",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4544",
        "id": 488216255,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODIxNjI1NQ==",
        "user": {
            "login": "GenevieveBuckley",
            "id": 30920819,
            "node_id": "MDQ6VXNlcjMwOTIwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenevieveBuckley",
            "html_url": "https://github.com/GenevieveBuckley",
            "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
            "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
            "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
            "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
            "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-01T05:54:56Z",
        "updated_at": "2019-05-01T05:54:56Z",
        "author_association": "MEMBER",
        "body": "I agree that if `range` is left unspecified then dask should just work something sensible out, and that would be as close as possible to the behaviour of `np.histogram()`.\r\n\r\nWe could have the default be calculating the min/max and warn the user about the extra computation.\r\n\r\nThe fallback option the warning could suggest might be using a min & max based on the dtype of the input array. Again, the user should not have to fiddle around with it, but something like the way scikit-image [does exactly this](https://github.com/scikit-image/scikit-image/blob/master/skimage/exposure/exposure.py) is reasonably user friendly. The drawback is that you can get back histograms that are half zero if the dtype is signed but the actual data is not.\r\n\r\nI do *not* like the idea of making three passes over the data in the worst case scenario (one for min, one for max, one for the actual histogram). It seems like it should certainly be possible to simultaneously compute the min AND max in a single pass over the data. Does this already exist somewhere in dask?\r\n\r\n@mrocklin maybe I misunderstand your comment about approximate quantiles. In my opinion, that would be a very useful function for have for arrays but I see that as fulfilling a different need than a histogram function. For me:\r\nhistogram = used most often for finding thresholds for segmenting objects within an image (generally needs more detail than quartile buckets, 256 bins is common)\r\napproximate quartiles = aggregation of statistics after the bulk of my analysis",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/488216255/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/488217282",
        "html_url": "https://github.com/dask/dask/issues/4544#issuecomment-488217282",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4544",
        "id": 488217282,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODIxNzI4Mg==",
        "user": {
            "login": "jni",
            "id": 492549,
            "node_id": "MDQ6VXNlcjQ5MjU0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/492549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jni",
            "html_url": "https://github.com/jni",
            "followers_url": "https://api.github.com/users/jni/followers",
            "following_url": "https://api.github.com/users/jni/following{/other_user}",
            "gists_url": "https://api.github.com/users/jni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jni/subscriptions",
            "organizations_url": "https://api.github.com/users/jni/orgs",
            "repos_url": "https://api.github.com/users/jni/repos",
            "events_url": "https://api.github.com/users/jni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jni/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-01T06:04:55Z",
        "updated_at": "2019-05-01T06:04:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "@GenevieveBuckley \r\n\r\n> It seems like it should certainly be possible to simultaneously compute the min AND max in a single pass over the data. Does this already exist somewhere in dask?\r\n\r\nI had a nice chuckle reading this because @jakirkham ranted to me about this issue just last month. =D\r\n\r\nhttps://github.com/numpy/numpy/issues/9836\r\n\r\n> maybe I misunderstand your comment about approximate quantiles\r\n\r\nI think you did. =) Firstly, quantiles and quartiles are different things. Secondly, the idea is that the distribution of the data should not change if you randomly subsample the data unless you are really unlucky. Therefore, to compute decent histogram bins (or even a decent histogram!) you only need to read, say, 10,000 points from your array (rather than all 100TB or whatever).\r\n\r\nUnless *I'm* misunderstanding. =P",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/488217282/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/488220339",
        "html_url": "https://github.com/dask/dask/issues/4544#issuecomment-488220339",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4544",
        "id": 488220339,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODIyMDMzOQ==",
        "user": {
            "login": "GenevieveBuckley",
            "id": 30920819,
            "node_id": "MDQ6VXNlcjMwOTIwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenevieveBuckley",
            "html_url": "https://github.com/GenevieveBuckley",
            "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
            "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
            "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
            "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
            "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-01T06:36:16Z",
        "updated_at": "2019-05-01T06:36:16Z",
        "author_association": "MEMBER",
        "body": "Ah, thank you for clarifying @jni. So, more along the lines of this?\r\n\r\nManku, *et al.* 1998 ['Approximate Medians and other Quantiles in One Pass and with Limited Memory'](https://dl.acm.org/citation.cfm?id=276342)\r\n(PDF download [here](http://www.cs.umd.edu/~samir/498/manku.pdf))\r\n\r\nChen, *et al.* 2018 ['Quantile Regression Under Memory Constraint'](https://arxiv.org/abs/1810.08264)\r\n(PDF download [here](https://arxiv.org/pdf/1810.08264.pdf))\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/488220339/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/850221724",
        "html_url": "https://github.com/dask/dask/issues/4544#issuecomment-850221724",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4544",
        "id": 850221724,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDIyMTcyNA==",
        "user": {
            "login": "GenevieveBuckley",
            "id": 30920819,
            "node_id": "MDQ6VXNlcjMwOTIwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/30920819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GenevieveBuckley",
            "html_url": "https://github.com/GenevieveBuckley",
            "followers_url": "https://api.github.com/users/GenevieveBuckley/followers",
            "following_url": "https://api.github.com/users/GenevieveBuckley/following{/other_user}",
            "gists_url": "https://api.github.com/users/GenevieveBuckley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GenevieveBuckley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GenevieveBuckley/subscriptions",
            "organizations_url": "https://api.github.com/users/GenevieveBuckley/orgs",
            "repos_url": "https://api.github.com/users/GenevieveBuckley/repos",
            "events_url": "https://api.github.com/users/GenevieveBuckley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GenevieveBuckley/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-05-28T07:45:51Z",
        "updated_at": "2021-05-28T07:45:51Z",
        "author_association": "MEMBER",
        "body": "This issue is causing some failing tests when CellProfiler experiments with using Dask arrays (for a specific example, see `TestAlign` failing in [cellprofiler/core](https://github.com/cellprofiler/core) on the `daskv2` branch).\r\n\r\ncc @bethac07 (you might like to follow this tracking issue) ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/850221724/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]