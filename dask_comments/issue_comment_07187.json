[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/812283441",
        "html_url": "https://github.com/dask/dask/issues/7187#issuecomment-812283441",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7187",
        "id": 812283441,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjI4MzQ0MQ==",
        "user": {
            "login": "gjoseph92",
            "id": 3309802,
            "node_id": "MDQ6VXNlcjMzMDk4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjoseph92",
            "html_url": "https://github.com/gjoseph92",
            "followers_url": "https://api.github.com/users/gjoseph92/followers",
            "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
            "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
            "repos_url": "https://api.github.com/users/gjoseph92/repos",
            "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-02T02:33:26Z",
        "updated_at": "2021-04-02T02:33:26Z",
        "author_association": "MEMBER",
        "body": "I had hoped that #7508 would resolve this, since it turns out we did have a codepath to write chunk-by-chunk into a single output array, we just were never taking it. However, after applying that fix, both the runtime and peak memory usage of your reproducer don't change.\r\n\r\nI think you were saying this already, but to be clear, the issue isn't specifically `np.concatenate`. It's more that with `compute`, we have to wait to accumulate every chunk into memory before copying them all to the contiguous memory of the output array. Whereas with `store`, we get to release each block as it's computed, keeping peak memory lower. Setting `dask.config.set(scheduler=\"synchronous\")` is a good way to illustrate this, because the peak memory usage of `store` drops to about the size of the output array, whereas it doesn't change for `compute`.\r\n\r\nIn terms of runtime, I think `store` is faster just because 1) it gets to do the writes in parallel and 2) it gets to interleave writes and computes, instead of waiting for all computes to finish before starting writes. Solving 2) is harder, but we might get a speedup on 1) by just moving the array-copies in `concatenate3` to a threadpool.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/812283441/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1318008701",
        "html_url": "https://github.com/dask/dask/issues/7187#issuecomment-1318008701",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7187",
        "id": 1318008701,
        "node_id": "IC_kwDOAbcwm85Ojzd9",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-17T03:23:53Z",
        "updated_at": "2022-11-17T03:23:53Z",
        "author_association": "MEMBER",
        "body": "FWIW naively tried doing `compute(b.rechunk((-1,)))`, which interestingly seems to have the same runtime as `compute`.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1318008701/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]