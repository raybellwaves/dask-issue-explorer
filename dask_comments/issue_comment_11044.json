[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2049413664",
        "html_url": "https://github.com/dask/dask/issues/11044#issuecomment-2049413664",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11044",
        "id": 2049413664,
        "node_id": "IC_kwDOAbcwm856J5Ig",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-11T10:45:05Z",
        "updated_at": "2024-04-11T10:45:05Z",
        "author_association": "MEMBER",
        "body": "Thanks for your bug report. Without a reproducer, we'll likely have a hard time helping out.\r\n\r\nI noticed that the Traceback you are posting is incomplete. Can you please verify if there is something missing? Maybe this points to the problem. Particularly the `and triggers TypeError: __init__() missing 1 required positional argument: 'e_tag'` part at the very end looks like there is something missing.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2049413664/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2049424999",
        "html_url": "https://github.com/dask/dask/issues/11044#issuecomment-2049424999",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11044",
        "id": 2049424999,
        "node_id": "IC_kwDOAbcwm856J75n",
        "user": {
            "login": "PietroSpalluto",
            "id": 70751487,
            "node_id": "MDQ6VXNlcjcwNzUxNDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/70751487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PietroSpalluto",
            "html_url": "https://github.com/PietroSpalluto",
            "followers_url": "https://api.github.com/users/PietroSpalluto/followers",
            "following_url": "https://api.github.com/users/PietroSpalluto/following{/other_user}",
            "gists_url": "https://api.github.com/users/PietroSpalluto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PietroSpalluto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PietroSpalluto/subscriptions",
            "organizations_url": "https://api.github.com/users/PietroSpalluto/orgs",
            "repos_url": "https://api.github.com/users/PietroSpalluto/repos",
            "events_url": "https://api.github.com/users/PietroSpalluto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PietroSpalluto/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-11T10:52:59Z",
        "updated_at": "2024-04-11T10:52:59Z",
        "author_association": "NONE",
        "body": "Yes, I know it is difficult without a working example to reproduce this error, this is also my main problem when trying to fix it. I posted the complete traceback at the end and I only modified sensitive information such as the filename. The TypeError is the last exception called and it terminates  exactly like this `TypeError: __init__() missing 1 required positional argument: 'e_tag'`. I can try to give you more info if needed.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2049424999/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2051088046",
        "html_url": "https://github.com/dask/dask/issues/11044#issuecomment-2051088046",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11044",
        "id": 2051088046,
        "node_id": "IC_kwDOAbcwm856QR6u",
        "user": {
            "login": "PietroSpalluto",
            "id": 70751487,
            "node_id": "MDQ6VXNlcjcwNzUxNDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/70751487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PietroSpalluto",
            "html_url": "https://github.com/PietroSpalluto",
            "followers_url": "https://api.github.com/users/PietroSpalluto/followers",
            "following_url": "https://api.github.com/users/PietroSpalluto/following{/other_user}",
            "gists_url": "https://api.github.com/users/PietroSpalluto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PietroSpalluto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PietroSpalluto/subscriptions",
            "organizations_url": "https://api.github.com/users/PietroSpalluto/orgs",
            "repos_url": "https://api.github.com/users/PietroSpalluto/repos",
            "events_url": "https://api.github.com/users/PietroSpalluto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PietroSpalluto/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-12T06:39:10Z",
        "updated_at": "2024-04-12T06:49:27Z",
        "author_association": "NONE",
        "body": "I was able to reproduce the error using the following script\r\n```\r\ndef load_file(bucket, path, filename, minio_endpoint, key, secret):\r\n    print(f'Reading {filename}...')\r\n    df = dd.read_parquet('s3://{}/{}/{}'.format(bucket, path, hash_name(filename)),\r\n                         storage_options={\r\n                             \"key\": key,\r\n                             \"secret\": secret,\r\n                             \"client_kwargs\": {'endpoint_url': 'http://{}'.format(minio_endpoint)}\r\n                         },\r\n                         ignore_metadata_file=True)\r\n\r\n    return df\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    bucket = bucket name\r\n    path = path\r\n    files = list of filenames\r\n\r\n    cluster = LocalCluster(silence_logs=logging.CRITICAL)\r\n    dask_client = Client(cluster)\r\n    minio_client = Minio(minio endpoint, key, secret, secure=False)\r\n\r\n    minio_endpoint = minio_client._base_url.host\r\n    key = minio_client._provider._credentials.access_key\r\n    secret = minio_client._provider._credentials.secret_key\r\n\r\n    while True:\r\n        futures = []\r\n        for filename in files:\r\n            future = dask_client.submit(load_file,\r\n                                        bucket,\r\n                                        path,\r\n                                        filename,\r\n                                        minio_endpoint,\r\n                                        key,\r\n                                        secret)\r\n            futures.append(future)\r\n\r\n        for filename, future in zip(files, futures):\r\n            df = future.result()\r\n\r\n        dask_client.cancel(futures)\r\n\r\n        print('Sleeping...')\r\n        time.sleep(3)\r\n```\r\nand after about a hour the exception was triggered. I was able also to retrieve the complete traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\s3fs\\core.py\", line 113, in _error_wrapper\r\n    return await func(*args, **kwargs)\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\aiobotocore\\client.py\", line 408, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (PreconditionFailed) when calling the GetObject operation: At least one of the pre-conditions you specified did not hold\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\s3fs\\core.py\", line 2300, in _fetch_range\r\n    return _fetch_range(\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\s3fs\\core.py\", line 2462, in _fetch_range\r\n    return sync(fs.loop, _inner_fetch, fs, bucket, key, version_id, start, end, req_kw)\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\fsspec\\asyn.py\", line 103, in sync\r\n    raise return_result\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\fsspec\\asyn.py\", line 56, in _runner\r\n    result[0] = await coro\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\s3fs\\core.py\", line 2480, in _inner_fetch\r\n    return await _error_wrapper(_call_and_read, retries=fs.retries)\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\s3fs\\core.py\", line 142, in _error_wrapper\r\n    raise err\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\s3fs\\core.py\", line 113, in _error_wrapper\r\n    return await func(*args, **kwargs)\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\s3fs\\core.py\", line 2467, in _call_and_read\r\n    resp = await fs._call_s3(\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\s3fs\\core.py\", line 362, in _call_s3\r\n    return await _error_wrapper(\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\s3fs\\core.py\", line 142, in _error_wrapper\r\n    raise err\r\nOSError: [Errno 22] At least one of the pre-conditions you specified did not hold\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\dask\\backends.py\", line 141, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\dask\\dataframe\\io\\parquet\\core.py\", line 529, in read_parquet\r\n    read_metadata_result = engine.read_metadata(\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\dask\\dataframe\\io\\parquet\\arrow.py\", line 546, in read_metadata\r\n    dataset_info = cls._collect_dataset_info(\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\dask\\dataframe\\io\\parquet\\arrow.py\", line 1061, in _collect_dataset_info\r\n    ds = pa_ds.dataset(\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\pyarrow\\dataset.py\", line 785, in dataset\r\n    return _filesystem_dataset(source, **kwargs)\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\pyarrow\\dataset.py\", line 475, in _filesystem_dataset\r\n    return factory.finish(schema)\r\n  File \"pyarrow\\_dataset.pyx\", line 3025, in pyarrow._dataset.DatasetFactory.finish\r\n  File \"pyarrow\\error.pxi\", line 154, in pyarrow.lib.pyarrow_internal_check_status\r\n  File \"pyarrow\\error.pxi\", line 88, in pyarrow.lib.check_status\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\fsspec\\spec.py\", line 1846, in read\r\n    out = self.cache._fetch(self.loc, self.loc + length)\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\fsspec\\caching.py\", line 189, in _fetch\r\n    self.cache = self.fetcher(start, end)  # new block replaces old\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\s3fs\\core.py\", line 2312, in _fetch_range\r\n    raise FileExpired(\r\ns3fs.utils.FileExpired: [Errno 16] The remote file corresponding to filename 16 and Etag The remote file corresponding to filename \"filename\" and Etag \"981e2d1ced3426d4dda10e9e81da6647\" no longer exists. no longer exists.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\dask_test\\example_etag.py\", line 54, in <module>\r\n    df = future.result()\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\distributed\\client.py\", line 323, in result\r\n    return self.client.sync(self._result, callback_timeout=timeout)\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\dask_test\\example_etag.py\", line 14, in load_file\r\n    df = dd.read_parquet('s3://{}/{}/{}'.format(bucket, path, hash_name(filename)),\r\n  File \"C:\\Users\\Pietro\\PycharmProjects\\hijacking_detection\\venv\\lib\\site-packages\\dask\\backends.py\", line 143, in wrapper\r\n    raise type(e)(\r\nTypeError: __init__() missing 1 required positional argument: 'e_tag'\r\n\r\nProcess finished with exit code 1\r\n```\r\nFor this example I used Windows. If there is there any other information that can be useful let me now.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2051088046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2051129422",
        "html_url": "https://github.com/dask/dask/issues/11044#issuecomment-2051129422",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11044",
        "id": 2051129422,
        "node_id": "IC_kwDOAbcwm856QcBO",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-12T07:03:28Z",
        "updated_at": "2024-04-12T07:03:28Z",
        "author_association": "MEMBER",
        "body": "@martindurant are you familiar with this kind of error?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2051129422/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2051874527",
        "html_url": "https://github.com/dask/dask/issues/11044#issuecomment-2051874527",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11044",
        "id": 2051874527,
        "node_id": "IC_kwDOAbcwm856TR7f",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-12T14:31:02Z",
        "updated_at": "2024-04-12T14:31:02Z",
        "author_association": "MEMBER",
        "body": "This means that the entry for the file contained in the directory listings and help in the file-like instance no longer matches the remote store, because the file has been overwritten. This is intentional, an open file should become invalid if it changed while reading. \r\n\r\nI'm not sure of any specifics of minio, but since this appears to be a time related effect, you may wish to add `listings_expiry_time=...` to your storage options (value in seconds). It might have something to do with files being migrated between storage classes on some bucket lifecycle policy.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2051874527/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2063249526",
        "html_url": "https://github.com/dask/dask/issues/11044#issuecomment-2063249526",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/11044",
        "id": 2063249526,
        "node_id": "IC_kwDOAbcwm856-rB2",
        "user": {
            "login": "PietroSpalluto",
            "id": 70751487,
            "node_id": "MDQ6VXNlcjcwNzUxNDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/70751487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PietroSpalluto",
            "html_url": "https://github.com/PietroSpalluto",
            "followers_url": "https://api.github.com/users/PietroSpalluto/followers",
            "following_url": "https://api.github.com/users/PietroSpalluto/following{/other_user}",
            "gists_url": "https://api.github.com/users/PietroSpalluto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PietroSpalluto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PietroSpalluto/subscriptions",
            "organizations_url": "https://api.github.com/users/PietroSpalluto/orgs",
            "repos_url": "https://api.github.com/users/PietroSpalluto/repos",
            "events_url": "https://api.github.com/users/PietroSpalluto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PietroSpalluto/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-18T07:53:50Z",
        "updated_at": "2024-04-18T07:53:50Z",
        "author_association": "NONE",
        "body": "Thank you for you answer and sorry for the delay.\r\n\r\nI cannot understand why this happens only sometimes. Files are overwritten every 15 minutes but not all of them raise this exception. I will try with `listings_expiry_time` in storage options when reading my files. For now I solved by saving the updated files in a different folder each time to avoid overwriting them.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2063249526/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]