{
    "url": "https://api.github.com/repos/dask/dask/issues/8308",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/8308/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/8308/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/8308/events",
    "html_url": "https://github.com/dask/dask/issues/8308",
    "id": 1037844218,
    "node_id": "I_kwDOAbcwm8493D76",
    "number": 8308,
    "title": "`map_partitions` only aligns arguments in `*args`; `**kwargs` are concatenated first",
    "user": {
        "login": "gjoseph92",
        "id": 3309802,
        "node_id": "MDQ6VXNlcjMzMDk4MDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gjoseph92",
        "html_url": "https://github.com/gjoseph92",
        "followers_url": "https://api.github.com/users/gjoseph92/followers",
        "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
        "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
        "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
        "repos_url": "https://api.github.com/users/gjoseph92/repos",
        "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 386719598,
            "node_id": "MDU6TGFiZWwzODY3MTk1OTg=",
            "url": "https://api.github.com/repos/dask/dask/labels/documentation",
            "name": "documentation",
            "color": "f9d0c4",
            "default": true,
            "description": "Improve or add to documentation"
        },
        {
            "id": 996497175,
            "node_id": "MDU6TGFiZWw5OTY0OTcxNzU=",
            "url": "https://api.github.com/repos/dask/dask/labels/good%20second%20issue",
            "name": "good second issue",
            "color": "5319e7",
            "default": false,
            "description": "Clearly described, educational, but less trivial than \"good first issue\"."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-10-27T20:41:34Z",
    "updated_at": "2022-06-24T14:35:46Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "When passing an auxiliary dask DataFrame to `map_partitions`, its chunks are aligned to the main DataFrame and the function receives one chunk of each per task. If you give the same input as a kwarg, the function receives the entire DataFrame concatenated into one.\r\n\r\nIt's somewhat unclear from the docstring if this is expected behavior:\r\n```\r\n        Arguments and keywords to pass to the function.  At least one of the\r\n        args should be a Dask.dataframe. Arguments and keywords may contain\r\n        ``Scalar``, ``Delayed`` or regular python objects. DataFrame-like args\r\n        (both dask and pandas) will be repartitioned to align (if necessary)\r\n        before applying the function.\r\n```\r\n\r\nbut either way it's a bit unintuitive that using a positional vs a kwarg would change behavior like this.\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport dask\r\ndf = dask.datasets.timeseries()\r\ndf2 = dask.datasets.timeseries()\r\n\r\ndef x(p, other):\r\n    assert len(p) == len(other), f\"{len(p)=}, {len(other)=}\"\r\n    return p.x - other.x\r\n\r\n# Works, because `df2` given positionally\r\ndf.map_partitions(x, df2).compute()\r\n\r\n# Fails, because `df2` given as kwarg\r\ndf.map_partitions(x, other=df2).compute()\r\n# AssertionError: len(p)=86400, len(other)=2592000\r\n```\r\n\r\nThe problem is likely that `map_partitions` finalizes (via `unpack_collections`) everything in kwargs. Additionally, `partitionwise_graph` has lots of unpacking logic for `args` to format them into proper blockwise `(name, indices)` pairs, but `kwargs` are passed through straight to `blockwise` to be treated as 0D objects.\r\n\r\n**Anything else we need to know?**:\r\n\r\nI would be okay keeping this behavior, but it should be documented much more clearly. Possibly even should raise a warning if a multi-chunk DataFrame/Array is given as a kwarg.\r\n\r\ncc @rjzamora @ian-r-rose \r\n\r\n**Environment**:\r\n\r\n- Dask version: 824244c14aeb7d9a95b2e08011b36d10b16feeb8\r\n- Python version: 3.9.1\r\n- Operating System: macOS\r\n- Install method (conda, pip, source): source",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/8308/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/8308/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}