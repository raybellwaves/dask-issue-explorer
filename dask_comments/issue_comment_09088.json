[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1127694759",
        "html_url": "https://github.com/dask/dask/issues/9088#issuecomment-1127694759",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9088",
        "id": 1127694759,
        "node_id": "IC_kwDOAbcwm85DN0Gn",
        "user": {
            "login": "pavithraes",
            "id": 33131404,
            "node_id": "MDQ6VXNlcjMzMTMxNDA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/33131404?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pavithraes",
            "html_url": "https://github.com/pavithraes",
            "followers_url": "https://api.github.com/users/pavithraes/followers",
            "following_url": "https://api.github.com/users/pavithraes/following{/other_user}",
            "gists_url": "https://api.github.com/users/pavithraes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pavithraes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pavithraes/subscriptions",
            "organizations_url": "https://api.github.com/users/pavithraes/orgs",
            "repos_url": "https://api.github.com/users/pavithraes/repos",
            "events_url": "https://api.github.com/users/pavithraes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pavithraes/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-16T13:44:05Z",
        "updated_at": "2022-05-16T13:44:05Z",
        "author_association": "MEMBER",
        "body": "@MrPowers Thanks for opening this! It'll be great to have better documentation. :)\r\n\r\n@jrbourbeau @rjzamora What do you think about the behavior and the suggested next steps?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1127694759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1128124983",
        "html_url": "https://github.com/dask/dask/issues/9088#issuecomment-1128124983",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9088",
        "id": 1128124983,
        "node_id": "IC_kwDOAbcwm85DPdI3",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-16T20:53:59Z",
        "updated_at": "2022-05-16T20:53:59Z",
        "author_association": "MEMBER",
        "body": "Thanks for writing this up @MrPowers - The mode argument is certainly a bit differnent from pandas, because we are typically not writing or appending to a single file in Dask (unless `single_file=True`).  The Parquet API uses `append` and `overwrite` arguments to capture a variaety of cases. However, there is no such thing as appending to a file in Parquet, and the user cannot specify the file names as an arbitrary glob pattern (as far as I remember). \r\n\r\nThen the current `mode` behavior actually makes perfect sense, and provides the user with a lot of control, but I do agree that it would ne nice if the user could specify something like `overwrite=True`. \r\n\r\nRegarding appending in CSV: Do you think it makes sense to add an `append` option to do the same thing as it does in `to_parquet`, ot do you think people would always prefer to extend existing files?\r\n\r\n> Dask users can presumably use the \"rb\" write mode, but I'm not actually sure what that stands for\r\nOpen for writing in byte mode. Used exclusivley for Parquet, but doesnt make sense in CSV.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1128124983/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1128150366",
        "html_url": "https://github.com/dask/dask/issues/9088#issuecomment-1128150366",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9088",
        "id": 1128150366,
        "node_id": "IC_kwDOAbcwm85DPjVe",
        "user": {
            "login": "MrPowers",
            "id": 2722395,
            "node_id": "MDQ6VXNlcjI3MjIzOTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2722395?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MrPowers",
            "html_url": "https://github.com/MrPowers",
            "followers_url": "https://api.github.com/users/MrPowers/followers",
            "following_url": "https://api.github.com/users/MrPowers/following{/other_user}",
            "gists_url": "https://api.github.com/users/MrPowers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MrPowers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MrPowers/subscriptions",
            "organizations_url": "https://api.github.com/users/MrPowers/orgs",
            "repos_url": "https://api.github.com/users/MrPowers/repos",
            "events_url": "https://api.github.com/users/MrPowers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MrPowers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-16T21:22:37Z",
        "updated_at": "2022-05-16T21:22:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "@rjzamora - I think the Parquet `overwrite=True` option is really nice (e.g. `ddf.to_parquet(\"some/path\", overwrite=True)`, and I actually don't think `to_csv` provides an option with equivalent `overwrite=True` functionality.  `to_csv` only provides a \"partial clobber\" option, not a \"delete everything in the folder, and then write\" option.    `ddf.to_csv(\"csv_danger\", mode=\"w\")` only overwrite the files with conflicting filenames and leaves the other unchanged.\r\n\r\nYea, I think a `to_csv` append option would be a nice addition.  You can get `to_csv` behavior that's similar to `append=True` with `to_parquet` as long as you make sure none of the files you're writing have filename conflicts with existing files.  But I'd prefer to give `to_csv` users a `save_mode=append` or `append=True` option to make this functionality more accessible.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1128150366/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1128283997",
        "html_url": "https://github.com/dask/dask/issues/9088#issuecomment-1128283997",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9088",
        "id": 1128283997,
        "node_id": "IC_kwDOAbcwm85DQD9d",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-17T00:50:03Z",
        "updated_at": "2022-05-17T00:50:03Z",
        "author_association": "MEMBER",
        "body": ">I actually don't think to_csv provides an option with equivalent overwrite=True functionality\r\n\r\nYou are correct. Sorry for being confusing! I was just implying that the user could append to the dataset however they'd like with the current API. However, they would certainly need to delete the existing dataset manually if they wanted to full \"overwrite\" behavior (which is not hard, but I totally agree is not an API option).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1128283997/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]