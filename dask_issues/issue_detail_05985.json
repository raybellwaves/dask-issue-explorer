{
    "url": "https://api.github.com/repos/dask/dask/issues/5985",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/5985/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/5985/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/5985/events",
    "html_url": "https://github.com/dask/dask/issues/5985",
    "id": 576887644,
    "node_id": "MDU6SXNzdWU1NzY4ODc2NDQ=",
    "number": 5985,
    "title": "Array fully loaded into memory when trying to store into a memmap array",
    "user": {
        "login": "astrofrog",
        "id": 314716,
        "node_id": "MDQ6VXNlcjMxNDcxNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/314716?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/astrofrog",
        "html_url": "https://github.com/astrofrog",
        "followers_url": "https://api.github.com/users/astrofrog/followers",
        "following_url": "https://api.github.com/users/astrofrog/following{/other_user}",
        "gists_url": "https://api.github.com/users/astrofrog/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/astrofrog/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/astrofrog/subscriptions",
        "organizations_url": "https://api.github.com/users/astrofrog/orgs",
        "repos_url": "https://api.github.com/users/astrofrog/repos",
        "events_url": "https://api.github.com/users/astrofrog/events{/privacy}",
        "received_events_url": "https://api.github.com/users/astrofrog/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 1342320181,
            "node_id": "MDU6TGFiZWwxMzQyMzIwMTgx",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20info",
            "name": "needs info",
            "color": "d0cfcc",
            "default": false,
            "description": "Needs further information from the user"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2020-03-06T12:01:07Z",
    "updated_at": "2022-06-19T19:07:20Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I am trying to load data from a memory-mapped array, do operations with it in dask, and store the result in another memory-mapped array. Currently this results in the entire array being loaded into memory when calling ``Array.store``. Here is an example:\r\n\r\n```python\r\nimport numpy as np\r\nfrom dask.array import from_array\r\n\r\n\r\n@profile\r\ndef main():\r\n\r\n    N = 512\r\n\r\n    original_array = np.memmap('original.mmap', dtype=float, mode='w+', shape=(N, N, N))\r\n    for i in range(N):\r\n        original_array[i] = i\r\n\r\n    original_array = np.memmap('original.mmap', dtype=float, mode='r', shape=(N, N, N))\r\n\r\n    dask_array = from_array(original_array)\r\n    dask_array = dask_array.rechunk('auto')\r\n    print('chunksize', dask_array.chunksize)\r\n\r\n    dask_array = np.sqrt(dask_array)\r\n\r\n    output_array = np.memmap('final.mmap', dtype=float, mode='w+', shape=(N, N, N))\r\n    dask_array.store(output_array, lock=True, compute=True)\r\n\r\n\r\nmain()\r\n```\r\n\r\nThe memory profile obtained with the ``memory_profile`` package is:\r\n\r\n```\r\nLine #    Mem usage    Increment   Line Contents\r\n================================================\r\n    31   56.801 MiB   56.801 MiB   @profile\r\n    32                             def main():\r\n    33                             \r\n    34   56.801 MiB    0.000 MiB       N = 512\r\n    35                             \r\n    36   57.086 MiB    0.285 MiB       original_array = np.memmap('original.mmap', dtype=float, mode='w+', shape=(N, N, N))\r\n    37 1081.070 MiB    0.000 MiB       for i in range(N):\r\n    38 1081.070 MiB    2.000 MiB           original_array[i] = i\r\n    39                             \r\n    40   57.121 MiB    0.000 MiB       original_array = np.memmap('original.mmap', dtype=float, mode='r', shape=(N, N, N))\r\n    41                             \r\n    42   57.121 MiB    0.000 MiB       dask_array = from_array(original_array)\r\n    43   57.121 MiB    0.000 MiB       dask_array = dask_array.rechunk('auto')\r\n    44   57.121 MiB    0.000 MiB       print('chunksize', dask_array.chunksize)\r\n    45                             \r\n    46   57.121 MiB    0.000 MiB       dask_array = np.sqrt(dask_array)\r\n    47                             \r\n    48   57.121 MiB    0.000 MiB       output_array = np.memmap('final.mmap', dtype=float, mode='w+', shape=(N, N, N))\r\n    49 2105.648 MiB 2105.648 MiB       dask_array.store(output_array, lock=True, compute=True)\r\n```\r\n\r\nI would have expected the array to be computed/written chunk by chunk to the output memory mapped array, resulting in a maximum memory usage of the size of a chunk, not that of the whole array. This seems like a possible bug?",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/5985/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/5985/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}