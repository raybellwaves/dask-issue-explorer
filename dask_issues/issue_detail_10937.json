{
    "url": "https://api.github.com/repos/dask/dask/issues/10937",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10937/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10937/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10937/events",
    "html_url": "https://github.com/dask/dask/issues/10937",
    "id": 2142299739,
    "node_id": "I_kwDOAbcwm85_sOZb",
    "number": 10937,
    "title": "[DISCUSSION] How to deal with limited annotation support in `dask-expr`",
    "user": {
        "login": "hendrikmakait",
        "id": 2699097,
        "node_id": "MDQ6VXNlcjI2OTkwOTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2699097?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hendrikmakait",
        "html_url": "https://github.com/hendrikmakait",
        "followers_url": "https://api.github.com/users/hendrikmakait/followers",
        "following_url": "https://api.github.com/users/hendrikmakait/following{/other_user}",
        "gists_url": "https://api.github.com/users/hendrikmakait/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/hendrikmakait/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hendrikmakait/subscriptions",
        "organizations_url": "https://api.github.com/users/hendrikmakait/orgs",
        "repos_url": "https://api.github.com/users/hendrikmakait/repos",
        "events_url": "https://api.github.com/users/hendrikmakait/events{/privacy}",
        "received_events_url": "https://api.github.com/users/hendrikmakait/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 1372867996,
            "node_id": "MDU6TGFiZWwxMzcyODY3OTk2",
            "url": "https://api.github.com/repos/dask/dask/labels/discussion",
            "name": "discussion",
            "color": "bebaf4",
            "default": false,
            "description": "Discussing a topic with no specific actions yet"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2024-02-19T12:49:36Z",
    "updated_at": "2024-02-19T15:29:49Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "At the moment, `dask-expr` has only limited support for annotations (https://github.com/dask-contrib/dask-expr/issues/13). Specifically, it only supports annotations at graph submission. For example, you can restrict resources for an *entire* computation with\r\n\r\n```python\r\n# Define your entire computation graph here\r\ndf = ...\r\n\r\nwith dask.annotate(resources={'GPU': 1}):\r\n    # Submit the graph with resource restrictions  \r\n    res = client.compute(df)\r\n\r\n```\r\n\r\nApplying resource restrictions at graph creation does not work and will be silently ignored:\r\n\r\n```python\r\nwith dask.annotate(resources={'GPU': 1}):\r\n    # Define a computation that should run on GPUs here\r\n    df = ...\r\n\r\n# Submitting the graph outside of the annotation context will ignore the annotations.\r\nclient.compute(df)\r\n```\r\n\r\nBefore choosing `dask-expr` as the default mechanism (#10934), we should, therefore, reach a consensus on how we want to deal with this lack of support.\r\n\r\nPrimarily, we need to answer the question: Are we okay with local annotations breaking silently when defaulting to `dask-expr`? If not, what are the minimal requirements that we need to support before the switch?\r\n\r\nGenerally, there is some contention on what annotation support would ideally look like. The current implementation falls short in multiple regards, e.g., by losing annotations in various codepaths, or the impossibility of having both loose worker restrictions and strict resource restrictions. Some points that have been raised here and can start a discussion are:\r\n\r\n- Do we want general-purpose mechanism for all kinds of annotations or should we instead limit this functionality to multiple explicit APIs, e.g., for restricting tasks to workers or resources, and attaching metadata to tasks?\r\n- How do annotations interact with logical plan optimization, e.g., plan rewrites, plan reordering, and fusion?\r\n- What annotation functionality is even used in practice?",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10937/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10937/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}