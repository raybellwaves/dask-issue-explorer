[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/404931351",
        "html_url": "https://github.com/dask/dask/issues/3753#issuecomment-404931351",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3753",
        "id": 404931351,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDkzMTM1MQ==",
        "user": {
            "login": "cjalmeida",
            "id": 704920,
            "node_id": "MDQ6VXNlcjcwNDkyMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/704920?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjalmeida",
            "html_url": "https://github.com/cjalmeida",
            "followers_url": "https://api.github.com/users/cjalmeida/followers",
            "following_url": "https://api.github.com/users/cjalmeida/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjalmeida/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjalmeida/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjalmeida/subscriptions",
            "organizations_url": "https://api.github.com/users/cjalmeida/orgs",
            "repos_url": "https://api.github.com/users/cjalmeida/repos",
            "events_url": "https://api.github.com/users/cjalmeida/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjalmeida/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-13T19:30:33Z",
        "updated_at": "2018-07-13T19:31:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "A workaround for the issue above is to create dataframe from a single column aggregation then `assign`\r\n\r\n```python\r\nddf = dd.from_pandas(df, npartitions=3)\r\ng = ddf.groupby(['g0', 'g1'])\r\nres = g.agg({'col0':mode})\r\ncol1 = g.col1.agg(mode)\r\nres = res.assign(col1=col1)\r\nres.reset_index().compute()\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/404931351/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/465428167",
        "html_url": "https://github.com/dask/dask/issues/3753#issuecomment-465428167",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3753",
        "id": 465428167,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQyODE2Nw==",
        "user": {
            "login": "MichaelSchroter",
            "id": 31654102,
            "node_id": "MDQ6VXNlcjMxNjU0MTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/31654102?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MichaelSchroter",
            "html_url": "https://github.com/MichaelSchroter",
            "followers_url": "https://api.github.com/users/MichaelSchroter/followers",
            "following_url": "https://api.github.com/users/MichaelSchroter/following{/other_user}",
            "gists_url": "https://api.github.com/users/MichaelSchroter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MichaelSchroter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MichaelSchroter/subscriptions",
            "organizations_url": "https://api.github.com/users/MichaelSchroter/orgs",
            "repos_url": "https://api.github.com/users/MichaelSchroter/repos",
            "events_url": "https://api.github.com/users/MichaelSchroter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MichaelSchroter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-20T05:17:55Z",
        "updated_at": "2019-02-23T03:37:14Z",
        "author_association": "NONE",
        "body": "Hi Cloves,\r\n\r\nWould you be able to tell me the reason for this error? I get the same error when trying to convert a dask `DataFrame` into a dask array using `to_dask_array(lengths=True)`  The below are two dask dataframes.\r\n\r\nCode:\r\n\r\n```python\r\nX = train_final[X_cols_train].to_dask_array(lengths=True)\r\ny = train_final['target'].to_dask_array(lengths=True)\r\n```\r\n\r\nResult:\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-78-a7c85c878070> in <module>\r\n----> 1 X = train_final[X_cols_train].to_dask_array(lengths=True)\r\n      2 y = train_final['target'].to_dask_array(lengths=True)\r\n\r\n~/env/lib/python3.5/site-packages/dask/dataframe/core.py in to_dask_array(self, lengths)\r\n   1103 \r\n   1104         if lengths is True:\r\n-> 1105             lengths = tuple(self.map_partitions(len).compute())\r\n   1106 \r\n   1107         arr = self.map_partitions(np.array, )\r\n\r\n~/env/lib/python3.5/site-packages/dask/base.py in compute(self, **kwargs)\r\n    154         dask.base.compute\r\n    155         \"\"\"\r\n--> 156         (result,) = compute(self, traverse=False, **kwargs)\r\n    157         return result\r\n    158 \r\n\r\n~/env/lib/python3.5/site-packages/dask/base.py in compute(*args, **kwargs)\r\n    395     keys = [x.__dask_keys__() for x in collections]\r\n    396     postcomputes = [x.__dask_postcompute__() for x in collections]\r\n--> 397     results = schedule(dsk, keys, **kwargs)\r\n    398     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    399 \r\n\r\n~/env/lib/python3.5/site-packages/distributed/client.py in get(self, dsk, keys, restrictions, loose_restrictions, resources, sync, asynchronous, direct, retries, priority, fifo_timeout, actors, **kwargs)\r\n   2319             try:\r\n   2320                 results = self.gather(packed, asynchronous=asynchronous,\r\n-> 2321                                       direct=direct)\r\n   2322             finally:\r\n   2323                 for f in futures.values():\r\n\r\n~/env/lib/python3.5/site-packages/distributed/client.py in gather(self, futures, errors, maxsize, direct, asynchronous)\r\n   1653             return self.sync(self._gather, futures, errors=errors,\r\n   1654                              direct=direct, local_worker=local_worker,\r\n-> 1655                              asynchronous=asynchronous)\r\n   1656 \r\n   1657     @gen.coroutine\r\n\r\n~/env/lib/python3.5/site-packages/distributed/client.py in sync(self, func, *args, **kwargs)\r\n    671             return future\r\n    672         else:\r\n--> 673             return sync(self.loop, func, *args, **kwargs)\r\n    674 \r\n    675     def __repr__(self):\r\n\r\n~/env/lib/python3.5/site-packages/distributed/utils.py in sync(loop, func, *args, **kwargs)\r\n    275             e.wait(10)\r\n    276     if error[0]:\r\n--> 277         six.reraise(*error[0])\r\n    278     else:\r\n    279         return result[0]\r\n\r\n~/env/lib/python3.5/site-packages/six.py in reraise(tp, value, tb)\r\n    691             if value.__traceback__ is not tb:\r\n    692                 raise value.with_traceback(tb)\r\n--> 693             raise value\r\n    694         finally:\r\n    695             value = None\r\n\r\n~/env/lib/python3.5/site-packages/distributed/utils.py in f()\r\n    260             if timeout is not None:\r\n    261                 future = gen.with_timeout(timedelta(seconds=timeout), future)\r\n--> 262             result[0] = yield future\r\n    263         except Exception as exc:\r\n    264             error[0] = sys.exc_info()\r\n\r\n~/env/lib/python3.5/site-packages/tornado/gen.py in run(self)\r\n   1131 \r\n   1132                     try:\r\n-> 1133                         value = future.result()\r\n   1134                     except Exception:\r\n   1135                         self.had_exception = True\r\n\r\n/usr/lib/python3.5/asyncio/futures.py in result(self)\r\n    291             self._tb_logger = None\r\n    292         if self._exception is not None:\r\n--> 293             raise self._exception\r\n    294         return self._result\r\n    295 \r\n\r\n~/env/lib/python3.5/site-packages/tornado/gen.py in run(self)\r\n   1139                     if exc_info is not None:\r\n   1140                         try:\r\n-> 1141                             yielded = self.gen.throw(*exc_info)\r\n   1142                         finally:\r\n   1143                             # Break up a reference to itself\r\n\r\n~/env/lib/python3.5/site-packages/distributed/client.py in _gather(self, futures, errors, direct, local_worker)\r\n   1498                             six.reraise(type(exception),\r\n   1499                                         exception,\r\n-> 1500                                         traceback)\r\n   1501                     if errors == 'skip':\r\n   1502                         bad_keys.add(key)\r\n\r\n~/env/lib/python3.5/site-packages/six.py in reraise(tp, value, tb)\r\n    690                 value = tp()\r\n    691             if value.__traceback__ is not tb:\r\n--> 692                 raise value.with_traceback(tb)\r\n    693             raise value\r\n    694         finally:\r\n\r\n~/env/lib/python3.5/site-packages/dask/dataframe/core.py in apply_and_enforce(func, args, kwargs, meta)\r\n   3691             if not np.array_equal(np.nan_to_num(meta.columns),\r\n   3692                                   np.nan_to_num(df.columns)):\r\n-> 3693                 raise ValueError(\"The columns in the computed data do not match\"\r\n   3694                                  \" the columns in the provided metadata\")\r\n   3695             else:\r\n\r\nValueError: The columns in the computed data do not match the columns in the provided metadata\r\n```\r\n\r\nWould you be able to tell me what may be causing this and what measures that I could take to eliminate this error. \r\n\r\nThanks\r\n\r\nMichael",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/465428167/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/488076894",
        "html_url": "https://github.com/dask/dask/issues/3753#issuecomment-488076894",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3753",
        "id": 488076894,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODA3Njg5NA==",
        "user": {
            "login": "quasiben",
            "id": 1403768,
            "node_id": "MDQ6VXNlcjE0MDM3Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1403768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quasiben",
            "html_url": "https://github.com/quasiben",
            "followers_url": "https://api.github.com/users/quasiben/followers",
            "following_url": "https://api.github.com/users/quasiben/following{/other_user}",
            "gists_url": "https://api.github.com/users/quasiben/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quasiben/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quasiben/subscriptions",
            "organizations_url": "https://api.github.com/users/quasiben/orgs",
            "repos_url": "https://api.github.com/users/quasiben/repos",
            "events_url": "https://api.github.com/users/quasiben/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quasiben/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-04-30T19:07:51Z",
        "updated_at": "2019-04-30T19:07:51Z",
        "author_association": "MEMBER",
        "body": "@cjalmeida I don't think the custom aggregate function is removing labels, rather, this particular implementation of mode does not maintain the same multiindex labels through the computation",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/488076894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]