[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/524979994",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-524979994",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 524979994,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDk3OTk5NA==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-26T18:44:03Z",
        "updated_at": "2019-08-26T18:44:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "Made some debug progress. The problem is with read_parquet. If I set `gather_statistics=False` then I get a significant improvement. However, my data now has a _metadata file which is why I didn't think to look at `gather_statistics` option at this stage of my ETL. Give that I have a _metadata file what are the possible reasons for the slowdown?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/524979994/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/524986312",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-524986312",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 524986312,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDk4NjMxMg==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-26T19:00:13Z",
        "updated_at": "2019-08-26T19:00:13Z",
        "author_association": "CONTRIBUTOR",
        "body": "hoping @rjzamora can guide me.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/524986312/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525012642",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525012642",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525012642,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTAxMjY0Mg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-26T20:11:16Z",
        "updated_at": "2019-08-26T20:11:16Z",
        "author_association": "MEMBER",
        "body": "@birdsarah any chance you can provide a profile pstats file to aid tracking down slow parts?  If you profile around the compute call then you'll get all of the costs, including just waiting for the cluster, but if you profile around a persist call then it should be just around graph generation and optimization\r\n\r\nIf you're in Jupyter\r\n\r\n```\r\n%%prun -D filename.prof\r\ndf = df.persist()\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525012642/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525050081",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525050081",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525050081,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTA1MDA4MQ==",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-26T21:59:48Z",
        "updated_at": "2019-08-26T22:00:00Z",
        "author_association": "MEMBER",
        "body": "@birdsarah Are you having the same problem for both `engine=\"fastparquet\"` and `engine=\"pyarrow\"`?\r\n\r\nI'm not sure if it is related, but there is [a bug](https://github.com/dask/dask/blob/6fd2eb57158dbf260e29311e84f6a389904f0ef2/dask/dataframe/io/parquet/arrow.py#L70) in `pyarrow.read_metadata` that may prevent proper `_metadata`-file detection/handling.  If this does happen to be the problem here, I am trying to include a fix for in #5307.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525050081/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525055338",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525055338",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525055338,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTA1NTMzOA==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-26T22:19:05Z",
        "updated_at": "2019-08-26T22:19:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "I am using fastparquet. I saw that bug, I'm also not sure if it's related.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525055338/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525440208",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525440208",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525440208,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTQ0MDIwOA==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-27T19:04:03Z",
        "updated_at": "2019-08-27T19:04:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "My current place is:\r\n1. on initially reading data that has no metadata (came from spark), task graph is loaded quickly. \r\n2. that data is then written out using dask so has metadata\r\n3. on reading that data back in and processing further task graph is slow to load (impossibly slow when not specifying gather_statistics, still noticeably slower when specifying `gather_statistics=False`)\r\n\r\nHowever my tasks are more complicated in the third step so i don't have a good, small, reproduceably test case for this and i dont' have time to generate one. The order of magnitude I'm dealing with is npartitions=3000\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525440208/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525441048",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525441048",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525441048,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTQ0MTA0OA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-27T19:06:27Z",
        "updated_at": "2019-08-27T19:06:27Z",
        "author_association": "MEMBER",
        "body": "> i don't have a good, small, reproduceably test case for this and i dont' have time to generate one\r\n\r\nI'll push back on this a little bit.  You seem to be spending a large amount of time running into issues with Dask Dataframe's Parquet handling.  My guess is that if we could agree on a simple version of your workload that people here could run and profile then that would pay off for you rather quickly in terms of efficiency within a few days of time.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525441048/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525441369",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525441369",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525441369,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTQ0MTM2OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-27T19:07:20Z",
        "updated_at": "2019-08-27T19:07:20Z",
        "author_association": "MEMBER",
        "body": "Or, to be concrete.  My guess is that if you were to spend an hour constructing a minimal example that this is highly likely to save you from having to bang your head against a wall for at least one night, and probably several.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525441369/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525500668",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525500668",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525500668,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTUwMDY2OA==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-27T22:02:17Z",
        "updated_at": "2019-08-27T22:20:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "More updates.\r\n\r\nI am working piecemeal through my data. For those pieces that work (see #5333) I am running `%%prun` on two pieces\r\n\r\n```\r\ndf = process_data_frame(date, ...).persist()\r\n```\r\n\r\nThis reads in data (currently set to `gather_statistics=False`) and then does the necessary etl manipulations.\r\n\r\nThen I'm seperately looking at\r\n\r\n```\r\ndf = df.to_parquet()\r\n```\r\n\r\nI am lucky in that my data is split into days and day-by-day my npartitions increases due to varying levels of activity.\r\n\r\nAs I am moving to higher numbers of partitions I am seeing the first call to persist with the prun return relatively quickly. But I am noticing an increasing delay between that cell completing and my task bar appearing in dask dashboard \"progress\" chat. This delay has already increased to ~30 seconds when my npartitions = 300 and `len(client.futures)` is 303.\r\n\r\nTimes:\r\n* futures / npartitions = 303 - time ~30s\r\n* futures / npartitions = 620 - time 1min27s\r\n* futures / npartitiions = 2593 - time ....\r\n\r\nAny thoughts on how to profile the delay between the persist call finishing and the tasks appearing in my progress tab.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525500668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525502326",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525502326",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525502326,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTUwMjMyNg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-27T22:08:13Z",
        "updated_at": "2019-08-27T22:08:13Z",
        "author_association": "MEMBER",
        "body": "This doc may interest you:\nhttps://docs.dask.org/en/latest/phases-of-computation.html\n\nOn Tue, Aug 27, 2019 at 3:02 PM Sarah Bird <notifications@github.com> wrote:\n\n> More updates.\n>\n> I am working piecemeal through my data. For those pieces that work (see\n> #5333 <https://github.com/dask/dask/issues/5333>) I am running %%prun on\n> two pieces\n>\n> df = process_data_frame(date, ...).persist()\n>\n> This reads in data (currently set to gather_statistics=False) and then\n> does the necessary etl manipulations.\n>\n> Then I'm seperately looking at\n>\n> df = df.to_parquet()\n>\n> I am lucky in that my data is split into days and day-by-day my\n> npartitions increases due to varying levels of activity.\n>\n> As I am moving to higher numbers of partitions I am seeing the first call\n> to persist with the prun return relatively quickly. But I am noticing an\n> increasing delay between that cell completing and my task bar appearing in\n> dask dashboard \"progress\" chat. This delay has already increased to ~30\n> seconds when my npartitions = 300 and len(client.futures) is 303.\n>\n> Any thoughts on how to profile the delay between the persist call\n> finishing and the tasks appearing in my progress tab.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/5321?email_source=notifications&email_token=AACKZTHCHHHULIPRVHQZCBDQGWP6VA5CNFSM4IPTABZKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5JIB7A#issuecomment-525500668>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AACKZTGEJP2S333NNX5UG6LQGWP6VANCNFSM4IPTABZA>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525502326/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525503467",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525503467",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525503467,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTUwMzQ2Nw==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-27T22:12:28Z",
        "updated_at": "2019-08-27T22:12:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "Is that a weird way of saying you would like me to close this issue?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525503467/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525506485",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525506485",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525506485,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTUwNjQ4NQ==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-27T22:23:41Z",
        "updated_at": "2019-08-27T22:29:31Z",
        "author_association": "CONTRIBUTOR",
        "body": "I am currently waiting for 2500 future graph to appear. Looking at system page and I don't see anything in particular:\r\n\r\n![Screenshot from 2019-08-27 17-22-24](https://user-images.githubusercontent.com/1796208/63812175-2a10e500-c8ef-11e9-8205-05c5b3f33ed9.png)\r\n\r\nMy expectation is that the number of file descriptors will keep increasing, start flattening, never to hit more than 6-700 and I will start seeing warnings `distributed.core - INFO - Collecting unused comms. open: 512, active: 512` and that this will never complete.  (My experience once this happens is that my session is toast and I have to relaunch jupyter which is getting `too many open file errors`)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525506485/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525509955",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525509955",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525509955,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTUwOTk1NQ==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-27T22:36:49Z",
        "updated_at": "2019-08-27T22:36:49Z",
        "author_association": "CONTRIBUTOR",
        "body": "....well at least I can take some satisfaction about being right...20 minutes in, no tasks, the first error has appeared\r\n\r\n![Screenshot from 2019-08-27 17-34-05](https://user-images.githubusercontent.com/1796208/63812715-d7d0c380-c8f0-11e9-91f7-9fc912691ea2.png)\r\n\r\nIn addition, my scheduler / master node appears is stuck, something I've noticed occasionally before. The dashboard has stopped up dating / terminal stopped responding - here's it's current state:\r\n\r\n![Screenshot from 2019-08-27 17-37-23](https://user-images.githubusercontent.com/1796208/63812831-3dbd4b00-c8f1-11e9-9a16-69d33bc5d6bf.png)\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525509955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525510330",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525510330",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525510330,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTUxMDMzMA==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-27T22:38:20Z",
        "updated_at": "2019-08-27T22:38:20Z",
        "author_association": "CONTRIBUTOR",
        "body": "Then followed by:\r\n\r\n![Screenshot from 2019-08-27 17-38-02](https://user-images.githubusercontent.com/1796208/63812864-59285600-c8f1-11e9-87c1-86f85c2dbff4.png)\r\n\r\n```\r\ndistributed.core - INFO - Collecting unused comms.  open: 512, active: 512\r\ndistributed.core - INFO - Collecting unused comms.  open: 512, active: 512\r\ndistributed.core - INFO - Collecting unused comms.  open: 512, active: 512\r\ndistributed.batched - INFO - Batched Comm Closed: in <closed TCP>: ConnectionResetError: [Errno 104] Connection reset by peer\r\ndistributed.client - ERROR - Failed to reconnect to scheduler after 10.00 seconds, closing client\r\ndistributed.utils - ERROR - \r\nTraceback (most recent call last):\r\n  File \"/mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/distributed/utils.py\", line 666, in log_errors\r\n    yield\r\n  File \"/mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/distributed/client.py\", line 1268, in _close\r\n    await gen.with_timeout(timedelta(seconds=2), list(coroutines))\r\nconcurrent.futures._base.CancelledError\r\ndistributed.utils - ERROR - \r\nTraceback (most recent call last):\r\n  File \"/mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/distributed/utils.py\", line 666, in log_errors\r\n    yield\r\n  File \"/mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/distributed/client.py\", line 998, in _reconnect\r\n    await self._close()\r\n  File \"/mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/distributed/client.py\", line 1268, in _close\r\n    await gen.with_timeout(timedelta(seconds=2), list(coroutines))\r\nconcurrent.futures._base.CancelledError\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525510330/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525536301",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525536301",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525536301,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTUzNjMwMQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-28T00:40:21Z",
        "updated_at": "2019-08-28T00:40:21Z",
        "author_association": "MEMBER",
        "body": "> Is that a weird way of saying you would like me to close this issue?\r\n\r\nNo, I think that you have identified a real issue here.  I just thought that that document would answer your question, and it's more efficient on my end to link you to it than to type it again.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525536301/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525537263",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525537263",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525537263,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTUzNzI2Mw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-28T00:45:35Z",
        "updated_at": "2019-08-28T00:45:35Z",
        "author_association": "MEMBER",
        "body": "@birdsarah I think that you've clearly demonstrated that a problem exists.  However I'm not yet sure how to go about solving the problem. \r\n\r\nIt sounds like you're saying that the problem is not in the time that it takes to call `persist`.  Is this correct?  If not, can I ask you for a profile?\r\n\r\nIf the problem is after persist then can I ask you to try profiling the same thing, but using async/await?  This will put the main thread that handles administrative stuff in with the thread that you're using to control things.\r\n\r\n```python\r\nasync def f():\r\n    async with Client(..., asynchronous=True) as client:\r\n        df = ... # construct dataframe\r\n        df = df.persist()\r\n        while (await client.run_on_scheduler(lambda dask_scheduler: len(dask_scheduler.tasks) == 0)):\r\n            await asyncio.sleep(0.5)\r\n\r\nasyncio.get_event_loop().run_until_complete(f)  # run this with prun\r\n```\r\n\r\nAlternatively, you might also take a look at the `/profile-server` route of the dashboard, which should give you some information about what the scheduler is up to.\r\n            ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525537263/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525599852",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525599852",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525599852,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTU5OTg1Mg==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-28T06:15:02Z",
        "updated_at": "2019-08-28T06:15:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "Can't get your code to run\r\n\r\n```\r\nasync def f():\r\n    async with Client(f'tcp://{IP_ADDRESS}:{PORT}', asynchronous=True) as client:\r\n        df = process_data_frame(date, ...)\r\n        df = df.persist()\r\n        while (await client.run_on_scheduler(lambda dask_scheduler: len(dask_scheduler.tasks) == 0)):\r\n            await asyncio.sleep(0.5)\r\n```\r\n\r\n```\r\n%%prun -D d20190814_24partitions.prof\r\nasyncio.get_event_loop().run_until_complete(f)\r\n```\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-59-6c98b7cbc52c> in <module>\r\n----> 1 get_ipython().run_cell_magic('prun', '-D d20190814_24partitions.prof', 'asyncio.get_event_loop().run_until_complete(f)  # run this with prun\\n')\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/interactiveshell.py in run_cell_magic(self, magic_name, line, cell)\r\n   2357             with self.builtin_trap:\r\n   2358                 args = (magic_arg_s, cell)\r\n-> 2359                 result = fn(*args, **kwargs)\r\n   2360             return result\r\n   2361 \r\n\r\n</mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/decorator.py:decorator-gen-55> in prun(self, parameter_s, cell)\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/magic.py in <lambda>(f, *a, **k)\r\n    185     # but it's overkill for just that one bit of state.\r\n    186     def magic_deco(arg):\r\n--> 187         call = lambda f, *a, **k: f(*a, **k)\r\n    188 \r\n    189         if callable(arg):\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/magics/execution.py in prun(self, parameter_s, cell)\r\n    315             arg_str += '\\n' + cell\r\n    316         arg_str = self.shell.transform_cell(arg_str)\r\n--> 317         return self._run_with_profiler(arg_str, opts, self.shell.user_ns)\r\n    318 \r\n    319     def _run_with_profiler(self, code, opts, namespace):\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/magics/execution.py in _run_with_profiler(self, code, opts, namespace)\r\n    337         prof = profile.Profile()\r\n    338         try:\r\n--> 339             prof = prof.runctx(code, namespace, namespace)\r\n    340             sys_exit = ''\r\n    341         except SystemExit:\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/cProfile.py in runctx(self, cmd, globals, locals)\r\n     98         self.enable()\r\n     99         try:\r\n--> 100             exec(cmd, globals, locals)\r\n    101         finally:\r\n    102             self.disable()\r\n\r\n<string> in <module>\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/asyncio/base_events.py in run_until_complete(self, future)\r\n    561 \r\n    562         new_task = not futures.isfuture(future)\r\n--> 563         future = tasks.ensure_future(future, loop=self)\r\n    564         if new_task:\r\n    565             # An exception is raised if the future didn't complete, so there\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/asyncio/tasks.py in ensure_future(coro_or_future, loop)\r\n    590         return ensure_future(_wrap_awaitable(coro_or_future), loop=loop)\r\n    591     else:\r\n--> 592         raise TypeError('An asyncio.Future, a coroutine or an awaitable is '\r\n    593                         'required')\r\n    594 \r\n\r\nTypeError: An asyncio.Future, a coroutine or an awaitable is required\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525599852/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525761845",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525761845",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525761845,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTc2MTg0NQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-28T14:07:37Z",
        "updated_at": "2019-08-28T14:07:37Z",
        "author_association": "MEMBER",
        "body": "Yeah, sorry, it's run_until_complete(f())\n\nOn Tue, Aug 27, 2019 at 11:15 PM Sarah Bird <notifications@github.com>\nwrote:\n\n> Can't get your code to run\n>\n> async def f():\n>     async with Client(f'tcp://{IP_ADDRESS}:{PORT}', asynchronous=True) as client:\n>         df = process_data_frame(date, ...)\n>         df = df.persist()\n>         while (await client.run_on_scheduler(lambda dask_scheduler: len(dask_scheduler.tasks) == 0)):\n>             await asyncio.sleep(0.5)\n>\n> %%prun -D d20190814_24partitions.prof\n> asyncio.get_event_loop().run_until_complete(f)\n>\n> ---------------------------------------------------------------------------\n> TypeError                                 Traceback (most recent call last)\n> <ipython-input-59-6c98b7cbc52c> in <module>\n> ----> 1 get_ipython().run_cell_magic('prun', '-D d20190814_24partitions.prof', 'asyncio.get_event_loop().run_until_complete(f)  # run this with prun\\n')\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/interactiveshell.py in run_cell_magic(self, magic_name, line, cell)\n>    2357             with self.builtin_trap:\n>    2358                 args = (magic_arg_s, cell)\n> -> 2359                 result = fn(*args, **kwargs)\n>    2360             return result\n>    2361\n>\n> </mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/decorator.py:decorator-gen-55> in prun(self, parameter_s, cell)\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/magic.py in <lambda>(f, *a, **k)\n>     185     # but it's overkill for just that one bit of state.\n>     186     def magic_deco(arg):\n> --> 187         call = lambda f, *a, **k: f(*a, **k)\n>     188\n>     189         if callable(arg):\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/magics/execution.py in prun(self, parameter_s, cell)\n>     315             arg_str += '\\n' + cell\n>     316         arg_str = self.shell.transform_cell(arg_str)\n> --> 317         return self._run_with_profiler(arg_str, opts, self.shell.user_ns)\n>     318\n>     319     def _run_with_profiler(self, code, opts, namespace):\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/magics/execution.py in _run_with_profiler(self, code, opts, namespace)\n>     337         prof = profile.Profile()\n>     338         try:\n> --> 339             prof = prof.runctx(code, namespace, namespace)\n>     340             sys_exit = ''\n>     341         except SystemExit:\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/cProfile.py in runctx(self, cmd, globals, locals)\n>      98         self.enable()\n>      99         try:\n> --> 100             exec(cmd, globals, locals)\n>     101         finally:\n>     102             self.disable()\n>\n> <string> in <module>\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/asyncio/base_events.py in run_until_complete(self, future)\n>     561\n>     562         new_task = not futures.isfuture(future)\n> --> 563         future = tasks.ensure_future(future, loop=self)\n>     564         if new_task:\n>     565             # An exception is raised if the future didn't complete, so there\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/asyncio/tasks.py in ensure_future(coro_or_future, loop)\n>     590         return ensure_future(_wrap_awaitable(coro_or_future), loop=loop)\n>     591     else:\n> --> 592         raise TypeError('An asyncio.Future, a coroutine or an awaitable is '\n>     593                         'required')\n>     594\n>\n> TypeError: An asyncio.Future, a coroutine or an awaitable is required\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/5321?email_source=notifications&email_token=AACKZTDIBUYQ4RKRPGZ7OI3QGYJWPA5CNFSM4IPTABZKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5KAI3A#issuecomment-525599852>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AACKZTFLU3D4RHYCTLX3QPLQGYJWPANCNFSM4IPTABZA>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525761845/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/525853054",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-525853054",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 525853054,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTg1MzA1NA==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-28T17:52:53Z",
        "updated_at": "2019-08-28T17:52:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "Cool. I will get some output of this in 6-8 hours or so when my current job finishes.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/525853054/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/526000167",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-526000167",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 526000167,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjAwMDE2Nw==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-29T02:55:38Z",
        "updated_at": "2019-08-29T02:55:38Z",
        "author_association": "CONTRIBUTOR",
        "body": "I now get \r\n\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-12-4514c31564d9> in <module>\r\n----> 1 get_ipython().run_cell_magic('prun', '-D d20190814_24partitions.prof', 'asyncio.get_event_loop().run_until_complete(f())\\n')\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/interactiveshell.py in run_cell_magic(self, magic_name, line, cell)\r\n   2357             with self.builtin_trap:\r\n   2358                 args = (magic_arg_s, cell)\r\n-> 2359                 result = fn(*args, **kwargs)\r\n   2360             return result\r\n   2361 \r\n\r\n</mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/decorator.py:decorator-gen-55> in prun(self, parameter_s, cell)\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/magic.py in <lambda>(f, *a, **k)\r\n    185     # but it's overkill for just that one bit of state.\r\n    186     def magic_deco(arg):\r\n--> 187         call = lambda f, *a, **k: f(*a, **k)\r\n    188 \r\n    189         if callable(arg):\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/magics/execution.py in prun(self, parameter_s, cell)\r\n    315             arg_str += '\\n' + cell\r\n    316         arg_str = self.shell.transform_cell(arg_str)\r\n--> 317         return self._run_with_profiler(arg_str, opts, self.shell.user_ns)\r\n    318 \r\n    319     def _run_with_profiler(self, code, opts, namespace):\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/magics/execution.py in _run_with_profiler(self, code, opts, namespace)\r\n    337         prof = profile.Profile()\r\n    338         try:\r\n--> 339             prof = prof.runctx(code, namespace, namespace)\r\n    340             sys_exit = ''\r\n    341         except SystemExit:\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/cProfile.py in runctx(self, cmd, globals, locals)\r\n     98         self.enable()\r\n     99         try:\r\n--> 100             exec(cmd, globals, locals)\r\n    101         finally:\r\n    102             self.disable()\r\n\r\n<string> in <module>\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/asyncio/base_events.py in run_until_complete(self, future)\r\n    569         future.add_done_callback(_run_until_complete_cb)\r\n    570         try:\r\n--> 571             self.run_forever()\r\n    572         except:\r\n    573             if new_task and future.done() and not future.cancelled():\r\n\r\n/mnt/miniconda/envs/jestr-etl/lib/python3.7/asyncio/base_events.py in run_forever(self)\r\n    524         self._check_closed()\r\n    525         if self.is_running():\r\n--> 526             raise RuntimeError('This event loop is already running')\r\n    527         if events._get_running_loop() is not None:\r\n    528             raise RuntimeError(\r\n\r\nRuntimeError: This event loop is already running\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/526000167/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/526000690",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-526000690",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 526000690,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjAwMDY5MA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-29T02:58:41Z",
        "updated_at": "2019-08-29T02:58:41Z",
        "author_association": "MEMBER",
        "body": "Do you also get that error if you don't run prun?\n\nOn Wed, Aug 28, 2019 at 7:55 PM Sarah Bird <notifications@github.com> wrote:\n\n> I now get\n>\n> ---------------------------------------------------------------------------\n> RuntimeError                              Traceback (most recent call last)\n> <ipython-input-12-4514c31564d9> in <module>\n> ----> 1 get_ipython().run_cell_magic('prun', '-D d20190814_24partitions.prof', 'asyncio.get_event_loop().run_until_complete(f())\\n')\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/interactiveshell.py in run_cell_magic(self, magic_name, line, cell)\n>    2357             with self.builtin_trap:\n>    2358                 args = (magic_arg_s, cell)\n> -> 2359                 result = fn(*args, **kwargs)\n>    2360             return result\n>    2361\n>\n> </mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/decorator.py:decorator-gen-55> in prun(self, parameter_s, cell)\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/magic.py in <lambda>(f, *a, **k)\n>     185     # but it's overkill for just that one bit of state.\n>     186     def magic_deco(arg):\n> --> 187         call = lambda f, *a, **k: f(*a, **k)\n>     188\n>     189         if callable(arg):\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/magics/execution.py in prun(self, parameter_s, cell)\n>     315             arg_str += '\\n' + cell\n>     316         arg_str = self.shell.transform_cell(arg_str)\n> --> 317         return self._run_with_profiler(arg_str, opts, self.shell.user_ns)\n>     318\n>     319     def _run_with_profiler(self, code, opts, namespace):\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/site-packages/IPython/core/magics/execution.py in _run_with_profiler(self, code, opts, namespace)\n>     337         prof = profile.Profile()\n>     338         try:\n> --> 339             prof = prof.runctx(code, namespace, namespace)\n>     340             sys_exit = ''\n>     341         except SystemExit:\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/cProfile.py in runctx(self, cmd, globals, locals)\n>      98         self.enable()\n>      99         try:\n> --> 100             exec(cmd, globals, locals)\n>     101         finally:\n>     102             self.disable()\n>\n> <string> in <module>\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/asyncio/base_events.py in run_until_complete(self, future)\n>     569         future.add_done_callback(_run_until_complete_cb)\n>     570         try:\n> --> 571             self.run_forever()\n>     572         except:\n>     573             if new_task and future.done() and not future.cancelled():\n>\n> /mnt/miniconda/envs/jestr-etl/lib/python3.7/asyncio/base_events.py in run_forever(self)\n>     524         self._check_closed()\n>     525         if self.is_running():\n> --> 526             raise RuntimeError('This event loop is already running')\n>     527         if events._get_running_loop() is not None:\n>     528             raise RuntimeError(\n>\n> RuntimeError: This event loop is already running\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/5321?email_source=notifications&email_token=AACKZTE5MOSO64JRE5TQUU3QG43CXA5CNFSM4IPTABZKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5NCAJY#issuecomment-526000167>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AACKZTCX2UKESY5X3Y2EBQLQG43CXANCNFSM4IPTABZA>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/526000690/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/526000816",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-526000816",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 526000816,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjAwMDgxNg==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-29T02:59:20Z",
        "updated_at": "2019-08-29T02:59:20Z",
        "author_association": "CONTRIBUTOR",
        "body": "yes",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/526000816/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/526000988",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-526000988",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 526000988,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjAwMDk4OA==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-29T03:00:12Z",
        "updated_at": "2019-08-29T03:00:33Z",
        "author_association": "CONTRIBUTOR",
        "body": "I also tried to directly instantiate from the DaskYarn cluster object as opposed to from the client details (ipaddress, port) that I'd already built off the cluster.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/526000988/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/526660161",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-526660161",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 526660161,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjY2MDE2MQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-08-30T16:12:51Z",
        "updated_at": "2019-08-30T16:12:51Z",
        "author_association": "MEMBER",
        "body": "> yes\r\n\r\nI find that surprising.  A lot of that traceback is specific to cProfile and IPython.  I take it that the last two frames are still there?\r\n\r\nIf you want to run asyncio code you might have to do it outside of Jupyter/IPython, where there is already an event loop running.  I would probably stick that code into a Python script, and then run things from the command line with something like (untested)\r\n\r\n    python -m cProfile -o profile.out myscript.py",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/526660161/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/529399440",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-529399440",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 529399440,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTM5OTQ0MA==",
        "user": {
            "login": "RodrigoNeves95",
            "id": 24609535,
            "node_id": "MDQ6VXNlcjI0NjA5NTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/24609535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RodrigoNeves95",
            "html_url": "https://github.com/RodrigoNeves95",
            "followers_url": "https://api.github.com/users/RodrigoNeves95/followers",
            "following_url": "https://api.github.com/users/RodrigoNeves95/following{/other_user}",
            "gists_url": "https://api.github.com/users/RodrigoNeves95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RodrigoNeves95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RodrigoNeves95/subscriptions",
            "organizations_url": "https://api.github.com/users/RodrigoNeves95/orgs",
            "repos_url": "https://api.github.com/users/RodrigoNeves95/repos",
            "events_url": "https://api.github.com/users/RodrigoNeves95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RodrigoNeves95/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-09T10:11:05Z",
        "updated_at": "2019-09-09T10:11:05Z",
        "author_association": "NONE",
        "body": "@birdsarah Can I ask which fastparquet version are you using?!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/529399440/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/529540507",
        "html_url": "https://github.com/dask/dask/issues/5321#issuecomment-529540507",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/5321",
        "id": 529540507,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTU0MDUwNw==",
        "user": {
            "login": "birdsarah",
            "id": 1796208,
            "node_id": "MDQ6VXNlcjE3OTYyMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/birdsarah",
            "html_url": "https://github.com/birdsarah",
            "followers_url": "https://api.github.com/users/birdsarah/followers",
            "following_url": "https://api.github.com/users/birdsarah/following{/other_user}",
            "gists_url": "https://api.github.com/users/birdsarah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/birdsarah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/birdsarah/subscriptions",
            "organizations_url": "https://api.github.com/users/birdsarah/orgs",
            "repos_url": "https://api.github.com/users/birdsarah/repos",
            "events_url": "https://api.github.com/users/birdsarah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/birdsarah/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-09-09T15:44:08Z",
        "updated_at": "2019-09-09T15:44:08Z",
        "author_association": "CONTRIBUTOR",
        "body": "@RodrigoNeves95 0.3.2!!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/529540507/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]