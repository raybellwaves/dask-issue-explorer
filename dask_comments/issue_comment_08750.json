[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1049191064",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1049191064",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1049191064,
        "node_id": "IC_kwDOAbcwm84-iWKY",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-23T20:35:43Z",
        "updated_at": "2022-02-23T20:35:43Z",
        "author_association": "MEMBER",
        "body": "cc @dask/array",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1049191064/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1050042790",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1050042790",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1050042790,
        "node_id": "IC_kwDOAbcwm84-lmGm",
        "user": {
            "login": "tomwhite",
            "id": 85085,
            "node_id": "MDQ6VXNlcjg1MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/85085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomwhite",
            "html_url": "https://github.com/tomwhite",
            "followers_url": "https://api.github.com/users/tomwhite/followers",
            "following_url": "https://api.github.com/users/tomwhite/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomwhite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomwhite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomwhite/subscriptions",
            "organizations_url": "https://api.github.com/users/tomwhite/orgs",
            "repos_url": "https://api.github.com/users/tomwhite/repos",
            "events_url": "https://api.github.com/users/tomwhite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomwhite/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-24T16:37:41Z",
        "updated_at": "2022-02-24T16:37:41Z",
        "author_association": "MEMBER",
        "body": "All array API tests are passing (https://github.com/tomwhite/dask/runs/5321391257?check_suite_focus=true), now that #8676 and https://github.com/data-apis/array-api-tests/pull/103 have been merged.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1050042790/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1050353621",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1050353621",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1050353621,
        "node_id": "IC_kwDOAbcwm84-mx_V",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-24T23:15:43Z",
        "updated_at": "2022-02-24T23:15:43Z",
        "author_association": "NONE",
        "body": "Exciting to see this. Let me know if you have any questions around the test suite or the numpy.array_api implementation. \r\n\r\nBy the way, I don't know if you use type hints in dask, but if you want to add them, you can get the official type hints for the array API functions from here https://github.com/data-apis/array-api/tree/main/spec/API_specification/signatures.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1050353621/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1050355943",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1050355943",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1050355943,
        "node_id": "IC_kwDOAbcwm84-myjn",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-24T23:20:08Z",
        "updated_at": "2022-02-24T23:20:08Z",
        "author_association": "MEMBER",
        "body": "We do make use of `typing` in Dask so that's good to know. Thanks for sharing \ud83d\ude42",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1050355943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1054107664",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1054107664",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1054107664,
        "node_id": "IC_kwDOAbcwm84-1GgQ",
        "user": {
            "login": "tomwhite",
            "id": 85085,
            "node_id": "MDQ6VXNlcjg1MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/85085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomwhite",
            "html_url": "https://github.com/tomwhite",
            "followers_url": "https://api.github.com/users/tomwhite/followers",
            "following_url": "https://api.github.com/users/tomwhite/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomwhite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomwhite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomwhite/subscriptions",
            "organizations_url": "https://api.github.com/users/tomwhite/orgs",
            "repos_url": "https://api.github.com/users/tomwhite/repos",
            "events_url": "https://api.github.com/users/tomwhite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomwhite/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-28T10:24:57Z",
        "updated_at": "2022-02-28T10:24:57Z",
        "author_association": "MEMBER",
        "body": "Thanks @asmeurer for taking a look!\r\n\r\n> By the way, I don't know if you use type hints in dask, but if you want to add them, you can get the official type hints for the array API functions from here https://github.com/data-apis/array-api/tree/main/spec/API_specification/signatures.\r\n\r\nI hadn't seen the type signatures for the array API had been collected in one place so thanks for pointing that out. I will add them to the implementation here. (Either in this PR or a follow-on one.)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1054107664/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1055239776",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1055239776",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1055239776,
        "node_id": "IC_kwDOAbcwm84-5a5g",
        "user": {
            "login": "honno",
            "id": 8246949,
            "node_id": "MDQ6VXNlcjgyNDY5NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8246949?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/honno",
            "html_url": "https://github.com/honno",
            "followers_url": "https://api.github.com/users/honno/followers",
            "following_url": "https://api.github.com/users/honno/following{/other_user}",
            "gists_url": "https://api.github.com/users/honno/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/honno/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/honno/subscriptions",
            "organizations_url": "https://api.github.com/users/honno/orgs",
            "repos_url": "https://api.github.com/users/honno/repos",
            "events_url": "https://api.github.com/users/honno/events{/privacy}",
            "received_events_url": "https://api.github.com/users/honno/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-01T09:55:09Z",
        "updated_at": "2022-03-01T09:56:35Z",
        "author_association": "NONE",
        "body": "Were you going to implement the (optional) [`linalg` extension](https://data-apis.org/array-api/latest/extensions/linear_algebra_functions.html) here or in a follow-up PR? Curious if you missed it because the test suite skips testing extension functions if not found\u2014I'm wondering if we should actually test them by default and then ask the user to explicitly disable them via our `--disable-extension` flag.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1055239776/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1055857327",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1055857327",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1055857327,
        "node_id": "IC_kwDOAbcwm84-7xqv",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-01T21:06:18Z",
        "updated_at": "2022-03-01T21:06:18Z",
        "author_association": "NONE",
        "body": "Presumably not. I think dask was one of the motivating libraries for making linalg optional. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1055857327/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1057091516",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1057091516",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1057091516,
        "node_id": "IC_kwDOAbcwm84_Ae-8",
        "user": {
            "login": "tomwhite",
            "id": 85085,
            "node_id": "MDQ6VXNlcjg1MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/85085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomwhite",
            "html_url": "https://github.com/tomwhite",
            "followers_url": "https://api.github.com/users/tomwhite/followers",
            "following_url": "https://api.github.com/users/tomwhite/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomwhite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomwhite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomwhite/subscriptions",
            "organizations_url": "https://api.github.com/users/tomwhite/orgs",
            "repos_url": "https://api.github.com/users/tomwhite/repos",
            "events_url": "https://api.github.com/users/tomwhite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomwhite/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-02T16:00:32Z",
        "updated_at": "2022-03-02T16:00:32Z",
        "author_association": "MEMBER",
        "body": "> Were you going to implement the (optional) [`linalg` extension](https://data-apis.org/array-api/latest/extensions/linear_algebra_functions.html) here or in a follow-up PR? Curious if you missed it because the test suite skips testing extension functions if not found\r\n\r\nI missed it out because it's optional and wanted to get the core part working first.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1057091516/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1075084446",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1075084446",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1075084446,
        "node_id": "IC_kwDOAbcwm85AFHye",
        "user": {
            "login": "honno",
            "id": 8246949,
            "node_id": "MDQ6VXNlcjgyNDY5NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8246949?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/honno",
            "html_url": "https://github.com/honno",
            "followers_url": "https://api.github.com/users/honno/followers",
            "following_url": "https://api.github.com/users/honno/following{/other_user}",
            "gists_url": "https://api.github.com/users/honno/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/honno/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/honno/subscriptions",
            "organizations_url": "https://api.github.com/users/honno/orgs",
            "repos_url": "https://api.github.com/users/honno/repos",
            "events_url": "https://api.github.com/users/honno/events{/privacy}",
            "received_events_url": "https://api.github.com/users/honno/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-22T11:55:23Z",
        "updated_at": "2022-03-22T11:56:15Z",
        "author_association": "NONE",
        "body": "We've resolved https://github.com/data-apis/array-api-tests/issues/94 in the latest release of the test suite... finally :sweat_smile: For this branch I got failures for the following with `--max-examples=1`\r\n<details><summary>Failing special cases</summary>\r\n\r\n```\r\nfloor_divide(x1_i is +infinity and isfinite(x2_i) and x2_i > 0) -> +infinity\r\nfloor_divide(x1_i is +infinity and isfinite(x2_i) and x2_i < 0) -> -infinity\r\nfloor_divide(x1_i is -infinity and isfinite(x2_i) and x2_i > 0) -> -infinity\r\nfloor_divide(x1_i is -infinity and isfinite(x2_i) and x2_i < 0) -> +infinity\r\nfloor_divide(isfinite(x1_i) and x1_i > 0 and x2_i is -infinity) -> -0\r\nfloor_divide(isfinite(x1_i) and x1_i < 0 and x2_i is +infinity) -> -0\r\n__floordiv__(x1_i is +infinity and isfinite(x2_i) and x2_i > 0) -> +infinity\r\n__floordiv__(x1_i is +infinity and isfinite(x2_i) and x2_i < 0) -> -infinity\r\n__floordiv__(x1_i is -infinity and isfinite(x2_i) and x2_i > 0) -> -infinity\r\n__floordiv__(x1_i is -infinity and isfinite(x2_i) and x2_i < 0) -> +infinity\r\n__floordiv__(isfinite(x1_i) and x1_i > 0 and x2_i is -infinity) -> -0\r\n__floordiv__(isfinite(x1_i) and x1_i < 0 and x2_i is +infinity) -> -0\r\n__iadd__(x1_i is +infinity and x2_i is -infinity) -> NaN\r\n__iadd__(x1_i is -infinity and x2_i is +infinity) -> NaN\r\n__iadd__(isfinite(x1_i) and x2_i is +infinity) -> +infinity\r\n__iadd__(isfinite(x1_i) and x2_i is -infinity) -> -infinity\r\n__iadd__(x1_i is -0 and x2_i is +0) -> +0\r\n__iadd__((x1_i is +0 or x1_i == -0) and isfinite(x2_i) and x2_i != 0) -> x2_i\r\n__iadd__(isfinite(x1_i) and x1_i != 0 and x2_i == -x1_i) -> +0\r\n__itruediv__((x1_i is +infinity or x1_i == -infinity) and (x2_i is +infinity or x2_i == -infinity)) -> NaN\r\n__itruediv__((x1_i is +0 or x1_i == -0) and (x2_i is +0 or x2_i == -0)) -> NaN\r\n__itruediv__(x1_i is +0 and x2_i < 0) -> -0\r\n__itruediv__(x1_i is -0 and x2_i < 0) -> +0\r\n__itruediv__(x1_i > 0 and x2_i is +0) -> +infinity\r\n__itruediv__(x1_i > 0 and x2_i is -0) -> -infinity\r\n__itruediv__(x1_i < 0 and x2_i is +0) -> -infinity\r\n__itruediv__(x1_i < 0 and x2_i is -0) -> +infinity\r\n__itruediv__(x1_i is +infinity and isfinite(x2_i) and x2_i < 0) -> -infinity\r\n__itruediv__(x1_i is -infinity and isfinite(x2_i) and x2_i < 0) -> +infinity\r\n__itruediv__(isfinite(x1_i) and x1_i > 0 and x2_i is +infinity) -> +0\r\n__itruediv__(isfinite(x1_i) and x1_i > 0 and x2_i is -infinity) -> -0\r\n__itruediv__(isfinite(x1_i) and x1_i < 0 and x2_i is +infinity) -> -0\r\n__itruediv__(isfinite(x1_i) and x1_i < 0 and x2_i is -infinity) -> +0\r\n__itruediv__(copysign(1, x1_i) == copysign(1, x2_i) and isfinite(x1_i) and x1_i != 0 and isfinite(x2_i) and x2_i != 0) -> positive sign\r\n__ifloordiv__((x1_i is +infinity or x1_i == -infinity) and (x2_i is +infinity or x2_i == -infinity)) -> NaN\r\n__ifloordiv__((x1_i is +0 or x1_i == -0) and (x2_i is +0 or x2_i == -0)) -> NaN\r\n__ifloordiv__(x1_i is +0 and x2_i < 0) -> -0\r\n__ifloordiv__(x1_i is -0 and x2_i < 0) -> +0\r\n__ifloordiv__(x1_i > 0 and x2_i is +0) -> +infinity\r\n__ifloordiv__(x1_i > 0 and x2_i is -0) -> -infinity\r\n__ifloordiv__(x1_i < 0 and x2_i is +0) -> -infinity\r\n__ifloordiv__(x1_i < 0 and x2_i is -0) -> +infinity\r\n__ifloordiv__(x1_i is +infinity and isfinite(x2_i) and x2_i < 0) -> -infinity\r\n__ifloordiv__(x1_i is -infinity and isfinite(x2_i) and x2_i < 0) -> +infinity\r\n__ifloordiv__(isfinite(x1_i) and x1_i > 0 and x2_i is +infinity) -> +0\r\n__ifloordiv__(isfinite(x1_i) and x1_i > 0 and x2_i is -infinity) -> -0\r\n__ifloordiv__(isfinite(x1_i) and x1_i < 0 and x2_i is +infinity) -> -0\r\n__ifloordiv__(isfinite(x1_i) and x1_i < 0 and x2_i is -infinity) -> +0\r\n__ifloordiv__(copysign(1, x1_i) == copysign(1, x2_i) and isfinite(x1_i) and x1_i != 0 and isfinite(x2_i) and x2_i != 0) -> positive sign\r\n__imul__((x1_i is +infinity or x1_i == -infinity) and (x2_i is +0 or x2_i == -0)) -> NaN\r\n__imul__((x1_i is +0 or x1_i == -0) and (x2_i is +infinity or x2_i == -infinity)) -> NaN\r\n__ipow__(not x1_i == 1 and x2_i is NaN) -> NaN\r\n__ipow__(x2_i is +0) -> 1\r\n__ipow__(x2_i is -0) -> 1\r\n__ipow__(abs(x1_i) > 1 and x2_i is +infinity) -> +infinity\r\n__ipow__(abs(x1_i) > 1 and x2_i is -infinity) -> +0\r\n__ipow__(abs(x1_i) < 1 and x2_i is -infinity) -> +infinity\r\n__ipow__(x1_i is +infinity and x2_i < 0) -> +0\r\n__ipow__(x1_i is -infinity and x2_i > 0 and not (x2_i.is_integer() and x2_i % 2 == 1)) -> +infinity\r\n__ipow__(x1_i is -infinity and x2_i < 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -0\r\n__ipow__(x1_i is -infinity and x2_i < 0 and not (x2_i.is_integer() and x2_i % 2 == 1)) -> +0\r\n__ipow__(x1_i is +0 and x2_i < 0) -> +infinity\r\n__ipow__(x1_i is -0 and x2_i > 0 and not (x2_i.is_integer() and x2_i % 2 == 1)) -> +0\r\n__ipow__(x1_i is -0 and x2_i < 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -infinity\r\n__ipow__(x1_i is -0 and x2_i < 0 and not (x2_i.is_integer() and x2_i % 2 == 1)) -> +infinity\r\n__ipow__(x1_i < 0 and isfinite(x1_i) and isfinite(x2_i) and not x2_i.is_integer()) -> NaN\r\n```\r\n</details>\r\n\r\nInterestingly it was the case with NumPy too that in-place operators tended to deviate. Special cases seem a bit low priority generally, but also noteworthy that [floordiv](https://data-apis.org/array-api/latest/API_specification/generated/signatures.elementwise_functions.floor_divide.html?highlight=floor%20div#signatures.elementwise_functions.floor_divide) has some of their special cases noted as \"libraries may not implement this\".",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1075084446/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1076450035",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1076450035",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1076450035,
        "node_id": "IC_kwDOAbcwm85AKVLz",
        "user": {
            "login": "tomwhite",
            "id": 85085,
            "node_id": "MDQ6VXNlcjg1MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/85085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomwhite",
            "html_url": "https://github.com/tomwhite",
            "followers_url": "https://api.github.com/users/tomwhite/followers",
            "following_url": "https://api.github.com/users/tomwhite/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomwhite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomwhite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomwhite/subscriptions",
            "organizations_url": "https://api.github.com/users/tomwhite/orgs",
            "repos_url": "https://api.github.com/users/tomwhite/repos",
            "events_url": "https://api.github.com/users/tomwhite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomwhite/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-23T14:35:55Z",
        "updated_at": "2022-03-23T14:35:55Z",
        "author_association": "MEMBER",
        "body": "Thanks for the update @honno!\r\n\r\nIn-place operations are not supported in Dask (#5199), so I included them in `skips.txt`. Similarly, I've skipped special-case tests too for the first iteration of this code.\r\n\r\nI wonder if there's interest in merging this? There are still cases to fix, but as it stands this is passing a good chunk of the array API tests.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1076450035/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1089434392",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1089434392",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1089434392,
        "node_id": "IC_kwDOAbcwm85A73MY",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-05T22:17:09Z",
        "updated_at": "2022-04-05T22:17:09Z",
        "author_association": "MEMBER",
        "body": "@dask/maintenance would be great if a few folks took a look at this and let us know what they thought \ud83d\ude42",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1089434392/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1095251068",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1095251068",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1095251068,
        "node_id": "IC_kwDOAbcwm85BSDR8",
        "user": {
            "login": "tomwhite",
            "id": 85085,
            "node_id": "MDQ6VXNlcjg1MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/85085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomwhite",
            "html_url": "https://github.com/tomwhite",
            "followers_url": "https://api.github.com/users/tomwhite/followers",
            "following_url": "https://api.github.com/users/tomwhite/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomwhite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomwhite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomwhite/subscriptions",
            "organizations_url": "https://api.github.com/users/tomwhite/orgs",
            "repos_url": "https://api.github.com/users/tomwhite/repos",
            "events_url": "https://api.github.com/users/tomwhite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomwhite/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-11T16:07:27Z",
        "updated_at": "2022-04-11T16:07:27Z",
        "author_association": "MEMBER",
        "body": "I just came across this interesting discussion about the feasibility of making the main NumPy namespace converge to the array API: https://github.com/scikit-learn/scikit-learn/issues/22352#issuecomment-1039242226. (TL;DR: it's feasible, but may take a while.)\r\n\r\nAs the current PR shows, Dask's implementation is pretty close already, so I'd like to explore closing the gap via incremental changes to `dask.array`, rather than introducing a new namespace `dask.array_api` at this stage. I think we could get to a good level of compliance with bug fixes and compatible changes. Breaking changes (listed here: https://numpy.org/devdocs/reference/array_api.html), could be left until later, probably following what NumPy chooses to do. Of course, it would always be possible to add a separate namespace at a later point if necessary.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1095251068/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1095252279",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1095252279",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1095252279,
        "node_id": "IC_kwDOAbcwm85BSDk3",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-11T16:08:29Z",
        "updated_at": "2022-04-11T16:08:29Z",
        "author_association": "MEMBER",
        "body": "> https://github.com/orgs/dask/teams/maintenance would be great if a few folks took a look at this and let us know what they thought \ud83d\ude42\r\n\r\nApologies for the lack of response. I'll give this a review over the next couple of days ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1095252279/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1101711207",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1101711207",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1101711207,
        "node_id": "IC_kwDOAbcwm85Bqsdn",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-18T19:56:14Z",
        "updated_at": "2022-04-18T19:56:14Z",
        "author_association": "MEMBER",
        "body": "> As the current PR shows, Dask's implementation is pretty close already, so I'd like to explore closing the gap via incremental changes to `dask.array`, rather than introducing a new namespace `dask.array_api` at this stage. I think we could get to a good level of compliance with bug fixes and compatible changes. Breaking changes (listed here: https://numpy.org/devdocs/reference/array_api.html), could be left until later, probably following what NumPy chooses to do. Of course, it would always be possible to add a separate namespace at a later point if necessary.\r\n\r\nI really like the idea of not introducing a new namespace. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1101711207/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1112854506",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1112854506",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1112854506,
        "node_id": "IC_kwDOAbcwm85CVM_q",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-29T03:59:22Z",
        "updated_at": "2022-04-29T03:59:22Z",
        "author_association": "MEMBER",
        "body": "FWIW NumPy is also introducing a new namespace for this and it may be unavoidable for some kinds of functionality (for example how unknown dimensions in shape are handled). Longer term NumPy plans to replace their current API with the new one created in this separate namespace. We may benefit from following a similar strategy.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1112854506/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1177983440",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1177983440",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1177983440,
        "node_id": "IC_kwDOAbcwm85GNpnQ",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-07T17:39:31Z",
        "updated_at": "2022-07-07T17:39:31Z",
        "author_association": "MEMBER",
        "body": "Any more thoughts on this?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1177983440/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1190520217",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1190520217",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1190520217,
        "node_id": "IC_kwDOAbcwm85G9eWZ",
        "user": {
            "login": "tomwhite",
            "id": 85085,
            "node_id": "MDQ6VXNlcjg1MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/85085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomwhite",
            "html_url": "https://github.com/tomwhite",
            "followers_url": "https://api.github.com/users/tomwhite/followers",
            "following_url": "https://api.github.com/users/tomwhite/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomwhite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomwhite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomwhite/subscriptions",
            "organizations_url": "https://api.github.com/users/tomwhite/orgs",
            "repos_url": "https://api.github.com/users/tomwhite/repos",
            "events_url": "https://api.github.com/users/tomwhite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomwhite/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-20T16:52:06Z",
        "updated_at": "2022-07-20T16:52:06Z",
        "author_association": "MEMBER",
        "body": "> Any more thoughts on this?\r\n\r\nI still think what I said here https://github.com/dask/dask/pull/8750#issuecomment-1095251068, that we shouldn't introduce a new namespace lightly, and we should evolve the current namespace to be as compatible as possible first.\r\n\r\nSo in a sense this is superseded by #8917.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1190520217/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1190540798",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1190540798",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1190540798,
        "node_id": "IC_kwDOAbcwm85G9jX-",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-20T17:13:00Z",
        "updated_at": "2022-07-20T17:13:00Z",
        "author_association": "MEMBER",
        "body": "> > Any more thoughts on this?\r\n> \r\n> I still think what I said here [#8750 (comment)](https://github.com/dask/dask/pull/8750#issuecomment-1095251068), that we shouldn't introduce a new namespace lightly, and we should evolve the current namespace to be as compatible as possible first.\r\n> \r\n> So in a sense this is superseded by #8917.\r\n\r\n@tomwhite, did you have thoughts on this comment ( https://github.com/dask/dask/pull/8750#issuecomment-1112854506 )?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1190540798/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1190565002",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1190565002",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1190565002,
        "node_id": "IC_kwDOAbcwm85G9pSK",
        "user": {
            "login": "ian-r-rose",
            "id": 5728311,
            "node_id": "MDQ6VXNlcjU3MjgzMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5728311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ian-r-rose",
            "html_url": "https://github.com/ian-r-rose",
            "followers_url": "https://api.github.com/users/ian-r-rose/followers",
            "following_url": "https://api.github.com/users/ian-r-rose/following{/other_user}",
            "gists_url": "https://api.github.com/users/ian-r-rose/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ian-r-rose/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ian-r-rose/subscriptions",
            "organizations_url": "https://api.github.com/users/ian-r-rose/orgs",
            "repos_url": "https://api.github.com/users/ian-r-rose/repos",
            "events_url": "https://api.github.com/users/ian-r-rose/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ian-r-rose/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-20T17:36:28Z",
        "updated_at": "2022-07-20T17:36:28Z",
        "author_association": "MEMBER",
        "body": "> > > Any more thoughts on this?\r\n> > \r\n> > \r\n> > I still think what I said here [#8750 (comment)](https://github.com/dask/dask/pull/8750#issuecomment-1095251068), that we shouldn't introduce a new namespace lightly, and we should evolve the current namespace to be as compatible as possible first.\r\n> > So in a sense this is superseded by #8917.\r\n> \r\n> @tomwhite, did you have thoughts on this comment ( [#8750 (comment)](https://github.com/dask/dask/pull/8750#issuecomment-1112854506) )?\r\n\r\nI agree (I think) with @jakirkham that a separate namespace may be unavoidable. I'm particularly thinking of all of the keyword-only and positional-only arguments in the spec, which are great, but are difficult to bolt onto the existing API in a backwards-compatible way.\r\n\r\nThough I would be in favor of making `array_api` a submodule of `dask.array`.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1190565002/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1190712497",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1190712497",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1190712497,
        "node_id": "IC_kwDOAbcwm85G-NSx",
        "user": {
            "login": "tomwhite",
            "id": 85085,
            "node_id": "MDQ6VXNlcjg1MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/85085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomwhite",
            "html_url": "https://github.com/tomwhite",
            "followers_url": "https://api.github.com/users/tomwhite/followers",
            "following_url": "https://api.github.com/users/tomwhite/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomwhite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomwhite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomwhite/subscriptions",
            "organizations_url": "https://api.github.com/users/tomwhite/orgs",
            "repos_url": "https://api.github.com/users/tomwhite/repos",
            "events_url": "https://api.github.com/users/tomwhite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomwhite/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-20T20:15:07Z",
        "updated_at": "2022-07-20T20:15:07Z",
        "author_association": "MEMBER",
        "body": "> > > Any more thoughts on this?\r\n> > \r\n> > \r\n> > I still think what I said here [#8750 (comment)](https://github.com/dask/dask/pull/8750#issuecomment-1095251068), that we shouldn't introduce a new namespace lightly, and we should evolve the current namespace to be as compatible as possible first.\r\n> > So in a sense this is superseded by #8917.\r\n> \r\n> @tomwhite, did you have thoughts on this comment ( [#8750 (comment)](https://github.com/dask/dask/pull/8750#issuecomment-1112854506) )?\r\n\r\nInitially, I was all for adding a new namespace (hence this PR), but the comment by @rgommers here https://github.com/scikit-learn/scikit-learn/issues/22352#issuecomment-1039242226 gave me pause.\r\n\r\nHonestly, I'm not sure what the best way to go is: either i)add a new namespace, or ii) try to converge the existing one. I think it depends on what the wider NumPy ecosystem is aiming to do (and even here there are differences, with CuPy adding a new namespace, and PyTorch evolving the existing one), and what Dask maintainers are comfortable with (there is a variety of views as @jsignell and @ian-r-rose have demonstrated in this PR).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1190712497/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1190725931",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1190725931",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1190725931,
        "node_id": "IC_kwDOAbcwm85G-Qkr",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-20T20:29:43Z",
        "updated_at": "2022-07-20T20:29:43Z",
        "author_association": "MEMBER",
        "body": "Outside of the divergences in APIs already noted, I think the real issue is maintainability.\r\n\r\nIf we disrupt or cause issues in normal Dask Array behavior by adopting this API on top of the existing one, that would be a bad user experience and quite stressful for maintainers here. Sandboxing it in another module that users must opt into provides some protections for these other groups. Also users of a new experimental API are more prepared for rough edges.\r\n\r\nI understand the ease of adoption argument, but I think that is putting the cart before the horse. We need to do this in a safe way that doesn't accidentally harm users today. A separate module does that. Over time this can be gotten rid of as the ecosystem moves forward.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1190725931/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1190728028",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1190728028",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1190728028,
        "node_id": "IC_kwDOAbcwm85G-RFc",
        "user": {
            "login": "leofang",
            "id": 5534781,
            "node_id": "MDQ6VXNlcjU1MzQ3ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5534781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leofang",
            "html_url": "https://github.com/leofang",
            "followers_url": "https://api.github.com/users/leofang/followers",
            "following_url": "https://api.github.com/users/leofang/following{/other_user}",
            "gists_url": "https://api.github.com/users/leofang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leofang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leofang/subscriptions",
            "organizations_url": "https://api.github.com/users/leofang/orgs",
            "repos_url": "https://api.github.com/users/leofang/repos",
            "events_url": "https://api.github.com/users/leofang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leofang/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-20T20:32:04Z",
        "updated_at": "2022-07-20T20:32:04Z",
        "author_association": "NONE",
        "body": ">  and PyTorch evolving the existing one\r\n\r\nIsn't it because PyTorch has the tradition to break compatibility in *every single* release, so they can be as adventurous as they want? \ud83d\ude04",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1190728028/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1193166277",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1193166277",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1193166277,
        "node_id": "IC_kwDOAbcwm85HHkXF",
        "user": {
            "login": "rgommers",
            "id": 98330,
            "node_id": "MDQ6VXNlcjk4MzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rgommers",
            "html_url": "https://github.com/rgommers",
            "followers_url": "https://api.github.com/users/rgommers/followers",
            "following_url": "https://api.github.com/users/rgommers/following{/other_user}",
            "gists_url": "https://api.github.com/users/rgommers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rgommers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rgommers/subscriptions",
            "organizations_url": "https://api.github.com/users/rgommers/orgs",
            "repos_url": "https://api.github.com/users/rgommers/repos",
            "events_url": "https://api.github.com/users/rgommers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rgommers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-23T18:11:37Z",
        "updated_at": "2022-07-23T18:11:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "> I understand the ease of adoption argument, but I think that is putting the cart before the horse. We need to do this in a safe way that doesn't accidentally harm users today. A separate module does that. Over time this can be gotten rid of as the ecosystem moves forward.\r\n\r\nThis isn't quite it. FYI last week in the NumPy dev meeting we decided to put on the NumPy roadmap to converge the main `numpy` namespace towards the array API standard. Timeline is TBD for bc-breaking changes, but there aren't that many (a lot is adding aliases).\r\n\r\nThe separate module isn't actually all that useful. One strictly confirming implementation is needed for testing that downstream libraries/users do not use library-specific features. `numpy.array_api` can serve that purpose. It's probably not ideal to have multiple copies of those. In the consortium meeting of two days ago, we kind of resolved that we need a separate package that is basically a \"compat between `numpy` and array API\" module, kind of a superset of what scikit-learn and SciPy finding they need to support both `numpy` and all array API compliant implementations. @jakirkham did that discussion change your perspective on this topic?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1193166277/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1202616242",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1202616242",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1202616242,
        "node_id": "IC_kwDOAbcwm85Hrney",
        "user": {
            "login": "tomwhite",
            "id": 85085,
            "node_id": "MDQ6VXNlcjg1MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/85085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomwhite",
            "html_url": "https://github.com/tomwhite",
            "followers_url": "https://api.github.com/users/tomwhite/followers",
            "following_url": "https://api.github.com/users/tomwhite/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomwhite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomwhite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomwhite/subscriptions",
            "organizations_url": "https://api.github.com/users/tomwhite/orgs",
            "repos_url": "https://api.github.com/users/tomwhite/repos",
            "events_url": "https://api.github.com/users/tomwhite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomwhite/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-08-02T13:51:37Z",
        "updated_at": "2022-08-02T13:51:37Z",
        "author_association": "MEMBER",
        "body": "Thanks for the update @rgommers.\r\n\r\n> In the consortium meeting of two days ago, we kind of resolved that we need a separate package that is basically a \"compat between `numpy` and array API\" module, kind of a superset of what scikit-learn and SciPy finding they need to support both `numpy` and all array API compliant implementations.\r\n\r\nIs there somewhere to track this work?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1202616242/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1434382525",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1434382525",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1434382525,
        "node_id": "IC_kwDOAbcwm85VfvC9",
        "user": {
            "login": "honno",
            "id": 8246949,
            "node_id": "MDQ6VXNlcjgyNDY5NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8246949?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/honno",
            "html_url": "https://github.com/honno",
            "followers_url": "https://api.github.com/users/honno/followers",
            "following_url": "https://api.github.com/users/honno/following{/other_user}",
            "gists_url": "https://api.github.com/users/honno/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/honno/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/honno/subscriptions",
            "organizations_url": "https://api.github.com/users/honno/orgs",
            "repos_url": "https://api.github.com/users/honno/repos",
            "events_url": "https://api.github.com/users/honno/events{/privacy}",
            "received_events_url": "https://api.github.com/users/honno/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-17T09:38:48Z",
        "updated_at": "2023-02-17T09:38:48Z",
        "author_association": "NONE",
        "body": "> Is there somewhere to track this work?\r\n\r\nThis now lives in https://github.com/data-apis/array-api-compat, which has a compat layer for both NumPy and CuPy, and PyTorch soon too.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1434382525/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1435331589",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1435331589",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1435331589,
        "node_id": "IC_kwDOAbcwm85VjWwF",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-17T22:10:01Z",
        "updated_at": "2023-02-17T22:10:01Z",
        "author_association": "NONE",
        "body": "Yes, please try out array-api-compat and let me know if you find any issues. Or if there are any ideas from this work that aren't done in array-api-compat let me know and we can see if adding them there makes sense. The idea is for it to become a general wrapper library that things like Dask can use to better make use of the array API. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1435331589/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1438365157",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1438365157",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1438365157,
        "node_id": "IC_kwDOAbcwm85Vu7Xl",
        "user": {
            "login": "tomwhite",
            "id": 85085,
            "node_id": "MDQ6VXNlcjg1MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/85085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomwhite",
            "html_url": "https://github.com/tomwhite",
            "followers_url": "https://api.github.com/users/tomwhite/followers",
            "following_url": "https://api.github.com/users/tomwhite/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomwhite/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomwhite/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomwhite/subscriptions",
            "organizations_url": "https://api.github.com/users/tomwhite/orgs",
            "repos_url": "https://api.github.com/users/tomwhite/repos",
            "events_url": "https://api.github.com/users/tomwhite/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomwhite/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-21T12:04:58Z",
        "updated_at": "2023-02-21T12:04:58Z",
        "author_association": "MEMBER",
        "body": "Thanks @honno and @asmeurer.\r\n\r\nIt looks like array-api-compat could be extended to provide a compatibility layer for Dask too? (It could also be used by Dask to provide uniform access to the underlying array library - NumPy or CuPy, for example - but that is a different thing to what's being discussed here.)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1438365157/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1439275922",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1439275922",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1439275922,
        "node_id": "IC_kwDOAbcwm85VyZuS",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-22T00:39:41Z",
        "updated_at": "2023-02-22T00:39:41Z",
        "author_association": "NONE",
        "body": "I opened an issue where we can discuss it https://github.com/data-apis/array-api-compat/issues/17. It makes sense if consumer libraries will want to use Dask alongside other array API compliant libraries like NumPy, CuPy, and PyTorch, and also Dask itself doesn't want to necessarily update all its APIs to be conformant right away (e.g., due to backwards compatibility concerns). \r\n\r\nFor Dask itself using the compat library, if you end up using it, please let me know how it works out and if you run into any problems. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1439275922/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1442374246",
        "html_url": "https://github.com/dask/dask/pull/8750#issuecomment-1442374246",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8750",
        "id": 1442374246,
        "node_id": "IC_kwDOAbcwm85V-OJm",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-02-23T20:15:22Z",
        "updated_at": "2023-02-23T20:15:22Z",
        "author_association": "MEMBER",
        "body": "Am curious how we should look at this in relation to [the configurable backend work]( https://gist.github.com/rjzamora/b280e4c8d8b71366925585c307e274e4 )?\r\n\r\nMaybe Array API could be a different kind of Array backend or an additional configuration on existing backends?\r\n\r\n@rjzamora do you have any thoughts on this? \ud83d\ude42",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1442374246/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]