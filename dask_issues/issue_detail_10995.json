{
    "url": "https://api.github.com/repos/dask/dask/issues/10995",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10995/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10995/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10995/events",
    "html_url": "https://github.com/dask/dask/issues/10995",
    "id": 2181216069,
    "node_id": "I_kwDOAbcwm86CArdF",
    "number": 10995,
    "title": "Feedback - DataFrame query planning",
    "user": {
        "login": "fjetter",
        "id": 8629629,
        "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjetter",
        "html_url": "https://github.com/fjetter",
        "followers_url": "https://api.github.com/users/fjetter/followers",
        "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
        "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
        "organizations_url": "https://api.github.com/users/fjetter/orgs",
        "repos_url": "https://api.github.com/users/fjetter/repos",
        "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fjetter/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 1372867996,
            "node_id": "MDU6TGFiZWwxMzcyODY3OTk2",
            "url": "https://api.github.com/repos/dask/dask/labels/discussion",
            "name": "discussion",
            "color": "bebaf4",
            "default": false,
            "description": "Discussing a topic with no specific actions yet"
        },
        {
            "id": 6649512058,
            "node_id": "LA_kwDOAbcwm88AAAABjFeAeg",
            "url": "https://api.github.com/repos/dask/dask/labels/dask-expr",
            "name": "dask-expr",
            "color": "FBCA04",
            "default": false,
            "description": ""
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2024-03-12T10:07:17Z",
    "updated_at": "2024-06-04T10:54:50Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "The latest release `2024.3.0` enabled query planning for `DataFrame`s by default. This issue can be used to report feedback and ask related questions.\r\n\r\nIf you encountered a bug or unexpected behavior, please check if you got the most recent version of `dask-expr` installed. This is a separate package with a decoupled release process allowing us to roll out hotfixes quickly.\r\nIf you are still encountering issues after an update, please open an issue with a reproducer and we will respond as soon as possible.\r\n\r\nSee below for a list of known issues and/or check the [issue tracker](https://github.com/dask/dask/issues?q=is%3Aopen+is%3Aissue+label%3Adask-expr)\r\n\r\n## Brief introduction\r\n\r\nThe legacy DataFrame implementation did not offer a way to optimize your query and `dask` executed whatever you requested literally. In many situations this was suboptimal and could cause significant performance overhead.\r\n\r\nLet's take a simple example by using the NYC Uber/Lyft dataset\r\n\r\n```python\r\ndf = read_parquet(\r\n    \"s3://coiled-datasets/uber-lyft-tlc/\",\r\n    filesystem='pyarrow',\r\n)\r\ndf = df[df.hvfhs_license_num == \"HV0003\"] \r\nresult = df.sum(numeric_only=True)[\"tips\"]\r\n\r\n```\r\n\r\nThis query loads the data, applies a filter on the vendor, calculates a sum and picks a single column for the result. The legacy `DataFrame` would load **all** data, only then apply the filter, compute the sum over all columns and then throw all the data away since we're only interested in a single column.\r\n\r\nAdvanced users may be tempted to rewrite this to an optimized version that provides the required columns and filters to the ``read_parquet`` call already but this is now done automatically for you. After optimization, the above query is identical to\r\n\r\n```python\r\ndf_man_opt = dd.read_parquet(\r\n    \"s3://coiled-datasets/uber-lyft-tlc/\",\r\n    columns=[\"tips\"],\r\n    filters=[(\"hvfhs_license_num\", \"==\", \"HV0003\")],\r\n)\r\nresult_man_opt = df_man_opt.sum(numeric_only=True)\r\n```\r\n\r\nwhich loads only the required columns from storage and applies filters even on rowgroup level, if applicable.\r\n\r\n```python\r\nresult.simplify().pprint()\r\n\r\nProjection: columns='tips'\r\n  Sum: numeric_only=True\r\n    ReadParquetPyarrowFS: path='s3://coiled-datasets/uber-lyft-tlc/' columns=['tips'] filters=[[('hvfhs_license_num', '==', 'HV0003')]] filesystem='pyarrow'\r\n```\r\n\r\nColumn projection and predicate pushdown are only some of the most obvious optimizations that are performed automaticaly for you.\r\n\r\nSee for yourself and let us know what you think.\r\n\r\n\r\n## Known issues\r\n\r\n### `dask-expr` is not installed when updating dask\r\n\r\nWhen using a package manager like `pip` it can happen that an upgrade like `pip update dask` does not pull in the extra dependencies of `dask.dataframe`. To ensure all dependencies are installed, please install `dask[dataframe]` or use `conda install dask`\r\n\r\n### Pandas copy-on-write enabled as an import side effect\r\n\r\nPrior to version dask-expr==1.0.2, importing dask.dataframe set the pandas option copy-on-write to True\r\n\r\nSee also https://github.com/dask/dask/issues/10996",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10995/reactions",
        "total_count": 8,
        "+1": 6,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 2,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10995/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}