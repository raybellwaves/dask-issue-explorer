{
    "url": "https://api.github.com/repos/dask/dask/issues/10366",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10366/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10366/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10366/events",
    "html_url": "https://github.com/dask/dask/issues/10366",
    "id": 1765861496,
    "node_id": "I_kwDOAbcwm85pQOh4",
    "number": 10366,
    "title": "RecursionError: maximum recursion depth exceeded while calling a Python object",
    "user": {
        "login": "QianqianHan96",
        "id": 90645468,
        "node_id": "MDQ6VXNlcjkwNjQ1NDY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/90645468?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/QianqianHan96",
        "html_url": "https://github.com/QianqianHan96",
        "followers_url": "https://api.github.com/users/QianqianHan96/followers",
        "following_url": "https://api.github.com/users/QianqianHan96/following{/other_user}",
        "gists_url": "https://api.github.com/users/QianqianHan96/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/QianqianHan96/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/QianqianHan96/subscriptions",
        "organizations_url": "https://api.github.com/users/QianqianHan96/orgs",
        "repos_url": "https://api.github.com/users/QianqianHan96/repos",
        "events_url": "https://api.github.com/users/QianqianHan96/events{/privacy}",
        "received_events_url": "https://api.github.com/users/QianqianHan96/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-06-20T17:41:32Z",
    "updated_at": "2023-07-24T01:54:47Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!-- Please include a self-contained copy-pastable example that generates the issue if possible.\r\n\r\nPlease be concise with code posted. See guidelines below on how to provide a good bug report:\r\n\r\n- Craft Minimal Bug Reports http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports\r\n- Minimal Complete Verifiable Examples https://stackoverflow.com/help/mcve\r\n\r\nBug reports that follow these guidelines are easier to diagnose, and so are often handled much more quickly.\r\n-->\r\n\r\n**Describe the issue**:\r\nWhen I loop 1500 times, there is no problem, but when I loop 17000 times I got the following error: \r\n\r\nTraceback (most recent call last):\r\n  File \"/home/qiahan/.conda/envs/firstEnv/lib/python3.9/site-packages/xarray/core/variable.py\", line 264, in _as_array_or_item\r\n    data = np.asarray(data)\r\n  File \"/home/qiahan/.local/lib/python3.9/site-packages/dask/array/core.py\", line 1701, in __array__\r\n    x = self.compute()\r\n  File \"/home/qiahan/.local/lib/python3.9/site-packages/dask/base.py\", line 314, in compute\r\n    (result,) = compute(self, traverse=False, **kwargs)\r\n  File \"/home/qiahan/.local/lib/python3.9/site-packages/dask/base.py\", line 599, in compute\r\n    results = schedule(dsk, keys, **kwargs)\r\n  File \"/home/qiahan/.local/lib/python3.9/site-packages/dask/threaded.py\", line 89, in get\r\n    results = get_async(\r\n  File \"/home/qiahan/.local/lib/python3.9/site-packages/dask/local.py\", line 511, in get_async\r\n    raise_exception(exc, tb)\r\n  File \"/home/qiahan/.local/lib/python3.9/site-packages/dask/local.py\", line 319, in reraise\r\n    raise exc\r\n  File \"/home/qiahan/.local/lib/python3.9/site-packages/dask/local.py\", line 224, in execute_task\r\n    result = _execute_task(task, data)\r\n  File \"/home/qiahan/.local/lib/python3.9/site-packages/dask/core.py\", line 119, in _execute_task\r\n    return func(*(_execute_task(a, cache) for a in args))\r\nRecursionError: maximum recursion depth exceeded while calling a Python object\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nfor count_i,t in enumerate(all_resample.time.to_numpy()[96:17137],96):#zip(range(100), all_resample.time.to_numpy()[500:502]): \r\n      print(t)\r\n      ds_era5land = all_resample.sel(time=t, method='nearest').compute()\r\n      ds = xr.merge([ds_era5land])\r\n      ds_ss = xr.Dataset()\r\n      ds_ss[\"Rin\"] = Rin.sel(time=t, method='nearest').compute()\r\n      ds_ss[\"Rli\"] = Rli.sel(time=t, method='nearest').compute()\r\n      ds_ss[\"p\"] = ds[\"sp\"]/100   # Pa -> hPa\r\n      ds_ss[\"Ta\"] = ds[\"t2m\"] - 273.15  # K -> degC\r\n      ds_ss[\"ea\"] = vc.calculate_es(ds[\"d2m\"] - 273.15)\r\n      ds_ss[\"u\"] = (ds[\"u10\"] ** 2 + ds[\"v10\"] ** 2) ** 0.5\r\n      ds_ss[\"Precip_msr\"] = ds[\"tp\"]*1000   # mm\r\n      ds_ss['LAI'] = lai.sel(time=t, method='nearest').compute()\r\n      ds_ss['CO2'] = ds_co2_10km.sel(time=t, method='nearest').compute()\r\n      ds_ss['SSM'] = SSM.sel(time=t, method='nearest').compute()\r\n\r\n      ds_ss = ds_ss.to_array()\r\n      Rin_line = ds_ss[0,:,:].to_numpy().reshape(1, ds_ss.latitude.size*ds_ss.longitude.size)\r\n      Rli_line = ds_ss[1,:,:].to_numpy().reshape(1, ds_ss.latitude.size*ds_ss.longitude.size)\r\n      p_line = ds_ss[2,:,:].to_numpy().reshape(1, ds_ss.latitude.size*ds_ss.longitude.size)\r\n      Ta_line = ds_ss[3,:,:].to_numpy().reshape(1, ds_ss.latitude.size*ds_ss.longitude.size)\r\n      ea_line = ds_ss[4,:,:].to_numpy().reshape(1, ds_ss.latitude.size*ds_ss.longitude.size)\r\n      u_line = ds_ss[5,:,:].to_numpy().reshape(1, ds_ss.latitude.size*ds_ss.longitude.size)\r\n      Precip_msr_line = ds_ss[6,:,:].to_numpy().reshape(1, ds_ss.latitude.size*ds_ss.longitude.size)\r\n      LAI_line = ds_ss[7,:,:].to_numpy().reshape(1, ds_ss.latitude.size*ds_ss.longitude.size)\r\n      CO2_line = ds_ss[8,:,:].to_numpy().reshape(1, ds_ss.latitude.size*ds_ss.longitude.size)\r\n      SSM_line = ds_ss[9,:,:].to_numpy().reshape(1, ds_ss.latitude.size*ds_ss.longitude.size)\r\n\r\n      features_arr = np.concatenate((Rin_line, Rli_line, p_line, Ta_line,ea_line, u_line, Precip_msr_line,\r\n                                     LAI_line, hc_line, CO2_line, SSM_line, Vcmo_line,\r\n                                     IGBP1, IGBP2, IGBP3,IGBP4,IGBP5,IGBP6,IGBP7,IGBP8,IGBP9,IGBP10,IGBP11))\r\n      features_arr = features_arr.transpose()\r\n\r\n      # Nan value.\r\n      df_features = pd.DataFrame(data=features_arr)\r\n      df_features_drop_nan = df_features.dropna()\r\n      invalid_index = sorted(set(df_features.index.to_list()) - set(df_features_drop_nan.index.to_list()))\r\n\r\n      # # Convert the nan value as 0 for the calculation\r\n      where_are_NaNs = np.isnan(features_arr)\r\n      features_arr[where_are_NaNs] = 0\r\n\r\n      estimated_LEH = rfLEHmulti.predict(features_arr)\r\n```\r\n\r\n**Anything else we need to know?**:\r\n\r\n**Environment**:\r\n\r\n- Dask version:2023.1.0\r\n- Python version:3.9.16\r\n- Operating System:linux\r\n- Install method (conda, pip, source):conda\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10366/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10366/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}