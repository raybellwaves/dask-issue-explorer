[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1252637386",
        "html_url": "https://github.com/dask/dask/issues/9508#issuecomment-1252637386",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9508",
        "id": 1252637386,
        "node_id": "IC_kwDOAbcwm85KqbrK",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-20T16:55:42Z",
        "updated_at": "2022-09-20T16:55:42Z",
        "author_association": "MEMBER",
        "body": "Here's an example of what this might look like for `p2p`\r\n\r\n```diff\r\ndiff --git a/dask/core.py b/dask/core.py\r\nindex 751f8f345..bfeffce04 100644\r\n--- a/dask/core.py\r\n+++ b/dask/core.py\r\n@@ -532,3 +532,6 @@ def quote(x):\r\n     if istask(x) or type(x) is list or type(x) is dict:\r\n         return (literal(x),)\r\n     return x\r\n+\r\n+class ExperimentalFeatureWarning(Warning):\r\n+    \"\"\"A warning given when an experimental feature still under development is being used\"\"\"\r\n\\ No newline at end of file\r\ndiff --git a/dask/dataframe/shuffle.py b/dask/dataframe/shuffle.py\r\nindex 0c359e2ee..914dcf20e 100644\r\n--- a/dask/dataframe/shuffle.py\r\n+++ b/dask/dataframe/shuffle.py\r\n@@ -15,6 +15,7 @@ from pandas.api.types import is_numeric_dtype\r\n\r\n from dask import config\r\n from dask.base import compute, compute_as_if_collection, is_dask_collection, tokenize\r\n+from dask.core import ExperimentalFeatureWarning\r\n from dask.dataframe import methods\r\n from dask.dataframe.core import DataFrame, Series, _Frame, map_partitions, new_dd_object\r\n from dask.dataframe.dispatch import group_split_dispatch, hash_object_dispatch\r\n@@ -520,6 +521,12 @@ def rearrange_by_column(\r\n             df2._meta = df2._meta.reset_index(drop=True)\r\n         return df2\r\n     elif shuffle == \"p2p\":\r\n+        warnings.warn(\r\n+            \"Dask's `p2p` shuffling algorithm is considered experimental. \"\r\n+            \"If you encounter issues or have feedback on this feature, please leave a \"\r\n+            \"comment on <include-link-to-github-issue>.\",\r\n+            ExperimentalFeatureWarning,\r\n+        )\r\n         from distributed.shuffle import rearrange_by_column_p2p\r\n\r\n         return rearrange_by_column_p2p(df, col, npartitions)\r\n```\r\n\r\nThis is also nice because we can open an issue for feedback on a specific feature and then point users to that issue in the warning. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1252637386/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1252999109",
        "html_url": "https://github.com/dask/dask/issues/9508#issuecomment-1252999109",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9508",
        "id": 1252999109,
        "node_id": "IC_kwDOAbcwm85Krz_F",
        "user": {
            "login": "gjoseph92",
            "id": 3309802,
            "node_id": "MDQ6VXNlcjMzMDk4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjoseph92",
            "html_url": "https://github.com/gjoseph92",
            "followers_url": "https://api.github.com/users/gjoseph92/followers",
            "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
            "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
            "repos_url": "https://api.github.com/users/gjoseph92/repos",
            "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-20T22:58:43Z",
        "updated_at": "2022-09-20T22:58:43Z",
        "author_association": "MEMBER",
        "body": "I think this is a good idea. It's certainly a better idea than having unstable/experimental things like this in the codebase with no warning or documentation around their instability!\r\n\r\nIt would also be good to have a corresponding way of noting it in the docs. Perhaps overcomplicated, but you could imagine an `@experimental` decorator which both emits the warning at runtime, and inserts a note into the docstring.\r\n\r\nIf we add this, it might be good to also retroactively apply it to some things in distributed that are less stable or thoroughly tested (cc @hayesgb).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1252999109/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1253536259",
        "html_url": "https://github.com/dask/dask/issues/9508#issuecomment-1253536259",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9508",
        "id": 1253536259,
        "node_id": "IC_kwDOAbcwm85Kt3ID",
        "user": {
            "login": "crusaderky",
            "id": 6213168,
            "node_id": "MDQ6VXNlcjYyMTMxNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6213168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crusaderky",
            "html_url": "https://github.com/crusaderky",
            "followers_url": "https://api.github.com/users/crusaderky/followers",
            "following_url": "https://api.github.com/users/crusaderky/following{/other_user}",
            "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions",
            "organizations_url": "https://api.github.com/users/crusaderky/orgs",
            "repos_url": "https://api.github.com/users/crusaderky/repos",
            "events_url": "https://api.github.com/users/crusaderky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crusaderky/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-21T10:55:43Z",
        "updated_at": "2022-09-21T10:55:43Z",
        "author_association": "MEMBER",
        "body": "I like the idea.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1253536259/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1253664876",
        "html_url": "https://github.com/dask/dask/issues/9508#issuecomment-1253664876",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9508",
        "id": 1253664876,
        "node_id": "IC_kwDOAbcwm85KuWhs",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-21T12:50:09Z",
        "updated_at": "2022-09-21T12:50:09Z",
        "author_association": "MEMBER",
        "body": "Seems like a good idea to me.\r\n\r\n>It would also be good to have a corresponding way of noting it in the docs. Perhaps overcomplicated, but you could imagine an @experimental decorator which both emits the warning at runtime, and inserts a note into the docstring.\r\n\r\nI like this - Do you think a decorator could be used to mark a specific parameter for a given API?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1253664876/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1253883230",
        "html_url": "https://github.com/dask/dask/issues/9508#issuecomment-1253883230",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9508",
        "id": 1253883230,
        "node_id": "IC_kwDOAbcwm85KvL1e",
        "user": {
            "login": "gjoseph92",
            "id": 3309802,
            "node_id": "MDQ6VXNlcjMzMDk4MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gjoseph92",
            "html_url": "https://github.com/gjoseph92",
            "followers_url": "https://api.github.com/users/gjoseph92/followers",
            "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
            "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
            "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
            "repos_url": "https://api.github.com/users/gjoseph92/repos",
            "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-21T15:37:02Z",
        "updated_at": "2022-09-21T15:37:02Z",
        "author_association": "MEMBER",
        "body": "> Do you think a decorator could be used to mark a specific parameter for a given API\r\n\r\nProbably not. With some docstring parsing, yes, but I have a feeling that would be overengineering",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1253883230/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]