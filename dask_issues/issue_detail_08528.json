{
    "url": "https://api.github.com/repos/dask/dask/issues/8528",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/8528/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/8528/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/8528/events",
    "html_url": "https://github.com/dask/dask/issues/8528",
    "id": 1093459110,
    "node_id": "I_kwDOAbcwm85BLNym",
    "number": 8528,
    "title": "From Delayed throws exception when column names are out of order",
    "user": {
        "login": "mlahir1",
        "id": 24844705,
        "node_id": "MDQ6VXNlcjI0ODQ0NzA1",
        "avatar_url": "https://avatars.githubusercontent.com/u/24844705?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mlahir1",
        "html_url": "https://github.com/mlahir1",
        "followers_url": "https://api.github.com/users/mlahir1/followers",
        "following_url": "https://api.github.com/users/mlahir1/following{/other_user}",
        "gists_url": "https://api.github.com/users/mlahir1/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mlahir1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mlahir1/subscriptions",
        "organizations_url": "https://api.github.com/users/mlahir1/orgs",
        "repos_url": "https://api.github.com/users/mlahir1/repos",
        "events_url": "https://api.github.com/users/mlahir1/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mlahir1/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2022-01-04T15:20:19Z",
    "updated_at": "2022-01-19T17:11:44Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Exception**\r\n```\r\nValueError: The columns in the computed data do not match the columns in the provided metadataOrder of columns does not match\r\n```\r\n**Repro code**\r\n```\r\nfrom dask.dataframe import from_delayed\r\nfrom dask.delayed import delayed\r\nimport numpy as np\r\nimport cudf\r\n \r\ndef make_df(x):\r\n    a = [['a', 'b', 'c'], ['b', 'a', 'c'], ['b', 'c', 'a']]\r\n    df = cudf.DataFrame()\r\n    for c in a[x]:\r\n        df[c] = np.random.randint(20, size=10)\r\n    return df\r\n \r\nxx = from_delayed([delayed(make_df)(i%3) for i in range(100)])\r\nxx.compute()\r\n```\r\n**Note**: Same issue happens with pandas dfs too.\r\n\r\nThis happens in our library when we try to read multiple files as delayed dataframes and when partitions data in hive as columns in these data frames. For example:\r\n```\r\ndef fun(f):\r\n    df = cudf.read_orc(f)\r\n    return df\r\n \r\nfrom_delayed([delayed(fun)(f) for f in files]).compute()\r\n```\r\n\r\nWorks fine but if I pass in partition param and add it to df I run into the error.\r\n```\r\ndef fun(f, col, val):\u00a0\u00a0\u00a0 \r\n    df = cudf.read_orc(f)\r\n\u00a0\u00a0\u00a0 df[col] =val\r\n\u00a0\u00a0\u00a0 return df[cols]\r\n\r\nfrom_delayed([delayed(fun)(f, \u2018date\u2019, \u20182020-11-12\u2019) for f in files]).compute()\r\n\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/8528/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/8528/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}