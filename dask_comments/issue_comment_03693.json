[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/401567338",
        "html_url": "https://github.com/dask/dask/issues/3693#issuecomment-401567338",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3693",
        "id": 401567338,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTU2NzMzOA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-30T21:29:07Z",
        "updated_at": "2018-06-30T21:29:07Z",
        "author_association": "MEMBER",
        "body": "That would be pretty cool if someone can make it happen\n\nOn Sat, Jun 30, 2018 at 2:43 PM, Brett Naul <notifications@github.com>\nwrote:\n\n> More of a discussion prompt than anything else: the new\n> <https://www.python.org/dev/peps/pep-0553/> breakpoint() functionality\n> got me thinking about how it might be used to facilitate debugging dask\n> workflows. For local dask code it's maybe easy enough already to switch to\n> the synchronous scheduler and use pdb directly, but for distributed code\n> especially it can be quite cumbersome. Maybe something in the vein of launching\n> IPython\n> <http://distributed.readthedocs.io/en/latest/ipython.html#launch-ipython-within-dask-workers>\n> could called on breakpoint and block until debugging is finished?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3693>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AASszM5GJcGfk9-HK59hbxDc-iKz8k2aks5uB8bUgaJpZM4U-EMs>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/401567338/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/403475088",
        "html_url": "https://github.com/dask/dask/issues/3693#issuecomment-403475088",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3693",
        "id": 403475088,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzQ3NTA4OA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-09T13:17:32Z",
        "updated_at": "2018-07-09T13:17:32Z",
        "author_association": "MEMBER",
        "body": "In a side conversation @bnaul said the following:\r\n\r\n> I tried web_pdb as suggested here https://hackernoon.com/python-3-7s-new-builtin-breakpoint-a-quick-tour-4f1aebc444c, it's actually quite nice but I feel like the ideal version would be: worker logs \"run the following to command to connect to ipython: <...>\" and then from an ipython shell I can copy/paste to get into that thread\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/403475088/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/403475471",
        "html_url": "https://github.com/dask/dask/issues/3693#issuecomment-403475471",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3693",
        "id": 403475471,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzQ3NTQ3MQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-09T13:18:40Z",
        "updated_at": "2018-07-09T13:18:40Z",
        "author_association": "MEMBER",
        "body": "Yeah, something like that might work.  I especially like that it doesn't require any work on the Dask side :)\r\n\r\nI wonder if there is some remote PDB mechansim that could be enabled through IPython kernels.  ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/403475471/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]