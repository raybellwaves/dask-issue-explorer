{
    "url": "https://api.github.com/repos/dask/dask/issues/10518",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10518/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10518/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10518/events",
    "html_url": "https://github.com/dask/dask/issues/10518",
    "id": 1902861433,
    "node_id": "I_kwDOAbcwm85xa1x5",
    "number": 10518,
    "title": "JIT graph building",
    "user": {
        "login": "BrandonSmithJ",
        "id": 1062829,
        "node_id": "MDQ6VXNlcjEwNjI4Mjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1062829?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonSmithJ",
        "html_url": "https://github.com/BrandonSmithJ",
        "followers_url": "https://api.github.com/users/BrandonSmithJ/followers",
        "following_url": "https://api.github.com/users/BrandonSmithJ/following{/other_user}",
        "gists_url": "https://api.github.com/users/BrandonSmithJ/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/BrandonSmithJ/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/BrandonSmithJ/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonSmithJ/orgs",
        "repos_url": "https://api.github.com/users/BrandonSmithJ/repos",
        "events_url": "https://api.github.com/users/BrandonSmithJ/events{/privacy}",
        "received_events_url": "https://api.github.com/users/BrandonSmithJ/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2023-09-19T12:20:46Z",
    "updated_at": "2024-01-08T01:46:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Here's a motivating example for what I'm referring to:\r\n\r\n```python\r\nimport dask.array as da \r\nimport time \r\n\r\nzero = da.zeros((10000,5000,5000,5), dtype='float32', chunks=(1000,500,25,1))\r\ndata = da.overlap.overlap(zero, depth={0:10, 1:2, 2:2}, boundary=-1)\r\n\r\n\r\n# Compiling the graph takes ~43 seconds for ~4.3 million tasks\r\nstart = time.time()\r\ntasks = len(data.dask)\r\nprint(f'{time.time()-start:.2f} seconds to compile graph')\r\nprint(f'Graph contains {tasks:,} tasks')\r\n\r\n# Computing the first block takes ~3 seconds since the graph is now compiled\r\nstart = time.time()\r\ndata.blocks[0,0,0,0].compute()\r\nprint(f'{time.time()-start:.2f} seconds to compute the first block\\n')\r\n\r\n\r\n# Create a fresh data graph\r\ndata = da.overlap.overlap(zero, depth={0:10, 1:2, 2:2}, boundary=-1)\r\n\r\n# Computing the first block immediately takes ~43 seconds (as it will\r\n# interally compile the whole graph, thus taking around the same time)\r\nstart = time.time()\r\ndata.blocks[0,0,0,0].compute()\r\nprint(f'{time.time()-start:.2f} seconds to compute the first block')\r\n\r\n# Computing any other blocks is quick, now that the graph is compiled\r\nstart = time.time()\r\ndata.blocks[1,0,0,0].compute()\r\nprint(f'{time.time()-start:.2f} seconds to compute a different block')\r\n\r\n# Graph is already compiled, so checking total tasks is now immediate\r\nstart = time.time()\r\ntasks = len(data.dask)\r\nprint(f'{time.time()-start:.2f} seconds to compile graph')\r\nprint(f'Graph contains {tasks:,} tasks')\r\n```\r\n\r\nIn the actual data I'm working with, the graph takes a significant amount of time to create before the first block can even start work. \r\n\r\nIn this case it's due to the rather large amount of operations that need to take place in `dask.layers.ArrayOverlapLayer`, but the general idea I'm discussing is: how feasible would it be to allow just-in-time graph compilation, in order to remove startup time dependency on the size of the data / overall number of tasks? Is it possible to allow compiling only the exact task dependency graph for a given object when it's computed, rather than having to build all tasks at the outset?",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10518/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10518/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}