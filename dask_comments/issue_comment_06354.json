[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/651292163",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-651292163",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 651292163,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTI5MjE2Mw==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-29T18:40:36Z",
        "updated_at": "2020-06-29T18:40:36Z",
        "author_association": "MEMBER",
        "body": "Going through dataframe isn't necessary. This issue is the unknown chunks. This operation fails when discovering the output dtype.\r\n\r\n```pytb\r\nIn [71]: a = da.ones((4,), dtype='datetime64[ns]')\r\n\r\nIn [72]: a._chunks\r\nOut[72]: ((4,),)\r\n\r\nIn [73]: a._chunks = ((np.nan,),)\r\n\r\nIn [74]: a.min()\r\n---------------------------------------------------------------------------\r\nUFuncTypeError                            Traceback (most recent call last)\r\n<ipython-input-74-8f6244b3691f> in <module>\r\n----> 1 a.min()\r\n\r\n~/sandbox/dask/dask/array/core.py in min(self, axis, keepdims, split_every, out)\r\n   1960         from .reductions import min\r\n   1961\r\n-> 1962         return min(self, axis=axis, keepdims=keepdims, split_every=split_every, out=out)\r\n   1963\r\n   1964     @derived_from(np.ndarray)\r\n\r\n~/sandbox/dask/dask/array/reductions.py in min(a, axis, keepdims, split_every, out)\r\n    371         dtype=a.dtype,\r\n    372         split_every=split_every,\r\n--> 373         out=out,\r\n    374     )\r\n    375\r\n\r\n~/sandbox/dask/dask/array/reductions.py in reduction(x, chunk, aggregate, axis, keepdims, dtype, split_every, combine, name, out, concatenate, output_size, meta)\r\n    184         name=name,\r\n    185         concatenate=concatenate,\r\n--> 186         reduced_meta=reduced_meta,\r\n    187     )\r\n    188     if keepdims and output_size != 1:\r\n\r\n~/sandbox/dask/dask/array/reductions.py in _tree_reduce(x, aggregate, axis, keepdims, dtype, split_every, combine, name, concatenate, reduced_meta)\r\n    249         dtype=dtype,\r\n    250         name=(name or funcname(aggregate)) + \"-aggregate\",\r\n--> 251         reduced_meta=reduced_meta,\r\n    252     )\r\n    253\r\n\r\n~/sandbox/dask/dask/array/reductions.py in partial_reduce(func, x, split_every, keepdims, dtype, name, reduced_meta)\r\n    313     if is_arraylike(meta) and meta.ndim != len(out_chunks):\r\n    314         if len(out_chunks) == 0:\r\n--> 315             meta = meta.sum()\r\n    316         else:\r\n    317             meta = meta.reshape((0,) * len(out_chunks))\r\n\r\n~/Envs/dask-dev/lib/python3.7/site-packages/numpy/core/_methods.py in _sum(a, axis, dtype, out, keepdims, initial, where)\r\n     36 def _sum(a, axis=None, dtype=None, out=None, keepdims=False,\r\n     37          initial=_NoValue, where=True):\r\n---> 38     return umr_sum(a, axis, dtype, out, keepdims, initial, where)\r\n     39\r\n     40 def _prod(a, axis=None, dtype=None, out=None, keepdims=False,\r\n\r\nUFuncTypeError: ufunc 'add' cannot use operands with types dtype('<M8[ns]') and dtype('<M8[ns]')\r\n```\r\n\r\n\r\nMy only suggestion is to expose a `meta` to these methods and pass it through as `reduced_meta` in `dask.array.reductions.reduction`. Does that sound reasonable?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/651292163/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/651297945",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-651297945",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 651297945,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTI5Nzk0NQ==",
        "user": {
            "login": "kylejn27",
            "id": 7997504,
            "node_id": "MDQ6VXNlcjc5OTc1MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7997504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylejn27",
            "html_url": "https://github.com/kylejn27",
            "followers_url": "https://api.github.com/users/kylejn27/followers",
            "following_url": "https://api.github.com/users/kylejn27/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylejn27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylejn27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylejn27/subscriptions",
            "organizations_url": "https://api.github.com/users/kylejn27/orgs",
            "repos_url": "https://api.github.com/users/kylejn27/repos",
            "events_url": "https://api.github.com/users/kylejn27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylejn27/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-29T18:53:26Z",
        "updated_at": "2020-06-29T18:53:26Z",
        "author_association": "CONTRIBUTOR",
        "body": "> My only suggestion is to expose a meta to these methods and pass it through as reduced_meta in dask.array.reductions.reduction. Does that sound reasonable?\r\n\r\nyeah that sounds great!\r\n\r\n> This issue is the unknown chunks\r\n\r\nThat's strange, I tested it the same \"to_dask_array\" example with `lengths=True` to compute the chunk sizes and it still raised the exception. Do you know why that would happen? \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/651297945/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/651335955",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-651335955",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 651335955,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTMzNTk1NQ==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-29T20:15:11Z",
        "updated_at": "2020-06-29T20:15:11Z",
        "author_association": "MEMBER",
        "body": "Oh sorry, I misread the original example. The second example used `dd.Series.min()`, I thought it was using `da.Array`. So the missing chunk size is a red herring\r\n\r\n```python\r\nIn [25]: a = da.ones((4,), dtype='datetime64[ns]')\r\n\r\nIn [26]: a.min()\r\n---------------------------------------------------------------------------\r\nUFuncTypeError                            Traceback (most recent call last)\r\n<ipython-input-26-8f6244b3691f> in <module>\r\n----> 1 a.min()\r\n\r\n~/sandbox/dask/dask/array/core.py in min(self, axis, keepdims, split_every, out)\r\n   1960         from .reductions import min\r\n   1961\r\n-> 1962         return min(self, axis=axis, keepdims=keepdims, split_every=split_every, out=out)\r\n   1963\r\n   1964     @derived_from(np.ndarray)\r\n\r\n~/sandbox/dask/dask/array/reductions.py in min(a, axis, keepdims, split_every, out)\r\n    371         dtype=a.dtype,\r\n    372         split_every=split_every,\r\n--> 373         out=out,\r\n    374     )\r\n    375\r\n\r\n~/sandbox/dask/dask/array/reductions.py in reduction(x, chunk, aggregate, axis, keepdims, dtype, split_every, combine, name, out, concatenate, output_size, meta)\r\n    184         name=name,\r\n    185         concatenate=concatenate,\r\n--> 186         reduced_meta=reduced_meta,\r\n    187     )\r\n    188     if keepdims and output_size != 1:\r\n\r\n~/sandbox/dask/dask/array/reductions.py in _tree_reduce(x, aggregate, axis, keepdims, dtype, split_every, combine, name, concatenate, reduced_meta)\r\n    249         dtype=dtype,\r\n    250         name=(name or funcname(aggregate)) + \"-aggregate\",\r\n--> 251         reduced_meta=reduced_meta,\r\n    252     )\r\n    253\r\n\r\n~/sandbox/dask/dask/array/reductions.py in partial_reduce(func, x, split_every, keepdims, dtype, name, reduced_meta)\r\n    313     if is_arraylike(meta) and meta.ndim != len(out_chunks):\r\n    314         if len(out_chunks) == 0:\r\n--> 315             meta = meta.sum()\r\n    316         else:\r\n    317             meta = meta.reshape((0,) * len(out_chunks))\r\n\r\n~/Envs/dask-dev/lib/python3.7/site-packages/numpy/core/_methods.py in _sum(a, axis, dtype, out, keepdims, initial, where)\r\n     36 def _sum(a, axis=None, dtype=None, out=None, keepdims=False,\r\n     37          initial=_NoValue, where=True):\r\n---> 38     return umr_sum(a, axis, dtype, out, keepdims, initial, where)\r\n     39\r\n     40 def _prod(a, axis=None, dtype=None, out=None, keepdims=False,\r\n\r\nUFuncTypeError: ufunc 'add' cannot use operands with types dtype('<M8[ns]') and dtype('<M8[ns]')\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/651335955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/651340098",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-651340098",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 651340098,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTM0MDA5OA==",
        "user": {
            "login": "kylejn27",
            "id": 7997504,
            "node_id": "MDQ6VXNlcjc5OTc1MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7997504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylejn27",
            "html_url": "https://github.com/kylejn27",
            "followers_url": "https://api.github.com/users/kylejn27/followers",
            "following_url": "https://api.github.com/users/kylejn27/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylejn27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylejn27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylejn27/subscriptions",
            "organizations_url": "https://api.github.com/users/kylejn27/orgs",
            "repos_url": "https://api.github.com/users/kylejn27/repos",
            "events_url": "https://api.github.com/users/kylejn27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylejn27/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-29T20:22:27Z",
        "updated_at": "2020-06-29T20:22:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "Ahh of course, no problem! Do you think this is still fixable with exposing meta to `to_dask_array` and passing it through using `reduced_meta` in `dask.array.reductions.reduction` or do you think its a larger issue? \r\n\r\nI'm happy to poke around and come up with a solution, just might be a while because I'm fairly busy at the moment. It seemed to me like a type inference issue in `to_dask_array`",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/651340098/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/651353440",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-651353440",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 651353440,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTM1MzQ0MA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-29T20:44:23Z",
        "updated_at": "2020-06-29T20:44:23Z",
        "author_association": "MEMBER",
        "body": "> fixable with exposing meta to to_dask_array\r\n\r\nI think it's just in `Array.min()`, `.sum()`, etc. Anything going through `reduction`.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/651353440/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/691209663",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-691209663",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 691209663,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTIwOTY2Mw==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-11T17:03:02Z",
        "updated_at": "2020-09-11T17:03:02Z",
        "author_association": "MEMBER",
        "body": "@kylejn27 are you still interested in trying to come up with a fix?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/691209663/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/691234294",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-691234294",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 691234294,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTIzNDI5NA==",
        "user": {
            "login": "kylejn27",
            "id": 7997504,
            "node_id": "MDQ6VXNlcjc5OTc1MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7997504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylejn27",
            "html_url": "https://github.com/kylejn27",
            "followers_url": "https://api.github.com/users/kylejn27/followers",
            "following_url": "https://api.github.com/users/kylejn27/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylejn27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylejn27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylejn27/subscriptions",
            "organizations_url": "https://api.github.com/users/kylejn27/orgs",
            "repos_url": "https://api.github.com/users/kylejn27/repos",
            "events_url": "https://api.github.com/users/kylejn27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylejn27/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-11T17:58:01Z",
        "updated_at": "2020-09-11T17:58:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "@jsignell Ah! Looks like this slipped out of mind. Unless you're asking because you wanted to take this on, I'm happy to start working on this next week",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/691234294/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/691277415",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-691277415",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 691277415,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTI3NzQxNQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-11T19:36:45Z",
        "updated_at": "2020-09-11T19:36:45Z",
        "author_association": "MEMBER",
        "body": "I think that Julia was just poking stale issues.  If you're down to resolve\nthis Kyle that would be swell.\n\nOn Fri, Sep 11, 2020, 10:58 AM Kyle Nicholson <notifications@github.com>\nwrote:\n\n> @jsignell <https://github.com/jsignell> Ah! Looks like this slipped out\n> of mind. Unless you're asking because you wanted to take this on, I'm happy\n> to start working on this next week\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/6354#issuecomment-691234294>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AACKZTHYZ37RJVUSWE37E5TSFJQLXANCNFSM4OLO52UA>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/691277415/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/691283455",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-691283455",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 691283455,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTI4MzQ1NQ==",
        "user": {
            "login": "kylejn27",
            "id": 7997504,
            "node_id": "MDQ6VXNlcjc5OTc1MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7997504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylejn27",
            "html_url": "https://github.com/kylejn27",
            "followers_url": "https://api.github.com/users/kylejn27/followers",
            "following_url": "https://api.github.com/users/kylejn27/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylejn27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylejn27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylejn27/subscriptions",
            "organizations_url": "https://api.github.com/users/kylejn27/orgs",
            "repos_url": "https://api.github.com/users/kylejn27/repos",
            "events_url": "https://api.github.com/users/kylejn27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylejn27/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-11T19:52:04Z",
        "updated_at": "2020-09-11T19:52:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "great! I'll pick it up first thing on monday",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/691283455/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/692080089",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-692080089",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 692080089,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjA4MDA4OQ==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-14T14:13:17Z",
        "updated_at": "2020-09-14T14:13:17Z",
        "author_association": "MEMBER",
        "body": "> Julia was just poking stale issues\r\n\r\nIndeed I was! All yours @kylejn27 :) If you want to add a `meta` to `to_dask_array` while you're at it, then you'll close #6349  as well.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/692080089/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/692901741",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-692901741",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 692901741,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjkwMTc0MQ==",
        "user": {
            "login": "kylejn27",
            "id": 7997504,
            "node_id": "MDQ6VXNlcjc5OTc1MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7997504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylejn27",
            "html_url": "https://github.com/kylejn27",
            "followers_url": "https://api.github.com/users/kylejn27/followers",
            "following_url": "https://api.github.com/users/kylejn27/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylejn27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylejn27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylejn27/subscriptions",
            "organizations_url": "https://api.github.com/users/kylejn27/orgs",
            "repos_url": "https://api.github.com/users/kylejn27/repos",
            "events_url": "https://api.github.com/users/kylejn27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylejn27/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-15T18:41:51Z",
        "updated_at": "2020-09-15T18:41:51Z",
        "author_association": "CONTRIBUTOR",
        "body": "> If you want to add a meta to to_dask_array while you're at it,\r\n\r\nsure!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/692901741/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/696968527",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-696968527",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 696968527,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5Njk2ODUyNw==",
        "user": {
            "login": "kylejn27",
            "id": 7997504,
            "node_id": "MDQ6VXNlcjc5OTc1MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7997504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylejn27",
            "html_url": "https://github.com/kylejn27",
            "followers_url": "https://api.github.com/users/kylejn27/followers",
            "following_url": "https://api.github.com/users/kylejn27/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylejn27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylejn27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylejn27/subscriptions",
            "organizations_url": "https://api.github.com/users/kylejn27/orgs",
            "repos_url": "https://api.github.com/users/kylejn27/repos",
            "events_url": "https://api.github.com/users/kylejn27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylejn27/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-22T20:42:26Z",
        "updated_at": "2020-09-22T20:43:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "I just realized that I misinterpreted what the proposed solution was in my implementation of #6651, that PR doesn't actually pass `meta` to `reduced_meta` it just sets the metadata after the reduction happens. \r\n\r\nIn my local branch I corrected this and tried to pass a metadata in that I thought would help the issue (`da.min(a, meta=np.array([1], dtype=timedelta64[ns])`) but realized that the real issue isn't really anything to do with metadata but that that numpy cannot add `datetime64[ns]` and throws a value error when doing so here:\r\n```\r\nif is_arraylike(meta) and meta.ndim != len(out_chunks):\r\n        if len(out_chunks) == 0:\r\n            meta = meta.sum() # <----\r\n        else:\r\n            meta = meta.reshape((0,) * len(out_chunks))\r\n```\r\n\r\nnaively I'd like add a try catch block and pass through the value error. This resolves this issue, but I'm wondering if it would have undesirable effects downstream if added in.\r\n\r\n```\r\n    if is_arraylike(meta) and meta.ndim != len(out_chunks):\r\n        if len(out_chunks) == 0:\r\n            try:\r\n                meta = meta.sum()\r\n            except ValueError:\r\n                pass\r\n        else:\r\n            meta = meta.reshape((0,) * len(out_chunks))\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/696968527/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/697579828",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-697579828",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 697579828,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5NzU3OTgyOA==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-23T15:50:10Z",
        "updated_at": "2020-09-23T15:50:10Z",
        "author_association": "MEMBER",
        "body": "If you do that then the dimensionality of the meta stops matching the dimensionality of the output so that's not ideal. \r\n![image](https://user-images.githubusercontent.com/4806877/94036185-0938ee80-fd92-11ea-91b5-5dec4a52ad3c.png)\r\nThe goal of that `meta  = meta.sum()` is to reduce the dimensionality of the meta. I can't think of a safe general way to do that for datetime. Specifically in this case we need to go from ndim=1 to ndim=0 and the len is 0 so `flatten` doesn't work, and `np.asscalar` doesn't either. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/697579828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/697666771",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-697666771",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 697666771,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5NzY2Njc3MQ==",
        "user": {
            "login": "kylejn27",
            "id": 7997504,
            "node_id": "MDQ6VXNlcjc5OTc1MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7997504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylejn27",
            "html_url": "https://github.com/kylejn27",
            "followers_url": "https://api.github.com/users/kylejn27/followers",
            "following_url": "https://api.github.com/users/kylejn27/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylejn27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylejn27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylejn27/subscriptions",
            "organizations_url": "https://api.github.com/users/kylejn27/orgs",
            "repos_url": "https://api.github.com/users/kylejn27/repos",
            "events_url": "https://api.github.com/users/kylejn27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylejn27/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-23T16:41:03Z",
        "updated_at": "2020-09-23T16:41:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "Ah thanks for the input! I'll spend some time thinking on this, perhaps in a different PR than #6651 so we can get that merged in",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/697666771/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/699281744",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-699281744",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 699281744,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTI4MTc0NA==",
        "user": {
            "login": "kylejn27",
            "id": 7997504,
            "node_id": "MDQ6VXNlcjc5OTc1MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7997504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylejn27",
            "html_url": "https://github.com/kylejn27",
            "followers_url": "https://api.github.com/users/kylejn27/followers",
            "following_url": "https://api.github.com/users/kylejn27/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylejn27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylejn27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylejn27/subscriptions",
            "organizations_url": "https://api.github.com/users/kylejn27/orgs",
            "repos_url": "https://api.github.com/users/kylejn27/repos",
            "events_url": "https://api.github.com/users/kylejn27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylejn27/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-26T02:44:28Z",
        "updated_at": "2020-09-26T02:51:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thinking about @mrocklin's [comment](https://github.com/dask/dask/pull/6651#issuecomment-698478646) a little bit\r\n>I wonder if we can replace the use of sum with an understanding of the axis\r\nand keepdims arguments to achieve the same result.  This would probably\r\nrequire a little bit of work on our part, but might reduce complexity for\r\nothers in the future.\r\n\r\nSeems that the point of this block of code is to replace `meta` with either a single value `0` or a tuple of 0's with length `len(out_chunks)`. \r\n```python\r\nif is_arraylike(meta) and meta.ndim != len(out_chunks):\r\n    if len(out_chunks) == 0:\r\n        # point of this is to get \r\n        meta = meta.sum()\r\n    else:\r\n        meta = meta.reshape((0,) * len(out_chunks))\r\n```\r\nMy understanding of Dask metadata is a bit weak so I could be wrong, but wouldn't it be ok to replace `meta = meta.sum()` with the following? This gives you a scalar metadata of 0 of dtype `type(meta)`\r\n```python\r\nif is_arraylike(meta) and meta.ndim != len(out_chunks):\r\n    if len(out_chunks) == 0:\r\n        original_type = type(meta) # preserve original type\r\n        # get meta into the shape you want, single scalar 0 value and cast to original type\r\n        meta = np.int64(0).astype(original_type)  \r\n    else:\r\n        meta = meta.reshape((0,) * len(out_chunks)) # this should work regardless of the type\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/699281744/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/701463361",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-701463361",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 701463361,
        "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTQ2MzM2MQ==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-30T15:25:32Z",
        "updated_at": "2020-09-30T15:25:32Z",
        "author_association": "MEMBER",
        "body": "I think going through np is kind of discouraged since ideally dask doesn't care what the array type of the underlying blocks is (cupy for instance should work). Ideally there would be some method on `meta` that could create a scalar of the same type. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/701463361/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2049462332",
        "html_url": "https://github.com/dask/dask/issues/6354#issuecomment-2049462332",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6354",
        "id": 2049462332,
        "node_id": "IC_kwDOAbcwm856KFA8",
        "user": {
            "login": "claytharrison",
            "id": 48135565,
            "node_id": "MDQ6VXNlcjQ4MTM1NTY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/48135565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/claytharrison",
            "html_url": "https://github.com/claytharrison",
            "followers_url": "https://api.github.com/users/claytharrison/followers",
            "following_url": "https://api.github.com/users/claytharrison/following{/other_user}",
            "gists_url": "https://api.github.com/users/claytharrison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/claytharrison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/claytharrison/subscriptions",
            "organizations_url": "https://api.github.com/users/claytharrison/orgs",
            "repos_url": "https://api.github.com/users/claytharrison/repos",
            "events_url": "https://api.github.com/users/claytharrison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/claytharrison/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-11T11:18:50Z",
        "updated_at": "2024-04-11T11:19:14Z",
        "author_association": "NONE",
        "body": "Did anyone ever come up with a solution or workaround for this from a user perspective? I'm working with some very large xarrays and I'd like to stay in dask-land as much as possible, but for part of my program this issue (or one very much like it?) is forcing me to use a numpy `min()`.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2049462332/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]