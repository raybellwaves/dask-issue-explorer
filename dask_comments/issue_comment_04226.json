[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/439901915",
        "html_url": "https://github.com/dask/dask/issues/4226#issuecomment-439901915",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4226",
        "id": 439901915,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTkwMTkxNQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-19T14:00:38Z",
        "updated_at": "2018-11-19T14:00:38Z",
        "author_association": "MEMBER",
        "body": "This is because `dd.from_dask_array(le.fit_transform(ddf['A']))` loses Pandas index information, so Dask DataFrame is uncertain how to combine these two datasets.  Short term I suspect that you can resolve your problem with the following:\r\n\r\n    dd.from_dask_array(le.fit_transform(ddf['A']), index=ddf.index)\r\n\r\n@TomAugspurger I'm curious to hear your thoughts on this.  I can see two approaches to making this easier on users:\r\n\r\n1.  We have `fit_transform` convert dataframes to dataframes, although this conflicts with the sparse array situation that we had before\r\n2.  We allow Dask DataFrame to blindly combine two dataframes with known and unknown divisions if they have the same number of partitions.  We raise a warning rather than an error.\r\n\r\nOther thoughts?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/439901915/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/439923917",
        "html_url": "https://github.com/dask/dask/issues/4226#issuecomment-439923917",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4226",
        "id": 439923917,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTkyMzkxNw==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-19T15:06:15Z",
        "updated_at": "2018-11-19T15:06:15Z",
        "author_association": "MEMBER",
        "body": "I think adding a `preserve_dataframe` keyword to LabelEncoder should be OK here.\r\n\r\n@BParesh89 does `dask_ml.preprocessing.OneHotEncoder` work for your use-case? http://ml.dask.org/modules/api.html#dask_ml.preprocessing.OneHotEncoder",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/439923917/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/440605613",
        "html_url": "https://github.com/dask/dask/issues/4226#issuecomment-440605613",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4226",
        "id": 440605613,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDYwNTYxMw==",
        "user": {
            "login": "BParesh89",
            "id": 10656618,
            "node_id": "MDQ6VXNlcjEwNjU2NjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/10656618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BParesh89",
            "html_url": "https://github.com/BParesh89",
            "followers_url": "https://api.github.com/users/BParesh89/followers",
            "following_url": "https://api.github.com/users/BParesh89/following{/other_user}",
            "gists_url": "https://api.github.com/users/BParesh89/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BParesh89/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BParesh89/subscriptions",
            "organizations_url": "https://api.github.com/users/BParesh89/orgs",
            "repos_url": "https://api.github.com/users/BParesh89/repos",
            "events_url": "https://api.github.com/users/BParesh89/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BParesh89/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-21T10:02:04Z",
        "updated_at": "2018-11-21T10:02:04Z",
        "author_association": "NONE",
        "body": "@mrocklin , thanks for the workaround, its working!\r\n@TomAugspurger , I was getting error while passing _preserve_dataframe=True_ in Labelencoder. I think its not a valid argument for it.\r\nAlso, I tried below code \r\n\r\n```\r\ncountry = np.random.choice(['US','UK','IN'],1700000)\r\ndf = pd.DataFrame({'A':country,'B':range(1700000)})\r\nddf = dd.from_pandas(df,npartitions=2,sort=False)\r\nohe = OneHotEncoder()\r\nle = LabelEncoder()\r\n\r\nddf = ddf.assign(A=dd.from_dask_array(ohe.fit_transform(ddf['A']),index=ddf.index))\r\n```\r\nand got below error \r\n\r\n```\r\nValueError: Expected 2D array, got 1D array instead:\r\narray=['US' 'UK' 'UK' ... 'IN' 'US' 'US'].\r\nReshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/440605613/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/440637315",
        "html_url": "https://github.com/dask/dask/issues/4226#issuecomment-440637315",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4226",
        "id": 440637315,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDYzNzMxNQ==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-21T11:54:10Z",
        "updated_at": "2018-11-21T11:54:10Z",
        "author_association": "MEMBER",
        "body": "preserve_dataframe would be a new keyword for LabelEconder. It hasn't been\nimplemented yet.\n\nOneHotEncoder expects a 2-D array. So `one.fit_transform(df[['A']])` ought\nto work.\n\nOn Wed, Nov 21, 2018 at 4:02 AM Paresh Bhatia <notifications@github.com>\nwrote:\n\n> @mrocklin <https://github.com/mrocklin> , thanks for the workaround, its\n> working!\n> @TomAugspurger <https://github.com/TomAugspurger> , I was getting error\n> while passing *preserve_dataframe=True* in Labelencoder. I think its not\n> a valid argument for it.\n> Also, I tried below code\n>\n> country = np.random.choice(['US','UK','IN'],1700000)\n> df = pd.DataFrame({'A':country,'B':range(1700000)})\n> ddf = dd.from_pandas(df,npartitions=2,sort=False)\n> ohe = OneHotEncoder()\n> le = LabelEncoder()\n>\n> ddf = ddf.assign(A=dd.from_dask_array(ohe.fit_transform(ddf['A']),index=ddf.index))\n>\n> and got below error\n>\n> ValueError: Expected 2D array, got 1D array instead:\n> array=['US' 'UK' 'UK' ... 'IN' 'US' 'US'].\n> Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/4226#issuecomment-440605613>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIjle2yxInF3g4bp7k_35UrgliPx2ks5uxSSfgaJpZM4YokS8>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/440637315/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/440973761",
        "html_url": "https://github.com/dask/dask/issues/4226#issuecomment-440973761",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4226",
        "id": 440973761,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDk3Mzc2MQ==",
        "user": {
            "login": "BParesh89",
            "id": 10656618,
            "node_id": "MDQ6VXNlcjEwNjU2NjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/10656618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BParesh89",
            "html_url": "https://github.com/BParesh89",
            "followers_url": "https://api.github.com/users/BParesh89/followers",
            "following_url": "https://api.github.com/users/BParesh89/following{/other_user}",
            "gists_url": "https://api.github.com/users/BParesh89/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BParesh89/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BParesh89/subscriptions",
            "organizations_url": "https://api.github.com/users/BParesh89/orgs",
            "repos_url": "https://api.github.com/users/BParesh89/repos",
            "events_url": "https://api.github.com/users/BParesh89/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BParesh89/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-22T09:51:33Z",
        "updated_at": "2018-11-22T09:51:33Z",
        "author_association": "NONE",
        "body": "@TomAugspurger , I tried that also like below \r\n\r\n```\r\ncountry = np.random.choice(['US','UK','IN'],1700000)\r\ndf = pd.DataFrame({'A':country,'B':range(1700000)})\r\nddf = dd.from_pandas(df,npartitions=2,sort=False)\r\n\r\nohe = OneHotEncoder()\r\n\r\nddf = ddf.assign(A=dd.from_dask_array(ohe.fit_transform(ddf[['A']])),index=ddf.index)\r\nddf.head()\r\n```\r\nbut got below Value error \r\n\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-22-8ca893cc6c15> in <module>()\r\n      8 # le = LabelEncoder()\r\n      9 #ddf = ddf.assign(A=dd.from_dask_array(le.fit_transform(ddf['A']),index=ddf.index))\r\n---> 10 ddf = ddf.assign(A=dd.from_dask_array(ohe.fit_transform(ddf[['A']])),index=ddf.index)\r\n     11 ddf.head()\r\n\r\n/opt/conda/lib/python3.6/site-packages/sklearn/preprocessing/_encoders.py in fit_transform(self, X, y)\r\n    499                 self._categorical_features, copy=True)\r\n    500         else:\r\n--> 501             return self.fit(X).transform(X)\r\n    502 \r\n    503     def _legacy_transform(self, X):\r\n\r\n/opt/conda/lib/python3.6/site-packages/dask_ml/preprocessing/_encoders.py in fit(self, X, y)\r\n    126 \r\n    127         if isinstance(X, (pd.Series, pd.DataFrame)) or dask.is_dask_collection(X):\r\n--> 128             self._fit(X, handle_unknown=self.handle_unknown)\r\n    129         else:\r\n    130             super(OneHotEncoder, self).fit(X, y=y)\r\n\r\n/opt/conda/lib/python3.6/site-packages/dask_ml/preprocessing/_encoders.py in _fit(self, X, handle_unknown)\r\n    170         else:\r\n    171             if not (X.dtypes == \"category\").all():\r\n--> 172                 raise ValueError(\"All columns must be Categorical dtype.\")\r\n    173             if self.categories == \"auto\":\r\n    174                 for col in X.columns:\r\n\r\nValueError: All columns must be Categorical dtype.\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/440973761/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/441024085",
        "html_url": "https://github.com/dask/dask/issues/4226#issuecomment-441024085",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4226",
        "id": 441024085,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTAyNDA4NQ==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-22T13:02:01Z",
        "updated_at": "2018-11-22T13:02:01Z",
        "author_association": "MEMBER",
        "body": "You'll need to convert them to / store as categorical first.\n\nOn Thu, Nov 22, 2018 at 3:51 AM Paresh Bhatia <notifications@github.com>\nwrote:\n\n> @TomAugspurger <https://github.com/TomAugspurger> , I tried that also\n> like below\n>\n> country = np.random.choice(['US','UK','IN'],1700000)\n> df = pd.DataFrame({'A':country,'B':range(1700000)})\n> ddf = dd.from_pandas(df,npartitions=2,sort=False)\n>\n> ohe = OneHotEncoder()\n>\n> ddf = ddf.assign(A=dd.from_dask_array(ohe.fit_transform(ddf[['A']])),index=ddf.index)\n> ddf.head()\n>\n> but got below Value error\n>\n> ---------------------------------------------------------------------------\n> ValueError                                Traceback (most recent call last)\n> <ipython-input-22-8ca893cc6c15> in <module>()\n>       8 # le = LabelEncoder()\n>       9 #ddf = ddf.assign(A=dd.from_dask_array(le.fit_transform(ddf['A']),index=ddf.index))\n> ---> 10 ddf = ddf.assign(A=dd.from_dask_array(ohe.fit_transform(ddf[['A']])),index=ddf.index)\n>      11 ddf.head()\n>\n> /opt/conda/lib/python3.6/site-packages/sklearn/preprocessing/_encoders.py in fit_transform(self, X, y)\n>     499                 self._categorical_features, copy=True)\n>     500         else:\n> --> 501             return self.fit(X).transform(X)\n>     502\n>     503     def _legacy_transform(self, X):\n>\n> /opt/conda/lib/python3.6/site-packages/dask_ml/preprocessing/_encoders.py in fit(self, X, y)\n>     126\n>     127         if isinstance(X, (pd.Series, pd.DataFrame)) or dask.is_dask_collection(X):\n> --> 128             self._fit(X, handle_unknown=self.handle_unknown)\n>     129         else:\n>     130             super(OneHotEncoder, self).fit(X, y=y)\n>\n> /opt/conda/lib/python3.6/site-packages/dask_ml/preprocessing/_encoders.py in _fit(self, X, handle_unknown)\n>     170         else:\n>     171             if not (X.dtypes == \"category\").all():\n> --> 172                 raise ValueError(\"All columns must be Categorical dtype.\")\n>     173             if self.categories == \"auto\":\n>     174                 for col in X.columns:\n>\n> ValueError: All columns must be Categorical dtype.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/4226#issuecomment-440973761>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIkOp4Ztc8PqgYclfVnf3gU_AYBsHks5uxnOpgaJpZM4YokS8>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/441024085/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]