[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/374366478",
        "html_url": "https://github.com/dask/dask/issues/3302#issuecomment-374366478",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3302",
        "id": 374366478,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDM2NjQ3OA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-19T20:38:47Z",
        "updated_at": "2018-03-19T20:38:47Z",
        "author_association": "MEMBER",
        "body": "The current state would be to use rechunk and specify a uniform chunk size manually:\r\n\r\n    x = x.rechunk((1000, 1000, 10))\r\n\r\nWhat I'm hearing here is to determine what the `(1000, 1000, 10)` argument should be automatically.  Do you have thoughts on how to do this?  I'm somewhat pessimistic that a nice solution can be found that does not add more questions than it answers :) ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/374366478/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/374619904",
        "html_url": "https://github.com/dask/dask/issues/3302#issuecomment-374619904",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3302",
        "id": 374619904,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDYxOTkwNA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-20T14:33:59Z",
        "updated_at": "2018-03-20T14:33:59Z",
        "author_association": "MEMBER",
        "body": "Lately I've been mindlessly doing something like `tuple(max(c) for c in x.chunks)`. Finding the `gcd` is another option, but would likely bias towards much smaller chunks. Have also had the storage format provide some best guess at chunking and then rechunked Dask Arrays to match it. Other ideas welcome.\r\n\r\nMore generally past experiences with chunking inform me that there are wrong answers, but differences between \"right\" answers aren't too noticeable. Though this could be specific to what I have been doing.\r\n\r\nOf course there are lots of things that the approaches above are not taking into account. Mainly am looking for a baked in heuristic that makes things a little easier most of the time.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/374619904/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/374623821",
        "html_url": "https://github.com/dask/dask/issues/3302#issuecomment-374623821",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3302",
        "id": 374623821,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDYyMzgyMQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-03-20T14:44:26Z",
        "updated_at": "2018-03-20T14:44:26Z",
        "author_association": "MEMBER",
        "body": "OK, taking hints from existing chunking seems reasonable to me.  Presumably we might look at something like the 75 percentile of chunk size in bytes, some sort of average aspect ratio, and then look for nice round numbers?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/374623821/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/385674820",
        "html_url": "https://github.com/dask/dask/issues/3302#issuecomment-385674820",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3302",
        "id": 385674820,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTY3NDgyMA==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-01T13:49:07Z",
        "updated_at": "2018-05-01T13:49:07Z",
        "author_association": "MEMBER",
        "body": "I would propose that rechunk takes a variety of possible inputs, including some typical, pluggable, named rechunking scenarios. I don't think there is any \"best\" heuristic that we can hope to achieve, since that would depend heavily on the particulars in each case. In particular, \"least work\" (smallest task graph) would be a hard metric to optimise for.\r\n\r\nAdditionally, I would make a `to_zarr()` and other storage methods, which takes a `chunking=` keyword to pass to rechunk, if required (perhaps default to `False`, which will simply error if the chunks are not regular, as now). Bag, dataframe and xarray all have to_* storage methods. In the case of zarr, we would have to interpret a URL and accept storage_options, and make a mapper instance, like in [intake](https://github.com/ContinuumIO/intake-xarray/blob/master/intake_xarray/xzarr.py#L46).\r\n\r\nThe rechunking methods I would start with:\r\n- \"preserve_number\": split each axis into the same number of chunks as currently exist, don't process regular axes as all, even if last chunk is small; this is simple to understand and I would recommend as the default.\r\n- \"loose_memory\": given chunk size in bytes, make chunks with aspect given by the current number of chunks in each dimension, aiming for no small last-chunks in each dimension, and again skipping dimensions that are already regular\r\n- \"tight_memory\": given chunk size in bytes, get as close to it by rechunking all dimensions and not worrying about regular dimensions or last-chunks\r\n- \"regularize\": ensure that last-chunks have the same shape as normal chunks, which might be useful for later concatenation. This might mean one-chunk dimensions if the length happens to be prime.\r\n- it would be nice to also be able to specify some dimension chunks explicitly or say which dimensions are not to be considered.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/385674820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/385838448",
        "html_url": "https://github.com/dask/dask/issues/3302#issuecomment-385838448",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3302",
        "id": 385838448,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTgzODQ0OA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-02T01:29:41Z",
        "updated_at": "2018-05-02T01:29:41Z",
        "author_association": "MEMBER",
        "body": "Very thorough! Thanks for giving this some thought, @martindurant. Need to mull over this a bit. Generally agree though.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/385838448/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/386038305",
        "html_url": "https://github.com/dask/dask/issues/3302#issuecomment-386038305",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3302",
        "id": 386038305,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjAzODMwNQ==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-05-02T16:27:50Z",
        "updated_at": "2018-05-02T16:27:50Z",
        "author_association": "MEMBER",
        "body": "Ah, good point in the linked issues, that sometimes you would want the existing chunking scheme, if there is one. I was thinking of to_zarr as always overwriting/creating.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/386038305/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]