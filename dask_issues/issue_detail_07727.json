{
    "url": "https://api.github.com/repos/dask/dask/issues/7727",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/7727/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/7727/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/7727/events",
    "html_url": "https://github.com/dask/dask/issues/7727",
    "id": 905635330,
    "node_id": "MDU6SXNzdWU5MDU2MzUzMzA=",
    "number": 7727,
    "title": "`dask.array.store` with `compute=False` and `return_stored=True`",
    "user": {
        "login": "fnattino",
        "id": 49899980,
        "node_id": "MDQ6VXNlcjQ5ODk5OTgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/49899980?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fnattino",
        "html_url": "https://github.com/fnattino",
        "followers_url": "https://api.github.com/users/fnattino/followers",
        "following_url": "https://api.github.com/users/fnattino/following{/other_user}",
        "gists_url": "https://api.github.com/users/fnattino/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fnattino/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fnattino/subscriptions",
        "organizations_url": "https://api.github.com/users/fnattino/orgs",
        "repos_url": "https://api.github.com/users/fnattino/repos",
        "events_url": "https://api.github.com/users/fnattino/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fnattino/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 365513534,
            "node_id": "MDU6TGFiZWwzNjU1MTM1MzQ=",
            "url": "https://api.github.com/repos/dask/dask/labels/io",
            "name": "io",
            "color": "6f871c",
            "default": false,
            "description": ""
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-05-28T15:45:30Z",
    "updated_at": "2021-06-03T17:37:17Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!-- Please include a self-contained copy-pastable example that generates the issue if possible.\r\n\r\nPlease be concise with code posted. See guidelines below on how to provide a good bug report:\r\n\r\n- Craft Minimal Bug Reports http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports\r\n- Minimal Complete Verifiable Examples https://stackoverflow.com/help/mcve\r\n\r\nBug reports that follow these guidelines are easier to diagnose, and so are often handled much more quickly.\r\n-->\r\n\r\n**What happened**:\r\n\r\nI am trying to store a Dask Array representing an intermediate step in my calculation to disk, thus using `dask.array.store` with `return_stored=True`. I would like to setup the full calculation lazily and call `compute` at the very end. However, if I try to run further computation on the arrays returned by `store`, errors are raised if `compute=False`.  Everything works fine if `compute=True`.\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport dask.array as da\r\nimport zarr\r\n\r\nx = zarr.open(\"x.zarr\", mode='w', shape=(100, 100), chunks=(20, 100))\r\n\r\nx_da = da.random.random(x.shape, chunks=x.chunks)\r\n\r\n# this raises the following error when calling z.compute()\r\nx_stored,  = da.store(x_da, x.oindex, lock=False, compute=False, return_stored=True)\r\n\r\n# this works fine\r\nx_stored,  = da.store(x_da, x.oindex, lock=False, compute=True, return_stored=True)\r\n\r\nz = x_stored + 1\r\n\r\nz.compute()\r\n```\r\n\r\nTraceback:\r\n\r\n```python\r\n  File \"/Users/fnattino/Programs/swyft-nlesc/notebooks/return_stored.py\", line 16, in <module>\r\n    main()\r\n  File \"/Users/fnattino/Programs/swyft-nlesc/notebooks/return_stored.py\", line 12, in main\r\n    z.compute()\r\n  File \"/opt/miniconda3/envs/dark_generators/lib/python3.8/site-packages/dask/base.py\", line 285, in compute\r\n    (result,) = compute(self, traverse=False, **kwargs)\r\n  File \"/opt/miniconda3/envs/dark_generators/lib/python3.8/site-packages/dask/base.py\", line 561, in compute\r\n    dsk = collections_to_dsk(collections, optimize_graph, **kwargs)\r\n  File \"/opt/miniconda3/envs/dark_generators/lib/python3.8/site-packages/dask/base.py\", line 337, in collections_to_dsk\r\n    dsk = opt(dsk, keys, **kwargs)\r\n  File \"/opt/miniconda3/envs/dark_generators/lib/python3.8/site-packages/dask/array/optimization.py\", line 47, in optimize\r\n    dsk = dsk.cull(set(keys))\r\n  File \"/opt/miniconda3/envs/dark_generators/lib/python3.8/site-packages/dask/highlevelgraph.py\", line 866, in cull\r\n    for layer_name in reversed(self._toposort_layers()):\r\n  File \"/opt/miniconda3/envs/dark_generators/lib/python3.8/site-packages/dask/highlevelgraph.py\", line 832, in _toposort_layers\r\n    reverse_deps[dep].append(k)\r\nKeyError: 'load-store-6152012c-bfc7-11eb-b643-acde48001122'\r\n```\r\n\r\n**Environment**:\r\n\r\n- Dask version: 2021.05.0\r\n- Python version: 3.8.3\r\n- Operating System: OS X\r\n- Install method (conda, pip, source): pip\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/7727/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/7727/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}