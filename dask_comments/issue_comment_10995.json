[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2000209774",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2000209774",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2000209774,
        "node_id": "IC_kwDOAbcwm853OMdu",
        "user": {
            "login": "thomas-fred",
            "id": 39301725,
            "node_id": "MDQ6VXNlcjM5MzAxNzI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/39301725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thomas-fred",
            "html_url": "https://github.com/thomas-fred",
            "followers_url": "https://api.github.com/users/thomas-fred/followers",
            "following_url": "https://api.github.com/users/thomas-fred/following{/other_user}",
            "gists_url": "https://api.github.com/users/thomas-fred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thomas-fred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thomas-fred/subscriptions",
            "organizations_url": "https://api.github.com/users/thomas-fred/orgs",
            "repos_url": "https://api.github.com/users/thomas-fred/repos",
            "events_url": "https://api.github.com/users/thomas-fred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thomas-fred/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-15T18:19:51Z",
        "updated_at": "2024-03-15T18:21:04Z",
        "author_association": "NONE",
        "body": "Hello, I'm wondering if I've stumbled into a bug/change in usage with updating from `2024.2.0` to `2024.3.0`. With the former, the below works, and `indicies` is bound to a list of indicies. With the latter, I get an empty list.\r\n\r\n```\r\ndf = dask.dataframe.read_parquet(<file_path>)\r\nindicies = list(set(df.index))\r\n```\r\n\r\nThe strange thing is that with `2024.3.0`, the following seems to know about the index values, look at the repr str..!\r\n```\r\n(Pdb) df.index.compute()\r\nEmpty DataFrame\r\nColumns: []\r\nIndex: [2007345N18298, <truncated>, 2022255N15324]\r\n```\r\n\r\nBut actually try and access those values ...\r\n```\r\n(Pdb) df.index.compute().values\r\narray([], shape=(10, 0), dtype=float64)\r\n```\r\n\r\nHere's the data I'm trying to read as zipped parquet: [test_data.zip](https://github.com/dask/dask/files/14619344/test_data.zip)\r\n\r\nI installed both dask versions using micromamba 1.5.7. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2000209774/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2013105573",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2013105573",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2013105573,
        "node_id": "IC_kwDOAbcwm853_Y2l",
        "user": {
            "login": "jackguac",
            "id": 153636209,
            "node_id": "U_kgDOCShNcQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/153636209?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jackguac",
            "html_url": "https://github.com/jackguac",
            "followers_url": "https://api.github.com/users/jackguac/followers",
            "following_url": "https://api.github.com/users/jackguac/following{/other_user}",
            "gists_url": "https://api.github.com/users/jackguac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jackguac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jackguac/subscriptions",
            "organizations_url": "https://api.github.com/users/jackguac/orgs",
            "repos_url": "https://api.github.com/users/jackguac/repos",
            "events_url": "https://api.github.com/users/jackguac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jackguac/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-21T17:19:26Z",
        "updated_at": "2024-03-21T17:25:51Z",
        "author_association": "NONE",
        "body": "Using `drop(col, axis=1)` drops any column which begins with the prefix `col`, but everything is fine when using `drop(columns=col)` and also was fine I think on 2024.2.1. Here's an example:\r\n\r\n```\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\n\r\n# Create a range of dates\r\ndates = pd.date_range(start='2024-01-01', periods=9, freq='D')\r\n\r\n# Create a Pandas DataFrame with a series of numbers including NaN values and a datetime index\r\npdf = pd.DataFrame({\r\n    'n1': [1, 1, 2, 2, 2, 2, 2, 2, 2],\r\n    'n2': [1, pd.NA, 1, 5, pd.NA, 7, 8, 9, 10],\r\n}, index=dates)\r\n\r\n# Convert the Pandas DataFrame to a Dask DataFrame\r\nddf = dd.from_pandas(pdf, npartitions=2)\r\n\r\ncopy = ddf.copy().rename(columns={\"n2\": \"n1_new\"})\r\nddf = ddf.merge(copy, on=[\"n1\"], how=\"left\")\r\n\r\n# THIS ONE REMOVES BOTH n1_new and n1:\r\nddf = ddf.drop(\"n1_new\", axis=1) \r\n# THIS ONE (CORRECTLY) REMOVES JUST n1_new: \r\n# ddf = ddf.drop(columns=[\"n1_new\"])\r\n\r\nddf.head()\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2013105573/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2014736296",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2014736296",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2014736296,
        "node_id": "IC_kwDOAbcwm854Fm-o",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-22T09:55:52Z",
        "updated_at": "2024-03-22T09:55:52Z",
        "author_association": "MEMBER",
        "body": "@thomas-fred I would consider it best practice to have an example prepared that does not involve sharing the actual parquet file regardless of how small it is. Parquet has been known to be vulnerable to arbitrary code execution. While the known issues have been fixed (see https://www.cve.org/CVERecord?id=CVE-2023-47248) it still requires a little trust to load a file from an otherwise unknown source.\r\n\r\n\r\nI tried reproducing what you're describing as\r\n\r\n```python\r\nimport dask\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\npdf = pd.DataFrame({\"foo\": range(5)}, index=range(50, 55))\r\npdf.to_parquet(\"test.parquet\")\r\ndd.read_parquet(\"test.parquet\").index.compute()\r\n```\r\n\r\nand encountered this error https://github.com/dask/dask-expr/issues/993\r\n\r\ncan you attempt to recreate your issue this way?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2014736296/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2014736706",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2014736706",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2014736706,
        "node_id": "IC_kwDOAbcwm854FnFC",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-22T09:56:09Z",
        "updated_at": "2024-03-22T09:56:09Z",
        "author_association": "MEMBER",
        "body": "@jackguac I have a fix for this up here https://github.com/dask/dask-expr/pull/992",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2014736706/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2015172913",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2015172913",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2015172913,
        "node_id": "IC_kwDOAbcwm854HRkx",
        "user": {
            "login": "benrutter",
            "id": 55319792,
            "node_id": "MDQ6VXNlcjU1MzE5Nzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/55319792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benrutter",
            "html_url": "https://github.com/benrutter",
            "followers_url": "https://api.github.com/users/benrutter/followers",
            "following_url": "https://api.github.com/users/benrutter/following{/other_user}",
            "gists_url": "https://api.github.com/users/benrutter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benrutter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benrutter/subscriptions",
            "organizations_url": "https://api.github.com/users/benrutter/orgs",
            "repos_url": "https://api.github.com/users/benrutter/repos",
            "events_url": "https://api.github.com/users/benrutter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benrutter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-22T14:00:55Z",
        "updated_at": "2024-03-26T15:29:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "General feedback: I'm really excited about dask getting a query optimiser, but seems like there's a few sharp edges still.\r\n\r\nWe (my work) have library with a bunch of data pipeline functions, some of which are fairly involved, and all of which use dask.\r\n\r\nI trialled bumping up the dask version today and our test suite hit 2 (previously passing) fails before hanging indefinitely.\r\n\r\nI've raised a couple bugs for the issues I can recreate- will keep digging around the specifics and raise any bugs I see (and put in a PR if I track down the specific cause). In the meantime, we're setting query planning to false and will check in again with the next dask version.\r\n\r\nHope this is useful feedback btw, very excited about dask expressions becoming a thing.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2015172913/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2017696484",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2017696484",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2017696484,
        "node_id": "IC_kwDOAbcwm854Q5rk",
        "user": {
            "login": "thomas-fred",
            "id": 39301725,
            "node_id": "MDQ6VXNlcjM5MzAxNzI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/39301725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thomas-fred",
            "html_url": "https://github.com/thomas-fred",
            "followers_url": "https://api.github.com/users/thomas-fred/followers",
            "following_url": "https://api.github.com/users/thomas-fred/following{/other_user}",
            "gists_url": "https://api.github.com/users/thomas-fred/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thomas-fred/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thomas-fred/subscriptions",
            "organizations_url": "https://api.github.com/users/thomas-fred/orgs",
            "repos_url": "https://api.github.com/users/thomas-fred/repos",
            "events_url": "https://api.github.com/users/thomas-fred/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thomas-fred/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-25T10:38:37Z",
        "updated_at": "2024-03-25T10:43:07Z",
        "author_association": "NONE",
        "body": "Hello @fjetter, thanks for getting back so promptly. I didn't know about arbitrary code execution issues with parquet files. I knew that my example wasn't ideal, but I also wanted to post something before I stopped work for the weekend. Anyway, I have played with your example and can reproduce your `ZeroDivisionError`.\r\n\r\nI think the specific problem I ran into concerns accessing the values of a string index:\r\n```python\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\npdf = pd.DataFrame({\"foo\": range(3)}, index=[\"a\", \"b\", \"c\"])\r\npdf.to_parquet(\"test.pq\")\r\ndf = dd.read_parquet(\"test.pq\")\r\nprint(f\"{df.index.compute()=}\")\r\nprint(f\"{df.index.compute().values=}\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2017696484/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2018629440",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2018629440",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2018629440,
        "node_id": "IC_kwDOAbcwm854UddA",
        "user": {
            "login": "phofl",
            "id": 61934744,
            "node_id": "MDQ6VXNlcjYxOTM0NzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61934744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phofl",
            "html_url": "https://github.com/phofl",
            "followers_url": "https://api.github.com/users/phofl/followers",
            "following_url": "https://api.github.com/users/phofl/following{/other_user}",
            "gists_url": "https://api.github.com/users/phofl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phofl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phofl/subscriptions",
            "organizations_url": "https://api.github.com/users/phofl/orgs",
            "repos_url": "https://api.github.com/users/phofl/repos",
            "events_url": "https://api.github.com/users/phofl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phofl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-25T18:19:03Z",
        "updated_at": "2024-03-25T18:19:03Z",
        "author_association": "MEMBER",
        "body": "Hi @thomas-fred\r\n\r\nthanks for providing the reproducer. We have a fix here: https://github.com/dask/dask-expr/pull/1000",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2018629440/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2063810673",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2063810673",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2063810673,
        "node_id": "IC_kwDOAbcwm857A0Bx",
        "user": {
            "login": "avriiil",
            "id": 68642378,
            "node_id": "MDQ6VXNlcjY4NjQyMzc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/68642378?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/avriiil",
            "html_url": "https://github.com/avriiil",
            "followers_url": "https://api.github.com/users/avriiil/followers",
            "following_url": "https://api.github.com/users/avriiil/following{/other_user}",
            "gists_url": "https://api.github.com/users/avriiil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/avriiil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/avriiil/subscriptions",
            "organizations_url": "https://api.github.com/users/avriiil/orgs",
            "repos_url": "https://api.github.com/users/avriiil/repos",
            "events_url": "https://api.github.com/users/avriiil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/avriiil/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-18T12:59:09Z",
        "updated_at": "2024-04-18T12:59:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "hey folks :) I'm getting [a 404 error](https://docs.dask.org/en/stable/dask-expr-api.html) when trying to access the docs for `dask-expr` as listed in [the changelog](https://docs.dask.org/en/stable/changelog.html#deprecate-dask-dataframe-implementation). Is there somewhere else I should be looking for API reference?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2063810673/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2063885625",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2063885625",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2063885625,
        "node_id": "IC_kwDOAbcwm857BGU5",
        "user": {
            "login": "phofl",
            "id": 61934744,
            "node_id": "MDQ6VXNlcjYxOTM0NzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61934744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phofl",
            "html_url": "https://github.com/phofl",
            "followers_url": "https://api.github.com/users/phofl/followers",
            "following_url": "https://api.github.com/users/phofl/following{/other_user}",
            "gists_url": "https://api.github.com/users/phofl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phofl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phofl/subscriptions",
            "organizations_url": "https://api.github.com/users/phofl/orgs",
            "repos_url": "https://api.github.com/users/phofl/repos",
            "events_url": "https://api.github.com/users/phofl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phofl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-18T13:35:26Z",
        "updated_at": "2024-04-18T13:35:26Z",
        "author_association": "MEMBER",
        "body": "Sorry about that, https://docs.dask.org/en/stable/dataframe-api.html we switched the link",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2063885625/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2081721404",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2081721404",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2081721404,
        "node_id": "IC_kwDOAbcwm858FIw8",
        "user": {
            "login": "kritikakshirsagar03",
            "id": 73374790,
            "node_id": "MDQ6VXNlcjczMzc0Nzkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/73374790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kritikakshirsagar03",
            "html_url": "https://github.com/kritikakshirsagar03",
            "followers_url": "https://api.github.com/users/kritikakshirsagar03/followers",
            "following_url": "https://api.github.com/users/kritikakshirsagar03/following{/other_user}",
            "gists_url": "https://api.github.com/users/kritikakshirsagar03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kritikakshirsagar03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kritikakshirsagar03/subscriptions",
            "organizations_url": "https://api.github.com/users/kritikakshirsagar03/orgs",
            "repos_url": "https://api.github.com/users/kritikakshirsagar03/repos",
            "events_url": "https://api.github.com/users/kritikakshirsagar03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kritikakshirsagar03/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-29T00:32:17Z",
        "updated_at": "2024-04-29T00:35:29Z",
        "author_association": "NONE",
        "body": "**Here is the Documentation feedback for Dask data frame query planning**:\r\n[Documentation_Feedback.pdf](https://github.com/dask/dask/files/15144348/Documentation_Feedback.pdf)\r\n\r\n\r\n**1.1 Reading the dataset with Dask and obtaining the time it takes to query the \u201cretail value\u201d column from the dataset:**\r\nimport dask.dataframe as dd\r\nimport os\r\nimport time\r\n\r\n# Function to measure the time taken to query 'RetailValue' column from CSV files with Dask\r\ndef query_retail_value(directory, file_names):\r\n    start_time = time.time()\r\n    retail_values = []\r\n\r\n    for filename in file_names:\r\n        df = dd.read_csv(os.path.join(directory, filename))\r\n        \r\n        Perform a query to get the 'RetailValue' column:\r\n        retail_value = df['retailvalue'].compute()\r\n        \r\n        Store the retail values in a list:\r\n        retail_values.append(retail_value)\r\n    \r\n    end_time = time.time()\r\n    print(\"Time taken by Dask to query 'RetailValue' column from all datasets:\", end_time - start_time)\r\n\r\n    return retail_values\r\n\r\nDirectory containing the CSV files:\r\ndirectory = r'C:\\Users\\....\\Downloads'\r\n\r\nList of file names:\r\nfile_names = ['utrechthousingsmall.csv', 'utrechthousinglarge.csv', 'utrechthousinghuge.csv']\r\n\r\nMeasure the time taken to query 'RetailValue' column from CSV files with Dask:\r\nretail_values = query_retail_value(directory, file_names)\r\n\r\nExample: Print the first 10 retail values from each dataset:\r\nfor i, values in enumerate(retail_values):\r\n    print(f\"Dataset {i+1} Retail Values:\")\r\n    print(values.head(10))  # Just printing the first 10 values for demonstration purposes\r\n    print()\r\n\r\n\r\n**1.2 Reading the dataset with pandas and obtaining the time it takes to query the \u201cretail value\u201d column from the dataset:**\r\nimport pandas as pd\r\nimport os\r\nimport time\r\n\r\n# Function to measure the time taken to query 'RetailValue' column from CSV files with Pandas\r\ndef query_retail_value_with_pandas(directory, file_names):\r\n    start_time = time.time()\r\n    retail_values = []\r\n\r\n    for filename in file_names:\r\n        df = pd.read_csv(os.path.join(directory, filename))\r\n        \r\n        Perform a query to get the 'RetailValue' column:\r\n        retail_value = df['retailvalue']\r\n        \r\n        Store the retail values in a list:\r\n        retail_values.append(retail_value)\r\n    \r\n    end_time = time.time()\r\n    print(\"Time taken by Pandas to query 'RetailValue' column from all datasets:\", end_time - start_time)\r\n\r\n    return retail_values\r\n\r\nThe directory containing the CSV files:\r\ndirectory = r'C:\\Users\\...\\Downloads'\r\n\r\nList of file names:\r\nfile_names = ['utrechthousingsmall.csv', 'utrechthousinglarge.csv', 'utrechthousinghuge.csv']\r\n\r\nMeasure the time taken to query the 'RetailValue' column from CSV files with Pandas:\r\nretail_values = query_retail_value_with_pandas(directory, file_names)\r\n\r\nExample: Print the first 10 retail values from each dataset:\r\nfor i, values in enumerate(retail_values):\r\n    print(f\"Dataset {i+1} Retail Values:\")\r\n    print(values.head(10))  # Just printing the first 10 values for demonstration purposes\r\n    print()\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2081721404/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2082261504",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2082261504",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2082261504,
        "node_id": "IC_kwDOAbcwm858HMoA",
        "user": {
            "login": "phofl",
            "id": 61934744,
            "node_id": "MDQ6VXNlcjYxOTM0NzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61934744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phofl",
            "html_url": "https://github.com/phofl",
            "followers_url": "https://api.github.com/users/phofl/followers",
            "following_url": "https://api.github.com/users/phofl/following{/other_user}",
            "gists_url": "https://api.github.com/users/phofl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phofl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phofl/subscriptions",
            "organizations_url": "https://api.github.com/users/phofl/orgs",
            "repos_url": "https://api.github.com/users/phofl/repos",
            "events_url": "https://api.github.com/users/phofl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phofl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-29T09:26:49Z",
        "updated_at": "2024-04-29T09:26:49Z",
        "author_association": "MEMBER",
        "body": "@kritikakshirsagar03 Could you add a bit more context what you want to tell us with this?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2082261504/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2108912210",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2108912210",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2108912210,
        "node_id": "IC_kwDOAbcwm859s3JS",
        "user": {
            "login": "zmbc",
            "id": 13357648,
            "node_id": "MDQ6VXNlcjEzMzU3NjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13357648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zmbc",
            "html_url": "https://github.com/zmbc",
            "followers_url": "https://api.github.com/users/zmbc/followers",
            "following_url": "https://api.github.com/users/zmbc/following{/other_user}",
            "gists_url": "https://api.github.com/users/zmbc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zmbc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zmbc/subscriptions",
            "organizations_url": "https://api.github.com/users/zmbc/orgs",
            "repos_url": "https://api.github.com/users/zmbc/repos",
            "events_url": "https://api.github.com/users/zmbc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zmbc/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-05-13T22:31:12Z",
        "updated_at": "2024-05-13T22:31:12Z",
        "author_association": "NONE",
        "body": "xref https://github.com/dask/dask-expr/issues/1060 -- looks like a fix is already in the works!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2108912210/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2128154865",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2128154865",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2128154865,
        "node_id": "IC_kwDOAbcwm85-2RDx",
        "user": {
            "login": "frbelotto",
            "id": 24688087,
            "node_id": "MDQ6VXNlcjI0Njg4MDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24688087?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frbelotto",
            "html_url": "https://github.com/frbelotto",
            "followers_url": "https://api.github.com/users/frbelotto/followers",
            "following_url": "https://api.github.com/users/frbelotto/following{/other_user}",
            "gists_url": "https://api.github.com/users/frbelotto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frbelotto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frbelotto/subscriptions",
            "organizations_url": "https://api.github.com/users/frbelotto/orgs",
            "repos_url": "https://api.github.com/users/frbelotto/repos",
            "events_url": "https://api.github.com/users/frbelotto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frbelotto/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-05-23T22:44:54Z",
        "updated_at": "2024-05-23T22:44:54Z",
        "author_association": "NONE",
        "body": "How do I disable query planning? I am facing some weird issues (my code freezes with no errors for hours)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2128154865/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2129213980",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2129213980",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2129213980,
        "node_id": "IC_kwDOAbcwm85-6Toc",
        "user": {
            "login": "avriiil",
            "id": 68642378,
            "node_id": "MDQ6VXNlcjY4NjQyMzc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/68642378?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/avriiil",
            "html_url": "https://github.com/avriiil",
            "followers_url": "https://api.github.com/users/avriiil/followers",
            "following_url": "https://api.github.com/users/avriiil/following{/other_user}",
            "gists_url": "https://api.github.com/users/avriiil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/avriiil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/avriiil/subscriptions",
            "organizations_url": "https://api.github.com/users/avriiil/orgs",
            "repos_url": "https://api.github.com/users/avriiil/repos",
            "events_url": "https://api.github.com/users/avriiil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/avriiil/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-05-24T10:39:34Z",
        "updated_at": "2024-05-24T10:39:34Z",
        "author_association": "CONTRIBUTOR",
        "body": "@frbelotto - you can disable query planning with\r\n\r\n```\r\nimport dask\r\ndask.config.set({'dataframe.query-planning': False})\r\n```\r\n\r\nsee also: https://docs.dask.org/en/stable/changelog.html#query-planning",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2129213980/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/2147234365",
        "html_url": "https://github.com/dask/dask/issues/10995#issuecomment-2147234365",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10995",
        "id": 2147234365,
        "node_id": "IC_kwDOAbcwm85__DI9",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-06-04T10:54:49Z",
        "updated_at": "2024-06-04T10:54:49Z",
        "author_association": "MEMBER",
        "body": "> How do I disable query planning? I am facing some weird issues (my code freezes with no errors for hours)\r\n\r\nIt would be very helpful if you could post a reproducer. We've encountered things like this in the past and the fixes are typically easy if we have a reproducer available\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/2147234365/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]