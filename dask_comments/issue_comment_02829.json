[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/568346738",
        "html_url": "https://github.com/dask/dask/issues/2829#issuecomment-568346738",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2829",
        "id": 568346738,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2ODM0NjczOA==",
        "user": {
            "login": "ryan-williams",
            "id": 465045,
            "node_id": "MDQ6VXNlcjQ2NTA0NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/465045?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryan-williams",
            "html_url": "https://github.com/ryan-williams",
            "followers_url": "https://api.github.com/users/ryan-williams/followers",
            "following_url": "https://api.github.com/users/ryan-williams/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryan-williams/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryan-williams/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryan-williams/subscriptions",
            "organizations_url": "https://api.github.com/users/ryan-williams/orgs",
            "repos_url": "https://api.github.com/users/ryan-williams/repos",
            "events_url": "https://api.github.com/users/ryan-williams/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryan-williams/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-12-23T04:05:34Z",
        "updated_at": "2019-12-23T04:05:34Z",
        "author_association": "CONTRIBUTOR",
        "body": "The example code here really helped me, thanks. Some search-engine breadcrumbs:\r\n\r\nThis is a way to convert an existing Dask Series to a categorical dtype, letting the user provide the categories explicitly, and avoiding having to do a full pass over the data / `.compute()` (as is required by e.g. `dd.categorize()`).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/568346738/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/591361411",
        "html_url": "https://github.com/dask/dask/issues/2829#issuecomment-591361411",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2829",
        "id": 591361411,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTM2MTQxMQ==",
        "user": {
            "login": "arnold-smit",
            "id": 50524727,
            "node_id": "MDQ6VXNlcjUwNTI0NzI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/50524727?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arnold-smit",
            "html_url": "https://github.com/arnold-smit",
            "followers_url": "https://api.github.com/users/arnold-smit/followers",
            "following_url": "https://api.github.com/users/arnold-smit/following{/other_user}",
            "gists_url": "https://api.github.com/users/arnold-smit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arnold-smit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arnold-smit/subscriptions",
            "organizations_url": "https://api.github.com/users/arnold-smit/orgs",
            "repos_url": "https://api.github.com/users/arnold-smit/repos",
            "events_url": "https://api.github.com/users/arnold-smit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arnold-smit/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-26T10:44:33Z",
        "updated_at": "2020-02-26T10:44:33Z",
        "author_association": "NONE",
        "body": "Thanks for helping me out with the code above.\r\n\r\nI suspect this situation occurs quite often when importing data from relational databases with models using foreign keys into lookup / dimension tables. \r\n\r\nIMHO an ideal place to construct the Categorical would be in the dask.dataframe.read_<...> family of functions. \r\n\r\nWould love to have syntax like:\r\n```python\r\ndask.dataframe.read_csv(..., dtypes={'var': {'category', dict_from_codes_to_categories}, ...}) \r\n```\r\nThe validity of the dict could be checked immediately, and an exception could be raised when some illegal code is read on the fly. Have no idea on the complexity of this, but thought I'd share my thoughts. If someone points me in the right direction, I could have an attempt at contributing.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/591361411/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/591392332",
        "html_url": "https://github.com/dask/dask/issues/2829#issuecomment-591392332",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2829",
        "id": 591392332,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTM5MjMzMg==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-26T12:04:34Z",
        "updated_at": "2020-02-26T12:04:34Z",
        "author_association": "MEMBER",
        "body": "I don't think we would want that kind of codes -> categories behavior without adding it in pandas first. And my *guess* is that it wouldn't be accepted there.\r\n\r\nWith https://github.com/dask/dask/issues/5001, we have another motivation for a simple extension array collection. I'm guessing that will be implemented soon rather than later, and so we'll have a `dask.dataframe.Categorical.from_codes`.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/591392332/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/591759454",
        "html_url": "https://github.com/dask/dask/issues/2829#issuecomment-591759454",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2829",
        "id": 591759454,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTc1OTQ1NA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-27T03:21:42Z",
        "updated_at": "2020-02-27T03:21:42Z",
        "author_association": "MEMBER",
        "body": "> I don't think we would want that kind of codes -> categories behavior without adding it in pandas first. And my guess is that it wouldn't be accepted there.\r\n\r\nI'm confused.  Isn't this the behavior of the Pandas `from_codes` function?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/591759454/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/591978944",
        "html_url": "https://github.com/dask/dask/issues/2829#issuecomment-591978944",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2829",
        "id": 591978944,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTk3ODk0NA==",
        "user": {
            "login": "TomAugspurger",
            "id": 1312546,
            "node_id": "MDQ6VXNlcjEzMTI1NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1312546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomAugspurger",
            "html_url": "https://github.com/TomAugspurger",
            "followers_url": "https://api.github.com/users/TomAugspurger/followers",
            "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
            "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
            "repos_url": "https://api.github.com/users/TomAugspurger/repos",
            "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-27T13:46:31Z",
        "updated_at": "2020-02-27T13:46:31Z",
        "author_association": "MEMBER",
        "body": "Should have been clearer. I meant the codes -> categories *in read_csv* that was proposed in https://github.com/dask/dask/issues/2829#issuecomment-591361411 is likely not going to happen.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/591978944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]