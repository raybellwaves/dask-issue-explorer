{
    "url": "https://api.github.com/repos/dask/dask/issues/7437",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/7437/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/7437/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/7437/events",
    "html_url": "https://github.com/dask/dask/issues/7437",
    "id": 837813629,
    "node_id": "MDU6SXNzdWU4Mzc4MTM2Mjk=",
    "number": 7437,
    "title": "Backend for scipy sparse building csr/csc matrix inefficiently",
    "user": {
        "login": "ag-tcm",
        "id": 66845101,
        "node_id": "MDQ6VXNlcjY2ODQ1MTAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/66845101?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ag-tcm",
        "html_url": "https://github.com/ag-tcm",
        "followers_url": "https://api.github.com/users/ag-tcm/followers",
        "following_url": "https://api.github.com/users/ag-tcm/following{/other_user}",
        "gists_url": "https://api.github.com/users/ag-tcm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ag-tcm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ag-tcm/subscriptions",
        "organizations_url": "https://api.github.com/users/ag-tcm/orgs",
        "repos_url": "https://api.github.com/users/ag-tcm/repos",
        "events_url": "https://api.github.com/users/ag-tcm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ag-tcm/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        },
        {
            "id": 3798602129,
            "node_id": "LA_kwDOAbcwm87iahGR",
            "url": "https://api.github.com/repos/dask/dask/labels/enhancement",
            "name": "enhancement",
            "color": "C2E0C6",
            "default": true,
            "description": "Improve existing functionality or make things work better"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-03-22T15:09:50Z",
    "updated_at": "2022-08-25T17:53:05Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**What happened**:\r\nI'm using dask to work with `scipy.sparse` `csr_matrix`'s that are returned from `dask_ml.feature_extraction.text.HashingVectorizer`.\r\nI need to save the matrix to disk and I was not able to do this with TileDB, Zarr or HDF5. (Maybe their is a way, but I haven't figured it out.)\r\nSo, I implemented a simple `SparseCache` class that supports numpy-style setitem indexing while under the hood it stores the chunks as npz files using `scipy.sparse.save_npz` and retrieves them with `scipy.sparse.load_npz`.\r\nLater, I load this data back into a Dask Array. Then, I want to get the matrix in memory locally, so I call compute() and I get an out of memory error. The matrix is about 4 GB and I have 12 GB memory available locally, so it should fit.\r\nI debug the code and find that in `dask.array.backends.register_scipy_sparse._concatenate` the function `scipy.sparse.hstack(L)` is being called a bunch of times on lists of `csr_matrix` objects with length of 1.\r\nRight before `scipy.sparse.vstack(L)` is called to build the final matrix, the memory usage has already doubled to 8 GB because all of the data has been unnecessarily duplicated by these `hstack` calls.\r\n\r\n**What you expected to happen**:\r\nThe `backends` code for scipy sparse shouldn't waste memory by duplicating data unnecessarily.\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport dask.array as dask_array\r\ncw = SparseCache() #A custom class that supports numpy-style setitem indexing using scipy.sparse.save_npz/load_npz to access chunks of scipy sparse matricies\r\nx = dask_array.from_array(cw, chunks=cw.chunks, lock=False, asarray=False, fancy=True, inline_array=False)\r\nx = x.compute()\r\n```\r\n\r\n**Anything else we need to know?**:\r\nIf I change `dask.array.backends.register_scipy_sparse._concatenate` as below, then the data isn't duplicated.\r\n```\r\n    def _concatenate(L, axis=0):\r\n        if axis == 0:\r\n            #return scipy.sparse.vstack(L)\r\n            return L[0] if len(L) == 1 else scipy.sparse.vstack(L)\r\n        elif axis == 1:\r\n            #return scipy.sparse.hstack(L)\r\n            return L[0] if len(L) == 1 else scipy.sparse.hstack(L)\r\n        else:\r\n            msg = (\r\n                \"Can only concatenate scipy sparse matrices for axis in \"\r\n                \"{0, 1}.  Got %s\" % axis\r\n            )\r\n            raise ValueError(msg)\r\n```\r\n\r\n**Environment**:\r\n\r\n- Dask version: 2021.3.0\r\n- Python version: 3.7.7\r\n- Operating System: Win10\r\n- Install method (conda, pip, source): pip\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/7437/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/7437/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}