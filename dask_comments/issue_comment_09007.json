[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1114027721",
        "html_url": "https://github.com/dask/dask/issues/9007#issuecomment-1114027721",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9007",
        "id": 1114027721,
        "node_id": "IC_kwDOAbcwm85CZrbJ",
        "user": {
            "login": "SultanOrazbayev",
            "id": 20208402,
            "node_id": "MDQ6VXNlcjIwMjA4NDAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/20208402?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SultanOrazbayev",
            "html_url": "https://github.com/SultanOrazbayev",
            "followers_url": "https://api.github.com/users/SultanOrazbayev/followers",
            "following_url": "https://api.github.com/users/SultanOrazbayev/following{/other_user}",
            "gists_url": "https://api.github.com/users/SultanOrazbayev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SultanOrazbayev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SultanOrazbayev/subscriptions",
            "organizations_url": "https://api.github.com/users/SultanOrazbayev/orgs",
            "repos_url": "https://api.github.com/users/SultanOrazbayev/repos",
            "events_url": "https://api.github.com/users/SultanOrazbayev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SultanOrazbayev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-30T17:53:30Z",
        "updated_at": "2022-04-30T17:53:30Z",
        "author_association": "CONTRIBUTOR",
        "body": "This is the traceback:\r\n\r\n```pytb\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nFile ~/miniconda/envs/coiled_to_datetime/lib/python3.10/site-packages/dask/dataframe/dispatch.py:126, in make_meta(x, index, parent_meta)\r\n    125 try:\r\n--> 126     return make_meta_dispatch(x, index=index)\r\n    127 except TypeError:\r\n\r\nFile ~/miniconda/envs/coiled_to_datetime/lib/python3.10/site-packages/dask/utils.py:605, in Dispatch.__call__(self, arg, *args, **kwargs)\r\n    602 \"\"\"\r\n    603 Call the corresponding method based on type of argument.\r\n    604 \"\"\"\r\n--> 605 meth = self.dispatch(type(arg))\r\n    606 return meth(arg, *args, **kwargs)\r\n\r\nFile ~/miniconda/envs/coiled_to_datetime/lib/python3.10/site-packages/dask/utils.py:599, in Dispatch.dispatch(self, cls)\r\n    598         return self.dispatch(cls)  # recurse\r\n--> 599 raise TypeError(f\"No dispatch for {cls}\")\r\n\r\nTypeError: No dispatch for <class 'pytz.tzfile.Asia/Almaty'>\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [15], in <cell line: 25>()\r\n     22 print(ddf[\"converted_date\"].compute().dt.tz) \r\n     24 # dask version fails\r\n---> 25 print(ddf[\"converted_date\"].dt.tz)\r\n\r\nFile ~/miniconda/envs/coiled_to_datetime/lib/python3.10/site-packages/dask/dataframe/accessor.py:26, in _bind_property.<locals>.func(self)\r\n     25 def func(self):\r\n---> 26     return self._property_map(attr)\r\n\r\nFile ~/miniconda/envs/coiled_to_datetime/lib/python3.10/site-packages/dask/dataframe/accessor.py:95, in Accessor._property_map(self, attr)\r\n     93 meta = self._delegate_property(self._series._meta, self._accessor_name, attr)\r\n     94 token = f\"{self._accessor_name}-{attr}\"\r\n---> 95 return self._series.map_partitions(\r\n     96     self._delegate_property, self._accessor_name, attr, token=token, meta=meta\r\n     97 )\r\n\r\nFile ~/miniconda/envs/coiled_to_datetime/lib/python3.10/site-packages/dask/dataframe/core.py:845, in _Frame.map_partitions(self, func, *args, **kwargs)\r\n    730 @insert_meta_param_description(pad=12)\r\n    731 def map_partitions(self, func, *args, **kwargs):\r\n    732     \"\"\"Apply Python function on each DataFrame partition.\r\n    733 \r\n    734     Note that the index and divisions are assumed to remain unchanged.\r\n   (...)\r\n    843     None as the division.\r\n    844     \"\"\"\r\n--> 845     return map_partitions(func, self, *args, **kwargs)\r\n\r\nFile ~/miniconda/envs/coiled_to_datetime/lib/python3.10/site-packages/dask/dataframe/core.py:6319, in map_partitions(func, meta, enforce_metadata, transform_divisions, align_dataframes, *args, **kwargs)\r\n   6317     meta_is_emulated = True\r\n   6318 else:\r\n-> 6319     meta = make_meta(meta, index=meta_index, parent_meta=parent_meta)\r\n   6320     meta_is_emulated = False\r\n   6322 if all(isinstance(arg, Scalar) for arg in args):\r\n\r\nFile ~/miniconda/envs/coiled_to_datetime/lib/python3.10/site-packages/dask/dataframe/dispatch.py:130, in make_meta(x, index, parent_meta)\r\n    128 if parent_meta is not None:\r\n    129     func = make_meta_obj.dispatch(type(parent_meta))\r\n--> 130     return func(x, index=index)\r\n    131 else:\r\n    132     # Default to using the pandas backend\r\n    133     # if ``parent_meta`` is not specified\r\n    134     func = make_meta_obj.dispatch(pd.DataFrame)\r\n\r\nFile ~/miniconda/envs/coiled_to_datetime/lib/python3.10/site-packages/dask/dataframe/backends.py:152, in make_meta_object(x, index)\r\n    149 if is_scalar(x):\r\n    150     return _nonempty_scalar(x)\r\n--> 152 raise TypeError(f\"Don't know how to create metadata from {x}\")\r\n\r\nTypeError: Don't know how to create metadata from Asia/Almaty\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1114027721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1115368765",
        "html_url": "https://github.com/dask/dask/issues/9007#issuecomment-1115368765",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9007",
        "id": 1115368765,
        "node_id": "IC_kwDOAbcwm85Cey09",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-02T21:07:30Z",
        "updated_at": "2022-05-02T21:07:30Z",
        "author_association": "MEMBER",
        "body": "Thanks for opening this @SultanOrazbayev. I thought that dask just needed to register this type but it's weirder than that. It looks like when creating `_meta` (the tiny version of the dataset that dask uses to keep track of columns and dtypes) dask doesn't know how to create a tiny version of the tzinfo.\r\n\r\nI think this is actually a broader issue with accessors that return a single value rather than a series. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1115368765/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]