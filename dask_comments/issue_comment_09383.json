[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1214160616",
        "html_url": "https://github.com/dask/dask/issues/9383#issuecomment-1214160616",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9383",
        "id": 1214160616,
        "node_id": "IC_kwDOAbcwm85IXp7o",
        "user": {
            "login": "ljmc-github",
            "id": 26164870,
            "node_id": "MDQ6VXNlcjI2MTY0ODcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/26164870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ljmc-github",
            "html_url": "https://github.com/ljmc-github",
            "followers_url": "https://api.github.com/users/ljmc-github/followers",
            "following_url": "https://api.github.com/users/ljmc-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/ljmc-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ljmc-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ljmc-github/subscriptions",
            "organizations_url": "https://api.github.com/users/ljmc-github/orgs",
            "repos_url": "https://api.github.com/users/ljmc-github/repos",
            "events_url": "https://api.github.com/users/ljmc-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ljmc-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-08-13T13:33:32Z",
        "updated_at": "2022-08-13T13:33:32Z",
        "author_association": "NONE",
        "body": "I am happy to send a PR if you can guide me for the solution as I am brand new to dask.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1214160616/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1216083941",
        "html_url": "https://github.com/dask/dask/issues/9383#issuecomment-1216083941",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9383",
        "id": 1216083941,
        "node_id": "IC_kwDOAbcwm85Ie_fl",
        "user": {
            "login": "McToel",
            "id": 36071676,
            "node_id": "MDQ6VXNlcjM2MDcxNjc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/36071676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/McToel",
            "html_url": "https://github.com/McToel",
            "followers_url": "https://api.github.com/users/McToel/followers",
            "following_url": "https://api.github.com/users/McToel/following{/other_user}",
            "gists_url": "https://api.github.com/users/McToel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/McToel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/McToel/subscriptions",
            "organizations_url": "https://api.github.com/users/McToel/orgs",
            "repos_url": "https://api.github.com/users/McToel/repos",
            "events_url": "https://api.github.com/users/McToel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/McToel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-08-16T02:51:52Z",
        "updated_at": "2022-08-16T02:52:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "I have looked into this a little bit and I found that the problem only exists with `read_sql_query` and not with `read_sql_table`. As far as I can tell, this is because `read_sql_table` autoloads all the table scheme, e.g. the data types from the SQL table. Thus, `parse_dates` isn't even necessary, as the dates are automatically parsed by SQLAlchemy.\r\n\r\nI tried around with passing `parse_dates` to every `pd.read_sql...` but the results were quite bad:\r\n- `parse_dates` could not parse `datetime.min` (out of bound error)\r\n- SQLAlchemy then cannot bind pd.Timestamps into the query, only datetime.datetime work\r\n- when converted to datetimes, SELECT datetime FROM test WHERE datetime >= '2022-08-01 00:00:00' will not select rows where datetime == '2022-08-01 00:00:00'\r\n\r\nWhile I think most problems could be resolved, I think the best solution would be to update the documentation to point out that \r\n> The problem is solved by casting the column as DateTime in the SQLAlchemy select statement.\r\n\r\nWhich is the cleanest way of handling the problem. Plus, it would be nice to raise a helpful error just in case someone does not read the docs too carefully.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1216083941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]