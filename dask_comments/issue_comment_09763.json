[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1352443593",
        "html_url": "https://github.com/dask/dask/issues/9763#issuecomment-1352443593",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9763",
        "id": 1352443593,
        "node_id": "IC_kwDOAbcwm85QnKbJ",
        "user": {
            "login": "quasiben",
            "id": 1403768,
            "node_id": "MDQ6VXNlcjE0MDM3Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1403768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quasiben",
            "html_url": "https://github.com/quasiben",
            "followers_url": "https://api.github.com/users/quasiben/followers",
            "following_url": "https://api.github.com/users/quasiben/following{/other_user}",
            "gists_url": "https://api.github.com/users/quasiben/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quasiben/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quasiben/subscriptions",
            "organizations_url": "https://api.github.com/users/quasiben/orgs",
            "repos_url": "https://api.github.com/users/quasiben/repos",
            "events_url": "https://api.github.com/users/quasiben/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quasiben/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-15T01:34:29Z",
        "updated_at": "2022-12-15T01:34:29Z",
        "author_association": "MEMBER",
        "body": "Can you write the full equivalent of what you are trying to do with Pandas ?  When I do what I _think_ you are trying to do it is invalid:\r\n\r\n```python\r\nIn [22]: toy_df.index[toy_df.apply(lambda x: abs(x) < 0.5)]\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\nInput In [22], in <module>\r\n----> 1 toy_df.index[toy_df.apply(lambda x: abs(x) < 0.5)]\r\n\r\nFile ~/miniconda3/envs/dask-dev/lib/python3.9/site-packages/pandas/core/indexes/base.py:5055, in Index.__getitem__(self, key)\r\n   5048 if com.is_bool_indexer(key):\r\n   5049     # if we have list[bools, length=1e5] then doing this check+convert\r\n   5050     #  takes 166 \u00b5s + 2.1 ms and cuts the ndarray.__getitem__\r\n   5051     #  time below from 3.8 ms to 496 \u00b5s\r\n   5052     # if we already have ndarray[bool], the overhead is 1.4 \u00b5s or .25%\r\n   5053     key = np.asarray(key, dtype=bool)\r\n-> 5055 result = getitem(key)\r\n   5056 # Because we ruled out integer above, we always get an arraylike here\r\n   5057 if result.ndim > 1:\r\n\r\nIndexError: too many indices for array: array is 1-dimensional, but 2 were indexed\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1352443593/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1352508829",
        "html_url": "https://github.com/dask/dask/issues/9763#issuecomment-1352508829",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9763",
        "id": 1352508829,
        "node_id": "IC_kwDOAbcwm85QnaWd",
        "user": {
            "login": "Crispy13",
            "id": 47196430,
            "node_id": "MDQ6VXNlcjQ3MTk2NDMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/47196430?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Crispy13",
            "html_url": "https://github.com/Crispy13",
            "followers_url": "https://api.github.com/users/Crispy13/followers",
            "following_url": "https://api.github.com/users/Crispy13/following{/other_user}",
            "gists_url": "https://api.github.com/users/Crispy13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Crispy13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Crispy13/subscriptions",
            "organizations_url": "https://api.github.com/users/Crispy13/orgs",
            "repos_url": "https://api.github.com/users/Crispy13/repos",
            "events_url": "https://api.github.com/users/Crispy13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Crispy13/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-15T03:25:07Z",
        "updated_at": "2022-12-15T03:25:07Z",
        "author_association": "NONE",
        "body": "For pandas code,\r\n\r\n```\r\ntoy_df = pd.DataFrame(\r\n                    np.random.randn(10,3),\r\n                    columns = list(\"ABC\"),\r\n                    index = list(range(10)),\r\n)\r\n\r\ns1 = toy_df['A'].apply(lambda x: abs(x) < 0.5)\r\n\r\ntoy_df.index[s1]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1352508829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1352526967",
        "html_url": "https://github.com/dask/dask/issues/9763#issuecomment-1352526967",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9763",
        "id": 1352526967,
        "node_id": "IC_kwDOAbcwm85Qnex3",
        "user": {
            "login": "quasiben",
            "id": 1403768,
            "node_id": "MDQ6VXNlcjE0MDM3Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1403768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quasiben",
            "html_url": "https://github.com/quasiben",
            "followers_url": "https://api.github.com/users/quasiben/followers",
            "following_url": "https://api.github.com/users/quasiben/following{/other_user}",
            "gists_url": "https://api.github.com/users/quasiben/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quasiben/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quasiben/subscriptions",
            "organizations_url": "https://api.github.com/users/quasiben/orgs",
            "repos_url": "https://api.github.com/users/quasiben/repos",
            "events_url": "https://api.github.com/users/quasiben/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quasiben/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-15T04:01:16Z",
        "updated_at": "2022-12-15T04:01:16Z",
        "author_association": "MEMBER",
        "body": "Apologies, I had misread your initial code example.  I think in this case Dask does not have full selection of an `index`.  You could either reset the index and select from the column with the boolean mask you computed: `s1` or you could convert the index to a series then do the boolean selection:\r\n\r\n> toy_ddf1.index.to_series()[s1]\r\n\r\nNot sure how easy / difficult this would be to fully implement ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1352526967/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]