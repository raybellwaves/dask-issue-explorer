[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1270207558",
        "html_url": "https://github.com/dask/dask/issues/9546#issuecomment-1270207558",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9546",
        "id": 1270207558,
        "node_id": "IC_kwDOAbcwm85LtdRG",
        "user": {
            "login": "phobson",
            "id": 1163939,
            "node_id": "MDQ6VXNlcjExNjM5Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1163939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phobson",
            "html_url": "https://github.com/phobson",
            "followers_url": "https://api.github.com/users/phobson/followers",
            "following_url": "https://api.github.com/users/phobson/following{/other_user}",
            "gists_url": "https://api.github.com/users/phobson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phobson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phobson/subscriptions",
            "organizations_url": "https://api.github.com/users/phobson/orgs",
            "repos_url": "https://api.github.com/users/phobson/repos",
            "events_url": "https://api.github.com/users/phobson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phobson/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-06T14:55:15Z",
        "updated_at": "2022-10-06T14:55:15Z",
        "author_association": "MEMBER",
        "body": "@lrast thanks for the report and clear reproducer. I'm getting the same results on v2022.6.0.\r\n\r\nI can't articulate exactly why, but it makes sense to me that the test would produce garbage if the shapes are unknown. It _shouldn't_ do that, to be clear. \r\n\r\nThe function starts off with:\r\n\r\n\r\n```python\r\ndef ttest_ind(a, b, axis=0, equal_var=True):\r\n    v1 = da.var(a, axis, ddof=1)  # XXX: np -> da\r\n    v2 = da.var(b, axis, ddof=1)  # XXX: np -> da\r\n    n1 = a.shape[axis]\r\n    n2 = b.shape[axis]\r\n\r\n    # yada yada\r\n```\r\n\r\nand `n1, n2` are both NaN, and that's getting propagated through the rest of the calculation.\r\n\r\nI'm not sure what the best path forward here is (implicit compute vs raising an error vs elegant determination of the array shapes).\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1270207558/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1270830423",
        "html_url": "https://github.com/dask/dask/issues/9546#issuecomment-1270830423",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9546",
        "id": 1270830423,
        "node_id": "IC_kwDOAbcwm85Lv1VX",
        "user": {
            "login": "lrast",
            "id": 1191040,
            "node_id": "MDQ6VXNlcjExOTEwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1191040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lrast",
            "html_url": "https://github.com/lrast",
            "followers_url": "https://api.github.com/users/lrast/followers",
            "following_url": "https://api.github.com/users/lrast/following{/other_user}",
            "gists_url": "https://api.github.com/users/lrast/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lrast/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lrast/subscriptions",
            "organizations_url": "https://api.github.com/users/lrast/orgs",
            "repos_url": "https://api.github.com/users/lrast/repos",
            "events_url": "https://api.github.com/users/lrast/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lrast/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-06T23:12:16Z",
        "updated_at": "2022-10-06T23:12:16Z",
        "author_association": "NONE",
        "body": "It seems to me that the issue is that a.shape is not lazy, but its output is being used in a lazy function. Instead, the numbers of points should be calculated lazily, along these lines:\r\n\r\n```python\r\ndef ttest_ind(a, b, axis=0, equal_var=True):\r\n    v1 = da.var(a, axis, ddof=1)  # XXX: np -> da\r\n    v2 = da.var(b, axis, ddof=1)  # XXX: np -> da\r\n    n1 = _lazy_shape(a, axis)\r\n    n2 = _lazy_shape(b, axis)\r\n\r\n    # yada yada\r\n\r\ndef _lazy_shape(x, axis):\r\n    \"\"\" lazy evaluation of array shape along the specified axis \"\"\"\r\n    @delayed\r\n    def delayed_shape(x, axis):\r\n        return x.shape[axis]\r\n\r\n    return da.from_delayed( delayed_shape(x, axis), shape=(1,), dtype=int )\r\n```\r\n\r\nI've made a pull request along these lines: https://github.com/dask/dask/pull/9557.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1270830423/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1270917562",
        "html_url": "https://github.com/dask/dask/issues/9546#issuecomment-1270917562",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9546",
        "id": 1270917562,
        "node_id": "IC_kwDOAbcwm85LwKm6",
        "user": {
            "login": "phobson",
            "id": 1163939,
            "node_id": "MDQ6VXNlcjExNjM5Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1163939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phobson",
            "html_url": "https://github.com/phobson",
            "followers_url": "https://api.github.com/users/phobson/followers",
            "following_url": "https://api.github.com/users/phobson/following{/other_user}",
            "gists_url": "https://api.github.com/users/phobson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phobson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phobson/subscriptions",
            "organizations_url": "https://api.github.com/users/phobson/orgs",
            "repos_url": "https://api.github.com/users/phobson/repos",
            "events_url": "https://api.github.com/users/phobson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phobson/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-07T00:43:17Z",
        "updated_at": "2022-10-07T00:43:17Z",
        "author_association": "MEMBER",
        "body": "Thanks for the PR. I'll take a look.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1270917562/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]