{
    "url": "https://api.github.com/repos/dask/dask/issues/9467",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9467/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9467/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9467/events",
    "html_url": "https://github.com/dask/dask/issues/9467",
    "id": 1363646158,
    "node_id": "I_kwDOAbcwm85RR5bO",
    "number": 9467,
    "title": "`to_parquet` fails to persist ordering information",
    "user": {
        "login": "fny",
        "id": 346068,
        "node_id": "MDQ6VXNlcjM0NjA2OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/346068?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fny",
        "html_url": "https://github.com/fny",
        "followers_url": "https://api.github.com/users/fny/followers",
        "following_url": "https://api.github.com/users/fny/following{/other_user}",
        "gists_url": "https://api.github.com/users/fny/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fny/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fny/subscriptions",
        "organizations_url": "https://api.github.com/users/fny/orgs",
        "repos_url": "https://api.github.com/users/fny/repos",
        "events_url": "https://api.github.com/users/fny/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fny/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 2949099791,
            "node_id": "MDU6TGFiZWwyOTQ5MDk5Nzkx",
            "url": "https://api.github.com/repos/dask/dask/labels/parquet",
            "name": "parquet",
            "color": "77A66C",
            "default": false,
            "description": ""
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3798450413,
            "node_id": "LA_kwDOAbcwm87iZ8Dt",
            "url": "https://api.github.com/repos/dask/dask/labels/bug",
            "name": "bug",
            "color": "faadaf",
            "default": true,
            "description": "Something is broken"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-09-06T18:11:22Z",
    "updated_at": "2022-10-10T02:14:17Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**What happened**: Dask fails to persist ordering information on categorical column when using `to_parquet`\r\n\r\n**What you expected to happen**: Ordering information should be retained.\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport pandas as pd\r\nimport numpy as np\r\nimport dask.dataframe as dd\r\n\r\n# Here is a dataframe with a simple categorical type.\r\ndf = pd.DataFrame({\r\n    'category': pd.Series(['a', 'b'] * 50).astype(pd.CategoricalDtype(categories=['a','b'], ordered=True)),\r\n    'data': np.arange(0, 100)\r\n})\r\n\r\n# Pandas is able to persist this data type properly retaining both the categories and the ordering info\r\norig_dtype = df['category'].dtype # => CategoricalDtype(categories=['a', 'b'], ordered=True)\r\ndf.to_parquet('test1.parquet')\r\ndf = pd.read_parquet('test1.parquet')\r\nassert df['category'].dtype == orig_dtype\r\n\r\n# Let's load this data with dask\r\nddf = dd.read_parquet('test1.parquet')\r\n\r\n# If would be nice if this gave a correct dtype... but thats a different issue\r\nddf['category'].dtype # => CategoricalDtype(categories=['__UNKNOWN_CATEGORIES__'], ordered=False)\r\n# Now lets save this to a new parquet file\r\nddf.to_parquet('test2.parquet', overwrite=True)\r\n\r\n# Let's load the new parquet file in pandas\r\ndf = pd.read_parquet('test2.parquet')\r\n# Hmm... the dtype isn't ordered.\r\ndf['category'].dtype # => CategoricalDtype(categories=['a', 'b'], ordered=False)\r\nassert df['category'].dtype == orig_dtype # => Assertion Error\r\n```\r\n\r\n**Environment**:\r\n\r\n- Dask version: 2022.08\r\n- Python version: 3.9\r\n- Operating System: Mac\r\n- Install method (conda, pip, source): pip\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9467/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9467/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}