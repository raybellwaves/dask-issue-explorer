[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/656164685",
        "html_url": "https://github.com/dask/dask/issues/6385#issuecomment-656164685",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6385",
        "id": 656164685,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjE2NDY4NQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-09T14:34:13Z",
        "updated_at": "2020-07-09T14:34:13Z",
        "author_association": "MEMBER",
        "body": "Thank you for raising this issue @jthielen .  To check if something is a valid dask collection we recommend the `dask.is_collection` function.  This checks for things like `__dask_graph__` as you suggest above.  I would combine something like that with some `is_arraylike` check.\r\n\r\nAlso, you're probably past this point, but it might be interesting to see if Pint Quantities can live as chunks *within* a Dask array.  This is how we've handled things like sparse arrays or GPU arrays.  Dask array can wrap most things that look enough like a numpy array.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/656164685/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/656176799",
        "html_url": "https://github.com/dask/dask/issues/6385#issuecomment-656176799",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6385",
        "id": 656176799,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjE3Njc5OQ==",
        "user": {
            "login": "jthielen",
            "id": 3460034,
            "node_id": "MDQ6VXNlcjM0NjAwMzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3460034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jthielen",
            "html_url": "https://github.com/jthielen",
            "followers_url": "https://api.github.com/users/jthielen/followers",
            "following_url": "https://api.github.com/users/jthielen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jthielen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jthielen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jthielen/subscriptions",
            "organizations_url": "https://api.github.com/users/jthielen/orgs",
            "repos_url": "https://api.github.com/users/jthielen/repos",
            "events_url": "https://api.github.com/users/jthielen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jthielen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-09T14:55:09Z",
        "updated_at": "2020-07-09T14:55:09Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Thank you for raising this issue @jthielen . To check if something is a valid dask collection we recommend the `dask.is_collection` function. This checks for things like `__dask_graph__` as you suggest above. I would combine something like that with some `is_arraylike` check.\r\n\r\nSounds good, that should be enough guidance to go off of. I'll play around with it in xarray and report back once I can get a PR together (unless @rpmanser or someone else gets around to it first!).\r\n\r\n> Also, you're probably past this point, but it might be interesting to see if Pint Quantities can live as chunks _within_ a Dask array. This is how we've handled things like sparse arrays or GPU arrays. Dask array can wrap most things that look enough like a numpy array.\r\n\r\nDask Array > Quantity vs. Quantity > Dask Array has been discussed before (particularly in https://github.com/hgrecco/pint/issues/845 and https://github.com/hgrecco/pint/issues/878), and while either would work from a technical perspective, Quantity wrapping Dask seems to be the better option since units are handled at \"graph construction time\" rather than \"runtime.\" This is needed so as to keep track of units through intermediate steps of physical calculations (important for libraries like MetPy), know what the units of your quantities are interactively, and fail early on unit dimensionality errors. That being said, right now both Dask Array > Quantity and Quantity > Dask Array are allowed and for the most part work, which creates [non-commutativity issues due to a cyclic type casting graph](https://numpy.org/neps/nep-0013-ufunc-overrides.html#type-casting-hierarchy). This should be fixed by https://github.com/dask/dask/issues/4583 (which I hope to finally get around to working on as well).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/656176799/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/656191100",
        "html_url": "https://github.com/dask/dask/issues/6385#issuecomment-656191100",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6385",
        "id": 656191100,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjE5MTEwMA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-09T15:20:25Z",
        "updated_at": "2020-07-09T15:20:25Z",
        "author_association": "MEMBER",
        "body": "> Quantity wrapping Dask seems to be the better option since units are handled at \"graph construction time\" rather than \"runtime.\"\r\n\r\nDask actually runs a computation on an empty array at every operation during graph construction time.  This is how we handle other metadata like dtypes.  I suspect that it would work well for units as well.  See the `._meta` attribute of a dask array.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/656191100/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/656196177",
        "html_url": "https://github.com/dask/dask/issues/6385#issuecomment-656196177",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6385",
        "id": 656196177,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjE5NjE3Nw==",
        "user": {
            "login": "jthielen",
            "id": 3460034,
            "node_id": "MDQ6VXNlcjM0NjAwMzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3460034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jthielen",
            "html_url": "https://github.com/jthielen",
            "followers_url": "https://api.github.com/users/jthielen/followers",
            "following_url": "https://api.github.com/users/jthielen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jthielen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jthielen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jthielen/subscriptions",
            "organizations_url": "https://api.github.com/users/jthielen/orgs",
            "repos_url": "https://api.github.com/users/jthielen/repos",
            "events_url": "https://api.github.com/users/jthielen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jthielen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-09T15:30:29Z",
        "updated_at": "2020-07-09T15:30:29Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Dask actually runs a computation on an empty array at every operation during graph construction time. This is how we handle other metadata like dtypes. I suspect that it would work well for units as well. See the `._meta` attribute of a dask array.\r\n\r\nThanks for pointing that out! I'll take a look to see how that would work with units. However, two problems I can think of off-the-bat:\r\n\r\n- If wrapping Dask > Pint Quantity, then needing to expose Pint's interface on a Dask Array (`.units` for getting the units, `.to` for converting the units, etc.) so that Dask Array can function as a \"duck Quantity\".\r\n- Some unit operations are dependent upon the size of the array (e.g., `prod`), which may complicate this.\r\n\r\nBoth these may already be accounted for in some way for other duck arrays in Dask, so I'll have to take a closer look and come back to it.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/656196177/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/656211624",
        "html_url": "https://github.com/dask/dask/issues/6385#issuecomment-656211624",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6385",
        "id": 656211624,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjIxMTYyNA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-09T15:59:47Z",
        "updated_at": "2020-07-09T15:59:47Z",
        "author_association": "MEMBER",
        "body": "> If wrapping Dask > Pint Quantity, then needing to expose Pint's interface on a Dask Array (.units for getting the units, .to for converting the units, etc.) so that Dask Array can function as a \"duck Quantity\".\r\n\r\nThis doesn't currently exist, but is in scope.  I think that we wrote up a simple proof of concept around this last year at SciPy with @astrofrog with some unit package (maybe Pint, maybe something astropy specific).  It was a small number of lines.\r\n\r\n> Some unit operations are dependent upon the size of the array (e.g., prod), which may complicate this.\r\n\r\nThe meta computations will have the right dimension, but typically have size zero, so with shapes like `(0, 0, 0)`.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/656211624/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/656243863",
        "html_url": "https://github.com/dask/dask/issues/6385#issuecomment-656243863",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6385",
        "id": 656243863,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjI0Mzg2Mw==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-09T17:04:22Z",
        "updated_at": "2020-07-09T17:04:22Z",
        "author_association": "MEMBER",
        "body": "From my perspective, it seems a bit cleaner to have pint wrapping dask because it doesn't make sense to different chunks with different units. But I agree, it could work either way! Probably the most important part is to have a clear preferred convention because the different choices probably won't be 100% compatible.\r\n\r\nHopefully the right layering will be clearer in the future when a unit system like pint can be written as a NumPy dtype.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/656243863/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/656245581",
        "html_url": "https://github.com/dask/dask/issues/6385#issuecomment-656245581",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6385",
        "id": 656245581,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjI0NTU4MQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-09T17:08:09Z",
        "updated_at": "2020-07-09T17:08:09Z",
        "author_association": "MEMBER",
        "body": "The advantage to doing this with Xarray(Dask(Pint)) today is probably just\nthat Dask has more experience wrapping things (numpy, sparse, cupy).  But\nXarray should build this up too, and if this is a way to force that then\nI'm all for it.\n\nOn Thu, Jul 9, 2020 at 10:04 AM Stephan Hoyer <notifications@github.com>\nwrote:\n\n> From my perspective, it seems a bit cleaner to have pint wrapping dask\n> because it doesn't make sense to different chunks with different units. But\n> I agree, it could work either way! Probably the most important part is to\n> have a clear preferred convention because the different choices probably\n> won't be 100% compatible.\n>\n> Hopefully the right layering will be clearer in the future when a unit\n> system like pint can be written as a NumPy dtype.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/6385#issuecomment-656243863>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AACKZTB4KXCSJYNSAUZZSFTR2X2CJANCNFSM4OVSSEBQ>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/656245581/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/656248826",
        "html_url": "https://github.com/dask/dask/issues/6385#issuecomment-656248826",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6385",
        "id": 656248826,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjI0ODgyNg==",
        "user": {
            "login": "jthielen",
            "id": 3460034,
            "node_id": "MDQ6VXNlcjM0NjAwMzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3460034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jthielen",
            "html_url": "https://github.com/jthielen",
            "followers_url": "https://api.github.com/users/jthielen/followers",
            "following_url": "https://api.github.com/users/jthielen/following{/other_user}",
            "gists_url": "https://api.github.com/users/jthielen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jthielen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jthielen/subscriptions",
            "organizations_url": "https://api.github.com/users/jthielen/orgs",
            "repos_url": "https://api.github.com/users/jthielen/repos",
            "events_url": "https://api.github.com/users/jthielen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jthielen/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-09T17:14:50Z",
        "updated_at": "2020-07-10T00:25:31Z",
        "author_association": "CONTRIBUTOR",
        "body": "@shoyer and @mrocklin Sounds good. So would this be enough consensus between projects that Pint wrapping Dask is the preferred order in the type casting hierarchy (at least until units can go on the dtype)?\r\n\r\nIf so, I'll try moving ahead with https://github.com/pydata/xarray/issues/4208 and https://github.com/dask/dask/issues/4583 as planned (hopefully with @rpmanser's continued help...we'll chat more at our telecon this afternoon).\r\n\r\nUPDATE: https://github.com/dask/dask/pull/6393 (closing https://github.com/dask/dask/issues/4583) has been submitted as a draft PR.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/656248826/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/656299167",
        "html_url": "https://github.com/dask/dask/issues/6385#issuecomment-656299167",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6385",
        "id": 656299167,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjI5OTE2Nw==",
        "user": {
            "login": "rpmanser",
            "id": 19578931,
            "node_id": "MDQ6VXNlcjE5NTc4OTMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/19578931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rpmanser",
            "html_url": "https://github.com/rpmanser",
            "followers_url": "https://api.github.com/users/rpmanser/followers",
            "following_url": "https://api.github.com/users/rpmanser/following{/other_user}",
            "gists_url": "https://api.github.com/users/rpmanser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rpmanser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rpmanser/subscriptions",
            "organizations_url": "https://api.github.com/users/rpmanser/orgs",
            "repos_url": "https://api.github.com/users/rpmanser/repos",
            "events_url": "https://api.github.com/users/rpmanser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rpmanser/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-09T19:04:57Z",
        "updated_at": "2020-07-09T19:04:57Z",
        "author_association": "NONE",
        "body": "> If so, I'll try moving ahead with [pydata/xarray#4208](https://github.com/pydata/xarray/issues/4208) and #4583 as planned (hopefully with @rpmanser's continued help...we'll chat more at our telecon this afternoon).\r\n\r\nI'd be glad to help with this. I am not as familiar with the type-casting hierarchy and its complexities, so I have just been following along as some of these details get hashed out.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/656299167/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/660281549",
        "html_url": "https://github.com/dask/dask/issues/6385#issuecomment-660281549",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6385",
        "id": 660281549,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2MDI4MTU0OQ==",
        "user": {
            "login": "crusaderky",
            "id": 6213168,
            "node_id": "MDQ6VXNlcjYyMTMxNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6213168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crusaderky",
            "html_url": "https://github.com/crusaderky",
            "followers_url": "https://api.github.com/users/crusaderky/followers",
            "following_url": "https://api.github.com/users/crusaderky/following{/other_user}",
            "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions",
            "organizations_url": "https://api.github.com/users/crusaderky/orgs",
            "repos_url": "https://api.github.com/users/crusaderky/repos",
            "events_url": "https://api.github.com/users/crusaderky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crusaderky/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-17T18:50:28Z",
        "updated_at": "2020-07-17T18:52:03Z",
        "author_association": "MEMBER",
        "body": "I'm strongly in favour of xarray -> pint -> dask -> numpy, for a reason that may not be obvious: pickling custom pint units can get real nasty real fast. I personally have to do it for my project (with multiple, different UnitRegistry objects at the same time) and it's very painful to maintain. I would advise against inflicting it on a newbie user who just wants to speed up his xarray computation with dask.array + dask.distributed. If you wrap xarray -> pint -> dask -> numpy, then the pint objects never leave the dask.distributed client.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/660281549/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/889467490",
        "html_url": "https://github.com/dask/dask/issues/6385#issuecomment-889467490",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6385",
        "id": 889467490,
        "node_id": "IC_kwDOAbcwm841BDJi",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-29T21:19:54Z",
        "updated_at": "2021-07-29T21:19:54Z",
        "author_association": "MEMBER",
        "body": "As a heads up for people on this issue, Dask is considering introducing an expression system around dask arrays.  We think that this will provide opportunities for optimization.\r\n\r\nHowever it will also mean that Dask arrays will be composed have lots of different subclasses.  This is probably fine, but feedback and concerns on this topic would be welcome at #7933 ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/889467490/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]