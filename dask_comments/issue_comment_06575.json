[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/683821222",
        "html_url": "https://github.com/dask/dask/issues/6575#issuecomment-683821222",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6575",
        "id": 683821222,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzgyMTIyMg==",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-08-31T14:39:58Z",
        "updated_at": "2020-08-31T14:39:58Z",
        "author_association": "MEMBER",
        "body": "That seems like a nice addition. A PR adding this would be welcome. cc @dharhas who may find this useful ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/683821222/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1146015120",
        "html_url": "https://github.com/dask/dask/issues/6575#issuecomment-1146015120",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6575",
        "id": 1146015120,
        "node_id": "IC_kwDOAbcwm85ETs2Q",
        "user": {
            "login": "guidocioni",
            "id": 12760310,
            "node_id": "MDQ6VXNlcjEyNzYwMzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/12760310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guidocioni",
            "html_url": "https://github.com/guidocioni",
            "followers_url": "https://api.github.com/users/guidocioni/followers",
            "following_url": "https://api.github.com/users/guidocioni/following{/other_user}",
            "gists_url": "https://api.github.com/users/guidocioni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guidocioni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guidocioni/subscriptions",
            "organizations_url": "https://api.github.com/users/guidocioni/orgs",
            "repos_url": "https://api.github.com/users/guidocioni/repos",
            "events_url": "https://api.github.com/users/guidocioni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guidocioni/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-03T14:21:29Z",
        "updated_at": "2022-06-03T14:21:29Z",
        "author_association": "NONE",
        "body": "As this is not yet implemented, is there any workaround to add the filepath as colum to the resulting dataframe when reading parquet files? ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1146015120/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1146029955",
        "html_url": "https://github.com/dask/dask/issues/6575#issuecomment-1146029955",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6575",
        "id": 1146029955,
        "node_id": "IC_kwDOAbcwm85ETweD",
        "user": {
            "login": "MrPowers",
            "id": 2722395,
            "node_id": "MDQ6VXNlcjI3MjIzOTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2722395?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MrPowers",
            "html_url": "https://github.com/MrPowers",
            "followers_url": "https://api.github.com/users/MrPowers/followers",
            "following_url": "https://api.github.com/users/MrPowers/following{/other_user}",
            "gists_url": "https://api.github.com/users/MrPowers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MrPowers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MrPowers/subscriptions",
            "organizations_url": "https://api.github.com/users/MrPowers/orgs",
            "repos_url": "https://api.github.com/users/MrPowers/repos",
            "events_url": "https://api.github.com/users/MrPowers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MrPowers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-03T14:37:04Z",
        "updated_at": "2022-06-03T14:37:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "@guidocioni - I am not aware of any workaround, but pinging @martindurant and @rjzamora as they might know.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1146029955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1146176071",
        "html_url": "https://github.com/dask/dask/issues/6575#issuecomment-1146176071",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6575",
        "id": 1146176071,
        "node_id": "IC_kwDOAbcwm85EUUJH",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-03T16:54:17Z",
        "updated_at": "2022-06-03T16:54:17Z",
        "author_association": "MEMBER",
        "body": ">As this is not yet implemented, is there any workaround to add the filepath as colum to the resulting dataframe when reading parquet files?\r\n\r\nIt may be tricky to add this feature to `read_parquet`. Can you use somethig like the following to capture what you need?\r\n\r\n```python\r\ndef reader(path):\r\n    df = pd.read_parquet(path)\r\n    df[\"path\"] = path\r\n\r\nddf = dd.from_map(reader, [\"file_0\", ..., \"file_N\"])\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1146176071/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1146846606",
        "html_url": "https://github.com/dask/dask/issues/6575#issuecomment-1146846606",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6575",
        "id": 1146846606,
        "node_id": "IC_kwDOAbcwm85EW32O",
        "user": {
            "login": "guidocioni",
            "id": 12760310,
            "node_id": "MDQ6VXNlcjEyNzYwMzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/12760310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guidocioni",
            "html_url": "https://github.com/guidocioni",
            "followers_url": "https://api.github.com/users/guidocioni/followers",
            "following_url": "https://api.github.com/users/guidocioni/following{/other_user}",
            "gists_url": "https://api.github.com/users/guidocioni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guidocioni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guidocioni/subscriptions",
            "organizations_url": "https://api.github.com/users/guidocioni/orgs",
            "repos_url": "https://api.github.com/users/guidocioni/repos",
            "events_url": "https://api.github.com/users/guidocioni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guidocioni/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-05T16:48:28Z",
        "updated_at": "2022-06-05T16:51:54Z",
        "author_association": "NONE",
        "body": "> ```python\r\n> def reader(path):\r\n>     df = pd.read_parquet(path)\r\n>     df[\"path\"] = path\r\n> \r\n> ddf = dd.from_map(reader, [\"file_0\", ..., \"file_N\"])\r\n> ```\r\n\r\nIsn't this going to load every single parquet into memory? \r\nP.S. as far as I know `from_map` is not yet officially into Dask, right? ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1146846606/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1147517002",
        "html_url": "https://github.com/dask/dask/issues/6575#issuecomment-1147517002",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6575",
        "id": 1147517002,
        "node_id": "IC_kwDOAbcwm85EZbhK",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-06T14:32:59Z",
        "updated_at": "2022-06-06T14:32:59Z",
        "author_association": "MEMBER",
        "body": ">Isn't this going to load every single parquet into memory?\r\n\r\nThis approach will read the first file into memory to calculate the `_meta` attribute for the new collection, but you can pass a `meta=` argument to `from_map` to avoid this (you can also pass in `divisions=` if you happen to know them).\r\n\r\nNote that the current `dd.read_parquet` implementation uses `from_map` under the hood anyway. However, it is a bit tricky to change the logic used in the callable argument.\r\n\r\n>P.S. as far as I know from_map is not yet officially into Dask, right?\r\n\r\nYes and no. There is still [an \"experimental\" warning in the from_map docstring](https://docs.dask.org/en/stable/generated/dask.dataframe.from_map.html#dask.dataframe.from_map), but I am confident that the API is here to stay (it is much better/easier than `from_delayed` in most practical cases).\r\n\r\nI do agree that you should always use `dd.read_parquet` when possible. However, I wouldn't expect this particular feature to prioritized in the near term.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1147517002/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1148416062",
        "html_url": "https://github.com/dask/dask/issues/6575#issuecomment-1148416062",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6575",
        "id": 1148416062,
        "node_id": "IC_kwDOAbcwm85Ec3A-",
        "user": {
            "login": "guidocioni",
            "id": 12760310,
            "node_id": "MDQ6VXNlcjEyNzYwMzEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/12760310?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guidocioni",
            "html_url": "https://github.com/guidocioni",
            "followers_url": "https://api.github.com/users/guidocioni/followers",
            "following_url": "https://api.github.com/users/guidocioni/following{/other_user}",
            "gists_url": "https://api.github.com/users/guidocioni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guidocioni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guidocioni/subscriptions",
            "organizations_url": "https://api.github.com/users/guidocioni/orgs",
            "repos_url": "https://api.github.com/users/guidocioni/repos",
            "events_url": "https://api.github.com/users/guidocioni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guidocioni/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-07T09:20:08Z",
        "updated_at": "2022-06-08T13:54:10Z",
        "author_association": "NONE",
        "body": "I found a solution using `dask.delayed` and assigning manually the filepath as a new column.\r\n\r\n```python\r\nlazy_dataframes = []\r\nfor symbol in glob('../input/stations/*_daily.parquet'):\r\n    df = delayed(pd.read_parquet)(symbol)\r\n    df = delayed(pd.DataFrame.assign)(df, filename=symbol)\r\n    lazy_dataframes.append(df)\r\n    \r\nddf = dd.from_delayed(lazy_dataframes)\r\n```\r\n\r\nUnfortunately I started having another issue of type mismatching due (I believe) to the fact that Dask only checks some of the rows to infer the type... \r\nWhen loading directly all the parquet files into pandas and concatenating I didn't have any issue, so I'm not sure exactly which row is causing the problem.\r\nAnyway, as I really have no time to troubleshoot the issues in `Dask`, and as the parquet files are just barely fitting into memory, for now I'll just use pandas directly to load them so that I can also add the `filepath` column manually. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1148416062/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]