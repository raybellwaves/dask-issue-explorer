{
    "url": "https://api.github.com/repos/dask/dask/issues/5756",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/5756/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/5756/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/5756/events",
    "html_url": "https://github.com/dask/dask/issues/5756",
    "id": 544172413,
    "node_id": "MDU6SXNzdWU1NDQxNzI0MTM=",
    "number": 5756,
    "title": "`clear_known_categories` overrides categories.dtype for non-object dtypes",
    "user": {
        "login": "lr4d",
        "id": 44430780,
        "node_id": "MDQ6VXNlcjQ0NDMwNzgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/44430780?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lr4d",
        "html_url": "https://github.com/lr4d",
        "followers_url": "https://api.github.com/users/lr4d/followers",
        "following_url": "https://api.github.com/users/lr4d/following{/other_user}",
        "gists_url": "https://api.github.com/users/lr4d/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lr4d/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lr4d/subscriptions",
        "organizations_url": "https://api.github.com/users/lr4d/orgs",
        "repos_url": "https://api.github.com/users/lr4d/repos",
        "events_url": "https://api.github.com/users/lr4d/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lr4d/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 5,
    "created_at": "2019-12-31T11:59:44Z",
    "updated_at": "2021-10-13T03:29:52Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "At https://github.com/dask/dask/blob/c69d10f97cadd06f147817f0084bddeadb8195e6/dask/dataframe/utils.py#L262, dask doesn't check the dtype of the categories, and just assumes it's an object (overwriting the original categorical dtype for one where `categories.dtype == object`).\r\n\r\nMinimal example:\r\n```\r\nimport pandas as pd\r\ndate_col = pd.Categorical([], categories=[pd.Timestamp(\"2019-01-01\")])\r\ndf = pd.DataFrame({\"date\":date_col})\r\ndf[\"date\"].dtype.categories.dtype == date_col.categories.dtype  # True\r\n\r\nfrom dask.dataframe.categorical import clear_known_categories\r\nclear_known_categories(df)[\"date\"].dtype.categories.dtype == date_col.categories.dtype  # False\r\n```\r\n\r\nThis can cause an exception at https://github.com/dask/dask/blob/master/dask/dataframe/methods.py#L460 when using `dd.concat` if there is a categorical column with non-object categories (in our case, datetimes), when during the concatenation, an empty pandas dataframes and a non-empty one are to be concatenated.\r\n\r\nOriginal stacktrace when calling `dd.concat`:\r\n```\r\n/home/xrzq/venv/lib/python3.6/site-packages/dask/base.py:165: in compute\r\n    (result,) = compute(self, traverse=False, **kwargs)\r\n/home/xrzq/venv/lib/python3.6/site-packages/dask/base.py:436: in compute\r\n    results = schedule(dsk, keys, **kwargs)\r\n/home/xrzq/venv/lib/python3.6/site-packages/dask/threaded.py:81: in get\r\n    **kwargs\r\n/home/xrzq/venv/lib/python3.6/site-packages/dask/local.py:486: in get_async\r\n    raise_exception(exc, tb)\r\n/home/xrzq/venv/lib/python3.6/site-packages/dask/local.py:316: in reraise\r\n    raise exc\r\n/home/xrzq/venv/lib/python3.6/site-packages/dask/local.py:222: in execute_task\r\n    result = _execute_task(task, data)\r\n/home/xrzq/venv/lib/python3.6/site-packages/dask/core.py:119: in _execute_task\r\n    return func(*args2)\r\n/home/xrzq/venv/lib/python3.6/site-packages/dask/dataframe/methods.py:356: in concat\r\n    dfs, axis=axis, join=join, uniform=uniform, filter_warning=filter_warning\r\n/home/xrzq/venv/lib/python3.6/site-packages/dask/dataframe/methods.py:460: in concat_pandas\r\n    out[col] = union_categoricals(parts)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nto_union = [[], Categories (0, object): [], [2019-12-30 16:59:09.534787, 2019-12-31 16:59:09.534787, 2020-01-01 16:59:09.534787, ..., 2019-12-31 16:59:09.534787,\r\n                                 2020-01-01 16:59:09.534787, 2020-01-02 16:59:09.534787]]\r\nsort_categories = False, ignore_order = False\r\nE           TypeError: dtype of categories must be the same\r\n\r\n/home/xrzq/venv/lib/python3.6/site-packages/pandas/core/dtypes/concat.py:346: TypeError\r\n```\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/5756/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/5756/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}