[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/662485199",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-662485199",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 662485199,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjQ4NTE5OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-22T14:26:27Z",
        "updated_at": "2020-07-22T14:26:27Z",
        "author_association": "MEMBER",
        "body": "It looks like there is some attempt to use scipy.fftpack if scipy is\ninstalled, but not otherwise.  Would you might looking through\nhttps://github.com/dask/dask/blob/master/dask/array/fft.py and seeing what\nyou think should change?\n\nOn Wed, Jul 22, 2020 at 1:11 AM mreineck <notifications@github.com> wrote:\n\n> I noticed that the dask FFT wrapper internally uses numpy's FFT.\n> Unless this is done to avoid a scipy dependency, I'd suggest switching to\n> scipy.fft (not scipy.fftpack, which is now legacy) instead.\n> The advantage of scipy.fft is that it is much faster than numpy.fft when\n> transforming multi-D arrays (even if only one axis is transformed), because\n> it uses vector instructions where available. In addition to standard FFTs\n> it also provides DCTs, DSTs and Hartley transforms. Optional shared-memory\n> parallelization is available, and there are dedicated functions for\n> single-precision transforms.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/6440>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AACKZTB6UAP6WCOLAVISPLTR42NMDANCNFSM4PEOJF4A>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/662485199/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/662490175",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-662490175",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 662490175,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjQ5MDE3NQ==",
        "user": {
            "login": "mreineck",
            "id": 898507,
            "node_id": "MDQ6VXNlcjg5ODUwNw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/898507?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mreineck",
            "html_url": "https://github.com/mreineck",
            "followers_url": "https://api.github.com/users/mreineck/followers",
            "following_url": "https://api.github.com/users/mreineck/following{/other_user}",
            "gists_url": "https://api.github.com/users/mreineck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mreineck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mreineck/subscriptions",
            "organizations_url": "https://api.github.com/users/mreineck/orgs",
            "repos_url": "https://api.github.com/users/mreineck/repos",
            "events_url": "https://api.github.com/users/mreineck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mreineck/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-22T14:35:25Z",
        "updated_at": "2020-07-22T14:35:25Z",
        "author_association": "NONE",
        "body": "> It looks like there is some attempt to use scipy.fftpack if scipy is\r\ninstalled, but not otherwise. \r\n\r\nI think this is actually unused code. If `scipy` is available, then `fft_wrap` checks if it has been invoked with specific `scipy.fftpack` functions, but later on in the file it is only ever called with `numpy` functions.\r\n\r\nI will have a look through the file and see if I can provide a patch by myself. If I manage to run unit tests locally, that should be feasible.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/662490175/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/662503764",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-662503764",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 662503764,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjUwMzc2NA==",
        "user": {
            "login": "mreineck",
            "id": 898507,
            "node_id": "MDQ6VXNlcjg5ODUwNw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/898507?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mreineck",
            "html_url": "https://github.com/mreineck",
            "followers_url": "https://api.github.com/users/mreineck/followers",
            "following_url": "https://api.github.com/users/mreineck/following{/other_user}",
            "gists_url": "https://api.github.com/users/mreineck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mreineck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mreineck/subscriptions",
            "organizations_url": "https://api.github.com/users/mreineck/orgs",
            "repos_url": "https://api.github.com/users/mreineck/repos",
            "events_url": "https://api.github.com/users/mreineck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mreineck/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-22T14:59:10Z",
        "updated_at": "2020-07-22T14:59:10Z",
        "author_association": "NONE",
        "body": "OK, that was easier than I thought ...\r\n\r\nIf you have any FFT benchmarks (especially ones with multidimensional transforms), it might be interesting to do a comparison.\r\n\r\nI'm not sure how to address the discrepancy in the data type of the returned arrays when the input is `float32` or `complex64`; this is something you will have to decide.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/662503764/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/662625792",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-662625792",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 662625792,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjYyNTc5Mg==",
        "user": {
            "login": "quasiben",
            "id": 1403768,
            "node_id": "MDQ6VXNlcjE0MDM3Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1403768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quasiben",
            "html_url": "https://github.com/quasiben",
            "followers_url": "https://api.github.com/users/quasiben/followers",
            "following_url": "https://api.github.com/users/quasiben/following{/other_user}",
            "gists_url": "https://api.github.com/users/quasiben/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quasiben/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quasiben/subscriptions",
            "organizations_url": "https://api.github.com/users/quasiben/orgs",
            "repos_url": "https://api.github.com/users/quasiben/repos",
            "events_url": "https://api.github.com/users/quasiben/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quasiben/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-22T18:52:32Z",
        "updated_at": "2020-07-22T18:52:32Z",
        "author_association": "MEMBER",
        "body": "One issue which may come up is that calling into `scipy.fft.fft` triggers an `asarray` call:\r\nhttps://github.com/scipy/scipy/blob/0765482e9a7cd7a7975f6161d2ab91994762ac8e/scipy/fft/_pocketfft/helper.py#L89-L92\r\n\r\nDoing this would prevent other array libraries like CuPy from using the dask FFT wrapper",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/662625792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/662629307",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-662629307",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 662629307,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjYyOTMwNw==",
        "user": {
            "login": "mreineck",
            "id": 898507,
            "node_id": "MDQ6VXNlcjg5ODUwNw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/898507?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mreineck",
            "html_url": "https://github.com/mreineck",
            "followers_url": "https://api.github.com/users/mreineck/followers",
            "following_url": "https://api.github.com/users/mreineck/following{/other_user}",
            "gists_url": "https://api.github.com/users/mreineck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mreineck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mreineck/subscriptions",
            "organizations_url": "https://api.github.com/users/mreineck/orgs",
            "repos_url": "https://api.github.com/users/mreineck/repos",
            "events_url": "https://api.github.com/users/mreineck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mreineck/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-22T18:59:48Z",
        "updated_at": "2020-07-22T18:59:48Z",
        "author_association": "NONE",
        "body": "Interesting. But on the other hand, what does `numpy` do when promoting the input array to double precision? Won't this be something equivalent to `asarray` too?\r\nI must admit that I don't really understand the implications of this, but if this is a fundamental problem, it should probably be addressed in `scipy`.\r\nBTW, CuPy has its own `scipy.fft` backend ... no idea if this makes this problem better or worse.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/662629307/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/662636605",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-662636605",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 662636605,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjYzNjYwNQ==",
        "user": {
            "login": "quasiben",
            "id": 1403768,
            "node_id": "MDQ6VXNlcjE0MDM3Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1403768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quasiben",
            "html_url": "https://github.com/quasiben",
            "followers_url": "https://api.github.com/users/quasiben/followers",
            "following_url": "https://api.github.com/users/quasiben/following{/other_user}",
            "gists_url": "https://api.github.com/users/quasiben/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quasiben/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quasiben/subscriptions",
            "organizations_url": "https://api.github.com/users/quasiben/orgs",
            "repos_url": "https://api.github.com/users/quasiben/repos",
            "events_url": "https://api.github.com/users/quasiben/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quasiben/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-22T19:10:30Z",
        "updated_at": "2020-07-22T19:10:30Z",
        "author_association": "MEMBER",
        "body": "Currently we rely on [NEP-18](https://numpy.org/neps/nep-0018-array-function-protocol.html) which allows numpy to dispatch to other array libraries.  So when a user calls np.fft(cupy-array) cupy.fft is called and the output is a cupy array.  @pentschev is working on [NEP-35](https://numpy.org/neps/nep-0035-array-creation-dispatch-with-array-function.html) is better handle array creation with a `like` argument.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/662636605/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/663183020",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-663183020",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 663183020,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzE4MzAyMA==",
        "user": {
            "login": "pentschev",
            "id": 4398246,
            "node_id": "MDQ6VXNlcjQzOTgyNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4398246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pentschev",
            "html_url": "https://github.com/pentschev",
            "followers_url": "https://api.github.com/users/pentschev/followers",
            "following_url": "https://api.github.com/users/pentschev/following{/other_user}",
            "gists_url": "https://api.github.com/users/pentschev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pentschev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pentschev/subscriptions",
            "organizations_url": "https://api.github.com/users/pentschev/orgs",
            "repos_url": "https://api.github.com/users/pentschev/repos",
            "events_url": "https://api.github.com/users/pentschev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pentschev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-23T19:10:55Z",
        "updated_at": "2020-07-23T19:16:29Z",
        "author_association": "MEMBER",
        "body": "It's important to note that SciPy does _not_ implement NEP-18, nor intends to do so. The change in https://github.com/dask/dask/pull/6443 will prevent `__array_function__` dispatching of FFTs when SciPy is available, meaning `np.fft*(dask_cupy_array)` would not work anymore. IMO, the solution would be to provide a way for the user to choose explicitly to use SciPy through some Dask configuration while maintaining NumPy as default even if SciPy is available.\r\n\r\nEDIT: I had mistakenly written `dask.array.fft*(cupy_array)` but the correct is `np.fft*(dask_cupy_array)` (which I changed now), where `dask_cupy_array` is a Dask array backed by CuPy.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/663183020/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/663189393",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-663189393",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 663189393,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzE4OTM5Mw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-23T19:25:26Z",
        "updated_at": "2020-07-23T19:25:26Z",
        "author_association": "MEMBER",
        "body": "Maybe we create our own per-chunk function that uses scipy if available and\nthe input is a numpy array or doesn't implement the `__array_function__`\nprotocol, and uses numpy otherwise?\n\nOn Thu, Jul 23, 2020 at 12:11 PM Peter Andreas Entschev <\nnotifications@github.com> wrote:\n\n> It's important to note that SciPy does *not* implement NEP-18, nor\n> intends to do so. The change in #6443\n> <https://github.com/dask/dask/pull/6443> will prevent __array_function__\n> dispatching of FFTs when SciPy is available, meaning\n> dask.array.fft*(cupy_array) would not work anymore. IMO, the solution\n> would be to provide a way for the user to choose explicitly to use SciPy\n> through some Dask configuration while maintaining NumPy as default even if\n> SciPy is available.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/6440#issuecomment-663183020>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AACKZTC45XHVKXOUHMDLGQTR5CDNBANCNFSM4PEOJF4A>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/663189393/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/663194782",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-663194782",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 663194782,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzE5NDc4Mg==",
        "user": {
            "login": "pentschev",
            "id": 4398246,
            "node_id": "MDQ6VXNlcjQzOTgyNDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4398246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pentschev",
            "html_url": "https://github.com/pentschev",
            "followers_url": "https://api.github.com/users/pentschev/followers",
            "following_url": "https://api.github.com/users/pentschev/following{/other_user}",
            "gists_url": "https://api.github.com/users/pentschev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pentschev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pentschev/subscriptions",
            "organizations_url": "https://api.github.com/users/pentschev/orgs",
            "repos_url": "https://api.github.com/users/pentschev/repos",
            "events_url": "https://api.github.com/users/pentschev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pentschev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-23T19:37:56Z",
        "updated_at": "2020-07-23T19:37:56Z",
        "author_association": "MEMBER",
        "body": "> Maybe we create our own per-chunk function that uses scipy if available and the input is a numpy array or doesn't implement the `__array_function__` protocol, and uses numpy otherwise?\r\n\r\nYes, that's a good idea, I don't see why it couldn't work.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/663194782/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/664390960",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-664390960",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 664390960,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDM5MDk2MA==",
        "user": {
            "login": "mreineck",
            "id": 898507,
            "node_id": "MDQ6VXNlcjg5ODUwNw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/898507?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mreineck",
            "html_url": "https://github.com/mreineck",
            "followers_url": "https://api.github.com/users/mreineck/followers",
            "following_url": "https://api.github.com/users/mreineck/following{/other_user}",
            "gists_url": "https://api.github.com/users/mreineck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mreineck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mreineck/subscriptions",
            "organizations_url": "https://api.github.com/users/mreineck/orgs",
            "repos_url": "https://api.github.com/users/mreineck/repos",
            "events_url": "https://api.github.com/users/mreineck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mreineck/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-27T13:18:16Z",
        "updated_at": "2020-07-27T13:18:16Z",
        "author_association": "NONE",
        "body": "Great! Unfortunately I don't know enough about `dask` to create a PR for this solution. Anyway, I'll close my simplistic one again.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/664390960/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/667256502",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-667256502",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 667256502,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzI1NjUwMg==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-31T17:59:19Z",
        "updated_at": "2020-07-31T17:59:19Z",
        "author_association": "MEMBER",
        "body": "I know @rgommers was [looking into dispatching between FFTs before]( https://github.com/scipy/scipy/issues/10204#issuecomment-495154006 ). Maybe he can share more about the status of that work?\r\n\r\nIndependent of that wrapping FFTs is [quite simple]( https://github.com/dask/dask/blob/2b7945ed783bc1be7bb67ab78b4ca246adfa9804/dask/array/fft.py#L217-L230 ). So it should be possible to roll your own as needed.\r\n\r\nHTH \ud83d\ude42",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/667256502/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/667298611",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-667298611",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 667298611,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzI5ODYxMQ==",
        "user": {
            "login": "rgommers",
            "id": 98330,
            "node_id": "MDQ6VXNlcjk4MzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rgommers",
            "html_url": "https://github.com/rgommers",
            "followers_url": "https://api.github.com/users/rgommers/followers",
            "following_url": "https://api.github.com/users/rgommers/following{/other_user}",
            "gists_url": "https://api.github.com/users/rgommers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rgommers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rgommers/subscriptions",
            "organizations_url": "https://api.github.com/users/rgommers/orgs",
            "repos_url": "https://api.github.com/users/rgommers/repos",
            "events_url": "https://api.github.com/users/rgommers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rgommers/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-31T18:52:36Z",
        "updated_at": "2020-07-31T18:52:36Z",
        "author_association": "CONTRIBUTOR",
        "body": "> I know @rgommers was [looking into dispatching between FFTs before](https://github.com/scipy/scipy/issues/10204#issuecomment-495154006). Maybe he can share more about the status of that work?\r\n\r\n`scipy.fft` is basically complete. Let me Cc @peterbell10 here, he wrote `scipy.fft` and the CuPy and PyFftw backends for `scipy.fft`, so he may have a suggestion on how to proceed here.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/667298611/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/667322082",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-667322082",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 667322082,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzMyMjA4Mg==",
        "user": {
            "login": "peterbell10",
            "id": 13238737,
            "node_id": "MDQ6VXNlcjEzMjM4NzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/13238737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterbell10",
            "html_url": "https://github.com/peterbell10",
            "followers_url": "https://api.github.com/users/peterbell10/followers",
            "following_url": "https://api.github.com/users/peterbell10/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterbell10/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterbell10/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterbell10/subscriptions",
            "organizations_url": "https://api.github.com/users/peterbell10/orgs",
            "repos_url": "https://api.github.com/users/peterbell10/repos",
            "events_url": "https://api.github.com/users/peterbell10/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterbell10/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-31T19:50:40Z",
        "updated_at": "2020-07-31T19:50:40Z",
        "author_association": "NONE",
        "body": ">Maybe we create our own per-chunk function that uses scipy if available and the input is a numpy array or doesn't implement the `__array_function__` protocol, and uses numpy otherwise?\r\n\r\nThat sounds like the best solution to me. The cupy backend for `scipy.fft` calls exactly the same underlying functions as the numpy interface so there should be no downside to going through `np.fft` instead.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/667322082/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/667342080",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-667342080",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 667342080,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzM0MjA4MA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-31T20:26:19Z",
        "updated_at": "2020-07-31T20:26:19Z",
        "author_association": "MEMBER",
        "body": "> The cupy backend for `scipy.fft` calls exactly the same underlying functions as the numpy interface so there should be no downside to going through `np.fft` instead.\r\n\r\nVery cool! \ud83d\ude04\r\n\r\nWas curious about this. So took it for a spin. Ran into a small issue ( https://github.com/scipy/scipy/issues/12652 ). Though please feel free to correct me if I'm just misunderstanding \ud83d\ude42",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/667342080/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/667357430",
        "html_url": "https://github.com/dask/dask/issues/6440#issuecomment-667357430",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6440",
        "id": 667357430,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzM1NzQzMA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-07-31T21:08:18Z",
        "updated_at": "2020-07-31T21:08:18Z",
        "author_association": "MEMBER",
        "body": "> Was curious about this. So took it for a spin. Ran into a small issue ( [scipy/scipy#12652](https://github.com/scipy/scipy/issues/12652) ). Though please feel free to correct me if I'm just misunderstanding \ud83d\ude42\r\n\r\nTurns out I was missing [a key piece]( https://github.com/scipy/scipy/issues/12652#issuecomment-667348345 ) \ud83d\ude05 Thanks Peter!\r\n\r\nOne option might be to use `Dispatch` as is [done with `sizeof`]( https://github.com/dask/dask/blob/72de42cdde88ba01b4d762147e4105892a6535a2/dask/sizeof.py#L17-L28 ). Though it might be even simpler than that. \ud83d\ude09",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/667357430/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]