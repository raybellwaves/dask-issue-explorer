[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/351089016",
        "html_url": "https://github.com/dask/dask/issues/2991#issuecomment-351089016",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2991",
        "id": 351089016,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTA4OTAxNg==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T15:39:39Z",
        "updated_at": "2017-12-12T15:39:39Z",
        "author_association": "MEMBER",
        "body": "Quick note: there is a certain order to the partitions as referenced in the `_metadata` file. Whether these are the same order as with a glob will depend on what pandas' group-by returns during partitioning - I would think the groups are indeed in order. In which case, there is probably a simple fix for this issue.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/351089016/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/351091879",
        "html_url": "https://github.com/dask/dask/issues/2991#issuecomment-351091879",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2991",
        "id": 351091879,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTA5MTg3OQ==",
        "user": {
            "login": "gorlins",
            "id": 139286,
            "node_id": "MDQ6VXNlcjEzOTI4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/139286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gorlins",
            "html_url": "https://github.com/gorlins",
            "followers_url": "https://api.github.com/users/gorlins/followers",
            "following_url": "https://api.github.com/users/gorlins/following{/other_user}",
            "gists_url": "https://api.github.com/users/gorlins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gorlins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gorlins/subscriptions",
            "organizations_url": "https://api.github.com/users/gorlins/orgs",
            "repos_url": "https://api.github.com/users/gorlins/repos",
            "events_url": "https://api.github.com/users/gorlins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gorlins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T15:48:20Z",
        "updated_at": "2017-12-12T15:48:20Z",
        "author_association": "NONE",
        "body": "in my example above, they are not in order, which causes the issue I believe.  Here is what is returned by the parquet stats:\r\n\r\n```python\r\n{'distinct_count': {'dt': [None, None], 'hour': [None, None]},\r\n 'max': {'dt': [numpy.datetime64('2017-01-22T15:00:00.000000000'),\r\n   numpy.datetime64('2017-01-21T23:00:00.000000000')],\r\n  'hour': [519, 503]},\r\n 'min': {'dt': [numpy.datetime64('2017-01-22T00:00:00.000000000'),\r\n   numpy.datetime64('2017-01-21T00:00:00.000000000')],\r\n  'hour': [504, 480]},\r\n 'null_count': {'dt': [0, 0], 'hour': [0, 0]}}\r\n```\r\n\r\nBecause they are out of order, fastparquet.api.sorted_partitioned_columns does not think 'hour' is sorted and therefore this part does not pick it up:\r\n\r\n```python\r\n        minmax = fastparquet.api.sorted_partitioned_columns(pf)\r\n        if index_col in minmax:  # False\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/351091879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/351140532",
        "html_url": "https://github.com/dask/dask/issues/2991#issuecomment-351140532",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2991",
        "id": 351140532,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTE0MDUzMg==",
        "user": {
            "login": "gorlins",
            "id": 139286,
            "node_id": "MDQ6VXNlcjEzOTI4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/139286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gorlins",
            "html_url": "https://github.com/gorlins",
            "followers_url": "https://api.github.com/users/gorlins/followers",
            "following_url": "https://api.github.com/users/gorlins/following{/other_user}",
            "gists_url": "https://api.github.com/users/gorlins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gorlins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gorlins/subscriptions",
            "organizations_url": "https://api.github.com/users/gorlins/orgs",
            "repos_url": "https://api.github.com/users/gorlins/repos",
            "events_url": "https://api.github.com/users/gorlins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gorlins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-12T18:21:29Z",
        "updated_at": "2017-12-12T18:21:29Z",
        "author_association": "NONE",
        "body": "actually i'm not sure if this is a dask bug or a fastparquet bug - should the row groups have been written in order (is that dask or fastparquet's job?), should sorted_partitioned_columns return sorted columns even if the row groups have them out of order, but they are still sortable, or should dask be able to handle all cases when requested on read (if not by default)?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/351140532/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/351418092",
        "html_url": "https://github.com/dask/dask/issues/2991#issuecomment-351418092",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2991",
        "id": 351418092,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQxODA5Mg==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-13T15:06:43Z",
        "updated_at": "2017-12-13T15:06:43Z",
        "author_association": "MEMBER",
        "body": "Each partition of a dask dataframe will be passed through a group-by independently, and the ordering in the metadata will be deterministic: all the parts of the original partition 1, all the parts of the original partition 1... \r\nIf you want, for example, all the rows where field=val1 to come first, you need to split your data on that column, e.g., by setting it as the index, which causes a data shuffle. I don't recall if you can use the index in partition_on, you may need to reset_index too, to make those values a normal column after the sort/shuffling step.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/351418092/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/351479502",
        "html_url": "https://github.com/dask/dask/issues/2991#issuecomment-351479502",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2991",
        "id": 351479502,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ3OTUwMg==",
        "user": {
            "login": "gorlins",
            "id": 139286,
            "node_id": "MDQ6VXNlcjEzOTI4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/139286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gorlins",
            "html_url": "https://github.com/gorlins",
            "followers_url": "https://api.github.com/users/gorlins/followers",
            "following_url": "https://api.github.com/users/gorlins/following{/other_user}",
            "gists_url": "https://api.github.com/users/gorlins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gorlins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gorlins/subscriptions",
            "organizations_url": "https://api.github.com/users/gorlins/orgs",
            "repos_url": "https://api.github.com/users/gorlins/repos",
            "events_url": "https://api.github.com/users/gorlins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gorlins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-13T18:27:37Z",
        "updated_at": "2017-12-13T18:27:37Z",
        "author_association": "NONE",
        "body": "@martindurant I'm not sure that addresses the issue - in my above example, there was only one partition originally (reading back gets two because partition_on split the output, but there is only 1 .parquet file in each partition folder in my example).  Unfortunately it's difficult to keep track of when we're discussing dask partitions vs parquet partitions or .parquet files!\r\n\r\nI've seen what you mention for each part file w/in a parquet partition folder aligning with the partitions of the dask DF that was written.  However, the _metadata file records the parquet row groups from the partitions out of order - at least when I run it - and thus Dask cannot recreate the divisions.  In fact, it actually loads the partitions out of order; you can see the head is from the second date in my example:\r\n\r\n```python\r\nback = dask_df.read_parquet('partition_play', index='hour')\r\nprint(back.get_partition(0).head()) # Expected part0/df.head to be 2017-01-21\r\n                      dt       date\r\nhour                               \r\n504  2017-01-22 00:00:00 2017-01-22\r\n505  2017-01-22 01:00:00 2017-01-22\r\n506  2017-01-22 02:00:00 2017-01-22\r\n507  2017-01-22 03:00:00 2017-01-22\r\n508  2017-01-22 04:00:00 2017-01-22\r\n\r\nprint(back.get_partition(1).head()) . # 2017-01-21 loaded after 2017-01-22!\r\n                      dt       date\r\nhour                               \r\n480  2017-01-21 00:00:00 2017-01-21\r\n481  2017-01-21 01:00:00 2017-01-21\r\n482  2017-01-21 02:00:00 2017-01-21\r\n483  2017-01-21 03:00:00 2017-01-21\r\n484  2017-01-21 04:00:00 2017-01-21\r\n```\r\n\r\n  Obviously this will not work generically, but in cases where the column to partition_on shares the same ordering as the index - in my case w/ date vs hours elapsed, or if the partition is a prefix of a string in a sorted file, etc - the intuitive behavior IMHO is to load it back the partitions in order, and therefore preserve the same sorting order w/ the same index/divisions as when it was written (by dask or otherwise); it appears the correct metadata does exist to be able to do so, and it's just a matter of either storing the row groups in the correct order or re-ordering the partitions on read in a way that makes sense.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/351479502/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/351489564",
        "html_url": "https://github.com/dask/dask/issues/2991#issuecomment-351489564",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2991",
        "id": 351489564,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ4OTU2NA==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-13T19:03:36Z",
        "updated_at": "2017-12-13T19:03:36Z",
        "author_association": "MEMBER",
        "body": "Can you try the following change in fastparquet.writer.partition_on_columns:\r\n\r\n```\r\n    for key in gb.indices:\r\n->\r\n    for key in sorted(gb.indices):\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/351489564/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/351600374",
        "html_url": "https://github.com/dask/dask/issues/2991#issuecomment-351600374",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2991",
        "id": 351600374,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTYwMDM3NA==",
        "user": {
            "login": "gorlins",
            "id": 139286,
            "node_id": "MDQ6VXNlcjEzOTI4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/139286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gorlins",
            "html_url": "https://github.com/gorlins",
            "followers_url": "https://api.github.com/users/gorlins/followers",
            "following_url": "https://api.github.com/users/gorlins/following{/other_user}",
            "gists_url": "https://api.github.com/users/gorlins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gorlins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gorlins/subscriptions",
            "organizations_url": "https://api.github.com/users/gorlins/orgs",
            "repos_url": "https://api.github.com/users/gorlins/repos",
            "events_url": "https://api.github.com/users/gorlins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gorlins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-14T03:45:48Z",
        "updated_at": "2017-12-14T03:45:48Z",
        "author_association": "NONE",
        "body": "ah, yes that looks like it does the trick on the write side.  I'm noticing that my results are not 100% repeatable, which makes sense since gb.indices is a dict and the iteration order is not guaranteed.  The tests pass iff it iterates in order.\r\n\r\nDoes it make sense to add in functionality to reorder the row groups on the read side? ie if an index is explicitly requested (vs just inferred) then the row groups can be ordered by min value of that field and an index with divisions can be built if the data happens to be separated.  If the max/min overlap, the divisions can always be discarded as they are currently.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/351600374/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/351742714",
        "html_url": "https://github.com/dask/dask/issues/2991#issuecomment-351742714",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2991",
        "id": 351742714,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTc0MjcxNA==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-14T15:25:57Z",
        "updated_at": "2017-12-14T15:25:57Z",
        "author_association": "MEMBER",
        "body": "Yes @gorlins , I suppose all of that information is available at the time of loading, and in general I can imagine a `fastparquet.ParquetFile.reorder_rowgroups(index)` method, which does a sort on the row_groups by the statistics min; dask can optionally call this. Note that in the future, index may be a tuple for multi-level indexing. Would you be interested in writing such a function? \r\nThat, together with the small fix above, would make a nice PR.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/351742714/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/351787088",
        "html_url": "https://github.com/dask/dask/issues/2991#issuecomment-351787088",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2991",
        "id": 351787088,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTc4NzA4OA==",
        "user": {
            "login": "gorlins",
            "id": 139286,
            "node_id": "MDQ6VXNlcjEzOTI4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/139286?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gorlins",
            "html_url": "https://github.com/gorlins",
            "followers_url": "https://api.github.com/users/gorlins/followers",
            "following_url": "https://api.github.com/users/gorlins/following{/other_user}",
            "gists_url": "https://api.github.com/users/gorlins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gorlins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gorlins/subscriptions",
            "organizations_url": "https://api.github.com/users/gorlins/orgs",
            "repos_url": "https://api.github.com/users/gorlins/repos",
            "events_url": "https://api.github.com/users/gorlins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gorlins/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2017-12-14T17:53:26Z",
        "updated_at": "2017-12-14T17:53:26Z",
        "author_association": "NONE",
        "body": "i could potentially write the new feature in a few weeks as I have a few upcoming deadlines... I would recommend putting the sorting in immediately as an independent task since it clearly improves the behavior",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/351787088/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/432691569",
        "html_url": "https://github.com/dask/dask/issues/2991#issuecomment-432691569",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2991",
        "id": 432691569,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjY5MTU2OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-24T14:52:50Z",
        "updated_at": "2018-10-24T14:52:50Z",
        "author_association": "MEMBER",
        "body": "@martindurant was this resolved?  Can I ask you to either summarize what should happen in dask here or, if there are no concrete changes that should be made to the codebase, close?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/432691569/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/432696933",
        "html_url": "https://github.com/dask/dask/issues/2991#issuecomment-432696933",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/2991",
        "id": 432696933,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjY5NjkzMw==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-10-24T15:04:17Z",
        "updated_at": "2018-10-24T15:04:17Z",
        "author_association": "MEMBER",
        "body": "The change was already made on the fastparquet side, so this kind of unsorted dataset should not happen any more. Nevertheless, the idea of reordering the row-groups in the matadata file or in memory - so that you can use some column for an index - is a reasonable one that someone may still want to implement. That could happen in dask or outside.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/432696933/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]