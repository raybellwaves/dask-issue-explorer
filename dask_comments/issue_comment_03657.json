[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/399335258",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-399335258",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 399335258,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTMzNTI1OA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-22T06:28:50Z",
        "updated_at": "2018-06-22T06:28:50Z",
        "author_association": "MEMBER",
        "body": "NumPy [implements `kron`]( https://github.com/numpy/numpy/blob/v1.14.5/numpy/lib/shape_base.py#L813-L841 ) using [`outer`]( https://docs.scipy.org/doc/numpy-1.14.0/reference/generated/numpy.outer.html ) and reshaping. Would be possible to do the same thing for Dask Arrays. That said, expect there are better options. Suggestions welcome.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/399335258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/405022520",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-405022520",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 405022520,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTAyMjUyMA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-14T13:04:28Z",
        "updated_at": "2018-07-14T13:04:28Z",
        "author_association": "MEMBER",
        "body": "Is this doable with atop or slicing syntax do you think?\r\n\r\nMarking this as good first issue, but it may not be.  I think that this requires someone to think about it a bit, and then look at the `dask/array/core.py::atop` function and see if there is a nice way to implement it.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/405022520/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/425671898",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-425671898",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 425671898,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTY3MTg5OA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-09-29T20:00:29Z",
        "updated_at": "2018-09-29T20:00:29Z",
        "author_association": "MEMBER",
        "body": "Avoiding reshaping is probably better. It may be possible with `atop`, but agree it requires a bit of thought.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/425671898/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/490265743",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-490265743",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 490265743,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDI2NTc0Mw==",
        "user": {
            "login": "mathdugre",
            "id": 16450132,
            "node_id": "MDQ6VXNlcjE2NDUwMTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16450132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mathdugre",
            "html_url": "https://github.com/mathdugre",
            "followers_url": "https://api.github.com/users/mathdugre/followers",
            "following_url": "https://api.github.com/users/mathdugre/following{/other_user}",
            "gists_url": "https://api.github.com/users/mathdugre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mathdugre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mathdugre/subscriptions",
            "organizations_url": "https://api.github.com/users/mathdugre/orgs",
            "repos_url": "https://api.github.com/users/mathdugre/repos",
            "events_url": "https://api.github.com/users/mathdugre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mathdugre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-07T21:41:38Z",
        "updated_at": "2019-05-07T21:41:38Z",
        "author_association": "NONE",
        "body": "Hi, is this issue solved? I would like to work on it",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/490265743/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/490287472",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-490287472",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 490287472,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDI4NzQ3Mg==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-07T23:12:50Z",
        "updated_at": "2019-05-07T23:12:50Z",
        "author_association": "MEMBER",
        "body": "It is still open. Please feel free to work on it if it is of interest. Would be happy to review a PR. \ud83d\ude04",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/490287472/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/557829989",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-557829989",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 557829989,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzgyOTk4OQ==",
        "user": {
            "login": "Madhu94",
            "id": 9015820,
            "node_id": "MDQ6VXNlcjkwMTU4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9015820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Madhu94",
            "html_url": "https://github.com/Madhu94",
            "followers_url": "https://api.github.com/users/Madhu94/followers",
            "following_url": "https://api.github.com/users/Madhu94/following{/other_user}",
            "gists_url": "https://api.github.com/users/Madhu94/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Madhu94/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Madhu94/subscriptions",
            "organizations_url": "https://api.github.com/users/Madhu94/orgs",
            "repos_url": "https://api.github.com/users/Madhu94/repos",
            "events_url": "https://api.github.com/users/Madhu94/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Madhu94/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-23T20:24:03Z",
        "updated_at": "2019-11-23T20:24:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "@mathdugre Please do let me know if you are working on this, I'd like to give it a try",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/557829989/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/557830124",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-557830124",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 557830124,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzgzMDEyNA==",
        "user": {
            "login": "mathdugre",
            "id": 16450132,
            "node_id": "MDQ6VXNlcjE2NDUwMTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16450132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mathdugre",
            "html_url": "https://github.com/mathdugre",
            "followers_url": "https://api.github.com/users/mathdugre/followers",
            "following_url": "https://api.github.com/users/mathdugre/following{/other_user}",
            "gists_url": "https://api.github.com/users/mathdugre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mathdugre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mathdugre/subscriptions",
            "organizations_url": "https://api.github.com/users/mathdugre/orgs",
            "repos_url": "https://api.github.com/users/mathdugre/repos",
            "events_url": "https://api.github.com/users/mathdugre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mathdugre/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-11-23T20:26:15Z",
        "updated_at": "2019-11-23T20:26:15Z",
        "author_association": "NONE",
        "body": "@Madhu94 I didn't get the time to work on it, feel free to do so :)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/557830124/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/561125225",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-561125225",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 561125225,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTEyNTIyNQ==",
        "user": {
            "login": "Madhu94",
            "id": 9015820,
            "node_id": "MDQ6VXNlcjkwMTU4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9015820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Madhu94",
            "html_url": "https://github.com/Madhu94",
            "followers_url": "https://api.github.com/users/Madhu94/followers",
            "following_url": "https://api.github.com/users/Madhu94/following{/other_user}",
            "gists_url": "https://api.github.com/users/Madhu94/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Madhu94/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Madhu94/subscriptions",
            "organizations_url": "https://api.github.com/users/Madhu94/orgs",
            "repos_url": "https://api.github.com/users/Madhu94/repos",
            "events_url": "https://api.github.com/users/Madhu94/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Madhu94/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-12-03T11:24:16Z",
        "updated_at": "2019-12-03T11:24:16Z",
        "author_association": "CONTRIBUTOR",
        "body": "thanks! Starting on it.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/561125225/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/575889628",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-575889628",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 575889628,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTg4OTYyOA==",
        "user": {
            "login": "gitkarma",
            "id": 4049785,
            "node_id": "MDQ6VXNlcjQwNDk3ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4049785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gitkarma",
            "html_url": "https://github.com/gitkarma",
            "followers_url": "https://api.github.com/users/gitkarma/followers",
            "following_url": "https://api.github.com/users/gitkarma/following{/other_user}",
            "gists_url": "https://api.github.com/users/gitkarma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gitkarma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gitkarma/subscriptions",
            "organizations_url": "https://api.github.com/users/gitkarma/orgs",
            "repos_url": "https://api.github.com/users/gitkarma/repos",
            "events_url": "https://api.github.com/users/gitkarma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gitkarma/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-18T11:18:23Z",
        "updated_at": "2020-01-18T11:18:23Z",
        "author_association": "NONE",
        "body": "@Madhu94 any progress on it. I was also looking for the feature",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/575889628/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/576027842",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-576027842",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 576027842,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU3NjAyNzg0Mg==",
        "user": {
            "login": "Madhu94",
            "id": 9015820,
            "node_id": "MDQ6VXNlcjkwMTU4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9015820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Madhu94",
            "html_url": "https://github.com/Madhu94",
            "followers_url": "https://api.github.com/users/Madhu94/followers",
            "following_url": "https://api.github.com/users/Madhu94/following{/other_user}",
            "gists_url": "https://api.github.com/users/Madhu94/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Madhu94/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Madhu94/subscriptions",
            "organizations_url": "https://api.github.com/users/Madhu94/orgs",
            "repos_url": "https://api.github.com/users/Madhu94/repos",
            "events_url": "https://api.github.com/users/Madhu94/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Madhu94/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-01-19T17:39:59Z",
        "updated_at": "2020-01-19T17:39:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "@gitkarma No I could not find the time.  Still interested in exploring this, but if anyone else wants to push this through in the interests of time, please take it up",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/576027842/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/591945713",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-591945713",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 591945713,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTk0NTcxMw==",
        "user": {
            "login": "eric-czech",
            "id": 6130352,
            "node_id": "MDQ6VXNlcjYxMzAzNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6130352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-czech",
            "html_url": "https://github.com/eric-czech",
            "followers_url": "https://api.github.com/users/eric-czech/followers",
            "following_url": "https://api.github.com/users/eric-czech/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-czech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-czech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-czech/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-czech/orgs",
            "repos_url": "https://api.github.com/users/eric-czech/repos",
            "events_url": "https://api.github.com/users/eric-czech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-czech/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-27T12:29:20Z",
        "updated_at": "2020-02-27T12:29:20Z",
        "author_association": "MEMBER",
        "body": "Is this rechunking into 1x1 chunks for one of the arguments likely to be as bad or worse than reshaping?  I can't figure out how to do it otherwise with ```blockwise```, though this seems like it could be on the right track:\r\n\r\n```python\r\nx = da.arange(36).reshape(9, 4).rechunk((1, 1))\r\ny = da.ones(36).reshape(9, 4).rechunk((3, 2))\r\nz = da.blockwise(\r\n    np.multiply, 'ij', x, 'ij', y, 'xy', concatenate=True, dtype='f8',\r\n    adjust_chunks={'i': y.shape[0], 'j': y.shape[1]}\r\n)\r\nz.shape # -> (81, 16)\r\n# Compute on kron inputs to silence \"Not implemented by Dask ...\" warning\r\nassert np.all(np.kron(x.compute(), y.compute()) == z.compute())\r\nz.compute()\r\narray([\r\n       [ 0.,  0.,  0., ...,  3.,  3.,  3.],\r\n       [ 0.,  0.,  0., ...,  3.,  3.,  3.],\r\n       [ 0.,  0.,  0., ...,  3.,  3.,  3.],\r\n       ...,\r\n       [32., 32., 32., ..., 35., 35., 35.],\r\n       [32., 32., 32., ..., 35., 35., 35.],\r\n       [32., 32., 32., ..., 35., 35., 35.]\r\n])\r\n```\r\n\r\nSeparately, is this a bug or expected behavior?\r\n\r\n```python\r\nx = da.arange(36).reshape(9, 4).rechunk((1, 1))\r\ny = da.ones(36).reshape(9, 4).rechunk((3, 2))\r\nz = da.blockwise(\r\n    np.multiply, 'ij', x, 'ij', y, 'xy', concatenate=True, dtype='f8',\r\n    # Leave this out to show that inferred shape is wrong\r\n    # adjust_chunks={'i': x.shape[0], 'j': y.shape[1]}\r\n)\r\nprint(z.shape) # --> (9, 4) \r\nprint(z.compute().shape) # --> (81, 16)\r\n# And this still works:\r\nassert np.all(np.kron(x.compute(), y.compute()) == z.compute())\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/591945713/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/591955671",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-591955671",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 591955671,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTk1NTY3MQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-27T12:53:23Z",
        "updated_at": "2020-02-27T12:53:23Z",
        "author_association": "MEMBER",
        "body": "Thanks for sharing Eric! \ud83d\ude04\r\n\r\nYeah that's a good question. Rechunking is generally expensive. However reshaping will result in some smearing and remixing of chunks, which comes with its own cost. Probably requires some benchmarking to know for sure.\r\n\r\nThat said, there might be ways to tweak what you came up with to improve things further before measuring timings. \ud83d\ude42",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/591955671/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/591973199",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-591973199",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 591973199,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTk3MzE5OQ==",
        "user": {
            "login": "eric-czech",
            "id": 6130352,
            "node_id": "MDQ6VXNlcjYxMzAzNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6130352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-czech",
            "html_url": "https://github.com/eric-czech",
            "followers_url": "https://api.github.com/users/eric-czech/followers",
            "following_url": "https://api.github.com/users/eric-czech/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-czech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-czech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-czech/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-czech/orgs",
            "repos_url": "https://api.github.com/users/eric-czech/repos",
            "events_url": "https://api.github.com/users/eric-czech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-czech/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-27T13:34:38Z",
        "updated_at": "2020-02-27T13:42:39Z",
        "author_association": "MEMBER",
        "body": "This might be an improvement:\r\n\r\n```python\r\nx = da.arange(36).reshape(9, 4).rechunk((3, 2))\r\ny = da.ones(36).reshape(9, 4).rechunk((3, 2))\r\nz = da.blockwise(\r\n    np.kron, 'ab', x, 'ij', y, 'ij', concatenate=True, dtype='f8',\r\n    new_axes={'a': x.shape[0] * y.shape[0], 'b': x.shape[1] * y.shape[1]}\r\n)\r\nassert np.all(np.kron(x, y) == z.compute())\r\nassert z.shape == z.compute().shape\r\nz.compute()\r\narray([[ 0.,  0.,  0., ...,  3.,  3.,  3.],\r\n       [ 0.,  0.,  0., ...,  3.,  3.,  3.],\r\n       [ 0.,  0.,  0., ...,  3.,  3.,  3.],\r\n       ...,\r\n       [32., 32., 32., ..., 35., 35., 35.],\r\n       [32., 32., 32., ..., 35., 35., 35.],\r\n       [32., 32., 32., ..., 35., 35., 35.]])\r\n```\r\n\r\nI don't think it's what I want though since passing ```concatenate=False``` gives blocks in lists and building one giant result as the concatenation of all kronecker products would be a bad idea.  I'll keep experimenting ..",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/591973199/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/592135295",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-592135295",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 592135295,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjEzNTI5NQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-27T19:27:04Z",
        "updated_at": "2020-02-27T19:27:04Z",
        "author_association": "MEMBER",
        "body": "Thanks for the continued exploration here Eric! \ud83d\ude04\r\n\r\nAgree this is looking better. \ud83d\ude42\r\n\r\nYeah `concatenate=True` does come with some overhead, but it can be a little tricky to work with `concatenate=False`. One thing that can help here is writing a kernel function that wraps `np.kron` while working with the nested `list`/array structure. \ud83d\ude09",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/592135295/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/592948483",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-592948483",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 592948483,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5Mjk0ODQ4Mw==",
        "user": {
            "login": "eric-czech",
            "id": 6130352,
            "node_id": "MDQ6VXNlcjYxMzAzNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6130352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-czech",
            "html_url": "https://github.com/eric-czech",
            "followers_url": "https://api.github.com/users/eric-czech/followers",
            "following_url": "https://api.github.com/users/eric-czech/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-czech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-czech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-czech/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-czech/orgs",
            "repos_url": "https://api.github.com/users/eric-czech/repos",
            "events_url": "https://api.github.com/users/eric-czech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-czech/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-29T14:00:59Z",
        "updated_at": "2020-02-29T14:00:59Z",
        "author_association": "MEMBER",
        "body": "Thanks @jakirkham!  With some guidance from @mrocklin I tried building a custom graph for this and benchmarked it a bit, in this [gist](https://gist.github.com/eric-czech/7bc258417dfa85e96f270d64ee8f2f7d), against the first ```blockwise``` version above as well as an implementation with ```da.block```, which is as simple as this:\r\n\r\n```python\r\nx = da.arange(36).reshape(9, 4).rechunk((3, 2))\r\ny = da.ones(36, dtype=x.dtype).reshape(9, 4).rechunk((3, 2))\r\nz = da.block([\r\n        [x[i, j] * y for j in range(x.shape[1])]\r\n        for i in range(x.shape[0])\r\n])\r\n```\r\n\r\nI found that the original ```blockwise``` version (w/ 1x1 rechunking) was fastest followed by my custom graph -- the ```da.block``` specification was a distant 3rd.  It isn't a thorough benchmark but all of them are at least 60x slower than ```np.kron``` and 100x slower than an element-wise multiplication (via Dask) involving the same number of FLOPs so unfortunately I don't think any of these are very good.  I may circle back after learning more about how to profile what's going on effectively, but I'll leave it at this for now unless anybody sees obvious avenues for improvement.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/592948483/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/592950422",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-592950422",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 592950422,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5Mjk1MDQyMg==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-02-29T14:22:38Z",
        "updated_at": "2020-02-29T14:22:38Z",
        "author_association": "MEMBER",
        "body": "Thanks for the update Eric!\n\nThis more recent implementation reminds me of issue ( https://github.com/dask/dask/issues/2946 ) with `da.repeat`. I\u2019m wondering if solving that would be a useful building block here. Or possibly illuminate another method to approach this issue with.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/592950422/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/593029057",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-593029057",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 593029057,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzAyOTA1Nw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-01T01:46:38Z",
        "updated_at": "2020-03-01T01:46:38Z",
        "author_association": "MEMBER",
        "body": "@eric-czech in your case I recommend trying the method you have above with `da.block` but where `x` is a Numpy array rather than a Dask array.  ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/593029057/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/593380726",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-593380726",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 593380726,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5MzM4MDcyNg==",
        "user": {
            "login": "eric-czech",
            "id": 6130352,
            "node_id": "MDQ6VXNlcjYxMzAzNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6130352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-czech",
            "html_url": "https://github.com/eric-czech",
            "followers_url": "https://api.github.com/users/eric-czech/followers",
            "following_url": "https://api.github.com/users/eric-czech/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-czech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-czech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-czech/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-czech/orgs",
            "repos_url": "https://api.github.com/users/eric-czech/repos",
            "events_url": "https://api.github.com/users/eric-czech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-czech/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-02T12:35:19Z",
        "updated_at": "2020-03-02T12:35:19Z",
        "author_association": "MEMBER",
        "body": "That ended up being about 2x slower than the Dask-only version (updated [gist](https://gist.github.com/eric-czech/7bc258417dfa85e96f270d64ee8f2f7d)).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/593380726/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/594079403",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-594079403",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 594079403,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDA3OTQwMw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-03T17:47:38Z",
        "updated_at": "2020-03-03T17:47:38Z",
        "author_association": "MEMBER",
        "body": "Here is my run through of your code:\r\n\r\n```python\r\nIn [1]: import dask.array as da, numpy as np\r\n\r\nIn [2]: def kron_v2(x, y):^M\r\n   ...:     return da.block([^M\r\n   ...:         [x[i, j] * y for j in range(x.shape[1])]^M\r\n   ...:         for i in range(x.shape[0])^M\r\n   ...:     ])\r\n   ...:\r\n\r\nIn [3]: xl = da.arange(50*20).reshape(50, 20).rechunk((25, 4)).persist()\r\n\r\nIn [4]: yl = da.ones(xl.size, dtype=xl.dtype).reshape(xl.shape).rechunk(xl.chunksize).persist()\r\n\r\nIn [5]: %time zl = kron_v2(xl, yl)\r\nWall time: 616 ms\r\n\r\nIn [6]: %time _ = zl.compute()\r\nWall time: 1.79 s\r\n\r\nIn [7]: xl = xl.compute()\r\n\r\nIn [8]: %time zl = kron_v2(xl, yl)\r\nWall time: 419 ms\r\n\r\nIn [9]: %time _ = zl.compute()\r\nWall time: 1.66 s\r\n\r\nIn [10]: len(zl.__dask_graph__())\r\nOut[10]: 30010\r\n\r\nIn [11]: from dask.utils import format_time\r\n\r\nIn [12]: format_time(1.66 / len(zl.__dask_graph__()))\r\nOut[12]: '55.31 us'\r\n```\r\n\r\n<details>\r\n\r\n<summary>\r\nCopy-pasteable version here\r\n</summary>\r\n\r\n```python\r\nimport dask.array as da, numpy as np\r\ndef kron_v2(x, y):\r\n    return da.block([\r\n        [x[i, j] * y for j in range(x.shape[1])]\r\n        for i in range(x.shape[0])\r\n    ])\r\nxl = da.arange(50*20).reshape(50, 20).rechunk((25, 4)).persist()\r\nyl = da.ones(xl.size, dtype=xl.dtype).reshape(xl.shape).rechunk(xl.chunksize).persist()\r\n%time zl = kron_v2(xl, yl)\r\n%time _ = zl.compute()\r\nxl = xl.compute()\r\n%time zl = kron_v2(xl, yl)\r\n%time _ = zl.compute()\r\nlen(zl.__dask_graph__())\r\nfrom dask.utils import format_time\r\nformat_time(1.66 / len(zl.__dask_graph__()))\r\n```\r\n\r\n</details>\r\n\r\nMy guess is that we're bound based on the task throughput of the scheduler.  50us/task is pretty good for us. If we wanted to go faster than this then we would probably want to start bundling a few chunks together at once, perhaps by calling `np.kron` within the `kron_v2` function, rather than using `*`, and pulling off chunks of the input numpy array.  To do this well we would also want to look at the chunk size, and the ideal chunk size (see `dask.config.get(\"array.chunk-size\")` and choose blocks of `x` accordingly.  ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/594079403/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/595786026",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-595786026",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 595786026,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTc4NjAyNg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-06T14:14:44Z",
        "updated_at": "2020-03-06T14:14:44Z",
        "author_association": "MEMBER",
        "body": "Or maybe the answer is just to rechunk `y` before blocking.  That might be simpler.  Mostly we want to avoid the situation where we have very many very small chunks.  This creates unpleasant execution overhead.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/595786026/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/595869090",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-595869090",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 595869090,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTg2OTA5MA==",
        "user": {
            "login": "eric-czech",
            "id": 6130352,
            "node_id": "MDQ6VXNlcjYxMzAzNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6130352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-czech",
            "html_url": "https://github.com/eric-czech",
            "followers_url": "https://api.github.com/users/eric-czech/followers",
            "following_url": "https://api.github.com/users/eric-czech/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-czech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-czech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-czech/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-czech/orgs",
            "repos_url": "https://api.github.com/users/eric-czech/repos",
            "events_url": "https://api.github.com/users/eric-czech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-czech/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-06T17:13:09Z",
        "updated_at": "2020-03-06T17:13:09Z",
        "author_association": "MEMBER",
        "body": "Hey @mrocklin, thanks for taking a deeper look!  Knowing 50us/task is helpful as is that rechunking is an approach you would take to reduce the number of tasks.  \r\n\r\nI was able to get comparable times to what you had if I switch to the single-threaded scheduler, but could I get some intuition on why the distributed scheduler even with 1 worker and 1 thread per worker is >10x slower?  I was thinking that it makes more sense to optimize the process for that scheduler -- would you agree?  Or is it likely that optimizing any process for a local scheduler will translate well (i.e. we still just want to avoid small chunks -- nothing more complicated)?\r\n\r\nThanks again for taking a look.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/595869090/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/595919454",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-595919454",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 595919454,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTkxOTQ1NA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-06T19:17:42Z",
        "updated_at": "2020-03-06T19:17:42Z",
        "author_association": "MEMBER",
        "body": "The distributed scheduler has higher per-task overheads than the single-node scheduler, often in the few-hundred microseconds per task.  Because of this, we want to keep task compute times well above the millisecond range (possibly much higher, depending on the scale that you're looking for)\r\n\r\nThis is made easier if we keep chunk sizes large-ish, and also try hard to fuse operations (another goal of yours, I believe).  \r\n\r\nThis example has chunksizes of `(25, 4)`, which is small for us.  In practice chunk sizes tend to be in the 100MB range.  See best practice docs here:\r\n\r\n-  https://docs.dask.org/en/latest/array-best-practices.html#select-a-good-chunk-size\r\n-  https://docs.dask.org/en/latest/best-practices.html#avoid-very-large-graphs",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/595919454/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/595922663",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-595922663",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 595922663,
        "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTkyMjY2Mw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-06T19:25:13Z",
        "updated_at": "2020-03-06T19:25:13Z",
        "author_association": "MEMBER",
        "body": "So for this particular example we can significantly reduce compute time by reducing the chunk count of `yl`\r\n\r\n```python\r\nIn [5]: yl = yl.rechunk(\"auto\").persist()                                                                \r\n\r\nIn [6]: %time zl = kron_v2(xl, yl) \r\n   ...: %time _ = zl.compute()                                                                           \r\nCPU times: user 642 ms, sys: 29.5 ms, total: 671 ms\r\nWall time: 627 ms\r\nCPU times: user 305 ms, sys: 119 \u00b5s, total: 305 ms\r\nWall time: 291 ms\r\n```\r\n\r\nThis is still bound by the size of `xl` though, which has 1000 elements, and so creates 1000 chunks, regardless of how large `yl` is.\r\n\r\nHere is another, perhaps more extreme, example that shows the effect where `xl` is quite small, but where we apply `kron` repeatedly (as I think is probably also your use case)\r\n\r\n```python\r\nIn [14]: xl = np.array([[1, 2], [3, 4]])                                                                 \r\nIn [15]: yl = da.ones((100, 100)).persist()                                                              \r\n\r\nIn [16]: %time zl = kron_v2(xl, yl)                                                                      \r\nCPU times: user 12.2 ms, sys: 0 ns, total: 12.2 ms\r\nWall time: 11.7 ms\r\n\r\nIn [17]: %time zl = kron_v2(xl, zl)  # reapply kron onto zl repeatedly\r\nCPU times: user 4.11 ms, sys: 1 \u00b5s, total: 4.11 ms\r\nWall time: 3.84 ms\r\n\r\nIn [18]: %time zl = kron_v2(xl, zl)                                                                      \r\nCPU times: user 11.1 ms, sys: 0 ns, total: 11.1 ms\r\nWall time: 10.6 ms\r\n\r\nIn [19]: %time zl = kron_v2(xl, zl)                                                                      \r\nCPU times: user 12.6 ms, sys: 0 ns, total: 12.6 ms\r\nWall time: 12.1 ms\r\n\r\nIn [20]: zl                                                                                              \r\nOut[20]: dask.array<concatenate, shape=(1600, 1600), dtype=float64, chunksize=(100, 100), chunktype=numpy.ndarray>\r\n\r\nIn [21]: %time zl = kron_v2(xl, zl)  # with larger graphs on the right, graph construction times start to increase                \r\nCPU times: user 18.1 ms, sys: 0 ns, total: 18.1 ms\r\nWall time: 17.6 ms\r\n\r\nIn [22]: %time zl = kron_v2(xl, zl)                                                                      \r\nCPU times: user 43.1 ms, sys: 92 \u00b5s, total: 43.2 ms\r\nWall time: 42.3 ms\r\n\r\nIn [23]: %time zl = kron_v2(xl, zl)                                                                      \r\nCPU times: user 111 ms, sys: 4.04 ms, total: 115 ms\r\nWall time: 114 ms\r\n\r\nIn [24]: zl                                                                                              \r\nOut[24]: dask.array<concatenate, shape=(12800, 12800), dtype=float64, chunksize=(100, 100), chunktype=numpy.ndarray>\r\n\r\nIn [25]: zl = zl.rechunk(\"auto\")  # but fortunately 100x100 is still quite small, so let's rechunk\r\n\r\nIn [26]: %time zl = kron_v2(xl, zl) # and it's decently fast again\r\nCPU times: user 12.6 ms, sys: 14 \u00b5s, total: 12.6 ms\r\nWall time: 11.7 ms\r\n\r\nIn [27]: %time zl = kron_v2(xl, zl)                                                                      \r\nCPU times: user 13.9 ms, sys: 0 ns, total: 13.9 ms\r\nWall time: 13 ms\r\n\r\nIn [28]: zl                                                                                              \r\nOut[28]: dask.array<concatenate, shape=(51200, 51200), dtype=float64, chunksize=(4000, 4000), chunktype=numpy.ndarray>\r\n\r\nIn [29]: %time zl.sum().compute()                                                                        \r\nCPU times: user 42.5 s, sys: 21.2 s, total: 1min 3s\r\nWall time: 12.1 s\r\nOut[29]: 10000000000000.0\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/595922663/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/602863236",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-602863236",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 602863236,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjg2MzIzNg==",
        "user": {
            "login": "eric-czech",
            "id": 6130352,
            "node_id": "MDQ6VXNlcjYxMzAzNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6130352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-czech",
            "html_url": "https://github.com/eric-czech",
            "followers_url": "https://api.github.com/users/eric-czech/followers",
            "following_url": "https://api.github.com/users/eric-czech/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-czech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-czech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-czech/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-czech/orgs",
            "repos_url": "https://api.github.com/users/eric-czech/repos",
            "events_url": "https://api.github.com/users/eric-czech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-czech/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-23T21:22:37Z",
        "updated_at": "2020-03-23T21:32:06Z",
        "author_association": "MEMBER",
        "body": "Hey @mrocklin sorry for the delay.\r\n\r\nThat much makes sense, and I have one last performance question then.  A more representative version of the use case I have would look like this:\r\n\r\n```python\r\nimport dask.array as da, numpy as np\r\nimport dask\r\ndask.config.set(scheduler='single-threaded')\r\n\r\ndef kron_v2(x, y):\r\n    return da.block([\r\n        [x[i, j] * y for j in range(x.shape[1])]\r\n        for i in range(x.shape[0])\r\n    ])\r\n\r\n# Multiply tiny 2x2 by giant tall and skinny matrix\r\nx = np.ones((2, 2))\r\ny = da.ones((1000000, 1000)).rechunk('auto').persist() # 1M x 1k\r\ny.chunksize, y.numblocks # 125MB chunks\r\n# > ((15625, 1000), (64, 1))\r\nz = kron_v2(x, y)\r\n\r\n%time _ = z.compute()\r\n# CPU times: user 4.52 s, sys: 3.91 s, total: 8.43 s\r\n# Wall time: 8.43 s\r\n\r\nlen(z.__dask_graph__())\r\n# 576\r\n```\r\n\r\nAnd vs the distributed scheduler:\r\n\r\n```python\r\nfrom dask.distributed import Client\r\nClient(n_workers=1, threads_per_worker=1, processes=True)\r\n\r\n%time _ = z.compute()\r\n# CPU times: user 32.5 s, sys: 48.5 s, total: 1min 20s\r\n# Wall time: 1min 22s\r\n```\r\n\r\nIn short, I see that it takes 1min 22s vs 8s using the distributed and single node scheduler, respectively, when operating on a small number (64) of large chunks.\r\n\r\nIf I'm understanding you correctly, then the overhead from using the distributed scheduler for this should be something like 576 times a few hundred microseconds right?  Even if the overhead was a millisecond per-task that would still only explain a minute portion of the difference.  Could there be something else going on here?  \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/602863236/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/602867548",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-602867548",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 602867548,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjg2NzU0OA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-23T21:31:38Z",
        "updated_at": "2020-03-23T21:31:38Z",
        "author_association": "MEMBER",
        "body": "I was just responding to this :)  it's fun seeing github change live so many times :)\r\n\r\nYeah, the overhead you're running into here is likely moving the data from the remote worker into your client process.  Recall that `.compute()` produces a concrete numpy array in local memory, so you're moving those various numpy arrays that are spread around your workers to one worker (in your case this is already true), then concatenating them into a single numpy array, and then moving that numpy array back over to your ipython/jupyter/python session.\r\n\r\nYour output array is 32GB, which for 83s comes out to a bandwidth of about 385 MB/s, which isn't terrible for commodity network hardware and TCP.\r\n\r\nThe right way to test this is probably \r\n\r\n```python\r\n%%time\r\nz = z.persist()  # watch out, this is asynchronous\r\n\r\nfrom dask.distributed import wait\r\nwait(z)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/602867548/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/602869713",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-602869713",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 602869713,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjg2OTcxMw==",
        "user": {
            "login": "eric-czech",
            "id": 6130352,
            "node_id": "MDQ6VXNlcjYxMzAzNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6130352?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eric-czech",
            "html_url": "https://github.com/eric-czech",
            "followers_url": "https://api.github.com/users/eric-czech/followers",
            "following_url": "https://api.github.com/users/eric-czech/following{/other_user}",
            "gists_url": "https://api.github.com/users/eric-czech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eric-czech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eric-czech/subscriptions",
            "organizations_url": "https://api.github.com/users/eric-czech/orgs",
            "repos_url": "https://api.github.com/users/eric-czech/repos",
            "events_url": "https://api.github.com/users/eric-czech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eric-czech/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-23T21:36:35Z",
        "updated_at": "2020-03-23T21:36:35Z",
        "author_association": "MEMBER",
        "body": "Ah interesting, so even on a single host (this one isn't actually remote), the communication is still going through the network interface.  That makes sense, thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/602869713/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/602871004",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-602871004",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 602871004,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjg3MTAwNA==",
        "user": {
            "login": "hammer",
            "id": 15233,
            "node_id": "MDQ6VXNlcjE1MjMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/15233?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hammer",
            "html_url": "https://github.com/hammer",
            "followers_url": "https://api.github.com/users/hammer/followers",
            "following_url": "https://api.github.com/users/hammer/following{/other_user}",
            "gists_url": "https://api.github.com/users/hammer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hammer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hammer/subscriptions",
            "organizations_url": "https://api.github.com/users/hammer/orgs",
            "repos_url": "https://api.github.com/users/hammer/repos",
            "events_url": "https://api.github.com/users/hammer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hammer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-23T21:39:43Z",
        "updated_at": "2020-03-23T21:39:43Z",
        "author_association": "NONE",
        "body": "> even on a single host (this one isn't actually remote), the communication is still going through the network interface.\r\n\r\nWhy? Can\u2019t you just pass a file handle to the other local process?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/602871004/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/602871074",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-602871074",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 602871074,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjg3MTA3NA==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-23T21:39:53Z",
        "updated_at": "2020-03-23T21:39:53Z",
        "author_association": "MEMBER",
        "body": "Yeah, you have some options here.  If you use `processes=False` then we'll just shuttle things across an in-memory Python queue.  \r\n\r\nIf you wanted to get fancy and you're on Linux then you could try out `ucx` and use their shared memory transport.  I would bet money that you'd run into problems with this today though (the NVIDIA folks are working hard on this, but there are a lot of lower level systems to stitch together). \r\n\r\nIn practice though you probably won't want to bring back giant results to your local session.  So this comes up more often in benchmarking than in anything else.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/602871074/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/602871991",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-602871991",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 602871991,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjg3MTk5MQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-23T21:42:10Z",
        "updated_at": "2020-03-23T21:42:10Z",
        "author_association": "MEMBER",
        "body": "> Why? Can\u2019t you just pass a file handle to the other local process?\r\n\r\nYou definitely could.  You could save your data to a file (HDF5, Zarr, whatever) and then pass that file handle back.\r\n\r\nYou would have to make that choice explicitly though.  Dask isn't going to do a high level analysis of your code and say \"Hrm, they asked me to send back this numpy array, but probably they should have stored it to disk.  Let me do that instead\".\r\n\r\nTypically today we leave high level decisions like that to the user, or to systems built on top of Dask.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/602871991/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/602874711",
        "html_url": "https://github.com/dask/dask/issues/3657#issuecomment-602874711",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3657",
        "id": 602874711,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjg3NDcxMQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-03-23T21:48:53Z",
        "updated_at": "2020-03-23T21:48:53Z",
        "author_association": "MEMBER",
        "body": "Yeah we continue to improve UCX. I think today most of the issues are particularly combinations of features UCX supports as opposed to run-of-the-mill things. This could be a handy thing to try as it supports things like shared memory, which should level the playing field when using interprocess communication on the same machine/node. If you do try this, I'd be very interested to hear about your experience \ud83d\ude04\r\n\r\nIf you look into intermediate storage, you might find [this doc]( https://docs.dask.org/en/latest/array-creation.html#intermediate-storage ) helpful.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/602874711/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]