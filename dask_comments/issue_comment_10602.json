[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1781585507",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1781585507",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1781585507,
        "node_id": "IC_kwDOAbcwm85qMNZj",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-26T18:01:02Z",
        "updated_at": "2023-11-24T14:34:11Z",
        "author_association": "MEMBER",
        "body": "## Personal recommendation\r\n\r\nIf I were to build this I would remove a lot.  I'd remove engines and go Arrow-first with both parquet deserialization and with data access.  I think that we could make this a single-python-file effort that had reliably good performance and much easier maintenance.  \r\n\r\n### We would lose some features:\r\n\r\n- fastparquet \r\n- index / divisions\r\n- metadata file\r\n- Probably we need to maintain a `filesystem=` keyword in case someone has an odd filesystem and needs to use fsspec, but this would be the exception I think\r\n- Probably the loss of engines means that RAPIDS folks need to maintain their own read-parquet code paths outside of Dask.  I think that this is ok, they've done that before with dask-cudf.  Probably they just do it again.  \r\n\r\n### Some things to gain\r\n\r\n- There are various settings we should be aware of from https://github.com/apache/arrow/issues/38389 that might help improve performance\r\n- Consider keeping RLE columns as categorical\r\n- Preferring LZ4 compression over snappy (lz4 used to not be supported, but maybe is today, and is maybe faster?)\r\n- Use arrow filesystems by default when available",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1781585507/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1781592150",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1781592150",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1781592150,
        "node_id": "IC_kwDOAbcwm85qMPBW",
        "user": {
            "login": "phofl",
            "id": 61934744,
            "node_id": "MDQ6VXNlcjYxOTM0NzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61934744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phofl",
            "html_url": "https://github.com/phofl",
            "followers_url": "https://api.github.com/users/phofl/followers",
            "following_url": "https://api.github.com/users/phofl/following{/other_user}",
            "gists_url": "https://api.github.com/users/phofl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phofl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phofl/subscriptions",
            "organizations_url": "https://api.github.com/users/phofl/orgs",
            "repos_url": "https://api.github.com/users/phofl/repos",
            "events_url": "https://api.github.com/users/phofl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phofl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-26T18:06:06Z",
        "updated_at": "2023-10-26T18:06:06Z",
        "author_association": "MEMBER",
        "body": "Having a smaller environment because you don\u2019t have to install arrow is the main benefit of fastparquet as far as I am aware of. Pandas will require arrow as a dependency starting with the 3.0 release if there aren\u2019t any unexpected developments. This would render the environment size argument irrelevant ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1781592150/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1781594836",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1781594836",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1781594836,
        "node_id": "IC_kwDOAbcwm85qMPrU",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-26T18:08:02Z",
        "updated_at": "2023-10-26T18:08:02Z",
        "author_association": "MEMBER",
        "body": "There are likely other benefits to fastparquet, but mostly I just want one system rather than having to support many systems and while I like fastparquet, I like pyarrow marginally more.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1781594836/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1782492557",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1782492557",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1782492557,
        "node_id": "IC_kwDOAbcwm85qPq2N",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-27T08:14:21Z",
        "updated_at": "2023-10-27T08:14:21Z",
        "author_association": "MEMBER",
        "body": "+1\r\n\r\nI think specializing on pyarrow will be the biggest benefit here that allows to cut complexity. \r\n\r\nAdditionally, I would like us to review closely how we want to deal with files and rowgroups and the collection of statistics. \r\n\r\nI'm very strongly biased to not collect statistics of the entire dataset automatically (if ever) but I appreciate that there are use cases where we have to deal with parquet metadata. I would like us to revisit the existing logic and invest time in reproducers that support the features we are offering and allow us to run tests for them.\r\n\r\nRe: single-file-effort. I believe this is something that we also have to review a little more closely. Especially with the introduction of `FusedIO` in `dask-expr` there are significant optimizations available when treating multiple files in a batch (pre-fetching IO, for instance). pyarrow implements these capabilities transparently to a certain degree.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1782492557/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1782792542",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1782792542",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1782792542,
        "node_id": "IC_kwDOAbcwm85qQ0Fe",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-27T11:59:02Z",
        "updated_at": "2023-10-27T11:59:02Z",
        "author_association": "MEMBER",
        "body": "I'm going to take some time this morning and prototype a very simple implementation.  If it works I'll use it for TPC-H.  We'll see how far I get.  I give it a 50/50 chance that I give up because it's too complex.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1782792542/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1782952324",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1782952324",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1782952324,
        "node_id": "IC_kwDOAbcwm85qRbGE",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-27T13:48:32Z",
        "updated_at": "2023-10-27T13:48:32Z",
        "author_association": "MEMBER",
        "body": "https://github.com/dask-contrib/dask-expr/pull/373",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1782952324/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1787710776",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1787710776",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1787710776,
        "node_id": "IC_kwDOAbcwm85qjk04",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-31T17:55:35Z",
        "updated_at": "2023-10-31T17:55:35Z",
        "author_association": "MEMBER",
        "body": "Cool - Sorry, I saw [dask-contrib/dask-expr#373](https://github.com/dask-contrib/dask-expr/pull/373) but I missed this issue.\u2028\r\n\r\nI agree that we should simplify things in parquet land, and the best way to do this is to re-write things from scratch. The parquet-engine landscape is dramatically different than it was when the `Engine` system was first introduced - The PyArrow API and feature set has completely changed since then, and RAPIDS is pretty adaptable on the parquet front anyway.\r\n\r\nIf you want `dd.read_parquet` to support hive-partitioned datasets and produce reliably \u201cgood\u201d partition sizes, you will end up with a lot of the same bells and whistles that exist now, but you will have the opportunity to organize things in a way that makes sense for the current PyArrow API.  Also, now that we have dask-Expr in the mix, the partition-size issue can probably be re-cast as an optimization pass instead of `read_parquet` arguments. \r\n\r\n*Somewhat related thoughts*: I realize that you are not personally concerned about dask-cudf/rapids - I think that is **okay** if we can find a way to be smart about \u201cdispatching\u201d `Expr` classes in Dask-Expr (e.g. some variation or better alternative to https://github.com/dask-contrib/dask-expr/pull/321). If downstream projects have some way to replace specific `Expr` definitions that don\u2019t suit then, then we can probably avoid the kinds of tech debt that the `Engine` design has caused in the past.  One possible outcome is that we use Dask-Expr to start stripping out unnecessary backend/compute dispatching logic in favor of a lower-maintenance coarse-grained dispatching approach.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1787710776/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1788044763",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1788044763",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1788044763,
        "node_id": "IC_kwDOAbcwm85qk2Xb",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-31T21:14:36Z",
        "updated_at": "2023-10-31T21:14:36Z",
        "author_association": "MEMBER",
        "body": "Yeah, I'm hoping that we can defer a lot of the fancy parquet logic to Arrow.  ParquetDataset has a lot of stuff like hive partitioning, yes?\r\n\r\nMostly I want to avoid a situation where things get sufficiently complex that people stop maintaining them.  This seems to be what happened with parquet.  We all knew that it was a trainwreck, but no one wanted to spend the time to make it good.  \r\n\r\nIf there is a plan that makes things easy for others to extend and that doesn't make life harder for folks maintaining the core then I have no objection.  ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1788044763/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1788114051",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1788114051",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1788114051,
        "node_id": "IC_kwDOAbcwm85qlHSD",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-31T22:19:08Z",
        "updated_at": "2023-10-31T22:21:04Z",
        "author_association": "MEMBER",
        "body": ">I'm hoping that we can defer a lot of the fancy parquet logic to Arrow. ParquetDataset has a lot of stuff like hive partitioning, yes?\r\n\r\nYes, I completely agree that we should defer as much as possible PyArrow. The PyArrow feature set is probably ready to take the reins.\r\n\r\n>We all knew that it was a trainwreck, but no one wanted to spend the time to make it good.\r\n\r\nYes, it is a mess, but I don't think it is completely a question of time or effort. I'm pretty sure people have just been afraid of breaking the complicated PyArrow/FastParquet/Dask-cuDF/Dask-GeoPandas/etc API contract that was designed at a time when Dask **needed** to implement most of the ugly dataset parsing/planning logic. We were obviously trying to do something \"good\" by building a pluggable `read_parquet` architecture, but the original goal has proven impractical over time.\r\n\r\n>If there is a plan that makes things easy for others to extend and that doesn't make life harder for folks maintaining the core then I have no objection.\r\n\r\nThat's good to hear. I'm also pretty motivated to minimize maintenance burden.\r\n\r\nNote: It may also be valuable to define simple `Expr` templates for custom IO Expressions (similar to the way `from_map` makes it relatively easy to implement custom IO solutions in `dask.dataframe`). It seems ideal to focus on a simple/performant API and to make it easy for power-users to implement their own custom logic when they need it.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1788114051/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1788158882",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1788158882",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1788158882,
        "node_id": "IC_kwDOAbcwm85qlSOi",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-31T23:10:14Z",
        "updated_at": "2023-10-31T23:10:14Z",
        "author_association": "MEMBER",
        "body": "> Note: It may also be valuable to define simple Expr templates for custom IO Expressions (similar to the way from_map makes it relatively easy to implement custom IO solutions in dask.dataframe). It seems ideal to focus on a simple/performant API and to make it easy for power-users to implement their own custom logic when they need it\r\n\r\nAs a heads-up, I'll likely be far more nervous / hesitant around reworking things into a complex hierarchy.  You should probably expect a lot more friction and demands for design docs ahead of time for anything like this.  I'm likely going to push to keep things very flat and simple.  ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1788158882/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1788187177",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1788187177",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1788187177,
        "node_id": "IC_kwDOAbcwm85qlZIp",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-31T23:49:26Z",
        "updated_at": "2023-10-31T23:49:26Z",
        "author_association": "MEMBER",
        "body": "Hmm. That was not a suggestion for any kind of hierarchy at all, so not sure I understand. Either way, I hear you.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1788187177/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1804194880",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1804194880",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1804194880,
        "node_id": "IC_kwDOAbcwm85ridRA",
        "user": {
            "login": "mfenner1",
            "id": 913036,
            "node_id": "MDQ6VXNlcjkxMzAzNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/913036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mfenner1",
            "html_url": "https://github.com/mfenner1",
            "followers_url": "https://api.github.com/users/mfenner1/followers",
            "following_url": "https://api.github.com/users/mfenner1/following{/other_user}",
            "gists_url": "https://api.github.com/users/mfenner1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mfenner1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mfenner1/subscriptions",
            "organizations_url": "https://api.github.com/users/mfenner1/orgs",
            "repos_url": "https://api.github.com/users/mfenner1/repos",
            "events_url": "https://api.github.com/users/mfenner1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mfenner1/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-09T16:51:22Z",
        "updated_at": "2023-11-09T16:51:22Z",
        "author_association": "NONE",
        "body": "I'd like to comment that if the current parquet code is going to be in \"flux\" and if the current system isn't really solid/maintained/maintainable, then maybe the advice/best practice of using Parquet (https://docs.dask.org/en/latest/dataframe-best-practices.html#use-parquet) should be (temporarily) removed until a more workable Parquet system is in place.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1804194880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1805289168",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1805289168",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1805289168,
        "node_id": "IC_kwDOAbcwm85rmobQ",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-10T08:22:01Z",
        "updated_at": "2023-11-10T08:22:53Z",
        "author_association": "MEMBER",
        "body": "> \" and if the current system isn't really solid/maintained/maintainable, then maybe the advice/best practice of using Parquet\r\n\r\nThanks for raising this concern. I believe the API as is is not in flux and it is usable and maintained. It is difficult to maintain and our development velocity is suffering from complexity so we're considering a rewrite.\r\n\r\nWe haven't made a final decision on how exactly to proceed with this but we will make sure that the transition will be as smooth as possible for users. The one recommendation I can give right now is to stay clear of the already deprecated features that are already raising warnings. They will certainly cease to exist.\r\n\r\nEven with all it's flaws in the current implementation, parquet is still far superior to other storage formats for tabular data and this advice in the documentation is still very accurate. \r\nThis issue should not scare you away from using parquet but rather encourage you to use it because it will get even better down the road.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1805289168/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1864791144",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1864791144",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1864791144,
        "node_id": "IC_kwDOAbcwm85vJnRo",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-12-20T16:35:43Z",
        "updated_at": "2023-12-20T16:35:43Z",
        "author_association": "MEMBER",
        "body": "@fjetter I'm curious about plans here.  As I think through docs and Dask messaging there's a bunch of stuff I want to say about Dask and Spark and performance and my guess is that we'll need to address this before we can say good things there with any strength.  I know that this topic isn't top of mind for you right now, but I'd like to align on roughly when something like a performant parquet system might arise.  No immediate timing pressure on this, but I'd certainly like to align on this, say, early in 2024.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1864791144/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1864835517",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1864835517",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1864835517,
        "node_id": "IC_kwDOAbcwm85vJyG9",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-12-20T17:06:10Z",
        "updated_at": "2023-12-20T17:06:10Z",
        "author_association": "MEMBER",
        "body": "In terms of prioritization I consider getting dask-expr into main dask the most important thing right now. There is still a lot of uncertainty so nobody is working on parquet right now. I hope that the dust settles towards end of January such that we gain more confidence about dask-expr and we can pick parquet up again. So, my best guess is end of Q1",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1864835517/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1864930646",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1864930646",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1864930646,
        "node_id": "IC_kwDOAbcwm85vKJVW",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-12-20T18:21:09Z",
        "updated_at": "2023-12-20T18:21:09Z",
        "author_association": "MEMBER",
        "body": "Just a note that [I have started experimenting](https://gist.github.com/rjzamora/2c55d7e1c614b7df8f27dd92205a43fa) with better ways to handle options like `blocksize` in the \"future\" `read_parquet` implementation. Florian has made the point several times that we shouldn't ever need to parse all the parquet metadata/statistics up-front, and I completely agree with him. \r\n\r\nMy assumption is that Coiled wants to take ownership of the parquet reboot. That would be welcome on my end, but I'm also happy to help and engage wherever it would be useful.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1864930646/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1864952441",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1864952441",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1864952441,
        "node_id": "IC_kwDOAbcwm85vKOp5",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-12-20T18:31:36Z",
        "updated_at": "2023-12-20T18:31:36Z",
        "author_association": "MEMBER",
        "body": "To be clear, anyone is welcome to propose changes / reinventions of\r\nParquet.  We'll eventually take responsibility here assuming no one else\r\ndoes (which is our current assumption to be safe).\r\n\r\nOn Wed, Dec 20, 2023 at 10:21\u202fAM Richard (Rick) Zamora <\r\n***@***.***> wrote:\r\n\r\n> Just a note that I have started experimenting\r\n> <https://gist.github.com/rjzamora/2c55d7e1c614b7df8f27dd92205a43fa> with\r\n> better ways to handle options like blocksize in the \"future\" read_parquet\r\n> implementation. Florian has made the point several times that we shouldn't\r\n> ever need to parse all the parquet metadata/statistics up-front, and I\r\n> completely agree with him.\r\n>\r\n> My assumption is that Coiled wants to take ownership of the parquet\r\n> reboot. That would be welcome on my end, but I'm also happy to help and\r\n> engage wherever it would be useful.\r\n>\r\n> \u2014\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/dask/dask/issues/10602#issuecomment-1864930646>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AACKZTAPQ67LFYHB5SN65T3YKMUCBAVCNFSM6AAAAAA6RTLYZKVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNRUHEZTANRUGY>\r\n> .\r\n> You are receiving this because you authored the thread.Message ID:\r\n> ***@***.***>\r\n>\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1864952441/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1895873966",
        "html_url": "https://github.com/dask/dask/issues/10602#issuecomment-1895873966",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10602",
        "id": 1895873966,
        "node_id": "IC_kwDOAbcwm85xAL2u",
        "user": {
            "login": "phofl",
            "id": 61934744,
            "node_id": "MDQ6VXNlcjYxOTM0NzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61934744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phofl",
            "html_url": "https://github.com/phofl",
            "followers_url": "https://api.github.com/users/phofl/followers",
            "following_url": "https://api.github.com/users/phofl/following{/other_user}",
            "gists_url": "https://api.github.com/users/phofl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phofl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phofl/subscriptions",
            "organizations_url": "https://api.github.com/users/phofl/orgs",
            "repos_url": "https://api.github.com/users/phofl/repos",
            "events_url": "https://api.github.com/users/phofl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phofl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-17T14:01:31Z",
        "updated_at": "2024-01-17T14:01:31Z",
        "author_association": "MEMBER",
        "body": "> Probably we need to maintain a filesystem= keyword in case someone has an odd filesystem and needs to use fsspec, but this would be the exception I think\r\n\r\nJust found out that arrow doesn't support azure blob storage, so that' a good argument to keep the filesystem keyword",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1895873966/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]