[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1018917491",
        "html_url": "https://github.com/dask/dask/issues/8585#issuecomment-1018917491",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8585",
        "id": 1018917491,
        "node_id": "IC_kwDOAbcwm848u3Jz",
        "user": {
            "login": "ian-r-rose",
            "id": 5728311,
            "node_id": "MDQ6VXNlcjU3MjgzMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5728311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ian-r-rose",
            "html_url": "https://github.com/ian-r-rose",
            "followers_url": "https://api.github.com/users/ian-r-rose/followers",
            "following_url": "https://api.github.com/users/ian-r-rose/following{/other_user}",
            "gists_url": "https://api.github.com/users/ian-r-rose/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ian-r-rose/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ian-r-rose/subscriptions",
            "organizations_url": "https://api.github.com/users/ian-r-rose/orgs",
            "repos_url": "https://api.github.com/users/ian-r-rose/repos",
            "events_url": "https://api.github.com/users/ian-r-rose/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ian-r-rose/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-21T22:42:38Z",
        "updated_at": "2022-01-21T22:42:38Z",
        "author_association": "MEMBER",
        "body": "I think making `meta` a public attribute is a good idea. It's already part of the public API in a number of places (various `map` and `apply` function args), and having it be private on a collection is kind of weird. In particular, I would love to be able to explicitly say: \"this map operation doesn't change the shape/dtype\", which today looks something like (AFAIK):\r\n```python\r\nimport dask.array as da\r\n\r\nx = da.ones((100, 100), chunks=(10,10))\r\n\r\ndef double(arr):\r\n    return arr * 2.0\r\n\r\nx.map_blocks(double, meta = x._meta)  # private attribute access to indicate no change!\r\n```\r\n\r\n> * add public methods for setting/getting meta.\r\n\r\nMaybe just a getter? I'd still think we mostly don't want users messing with it unless we are in one of the `map`/`apply` situations.\r\n\r\n> * add meta as a kwarg on all functions so people can optionally specify what their output looks like\r\n\r\nMany functions probably don't need it, I'd imagine, since Dask can figure it out based on the last `meta`. Or do I misunderstand what you mean? Are there any current functions that don't have it but should?\r\n\r\n> * improve error messages so that issues that come up are less cryptic, this will often look like suggesting that users pass meta in as a kwarg.\r\n\r\nBig +1",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1018917491/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1020335732",
        "html_url": "https://github.com/dask/dask/issues/8585#issuecomment-1020335732",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8585",
        "id": 1020335732,
        "node_id": "IC_kwDOAbcwm8480RZ0",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-24T17:10:12Z",
        "updated_at": "2022-01-24T17:13:43Z",
        "author_association": "MEMBER",
        "body": "Thanks for engaging with this Ian! I should have put in the original post that I was talking this came up in conversations with @gjoseph92. I think it was his idea to emphasize the potential positive impact on error messages :)\r\n\r\n>> * add public methods for setting/getting meta.\r\n>\r\n>Maybe just a getter? I'd still think we mostly don't want users messing with it unless we are in one of the `map`/`apply` situations.\r\n\r\nThe setter could do some validation on set like we do for setting `divisions` but it seems like a potentially valuable thing to let the user explicitly control `meta`.\r\n\r\n>> * add meta as a kwarg on all functions so people can optionally specify what their output looks like\r\n>\r\n>Many functions probably don't need it, I'd imagine, since Dask can figure it out based on the last `meta`. Or do I misunderstand what you mean? Are there any current functions that don't have it but should?\r\n\r\nI think that anytime there is a method that outputs a dataframe, it is potentially useful to be able to override the meta. Not that we should force people to provide it like we do for `map_partitions` but it would be useful in:\r\nhttps://github.com/dask/dask/issues/8579 for instance to be able to do:\r\n\r\n```python\r\nddf[\"value\"].add(ddf[\"arrays\"], meta=...)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1020335732/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]