{
    "url": "https://api.github.com/repos/dask/dask/issues/9946",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9946/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9946/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9946/events",
    "html_url": "https://github.com/dask/dask/issues/9946",
    "id": 1582708081,
    "node_id": "I_kwDOAbcwm85eVjVx",
    "number": 9946,
    "title": "Make `pyarrow` strings easy to use",
    "user": {
        "login": "jrbourbeau",
        "id": 11656932,
        "node_id": "MDQ6VXNlcjExNjU2OTMy",
        "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrbourbeau",
        "html_url": "https://github.com/jrbourbeau",
        "followers_url": "https://api.github.com/users/jrbourbeau/followers",
        "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
        "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
        "repos_url": "https://api.github.com/users/jrbourbeau/repos",
        "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 365513534,
            "node_id": "MDU6TGFiZWwzNjU1MTM1MzQ=",
            "url": "https://api.github.com/repos/dask/dask/labels/io",
            "name": "io",
            "color": "6f871c",
            "default": false,
            "description": ""
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3798450420,
            "node_id": "LA_kwDOAbcwm87iZ8D0",
            "url": "https://api.github.com/repos/dask/dask/labels/feature",
            "name": "feature",
            "color": "b0f0fa",
            "default": false,
            "description": "Something is missing"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2023-02-13T16:50:44Z",
    "updated_at": "2024-03-11T01:45:00Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "This is similar to https://github.com/dask/dask/issues/9879, but smaller in scope.\r\n\r\n## Motivation \r\n\r\nWe've seen several cases where using `pyarrow` strings for text data have significant memory usage / computation performance improvements (xref https://github.com/dask/dask/issues/9631, https://github.com/dask/community/issues/301). We should make it easy for users to use utilize this performant data type. \r\n\r\n## Proposal\r\n\r\nI'll propose we add a config option users can set to automatically convert `object` and `string[python]` data that's encountered to `string[pyarrow]`. We'll want this to work with all methods for creating dask `DataFrame`s. That is, things like the following\r\n\r\n```python\r\nimport dask\r\nimport dask.dataframe as dd\r\n\r\n# Tell dask to use `pyarrow`-strings for object dtypes\r\ndask.config.set({\"dataframe.object_as_pyarrow_string\": True})  # Suggestions for a better name are welcome! \r\n\r\ndf = dd.read_parquet(...)\r\ndf = dd.read_csv(...)\r\ndf = dd.from_pandas(...)\r\ndf = dd.from_delayed(...)\r\n...\r\n```\r\n\r\nshould all return dask `DataFrame`s that use `string[pyarrow]` appropriately. \r\n\r\nFor some methods, like `read_parquet`, we'll want to have a specialized implementation as they'll be able to efficiently read data directly into `string[pyarrow]`. However, in cases where a specialized method isn't implemented, we should still automatically cast the dask `DataFrame` to use `string[pyarrow]` when the config option is set. For example, through an `map_partitions` call after our existing `DataFrame` creation logic.\r\n\r\n## Steps\r\n\r\nSteps that I think make sense here are:\r\n\r\n- [x] Add a config option that automatically converts to `string[pyarrow]` dtype where appropriate (see https://github.com/dask/dask/pull/9926) \r\n- [x] Add specialized implementation for `dd.read_parquet` (see https://github.com/dask/dask/pull/9979) \r\n- [x] Add a CI job with the new config option turned on (see https://github.com/dask/dask/pull/10017) \r\n- [ ] Fix all test failures in the new CI job\r\n- [ ] Add documentation\r\n- [ ] (Optional) Make it easy to always use performant `string[pyarrow]` (e.g. emit a performance warning when using text data without `string[pyarrow]`, turn the config option on by default, etc).\r\n\r\n## Notes\r\n\r\nSee https://github.com/dask/dask/pull/9926 where I'm taking an initial pass at adding the config option. \r\n\r\ncc @rjzamora @quasiben @j-bennet @phofl for visibility ",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9946/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9946/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}