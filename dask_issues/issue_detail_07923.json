{
    "url": "https://api.github.com/repos/dask/dask/issues/7923",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/7923/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/7923/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/7923/events",
    "html_url": "https://github.com/dask/dask/issues/7923",
    "id": 950191751,
    "node_id": "MDU6SXNzdWU5NTAxOTE3NTE=",
    "number": 7923,
    "title": "Binops between `dd.Series` and NumPy arrays fail while inferring meta",
    "user": {
        "login": "gjoseph92",
        "id": 3309802,
        "node_id": "MDQ6VXNlcjMzMDk4MDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3309802?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gjoseph92",
        "html_url": "https://github.com/gjoseph92",
        "followers_url": "https://api.github.com/users/gjoseph92/followers",
        "following_url": "https://api.github.com/users/gjoseph92/following{/other_user}",
        "gists_url": "https://api.github.com/users/gjoseph92/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gjoseph92/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gjoseph92/subscriptions",
        "organizations_url": "https://api.github.com/users/gjoseph92/orgs",
        "repos_url": "https://api.github.com/users/gjoseph92/repos",
        "events_url": "https://api.github.com/users/gjoseph92/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gjoseph92/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 242862305,
            "node_id": "MDU6TGFiZWwyNDI4NjIzMDU=",
            "url": "https://api.github.com/repos/dask/dask/labels/array",
            "name": "array",
            "color": "006b75",
            "default": false,
            "description": null
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-07-21T23:55:01Z",
    "updated_at": "2021-10-14T08:16:26Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport dask.dataframe as dd\r\nimport numpy as np\r\n\r\narr = np.arange(10)\r\nseries = dd.from_array(arr)\r\nseries + arr\r\n```\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n~/dev/dask/dask/dataframe/utils.py in raise_on_meta_error(funcname, udf)\r\n    175     try:\r\n--> 176         yield\r\n    177     except Exception as e:\r\n\r\n~/dev/dask/dask/dataframe/core.py in elemwise(op, *args, **kwargs)\r\n   5332         with raise_on_meta_error(funcname(op)):\r\n-> 5333             meta = partial_by_order(*parts, function=op, other=other)\r\n   5334 \r\n\r\n~/dev/dask/dask/utils.py in partial_by_order(*args, **kwargs)\r\n   1169         args2.insert(i, arg)\r\n-> 1170     return function(*args2, **kwargs)\r\n   1171 \r\n\r\n~/miniconda3/envs/dask-dev/lib/python3.8/site-packages/pandas/core/ops/common.py in new_method(self, other)\r\n     64 \r\n---> 65         return method(self, other)\r\n     66 \r\n\r\n~/miniconda3/envs/dask-dev/lib/python3.8/site-packages/pandas/core/ops/__init__.py in wrapper(left, right)\r\n    342         rvalues = extract_array(right, extract_numpy=True)\r\n--> 343         result = arithmetic_op(lvalues, rvalues, op)\r\n    344 \r\n\r\n~/miniconda3/envs/dask-dev/lib/python3.8/site-packages/pandas/core/ops/array_ops.py in arithmetic_op(left, right, op)\r\n    189         with np.errstate(all=\"ignore\"):\r\n--> 190             res_values = na_arithmetic_op(lvalues, rvalues, op)\r\n    191 \r\n\r\n~/miniconda3/envs/dask-dev/lib/python3.8/site-packages/pandas/core/ops/array_ops.py in na_arithmetic_op(left, right, op, is_cmp)\r\n    142     try:\r\n--> 143         result = expressions.evaluate(op, left, right)\r\n    144     except TypeError:\r\n\r\n~/miniconda3/envs/dask-dev/lib/python3.8/site-packages/pandas/core/computation/expressions.py in evaluate(op, a, b, use_numexpr)\r\n    232         if use_numexpr:\r\n--> 233             return _evaluate(op, op_str, a, b)  # type: ignore\r\n    234     return _evaluate_standard(op, op_str, a, b)\r\n\r\n~/miniconda3/envs/dask-dev/lib/python3.8/site-packages/pandas/core/computation/expressions.py in _evaluate_standard(op, op_str, a, b)\r\n     67     with np.errstate(all=\"ignore\"):\r\n---> 68         return op(a, b)\r\n     69 \r\n\r\nValueError: operands could not be broadcast together with shapes (2,) (10,) \r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-7-cc129ab42671> in <module>\r\n----> 1 series + arr\r\n\r\n~/dev/dask/dask/dataframe/core.py in <lambda>(self, other)\r\n   1561             return lambda self, other: elemwise(op, other, self)\r\n   1562         else:\r\n-> 1563             return lambda self, other: elemwise(op, self, other)\r\n   1564 \r\n   1565     def rolling(self, window, min_periods=None, center=False, win_type=None, axis=0):\r\n\r\n~/dev/dask/dask/dataframe/core.py in elemwise(op, *args, **kwargs)\r\n   5331         ]\r\n   5332         with raise_on_meta_error(funcname(op)):\r\n-> 5333             meta = partial_by_order(*parts, function=op, other=other)\r\n   5334 \r\n   5335     result = new_dd_object(graph, _name, meta, divisions)\r\n\r\n~/miniconda3/envs/dask-dev/lib/python3.8/contextlib.py in __exit__(self, type, value, traceback)\r\n    129                 value = type()\r\n    130             try:\r\n--> 131                 self.gen.throw(type, value, traceback)\r\n    132             except StopIteration as exc:\r\n    133                 # Suppress StopIteration *unless* it's the same exception that\r\n\r\n~/dev/dask/dask/dataframe/utils.py in raise_on_meta_error(funcname, udf)\r\n    195         )\r\n    196         msg = msg.format(\" in `{0}`\".format(funcname) if funcname else \"\", repr(e), tb)\r\n--> 197         raise ValueError(msg) from e\r\n    198 \r\n    199 \r\n\r\nValueError: Metadata inference failed in `add`.\r\n\r\nOriginal error is below:\r\n------------------------\r\nValueError('operands could not be broadcast together with shapes (2,) (10,) ')\r\n\r\nTraceback:\r\n---------\r\n  File \"/Users/gabe/dev/dask/dask/dataframe/utils.py\", line 176, in raise_on_meta_error\r\n    yield\r\n  File \"/Users/gabe/dev/dask/dask/dataframe/core.py\", line 5333, in elemwise\r\n    meta = partial_by_order(*parts, function=op, other=other)\r\n  File \"/Users/gabe/dev/dask/dask/utils.py\", line 1170, in partial_by_order\r\n    return function(*args2, **kwargs)\r\n  File \"/Users/gabe/miniconda3/envs/dask-dev/lib/python3.8/site-packages/pandas/core/ops/common.py\", line 65, in new_method\r\n    return method(self, other)\r\n  File \"/Users/gabe/miniconda3/envs/dask-dev/lib/python3.8/site-packages/pandas/core/ops/__init__.py\", line 343, in wrapper\r\n    result = arithmetic_op(lvalues, rvalues, op)\r\n  File \"/Users/gabe/miniconda3/envs/dask-dev/lib/python3.8/site-packages/pandas/core/ops/array_ops.py\", line 190, in arithmetic_op\r\n    res_values = na_arithmetic_op(lvalues, rvalues, op)\r\n  File \"/Users/gabe/miniconda3/envs/dask-dev/lib/python3.8/site-packages/pandas/core/ops/array_ops.py\", line 143, in na_arithmetic_op\r\n    result = expressions.evaluate(op, left, right)\r\n  File \"/Users/gabe/miniconda3/envs/dask-dev/lib/python3.8/site-packages/pandas/core/computation/expressions.py\", line 233, in evaluate\r\n    return _evaluate(op, op_str, a, b)  # type: ignore\r\n  File \"/Users/gabe/miniconda3/envs/dask-dev/lib/python3.8/site-packages/pandas/core/computation/expressions.py\", line 68, in _evaluate_standard\r\n    return op(a, b)\r\n```\r\n\r\n**Anything else we need to know?**:\r\n\r\nWe have a [`_maybe_from_pandas`](https://github.com/dask/dask/blob/56d1891c15320872b815f1ab2f8e41867b231e5e/dask/dataframe/core.py#L5264) coercion for the input arguments\u2014perhaps there should also be an equivalent `_maybe_from_array`? FWIW, this works as expected:\r\n```python\r\n>>> import dask.array as da\r\n>>> darr = da.from_array(arr)\r\n>>> series + darr\r\nDask Series Structure:\r\nnpartitions=1\r\n0    int64\r\n9      ...\r\ndtype: int64\r\nDask Name: add, 3 tasks\r\n```\r\nSo turning any arrays in the inputs into dask arrays might be sufficient.\r\n\r\n**Environment**:\r\n\r\n- Dask version: 56d1891c15320872b815f1ab2f8e41867b231e5e\r\n- Python version: 3.8.8\r\n- Operating System: macOS\r\n- Install method (conda, pip, source): source\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/7923/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/7923/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}