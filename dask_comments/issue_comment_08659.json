[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1032049254",
        "html_url": "https://github.com/dask/dask/pull/8659#issuecomment-1032049254",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8659",
        "id": 1032049254,
        "node_id": "IC_kwDOAbcwm849g9Jm",
        "user": {
            "login": "beckernick",
            "id": 8457388,
            "node_id": "MDQ6VXNlcjg0NTczODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beckernick",
            "html_url": "https://github.com/beckernick",
            "followers_url": "https://api.github.com/users/beckernick/followers",
            "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
            "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
            "organizations_url": "https://api.github.com/users/beckernick/orgs",
            "repos_url": "https://api.github.com/users/beckernick/repos",
            "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beckernick/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-07T23:37:04Z",
        "updated_at": "2022-02-07T23:37:04Z",
        "author_association": "MEMBER",
        "body": "rerun tests",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1032049254/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1033980812",
        "html_url": "https://github.com/dask/dask/pull/8659#issuecomment-1033980812",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8659",
        "id": 1033980812,
        "node_id": "IC_kwDOAbcwm849oUuM",
        "user": {
            "login": "scharlottej13",
            "id": 8620816,
            "node_id": "MDQ6VXNlcjg2MjA4MTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8620816?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scharlottej13",
            "html_url": "https://github.com/scharlottej13",
            "followers_url": "https://api.github.com/users/scharlottej13/followers",
            "following_url": "https://api.github.com/users/scharlottej13/following{/other_user}",
            "gists_url": "https://api.github.com/users/scharlottej13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scharlottej13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scharlottej13/subscriptions",
            "organizations_url": "https://api.github.com/users/scharlottej13/orgs",
            "repos_url": "https://api.github.com/users/scharlottej13/repos",
            "events_url": "https://api.github.com/users/scharlottej13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scharlottej13/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-09T16:57:10Z",
        "updated_at": "2022-02-09T16:57:10Z",
        "author_association": "MEMBER",
        "body": "@beckernick thanks for your work on this! Would you mind merging `main` and seeing if more of the CI tests will pass?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1033980812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1034230276",
        "html_url": "https://github.com/dask/dask/pull/8659#issuecomment-1034230276",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8659",
        "id": 1034230276,
        "node_id": "IC_kwDOAbcwm849pRoE",
        "user": {
            "login": "beckernick",
            "id": 8457388,
            "node_id": "MDQ6VXNlcjg0NTczODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beckernick",
            "html_url": "https://github.com/beckernick",
            "followers_url": "https://api.github.com/users/beckernick/followers",
            "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
            "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
            "organizations_url": "https://api.github.com/users/beckernick/orgs",
            "repos_url": "https://api.github.com/users/beckernick/repos",
            "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beckernick/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-09T21:57:25Z",
        "updated_at": "2022-02-09T21:57:25Z",
        "author_association": "MEMBER",
        "body": "Done, thanks for the bump.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1034230276/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1034295497",
        "html_url": "https://github.com/dask/dask/pull/8659#issuecomment-1034295497",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8659",
        "id": 1034295497,
        "node_id": "IC_kwDOAbcwm849phjJ",
        "user": {
            "login": "beckernick",
            "id": 8457388,
            "node_id": "MDQ6VXNlcjg0NTczODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beckernick",
            "html_url": "https://github.com/beckernick",
            "followers_url": "https://api.github.com/users/beckernick/followers",
            "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
            "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
            "organizations_url": "https://api.github.com/users/beckernick/orgs",
            "repos_url": "https://api.github.com/users/beckernick/repos",
            "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beckernick/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-09T23:11:25Z",
        "updated_at": "2022-02-09T23:17:48Z",
        "author_association": "MEMBER",
        "body": "I see some test failures in test_parquet.py. Are any of the parquet tests known to be flaky, or should I look into any unexpected interaction with this PR?\r\n\r\nI also see test failures on groupby.rank that I wasn't able to reproduce locally. Perhaps it's because I'm using Python 3.9 locally (the 3.9 tests passed, but 3.7/8 saw some failures)? Will update my local environment in case any other dependencies have changed.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1034295497/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1034318261",
        "html_url": "https://github.com/dask/dask/pull/8659#issuecomment-1034318261",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8659",
        "id": 1034318261,
        "node_id": "IC_kwDOAbcwm849pnG1",
        "user": {
            "login": "beckernick",
            "id": 8457388,
            "node_id": "MDQ6VXNlcjg0NTczODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beckernick",
            "html_url": "https://github.com/beckernick",
            "followers_url": "https://api.github.com/users/beckernick/followers",
            "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
            "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
            "organizations_url": "https://api.github.com/users/beckernick/orgs",
            "repos_url": "https://api.github.com/users/beckernick/repos",
            "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beckernick/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-09T23:40:15Z",
        "updated_at": "2022-02-09T23:43:58Z",
        "author_association": "MEMBER",
        "body": "Test failures appear tied to the version of pandas. The Python 3.9 environment uses pandas 1.4, in which groupby.rank behaves differently than in prior versions.  The 3.8 environment uses 1.2.5 and 3.7 uses 1.0.5.\r\n\r\n[This](https://github.com/pandas-dev/pandas/issues/40518) pandas bug that was fixed in 1.3 may be the root cause. When I upgrade pandas from 1.2.5 to 1.3 in the environment from `environment-3.8.yaml` and `environment-3.7.yaml`, all groupby.rank tests pass locally. This is consistent with seeing some tests fail in < Python 3.9 in CI.\r\n\r\nIs there a protocol for how this kind of scenario is handled in Dask? If there is a preferred approach, happy to execute it.\r\n\r\n```\r\npytest dask/dataframe/tests/test_groupby.py -k rank -x\r\n========================================================================== test session starts ==========================================================================\r\nplatform linux -- Python 3.7.12, pytest-7.0.0, pluggy-1.0.0 -- /home/nicholasb/conda/envs/dask-dev-py37/bin/python\r\ncachedir: .pytest_cache\r\nrootdir: /raid/nicholasb/dev/dask, configfile: setup.cfg\r\nplugins: cov-3.0.0, forked-1.4.0, rerunfailures-10.2, xdist-2.5.0\r\ncollected 1634 items / 1590 deselected / 44 selected\r\n\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-0-False-keep-True-average-3] PASSED                                                        [  2%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-0-False-keep-True-dense-3] PASSED                                                          [  4%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-0-False-keep-False-average-3] PASSED                                                       [  6%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-0-False-keep-False-dense-3] PASSED                                                         [  9%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-0-True-keep-True-average-3] PASSED                                                         [ 11%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-0-True-keep-True-dense-3] PASSED                                                           [ 13%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-0-True-keep-False-average-3] PASSED                                                        [ 15%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-0-True-keep-False-dense-3] PASSED                                                          [ 18%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-False-keep-True-average-3] PASSED                                                        [ 20%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-False-keep-True-dense-3] PASSED                                                          [ 22%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-False-keep-False-average-3] PASSED                                                       [ 25%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-False-keep-False-dense-3] PASSED                                                         [ 27%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-True-keep-True-average-3] PASSED                                                         [ 29%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-True-keep-True-dense-3] PASSED                                                           [ 31%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-True-keep-False-average-3] PASSED                                                        [ 34%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-True-keep-False-dense-3] PASSED                                                          [ 36%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-0-False-keep-True-average-3] PASSED                                                       [ 38%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-0-False-keep-True-dense-3] PASSED                                                         [ 40%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-0-False-keep-False-average-3] PASSED                                                      [ 43%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-0-False-keep-False-dense-3] PASSED                                                        [ 45%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-0-True-keep-True-average-3] PASSED                                                        [ 47%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-0-True-keep-True-dense-3] PASSED                                                          [ 50%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-0-True-keep-False-average-3] PASSED                                                       [ 52%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-0-True-keep-False-dense-3] PASSED                                                         [ 54%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-1-False-keep-True-average-3] PASSED                                                       [ 56%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-1-False-keep-True-dense-3] PASSED                                                         [ 59%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-1-False-keep-False-average-3] PASSED                                                      [ 61%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-1-False-keep-False-dense-3] PASSED                                                        [ 63%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-1-True-keep-True-average-3] PASSED                                                        [ 65%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-1-True-keep-True-dense-3] PASSED                                                          [ 68%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-1-True-keep-False-average-3] PASSED                                                       [ 70%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[tasks-1-True-keep-False-dense-3] PASSED                                                         [ 72%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_series[disk-False-average-2] PASSED                                                                       [ 75%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_series[disk-False-dense-2] PASSED                                                                         [ 77%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_series[disk-True-average-2] PASSED                                                                        [ 79%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_series[disk-True-dense-2] PASSED                                                                          [ 81%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_series[tasks-False-average-2] PASSED                                                                      [ 84%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_series[tasks-False-dense-2] PASSED                                                                        [ 86%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_series[tasks-True-average-2] PASSED                                                                       [ 88%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_series[tasks-True-dense-2] PASSED                                                                         [ 90%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_empty_partition[disk-dense] PASSED                                                                        [ 93%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_rank_empty_partition[tasks-dense] PASSED                                                                       [ 95%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_transform_funcs[disk-rank] PASSED                                                                              [ 97%]\r\ndask/dataframe/tests/test_groupby.py::test_groupby_transform_funcs[tasks-rank] PASSED                                                                             [100%]\r\n\r\n========================================================================= slowest 10 durations ==========================================================================\r\n0.19s call     dask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-0-False-keep-True-average-3]\r\n0.13s call     dask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-True-keep-False-dense-3]\r\n0.13s call     dask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-False-keep-True-average-3]\r\n0.12s call     dask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-True-keep-True-dense-3]\r\n0.12s call     dask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-False-keep-True-dense-3]\r\n0.12s call     dask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-True-keep-False-average-3]\r\n0.12s call     dask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-True-keep-True-average-3]\r\n0.12s call     dask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-False-keep-False-dense-3]\r\n0.12s call     dask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-1-False-keep-False-average-3]\r\n0.12s call     dask/dataframe/tests/test_groupby.py::test_groupby_rank_dataframe[disk-0-True-keep-True-average-3]\r\n================================================================== 44 passed, 1590 deselected in 4.99s =\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1034318261/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1035321331",
        "html_url": "https://github.com/dask/dask/pull/8659#issuecomment-1035321331",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8659",
        "id": 1035321331,
        "node_id": "IC_kwDOAbcwm849tb_z",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-10T18:43:05Z",
        "updated_at": "2022-02-10T18:43:05Z",
        "author_association": "MEMBER",
        "body": "Hey @beckernick thanks for commenting here. There are definitely some expected failures on the windows 3.7 build so you can safely ignore those. I think for this new fucntionality it would be totally fine to say it's only supported for pandas >=1.3 and just raise an error when trying to use it with older pandas. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1035321331/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1037266953",
        "html_url": "https://github.com/dask/dask/pull/8659#issuecomment-1037266953",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8659",
        "id": 1037266953,
        "node_id": "IC_kwDOAbcwm84903AJ",
        "user": {
            "login": "beckernick",
            "id": 8457388,
            "node_id": "MDQ6VXNlcjg0NTczODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beckernick",
            "html_url": "https://github.com/beckernick",
            "followers_url": "https://api.github.com/users/beckernick/followers",
            "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
            "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
            "organizations_url": "https://api.github.com/users/beckernick/orgs",
            "repos_url": "https://api.github.com/users/beckernick/repos",
            "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beckernick/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-12T15:56:15Z",
        "updated_at": "2022-02-14T16:33:12Z",
        "author_association": "MEMBER",
        "body": "I've been thinking about this a bit more, and I've arrived a question that I think applies to this PR and also the already implemented `groupby.{shift, transform, apply}` (though is perhaps less significant for `apply`).\r\n\r\nUsing shift as an example, a common desired use cases for groupby.shift is to calculate within-group lagged values and assign the result to a new column in the original dataframe (or copy of it)\r\n\r\nAs written, the approach of hash partition + within group reduction can either fail silently or loudly if there isn't explicit alignment enforced between the original frame and the result of the groupby.shift operation.\r\n\r\nFor example:\r\n\r\nSilent failure (incorrect results)\r\n```python\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\n\u200b\r\ndf = pd.DataFrame({\r\n    \"a\":[0,0,0,1,1,1,1],\r\n    \"b\":[10,3,3,5,5,4,2]\r\n})\r\nddf = dd.from_pandas(df, 2).reset_index(drop=True)\r\nddf[\"lagged\"] = ddf.groupby(\"a\").b.shift(meta=ddf.b)\r\nprint(ddf.compute())\r\n   a   b  lagged\r\n0  0  10     NaN\r\n1  0   3     5.0\r\n2  0   3     4.0\r\n3  1   5     2.0\r\n0  1   5     NaN\r\n1  1   4    10.0\r\n2  1   2     3.0\r\n```\r\n\r\nLoud failure:\r\n```python\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\n\u200b\r\ndf = pd.DataFrame({\r\n    \"a\":[0,0,0,1,1,1,1],\r\n    \"b\":[10,3,3,5,5,4,2]\r\n})\r\nddf = dd.from_pandas(df, 2) #.reset_index(drop=True)\r\nddf[\"lagged\"] = ddf.groupby(\"a\").b.shift(meta=ddf.b)\r\nprint(ddf.compute())\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nInput In [76], in <module>\r\n      4 df = pd.DataFrame({\r\n      5     \"a\":[0,0,0,1,1,1,1],\r\n      6     \"b\":[10,3,3,5,5,4,2]\r\n      7 })\r\n      8 ddf = dd.from_pandas(df, 2) #.reset_index(drop=True)\r\n----> 9 ddf[\"lagged\"] = ddf.groupby(\"a\").b.shift(meta=ddf.b)\r\n     10 print(ddf.compute())\r\n\r\nFile ~/conda/envs/dask-sql/lib/python3.8/site-packages/dask/dataframe/core.py:4264, in DataFrame.__setitem__(self, key, value)\r\n   4262     raise NotImplementedError(f\"Item assignment with {type(key)} not supported\")\r\n   4263 else:\r\n-> 4264     df = self.assign(**{key: value})\r\n   4266 self.dask = df.dask\r\n   4267 self._name = df._name\r\n\r\nFile ~/conda/envs/dask-sql/lib/python3.8/site-packages/dask/dataframe/core.py:4641, in DataFrame.assign(self, **kwargs)\r\n   4637     # Figure out columns of the output\r\n   4638     df2 = data._meta_nonempty.assign(\r\n   4639         **_extract_meta({k: kwargs[k]}, nonempty=True)\r\n   4640     )\r\n-> 4641     data = elemwise(methods.assign, data, *pairs, meta=df2)\r\n   4643 return data\r\n\r\nFile ~/conda/envs/dask-sql/lib/python3.8/site-packages/dask/dataframe/core.py:5606, in elemwise(op, meta, out, transform_divisions, *args, **kwargs)\r\n   5602 args = _maybe_from_pandas(args)\r\n   5604 from .multi import _maybe_align_partitions\r\n-> 5606 args = _maybe_align_partitions(args)\r\n   5607 dasks = [arg for arg in args if isinstance(arg, (_Frame, Scalar, Array))]\r\n   5608 dfs = [df for df in dasks if isinstance(df, _Frame)]\r\n\r\nFile ~/conda/envs/dask-sql/lib/python3.8/site-packages/dask/dataframe/multi.py:168, in _maybe_align_partitions(args)\r\n    166 divisions = dfs[0].divisions\r\n    167 if not all(df.divisions == divisions for df in dfs):\r\n--> 168     dfs2 = iter(align_partitions(*dfs)[0])\r\n    169     return [a if not isinstance(a, _Frame) else next(dfs2) for a in args]\r\n    170 return args\r\n\r\nFile ~/conda/envs/dask-sql/lib/python3.8/site-packages/dask/dataframe/multi.py:122, in align_partitions(*dfs)\r\n    120     raise ValueError(\"dfs contains no DataFrame and Series\")\r\n    121 if not all(df.known_divisions for df in dfs1):\r\n--> 122     raise ValueError(\r\n    123         \"Not all divisions are known, can't align \"\r\n    124         \"partitions. Please use `set_index` \"\r\n    125         \"to set the index.\"\r\n    126     )\r\n    128 divisions = list(unique(merge_sorted(*[df.divisions for df in dfs1])))\r\n    129 if len(divisions) == 1:  # single value for index\r\n\r\nValueError: Not all divisions are known, can't align partitions. Please use `set_index` to set the index.\r\n```\r\n\r\nContrast this with the `groupby.cum*` operations, which explicitly maintain alignment (perhaps through not needing to fully shuffle the original records, though I haven't looked closely yet).\r\n\r\n```python\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\n\u200b\r\ndf = pd.DataFrame({\r\n    \"a\":[0,0,0,1,1,1,1],\r\n    \"b\":[10,3,3,5,5,4,2]\r\n})\r\nddf = dd.from_pandas(df, 2) #.reset_index(drop=True)\r\nddf[\"cumsum\"] = ddf.groupby(\"a\").b.cumsum()\r\nprint(ddf.compute())\r\n   a   b  cumsum\r\n0  0  10      10\r\n1  0   3      13\r\n2  0   3      16\r\n3  1   5       5\r\n4  1   5      10\r\n5  1   4      14\r\n6  1   2      16\r\n```\r\n\r\nI'd be interested to hear if folks think the approach taken here (and in groupby.shift and transform) might warrant reconsideration?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1037266953/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1043066223",
        "html_url": "https://github.com/dask/dask/pull/8659#issuecomment-1043066223",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8659",
        "id": 1043066223,
        "node_id": "IC_kwDOAbcwm84-K-1v",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-17T15:23:40Z",
        "updated_at": "2022-02-17T15:23:40Z",
        "author_association": "MEMBER",
        "body": "Thanks for writing that up. I have been struggling with some groupby issues in https://github.com/dask/dask/pull/8442 as well. I haven't totally wrapped my head around what the right approach is. There is a fair amount of shuffling that goes on in the aggregation methods. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1043066223/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1180224979",
        "html_url": "https://github.com/dask/dask/pull/8659#issuecomment-1180224979",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8659",
        "id": 1180224979,
        "node_id": "IC_kwDOAbcwm85GWM3T",
        "user": {
            "login": "shivammmmm",
            "id": 80568514,
            "node_id": "MDQ6VXNlcjgwNTY4NTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/80568514?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shivammmmm",
            "html_url": "https://github.com/shivammmmm",
            "followers_url": "https://api.github.com/users/shivammmmm/followers",
            "following_url": "https://api.github.com/users/shivammmmm/following{/other_user}",
            "gists_url": "https://api.github.com/users/shivammmmm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shivammmmm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shivammmmm/subscriptions",
            "organizations_url": "https://api.github.com/users/shivammmmm/orgs",
            "repos_url": "https://api.github.com/users/shivammmmm/repos",
            "events_url": "https://api.github.com/users/shivammmmm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shivammmmm/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-11T10:26:02Z",
        "updated_at": "2022-07-11T10:26:02Z",
        "author_association": "NONE",
        "body": "@jsignell @beckernick Hey Folks, is there any workaround for this use case yet? I am also in a similar situation where I want to use rank on dask data frame.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1180224979/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1321877892",
        "html_url": "https://github.com/dask/dask/pull/8659#issuecomment-1321877892",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/8659",
        "id": 1321877892,
        "node_id": "IC_kwDOAbcwm85OykGE",
        "user": {
            "login": "phe-sto",
            "id": 22092963,
            "node_id": "MDQ6VXNlcjIyMDkyOTYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/22092963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phe-sto",
            "html_url": "https://github.com/phe-sto",
            "followers_url": "https://api.github.com/users/phe-sto/followers",
            "following_url": "https://api.github.com/users/phe-sto/following{/other_user}",
            "gists_url": "https://api.github.com/users/phe-sto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phe-sto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phe-sto/subscriptions",
            "organizations_url": "https://api.github.com/users/phe-sto/orgs",
            "repos_url": "https://api.github.com/users/phe-sto/repos",
            "events_url": "https://api.github.com/users/phe-sto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phe-sto/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-21T11:03:57Z",
        "updated_at": "2022-11-21T11:03:57Z",
        "author_association": "NONE",
        "body": "@shivammmmm my wourkarround is to use this branch anyway, not super clean but easiest solution to `rank` by far. I am building it on my company Jenkins https://jenkins.papit.fr/job/dask_with_rank/, it work like a charm.\r\nIt would of course be cleaner to have integrated in the master. @beckernick do you think it is possible? :innocent:",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1321877892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]