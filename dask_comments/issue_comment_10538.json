[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1739200758",
        "html_url": "https://github.com/dask/dask/issues/10538#issuecomment-1739200758",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10538",
        "id": 1739200758,
        "node_id": "IC_kwDOAbcwm85nqhj2",
        "user": {
            "login": "jacobtomlinson",
            "id": 1610850,
            "node_id": "MDQ6VXNlcjE2MTA4NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1610850?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacobtomlinson",
            "html_url": "https://github.com/jacobtomlinson",
            "followers_url": "https://api.github.com/users/jacobtomlinson/followers",
            "following_url": "https://api.github.com/users/jacobtomlinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacobtomlinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacobtomlinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacobtomlinson/subscriptions",
            "organizations_url": "https://api.github.com/users/jacobtomlinson/orgs",
            "repos_url": "https://api.github.com/users/jacobtomlinson/repos",
            "events_url": "https://api.github.com/users/jacobtomlinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacobtomlinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-09-28T13:35:10Z",
        "updated_at": "2023-09-28T13:35:10Z",
        "author_association": "MEMBER",
        "body": "Welcome @raphael7777777! This repo is mainly for community related discussions so I'm going to move this issue over to `dask/dask`. \r\n\r\nIf you need very strict control over the graph I wonder if your best approach is to use an API like `dask.delayed` to construct a graph exactly how you would like instead of relying on `dask.array`. Of course code examples of what you're doing and what you are trying to achieve always help in these discussions.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1739200758/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1739475929",
        "html_url": "https://github.com/dask/dask/issues/10538#issuecomment-1739475929",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10538",
        "id": 1739475929,
        "node_id": "IC_kwDOAbcwm85nrkvZ",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-09-28T15:06:01Z",
        "updated_at": "2023-09-28T15:06:01Z",
        "author_association": "MEMBER",
        "body": "Dask is using a rather elaborate algorithm to construct a topological ordering that is supposed to minimize memory pressure. This is hard to do in general and we're not always getting it right. The current algorithm is known to have shortcomings and I am currently working on a couple of fixes over in https://github.com/dask/dask/pull/10535\r\n\r\nif the general approach is not sufficient and you truly want to provide the priority yourself, there are APIs for this, see https://distributed.dask.org/en/stable/priority.html",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1739475929/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1739480701",
        "html_url": "https://github.com/dask/dask/issues/10538#issuecomment-1739480701",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10538",
        "id": 1739480701,
        "node_id": "IC_kwDOAbcwm85nrl59",
        "user": {
            "login": "fjetter",
            "id": 8629629,
            "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8629629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjetter",
            "html_url": "https://github.com/fjetter",
            "followers_url": "https://api.github.com/users/fjetter/followers",
            "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
            "organizations_url": "https://api.github.com/users/fjetter/orgs",
            "repos_url": "https://api.github.com/users/fjetter/repos",
            "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fjetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-09-28T15:07:48Z",
        "updated_at": "2023-09-28T15:07:48Z",
        "author_association": "MEMBER",
        "body": "If you can share how your graph looks like we may be able to incorporate this into our tests.\r\n\r\nYou can generate nice plots with something like\r\n\r\n```python\r\nfrom dask.base import visualize\r\nvisualize(my_array, filename='wrong-ordering.png', color='order')\r\n```\r\n\r\nMany ordering problems also show up on smaller versions of a graph so I would recommend trying to shrink it first before visualizing",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1739480701/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1739695913",
        "html_url": "https://github.com/dask/dask/issues/10538#issuecomment-1739695913",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10538",
        "id": 1739695913,
        "node_id": "IC_kwDOAbcwm85nsacp",
        "user": {
            "login": "raphael7777777",
            "id": 55267169,
            "node_id": "MDQ6VXNlcjU1MjY3MTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/55267169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphael7777777",
            "html_url": "https://github.com/raphael7777777",
            "followers_url": "https://api.github.com/users/raphael7777777/followers",
            "following_url": "https://api.github.com/users/raphael7777777/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphael7777777/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphael7777777/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphael7777777/subscriptions",
            "organizations_url": "https://api.github.com/users/raphael7777777/orgs",
            "repos_url": "https://api.github.com/users/raphael7777777/repos",
            "events_url": "https://api.github.com/users/raphael7777777/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphael7777777/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-09-28T16:56:08Z",
        "updated_at": "2023-09-28T16:56:08Z",
        "author_association": "NONE",
        "body": "> Welcome @raphael7777777! This repo is mainly for community related discussions so I'm going to move this issue over to `dask/dask`.\r\n> \r\n> If you need very strict control over the graph I wonder if your best approach is to use an API like `dask.delayed` to construct a graph exactly how you would like instead of relying on `dask.array`. Of course code examples of what you're doing and what you are trying to achieve always help in these discussions.\r\n\r\nThanks for the response Jacob. I Can't open up the algorithm, but I am going to post here a trimmed version of it, for you guys to help me with the implementation of delayed or futures, Im not sure what would fit best.\r\n\r\n#Training Batches\r\nSignals_dict = {}\r\n\r\nfor Ticker_Name in tqdm(SP500_Tickers, desc='Training...', token='5198827561:AAHt5gYpiV9rqsCkJfhOpnGqVNOCxI9q8VA', chat_id='5203170593'):\r\n    RSI = Importing_RSI(Ticker_Name)\r\n    train(Ticker_Name, RSI, 2, 30)\r\n    train(Ticker_Name, RSI, 31, 60)\r\n    train(Ticker_Name, RSI, 61, 90)\r\n    train(Ticker_Name, RSI, 91, 120)\r\n    train(Ticker_Name, RSI, 121, 150)\r\n    train(Ticker_Name, RSI, 151, 180)\r\n    train(Ticker_Name, RSI, 181, 210)\r\n    train(Ticker_Name, RSI, 211, 240)\r\n\r\nwith open('/content/drive/My Drive/Massari/RSI/RSI Signals Dict.pkl', 'wb') as file:\r\n    pickle.dump(Signals_dict, file)\r\n    \r\nWhat's happening here is that I need to execute the train function with parameters (Ticker_Name, RSI, 2, 2500), but that's too big for memory (goes up to 250TB of RAM), so I need to execute in chunks (which is what I was trying with dask arrays but the task ordering was giving me some issues). As you can see in the code above, Im training intervals of 30 (2,30) then (30, 60)... so on to avoid memory issues. my objective is to make this run parallel, using futures or delayed (whatever works best). My loop which runs through all Ticker_Names can also be parallelized. So essentially my goal is to have many tasks which are each of these: \"train(Ticker_Name, RSI, x, y)\". for every Ticker_Name. All these can be executed in parallel. \r\n\r\nMy only concern is that within my train function I don't have an output, what it does at the very end of the function is append information about the trading signals to an existing dictionary, as shown below:\r\n\r\nSignals_dict[Ticker_Name + '_Train_BestSell_pValue'] = cp.append(existing_pValues_sell, Selected_pValues)\r\nSignals_dict[Ticker_Name + '_Train_BestSellPeriod'] = cp.append(existing_periods_sell, Selected_Periods)\r\nSignals_dict[Ticker_Name + '_Train_BestSellHits'] = cp.append(existing_hits_sell, Selected_Hits)\r\n\r\nSo I need these infos to be aligned (in the same index position) with each other. the p_values, Periods and Hits are info about the same signals, therefore they need to correspond to the same index. I think it won't be an issue, but im afraid that when vectorizing these tasks I might misalign the infos. I just need that all these cp.append seen above happen together, and not at the same time or interleaved with the cp.append from other tasks.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1739695913/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1739713808",
        "html_url": "https://github.com/dask/dask/issues/10538#issuecomment-1739713808",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10538",
        "id": 1739713808,
        "node_id": "IC_kwDOAbcwm85nse0Q",
        "user": {
            "login": "raphael7777777",
            "id": 55267169,
            "node_id": "MDQ6VXNlcjU1MjY3MTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/55267169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raphael7777777",
            "html_url": "https://github.com/raphael7777777",
            "followers_url": "https://api.github.com/users/raphael7777777/followers",
            "following_url": "https://api.github.com/users/raphael7777777/following{/other_user}",
            "gists_url": "https://api.github.com/users/raphael7777777/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raphael7777777/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raphael7777777/subscriptions",
            "organizations_url": "https://api.github.com/users/raphael7777777/orgs",
            "repos_url": "https://api.github.com/users/raphael7777777/repos",
            "events_url": "https://api.github.com/users/raphael7777777/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raphael7777777/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-09-28T17:09:12Z",
        "updated_at": "2023-09-28T17:09:12Z",
        "author_association": "NONE",
        "body": "don't worry about the RSI, I can handle that within the train function.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1739713808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]