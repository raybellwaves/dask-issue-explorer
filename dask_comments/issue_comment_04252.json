[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/442194196",
        "html_url": "https://github.com/dask/dask/issues/4252#issuecomment-442194196",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4252",
        "id": 442194196,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjE5NDE5Ng==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-27T19:53:23Z",
        "updated_at": "2018-11-27T19:53:23Z",
        "author_association": "MEMBER",
        "body": "One hypothetical case that comes to mind is solving PDEs, where having\ndifferent boundary conditions on different edges is quite common.  I know\npeople that have tried using Dask for this, but given up due to poor\nperformance.  I don't have a good way to determine how important this\nfeature is.\n\nOn Tue, Nov 27, 2018 at 2:36 PM jakirkham <notifications@github.com> wrote:\n\n> Currently da.map_overlap supports edge paddings of different kinds along\n> different dimensions. This complicates things like using da.pad within\n> da.map_overlap <https://github.com/dask/dask/issues/3641>.\n>\n> AFAIK there are no use cases for different edge paddings on different\n> dimensions. The closest thing that I know of is to pad some dimensions and\n> not others (i.e. having different depths per dimension), which can still be\n> cast in terms of having the same padding for all dimensions (just some are\n> trivial). Given this, I'd like to propose deprecating boundary arguments\n> <http://docs.dask.org/en/latest/array-overlap.html#dask.array.map_overlap>\n> that are anything other than simple values (e.g. padding mode or constant\n> for all dimensions).\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/4252>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AASszNZ9w9hd5TyKpOxAkqGUSEGVDkTIks5uzZRAgaJpZM4Y2Mas>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/442194196/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/442197841",
        "html_url": "https://github.com/dask/dask/issues/4252#issuecomment-442197841",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4252",
        "id": 442197841,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjE5Nzg0MQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-11-27T20:04:33Z",
        "updated_at": "2018-11-27T20:04:33Z",
        "author_association": "MEMBER",
        "body": "Good point. Though these would still be possible by applying `da.pad` repeatedly with the intended padding before calling `da.map_overlap`.\r\n\r\nShould add that my general inclination is actually to push all users looking for explicit padding from Dask to use `da.pad` instead of relying on `da.map_overlap` to support this behavior directly. Often functions (at least in the image processing domain) do some implicit padding internally anyways.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/442197841/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/504154101",
        "html_url": "https://github.com/dask/dask/issues/4252#issuecomment-504154101",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4252",
        "id": 504154101,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDE1NDEwMQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-20T19:33:24Z",
        "updated_at": "2019-06-20T20:03:07Z",
        "author_association": "MEMBER",
        "body": "Thoughts on handling this in 2.0?\r\n\r\nxref: https://github.com/dask/dask/issues/4973",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/504154101/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/504329533",
        "html_url": "https://github.com/dask/dask/issues/4252#issuecomment-504329533",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/4252",
        "id": 504329533,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDMyOTUzMw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-21T07:51:43Z",
        "updated_at": "2019-06-21T07:51:43Z",
        "author_association": "MEMBER",
        "body": "I think I prefer to have a convenience keyword argument in map_overlap.  I'd be more than happy if that called pad.  I don't care strongly about different edge paddings on different dimensions.\r\n\r\nIn terms of handling this before 2.0 I don't have strong thoughts.  To me this doesn't seem to be a large priority to me personally (I haven't heard anyone complain) and so I don't think that it should block release.  ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/504329533/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]