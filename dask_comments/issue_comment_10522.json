[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1764472726",
        "html_url": "https://github.com/dask/dask/issues/10522#issuecomment-1764472726",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10522",
        "id": 1764472726,
        "node_id": "IC_kwDOAbcwm85pK7eW",
        "user": {
            "login": "bartbroere",
            "id": 2715782,
            "node_id": "MDQ6VXNlcjI3MTU3ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2715782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bartbroere",
            "html_url": "https://github.com/bartbroere",
            "followers_url": "https://api.github.com/users/bartbroere/followers",
            "following_url": "https://api.github.com/users/bartbroere/following{/other_user}",
            "gists_url": "https://api.github.com/users/bartbroere/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bartbroere/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bartbroere/subscriptions",
            "organizations_url": "https://api.github.com/users/bartbroere/orgs",
            "repos_url": "https://api.github.com/users/bartbroere/repos",
            "events_url": "https://api.github.com/users/bartbroere/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bartbroere/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-16T13:20:18Z",
        "updated_at": "2023-10-16T13:20:18Z",
        "author_association": "CONTRIBUTOR",
        "body": "I took the liberty to try to implement your solution. Let's see if it passes the automated checks.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1764472726/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1764582117",
        "html_url": "https://github.com/dask/dask/issues/10522#issuecomment-1764582117",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10522",
        "id": 1764582117,
        "node_id": "IC_kwDOAbcwm85pLWLl",
        "user": {
            "login": "aaptss",
            "id": 12582599,
            "node_id": "MDQ6VXNlcjEyNTgyNTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/12582599?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaptss",
            "html_url": "https://github.com/aaptss",
            "followers_url": "https://api.github.com/users/aaptss/followers",
            "following_url": "https://api.github.com/users/aaptss/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaptss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaptss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaptss/subscriptions",
            "organizations_url": "https://api.github.com/users/aaptss/orgs",
            "repos_url": "https://api.github.com/users/aaptss/repos",
            "events_url": "https://api.github.com/users/aaptss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaptss/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-16T14:17:25Z",
        "updated_at": "2023-10-16T14:29:27Z",
        "author_association": "NONE",
        "body": "@bartbroere thank you for doing this! \r\n\r\nall tests have passed with one of your solutions. however, i wonder what is the original intention of this method's developer, as there might be another approach to resolving this conflict. \r\n\r\nIt seems that all the tests have passed simply because this behaviour is not covered (the current state would fail the test anyways if this would've been covered by one).\r\n\r\nI am afraid that this particular solution might actually break something outside of my narrow usecase. \r\n\r\n@martindurant you seem to be the one who has implemented the code according to git blame (5yrs ago, wow!). can you please weigh in on this ? ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1764582117/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1766284556",
        "html_url": "https://github.com/dask/dask/issues/10522#issuecomment-1766284556",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10522",
        "id": 1766284556,
        "node_id": "IC_kwDOAbcwm85pR10M",
        "user": {
            "login": "bartbroere",
            "id": 2715782,
            "node_id": "MDQ6VXNlcjI3MTU3ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2715782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bartbroere",
            "html_url": "https://github.com/bartbroere",
            "followers_url": "https://api.github.com/users/bartbroere/followers",
            "following_url": "https://api.github.com/users/bartbroere/following{/other_user}",
            "gists_url": "https://api.github.com/users/bartbroere/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bartbroere/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bartbroere/subscriptions",
            "organizations_url": "https://api.github.com/users/bartbroere/orgs",
            "repos_url": "https://api.github.com/users/bartbroere/repos",
            "events_url": "https://api.github.com/users/bartbroere/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bartbroere/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-17T12:07:53Z",
        "updated_at": "2023-10-17T12:07:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "> I am afraid that this particular solution might actually break something outside of my narrow usecase.\r\n\r\nI share that concern. In the PR I currently have this open checklist item:\r\n\r\n> Investigate unintended effects. What happens if chunks is incorrect? Can we \"chunk arrays along any dimension\"?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1766284556/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1766959637",
        "html_url": "https://github.com/dask/dask/issues/10522#issuecomment-1766959637",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/10522",
        "id": 1766959637,
        "node_id": "IC_kwDOAbcwm85pUaoV",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-10-17T18:36:56Z",
        "updated_at": "2023-10-17T18:36:56Z",
        "author_association": "MEMBER",
        "body": "An obvious workaround, is to first `rechunk` the original dask array, which does not of course use any memory of CPU, but presents the right attributes to zarr.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1766959637/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]