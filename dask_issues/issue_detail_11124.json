{
    "url": "https://api.github.com/repos/dask/dask/issues/11124",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/11124/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/11124/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/11124/events",
    "html_url": "https://github.com/dask/dask/issues/11124",
    "id": 2298282664,
    "node_id": "I_kwDOAbcwm86I_QKo",
    "number": 11124,
    "title": "Overlap with `new_axis` option is not trimmed correctly",
    "user": {
        "login": "chourroutm",
        "id": 83714683,
        "node_id": "MDQ6VXNlcjgzNzE0Njgz",
        "avatar_url": "https://avatars.githubusercontent.com/u/83714683?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chourroutm",
        "html_url": "https://github.com/chourroutm",
        "followers_url": "https://api.github.com/users/chourroutm/followers",
        "following_url": "https://api.github.com/users/chourroutm/following{/other_user}",
        "gists_url": "https://api.github.com/users/chourroutm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/chourroutm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/chourroutm/subscriptions",
        "organizations_url": "https://api.github.com/users/chourroutm/orgs",
        "repos_url": "https://api.github.com/users/chourroutm/repos",
        "events_url": "https://api.github.com/users/chourroutm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/chourroutm/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-05-15T15:51:51Z",
    "updated_at": "2024-05-17T13:17:32Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!-- Please include a self-contained copy-pastable example that generates the issue if possible.\r\n\r\nPlease be concise with code posted. See guidelines below on how to provide a good bug report:\r\n\r\n- Craft Minimal Bug Reports http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports\r\n- Minimal Complete Verifiable Examples https://stackoverflow.com/help/mcve\r\n\r\nBug reports that follow these guidelines are easier to diagnose, and so are often handled much more quickly.\r\n-->\r\n\r\n**Describe the issue**:\r\nI would like to expand a 3D array of chunk size (32,128,128) to a 4D array of chunk size (3,32,128,128) with a computation that relies on an overlap (chunk sizes (52,148,148) and (3,52,148,148)), then trimming the overlap (chunk size (3,32,128,128)). \r\n\r\nI would prefer not to have to deal with the overlap myself in the gufunc.\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport numpy as np\r\nimport dask, dask.array\r\nimport cupy as cp\r\n\r\ndef create_color(u):\r\n    return np.stack([u*1.0,u*0.5,u*0.0])\r\n\r\nx = np.ones((32, 128, 128))\r\ny = dask.array.from_array(x)\r\n\r\noverlap_depth = 10\r\n\r\ncolors_preview_overlap = dask.array.overlap.overlap(y.astype(np.float64),(overlap_depth, overlap_depth, overlap_depth),'reflect')\r\ncolors_preview_map = dask.array.core.map_blocks(create_color,colors_preview_overlap,meta=cp.array(()),chunks=(3,32+2*overlap_depth,128+2*overlap_depth,128+2*overlap_depth),new_axis=[0])\r\ncolors_preview_trimmed = dask.array.overlap.trim_overlap(colors_preview_map, (0,overlap_depth, overlap_depth, overlap_depth)) # same return with `trim_internal`\r\n\r\ncolors_preview_1 = colors_preview_trimmed.compute()\r\nprint(colors_preview_1.shape)\r\n\r\ncolors_preview_2 = y.astype(np.float64).map_overlap(create_color,overlap_depth,'reflect',meta=cp.array(()),chunks=(3,32+2*overlap_depth,128+2*overlap_depth,128+2*overlap_depth),new_axis=[0])\r\ncolors_preview_2 = colors_preview_2.compute()\r\nprint(colors_preview_2.shape)\r\n\r\ncolors_preview_3 = y.astype(np.float64).map_overlap(create_color,(overlap_depth, overlap_depth, overlap_depth),'reflect',meta=cp.array(()),chunks=(3,32+2*overlap_depth,128+2*overlap_depth,128+2*overlap_depth),new_axis=[0])\r\ncolors_preview_3 = colors_preview_3.compute()\r\nprint(colors_preview_3.shape)\r\n\r\ncolors_preview_4 = y.astype(np.float64).map_overlap(create_color,(0,overlap_depth, overlap_depth, overlap_depth),'reflect',meta=cp.array(()),chunks=(3,32+2*overlap_depth,128+2*overlap_depth,128+2*overlap_depth),new_axis=[0])\r\ncolors_preview_4 = colors_preview_4.compute()\r\nprint(colors_preview_4.shape)\r\n```\r\n\r\nThese will return:\r\n\r\n> (3, 52, 148, 148)\r\n> (0, 32, 128, 148)\r\n> (0, 32, 128, 148)\r\n> (3, 12, 128, 148)\r\n\r\nwhereas I would like them to return:\r\n\r\n> (3, 32, 128, 128)\r\n\r\n**Anything else we need to know?**:\r\n\r\nNo\r\n\r\n**Environment**:\r\n\r\n- Dask version: 2024.5.0\r\n- Python version: Python 3.11.5\r\n- Operating System: Windows 11\r\n- Install method (conda, pip, source): pip\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/11124/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/11124/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}