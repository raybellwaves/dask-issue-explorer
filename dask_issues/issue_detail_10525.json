{
    "url": "https://api.github.com/repos/dask/dask/issues/10525",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10525/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10525/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10525/events",
    "html_url": "https://github.com/dask/dask/issues/10525",
    "id": 1909107899,
    "node_id": "I_kwDOAbcwm85xyqy7",
    "number": 10525,
    "title": "read_parquet() filters not applied for pivot_table()",
    "user": {
        "login": "kwodzicki",
        "id": 19718721,
        "node_id": "MDQ6VXNlcjE5NzE4NzIx",
        "avatar_url": "https://avatars.githubusercontent.com/u/19718721?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwodzicki",
        "html_url": "https://github.com/kwodzicki",
        "followers_url": "https://api.github.com/users/kwodzicki/followers",
        "following_url": "https://api.github.com/users/kwodzicki/following{/other_user}",
        "gists_url": "https://api.github.com/users/kwodzicki/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kwodzicki/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kwodzicki/subscriptions",
        "organizations_url": "https://api.github.com/users/kwodzicki/orgs",
        "repos_url": "https://api.github.com/users/kwodzicki/repos",
        "events_url": "https://api.github.com/users/kwodzicki/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kwodzicki/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3880424463,
            "node_id": "LA_kwDOAbcwm87nSpQP",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20triage",
            "name": "needs triage",
            "color": "eeeeee",
            "default": false,
            "description": "Needs a response from a contributor"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-09-22T15:21:57Z",
    "updated_at": "2023-10-23T01:45:36Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!-- Please include a self-contained copy-pastable example that generates the issue if possible.\r\n\r\nPlease be concise with code posted. See guidelines below on how to provide a good bug report:\r\n\r\n- Craft Minimal Bug Reports http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports\r\n- Minimal Complete Verifiable Examples https://stackoverflow.com/help/mcve\r\n\r\nBug reports that follow these guidelines are easier to diagnose, and so are often handled much more quickly.\r\n-->\r\n\r\n**Describe the issue**:\r\nWhen loading a parquet file using filters, these filters are not applied when pivoting the table. I am currently working with GHCN-Daily data and trying to only read in a few variables from the dataset. Using there `filters=()` keyword seems to filter the data when looking at only the unique values in the DataFrame, but if the DataFrame is pivoted, then a column is created for all possible variables in the dataset, not just those defined by the filter.\r\n\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nfrom dask import dataframe\r\n\r\n# Load in the data\r\ndata  = dataframe.read_parquet(\r\n    \"s3://noaa-ghcn-pds/parquet/by_year/YEAR=2020/\",\r\n    storage_options={\"anon\": True},\r\n    filters = [(ELEMENT', 'in', ['AWND', 'TMAX', 'RHAV'])],\r\n    columns=[\"ID\", \"DATE\", \"DATA_VALUE\", \"ELEMENT\"],\r\n)\r\n\r\n# Filter data to just one station\r\ndata = data[data.ID == 'USS0019L42S']\r\n\r\n\"\"\"\r\nA look at only the unique ELEMENTS (i.e., variable names) gives:\r\n\r\n>>> print(data.ELEMENT.unique().compute())\r\n\r\n0    AWND\r\n1    TMAX\r\nName: ELEMENT, dtype: category\r\nCategories (74, object): ['ADPT', 'ASLP', 'ASTP', 'AWBT', ..., 'WT09', 'WT10', 'WT11', 'WT18']\r\n\r\nAnd the table looks like this:\r\n\r\nDask DataFrame Structure:\r\n                    ID    DATE DATA_VALUE          ELEMENT\r\nnpartitions=11                                            \r\n                string  string      int64  category[known]\r\n                   ...     ...        ...              ...\r\n...                ...     ...        ...              ...\r\n                   ...     ...        ...              ...\r\n                   ...     ...        ...              ...\r\nDask Name: getitem, 4 graph layers\r\n\r\n\"\"\"\r\n\r\n# pivot the data\r\npiv = data.pivot_table(\r\n    columns='ELEMENT',\r\n    index='DATE',\r\n    values='DATA_VALUE',\r\n    aggfunc='first',\r\n)\r\n\r\n\"\"\"\r\nPivoted table looks like:\r\n\r\nDask DataFrame Structure:\r\n                ADPT   ASLP   ASTP   AWBT   AWDR   AWND   DAPR   DASF   DATN   DATX   DWPR   EVAP   MDPR   MDSF   MDTN   MDTX   MNPN   MXPN   PGTM   PRCP   PSUN   RHAV   RHMN   RHMX   SN31   SN32   SN33   SN35   SN36   SN51   SN52   SN53   SN55   SN56   SNOW   SNWD   SX31   SX32   SX33   SX35   SX36   SX51   SX52   SX53   SX55   SX56   TAVG   THIC   TMAX   TMIN   TOBS   TSUN   WDF2   WDF5   WDFG   WDMV   WESD   WESF   WSF2   WSF5   WSFG   WSFI   WT01   WT02   WT03   WT04   WT05   WT06   WT07   WT08   WT09   WT10   WT11   WT18\r\nnpartitionsr\n               int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64  int64\r\nr\nDask Name: pivot_table_first-agg, 6 graph layers\r\n\"\"\"\r\n```\r\n\r\nI would expect that the pivoted table had only those variables defined by the filter and not all the possible variables.\r\n\r\n**Anything else we need to know?**:\r\nI tried to 'solve' this issue by using the `drop.na()` method to drop columns with all NaN values, however, this method does not seem to accept the `axis` keyword. The documentation for the method suggests that `axis` is a valid keyword, but it is missing from the signature.\r\n\r\nhttps://docs.dask.org/en/latest/generated/dask.dataframe.DataFrame.dropna.html\r\n\r\n**Environment**:\r\n\r\n- Dask version: 2023.9.2\r\n- Python version: 3.11.4 | packaged by conda-forge | (main, Jun 10 2023, 18:08:17) [GCC 12.2.0]\r\n- Operating System: Running in Docker using  jupyter/datascience-notebook:latest base image (Digest:sha256:d6311a89c4d618190372149245a4d68b67406201aca00d8b0d08119fe09ee3cb)\r\n\r\n- Install method (conda, pip, source):\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10525/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10525/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}