{
    "url": "https://api.github.com/repos/dask/dask/issues/10486",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/10486/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/10486/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/10486/events",
    "html_url": "https://github.com/dask/dask/pull/10486",
    "id": 1874142466,
    "node_id": "PR_kwDOAbcwm85ZKkO7",
    "number": 10486,
    "title": "Change `to_parquet` when `compute=False` so that we allow more user control",
    "user": {
        "login": "hyenal",
        "id": 12529987,
        "node_id": "MDQ6VXNlcjEyNTI5OTg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/12529987?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hyenal",
        "html_url": "https://github.com/hyenal",
        "followers_url": "https://api.github.com/users/hyenal/followers",
        "following_url": "https://api.github.com/users/hyenal/following{/other_user}",
        "gists_url": "https://api.github.com/users/hyenal/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/hyenal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hyenal/subscriptions",
        "organizations_url": "https://api.github.com/users/hyenal/orgs",
        "repos_url": "https://api.github.com/users/hyenal/repos",
        "events_url": "https://api.github.com/users/hyenal/events{/privacy}",
        "received_events_url": "https://api.github.com/users/hyenal/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 365513534,
            "node_id": "MDU6TGFiZWwzNjU1MTM1MzQ=",
            "url": "https://api.github.com/repos/dask/dask/labels/io",
            "name": "io",
            "color": "6f871c",
            "default": false,
            "description": ""
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2023-08-30T18:04:33Z",
    "updated_at": "2023-10-02T01:45:35Z",
    "closed_at": null,
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
        "url": "https://api.github.com/repos/dask/dask/pulls/10486",
        "html_url": "https://github.com/dask/dask/pull/10486",
        "diff_url": "https://github.com/dask/dask/pull/10486.diff",
        "patch_url": "https://github.com/dask/dask/pull/10486.patch",
        "merged_at": null
    },
    "body": "- [x] Closes [#10463](https://github.com/dask/dask/issues/10463)\r\n- [ ] Tests added / passed\r\n- [ ] Passes `pre-commit run --all-files`\r\n\r\nThis MR remove the `Scalar` object returned when `compute`=False in `to_parquet`. Instead we give the user more control over the final `map_partitions` task.\r\n\r\nThis would allow the user to do things like [in this post](https://dask.discourse.group/t/improving-pipeline-resilience-when-using-to-parquet-and-preemptible-workers/2141) where we would release memory as soon as possible.\r\n\r\nI feel like we could add the following snipped in the [resilience docs](https://examples.dask.org/resilience.html) for users that are using preemptible tasks\r\n\r\n```\r\n    ddf = df.to_parquet(name, compute=False)\r\n\r\n    parquet_files = ddf.to_delayed()\r\n\r\n    client: dask.distributed.Client = dask.distributed.get_client()\r\n    futures = client.compute(parquet_files)\r\n\r\n    for future in as_completed(futures):\r\n        # Release memory\r\n        future.result()\r\n        future.release()\r\n```\r\n\r\nI am using it on my own project right now and it seems to work but I am happy to hear about downside of such approach as well :) \r\n\r\nSome comments were also left in a local [PR here](https://github.com/hyenal/dask/pull/1).",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/10486/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/10486/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}