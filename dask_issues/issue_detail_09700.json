{
    "url": "https://api.github.com/repos/dask/dask/issues/9700",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9700/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9700/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9700/events",
    "html_url": "https://github.com/dask/dask/issues/9700",
    "id": 1467881044,
    "node_id": "I_kwDOAbcwm85XfhZU",
    "number": 9700,
    "title": "dask dataframe advertises `dot` applies to `DataFrame`, but is only implemented for `Series`",
    "user": {
        "login": "wence-",
        "id": 1126981,
        "node_id": "MDQ6VXNlcjExMjY5ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wence-",
        "html_url": "https://github.com/wence-",
        "followers_url": "https://api.github.com/users/wence-/followers",
        "following_url": "https://api.github.com/users/wence-/following{/other_user}",
        "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
        "organizations_url": "https://api.github.com/users/wence-/orgs",
        "repos_url": "https://api.github.com/users/wence-/repos",
        "events_url": "https://api.github.com/users/wence-/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wence-/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 386719598,
            "node_id": "MDU6TGFiZWwzODY3MTk1OTg=",
            "url": "https://api.github.com/repos/dask/dask/labels/documentation",
            "name": "documentation",
            "color": "f9d0c4",
            "default": true,
            "description": "Improve or add to documentation"
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-11-29T11:13:03Z",
    "updated_at": "2023-01-02T01:57:08Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Describe the issue**:\r\n\r\nThe `dot` method on dask dataframe objects is defined on `_Frame`, however, the implementation only works when the left operands is a `Series`. Calling `left_df.dot(right_df)` with appropriately aligned shapes therefore fails deep in pandas with a \"dataframes are not aligned\" error.\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\nA = pd.DataFrame(np.arange(12).reshape(3, 4))\r\nB = pd.DataFrame(np.arange(4).reshape(4, 1))\r\n\r\ndA = dd.from_pandas(A, npartitions=1)\r\ndB = dd.from_pandas(B, npartitions=1)\r\n\r\ndC = dA.dot(dB, meta=pd.DataFrame(columns=dB.columns)).persist()\r\n```\r\n\r\nBacktrace\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \".../src/doodles/cudf-12240/bug.py\", line 11, in <module>\r\n    dC = dA.dot(dB, meta=pd.DataFrame(columns=dB.columns)).persist()\r\n  File \".../src/dask/dask/base.py\", line 288, in persist\r\n    (result,) = persist(self, traverse=False, **kwargs)\r\n  File \".../src/dask/dask/base.py\", line 901, in persist\r\n    results = schedule(dsk, keys, **kwargs)\r\n  File \".../src/dask/dask/threaded.py\", line 89, in get\r\n    results = get_async(\r\n  File \".../src/dask/dask/local.py\", line 511, in get_async\r\n    raise_exception(exc, tb)\r\n  File \".../src/dask/dask/local.py\", line 319, in reraise\r\n    raise exc\r\n  File \".../src/dask/dask/local.py\", line 224, in execute_task\r\n    result = _execute_task(task, data)\r\n  File \".../src/dask/dask/core.py\", line 119, in _execute_task\r\n    return func(*(_execute_task(a, cache) for a in args))\r\n  File \".../src/dask/dask/optimization.py\", line 990, in __call__\r\n    return core.get(self.dsk, self.outkey, dict(zip(self.inkeys, args)))\r\n  File \".../src/dask/dask/core.py\", line 149, in get\r\n    result = _execute_task(task, cache)\r\n  File \".../src/dask/dask/core.py\", line 119, in _execute_task\r\n    return func(*(_execute_task(a, cache) for a in args))\r\n  File \".../src/dask/dask/utils.py\", line 71, in apply\r\n    return func(*args, **kwargs)\r\n  File \".../src/dask/dask/dataframe/core.py\", line 6773, in apply_and_enforce\r\n    df = func(*args, **kwargs)\r\n  File \".../src/dask/dask/utils.py\", line 1103, in __call__\r\n    return getattr(__obj, self.method)(*args, **kwargs)\r\n  File \".../site-packages/pandas/core/frame.py\", line 1590, in dot\r\n    raise ValueError(\"matrices are not aligned\")\r\nValueError: matrices are not aligned\r\n```\r\n\r\n**Anything else we need to know?**:\r\n\r\nDask array, I think, implements `tensordot` (using a communication pattern I cannot deduce), so it might be possible to implement things by piggybacking on that implementation. An interim would be to move the implementation onto `Series` so that the API doesn't advertise something unsupported.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9700/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9700/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}