[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1405836444",
        "html_url": "https://github.com/dask/dask/issues/9879#issuecomment-1405836444",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9879",
        "id": 1405836444,
        "node_id": "IC_kwDOAbcwm85Ty1yc",
        "user": {
            "login": "phofl",
            "id": 61934744,
            "node_id": "MDQ6VXNlcjYxOTM0NzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61934744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phofl",
            "html_url": "https://github.com/phofl",
            "followers_url": "https://api.github.com/users/phofl/followers",
            "following_url": "https://api.github.com/users/phofl/following{/other_user}",
            "gists_url": "https://api.github.com/users/phofl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phofl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phofl/subscriptions",
            "organizations_url": "https://api.github.com/users/phofl/orgs",
            "repos_url": "https://api.github.com/users/phofl/repos",
            "events_url": "https://api.github.com/users/phofl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phofl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-27T00:05:52Z",
        "updated_at": "2023-01-27T00:05:52Z",
        "author_association": "MEMBER",
        "body": "This is my goal on the pandas side as well. For 2.0 most I/O functions should be able to return nullable or pyarrow dtypes.\r\n\r\nNot sure, if you already considered this: You could leverage the use_nullable_dtypes and dtype_backend options from pandas when dispatching to pandas to avoid doing this as a post-processing step? Some functions can return pyarrow backed DataFrames without materialising a NumPy backed DataFrame (read_csv with engine=pyarrow for example)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1405836444/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1406697113",
        "html_url": "https://github.com/dask/dask/issues/9879#issuecomment-1406697113",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9879",
        "id": 1406697113,
        "node_id": "IC_kwDOAbcwm85T2H6Z",
        "user": {
            "login": "jrbourbeau",
            "id": 11656932,
            "node_id": "MDQ6VXNlcjExNjU2OTMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrbourbeau",
            "html_url": "https://github.com/jrbourbeau",
            "followers_url": "https://api.github.com/users/jrbourbeau/followers",
            "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
            "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
            "repos_url": "https://api.github.com/users/jrbourbeau/repos",
            "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-27T16:01:10Z",
        "updated_at": "2023-01-27T16:01:10Z",
        "author_association": "MEMBER",
        "body": "> This is my goal on the pandas side as well. For 2.0 most I/O functions should be able to return nullable or pyarrow dtypes.\r\n\r\n+1\r\n\r\n> You could leverage the use_nullable_dtypes and dtype_backend options from pandas when dispatching to pandas to avoid doing this as a post-processing step?\r\n\r\nYeah, that's what I was thinking. Adding a manual step would only happen if the DataFrame creation method doesn't support loading into `pyarrow` dtypes directly. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1406697113/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1407104475",
        "html_url": "https://github.com/dask/dask/issues/9879#issuecomment-1407104475",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9879",
        "id": 1407104475,
        "node_id": "IC_kwDOAbcwm85T3rXb",
        "user": {
            "login": "phofl",
            "id": 61934744,
            "node_id": "MDQ6VXNlcjYxOTM0NzQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61934744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phofl",
            "html_url": "https://github.com/phofl",
            "followers_url": "https://api.github.com/users/phofl/followers",
            "following_url": "https://api.github.com/users/phofl/following{/other_user}",
            "gists_url": "https://api.github.com/users/phofl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phofl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phofl/subscriptions",
            "organizations_url": "https://api.github.com/users/phofl/orgs",
            "repos_url": "https://api.github.com/users/phofl/repos",
            "events_url": "https://api.github.com/users/phofl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phofl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-27T21:43:38Z",
        "updated_at": "2023-01-27T21:43:38Z",
        "author_association": "MEMBER",
        "body": "Sounds good to me!\r\n\r\nLet me know if there is anything that would help you or if there is a function that I should prioritise.\r\n\r\nread_csv with engine=c can't return pyarrow backed DataFrames yet. This is high priority already",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1407104475/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]