[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/409305975",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-409305975",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 409305975,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTMwNTk3NQ==",
        "user": {
            "login": "WeatherGod",
            "id": 291576,
            "node_id": "MDQ6VXNlcjI5MTU3Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/291576?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WeatherGod",
            "html_url": "https://github.com/WeatherGod",
            "followers_url": "https://api.github.com/users/WeatherGod/followers",
            "following_url": "https://api.github.com/users/WeatherGod/following{/other_user}",
            "gists_url": "https://api.github.com/users/WeatherGod/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WeatherGod/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WeatherGod/subscriptions",
            "organizations_url": "https://api.github.com/users/WeatherGod/orgs",
            "repos_url": "https://api.github.com/users/WeatherGod/repos",
            "events_url": "https://api.github.com/users/WeatherGod/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WeatherGod/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-31T17:39:04Z",
        "updated_at": "2018-07-31T17:39:04Z",
        "author_association": "NONE",
        "body": "I'd like to second this issue. I am having a hard time explaining to co-workers who aren't familiar with dask, but are reviewing my code why I have to add an extra set of warning filters in odd places that don't immediately appear to have anything to do with computation, such as places where data gets saved out.\r\n\r\nPerhaps the dask object should record what the warnings filter is when the dask object was created and utilize it when `compute()` is called? (I know, easier said then done). Would be nice to also check numpy's errstate as well, but I don't know now it well enough to know if that can be introspected.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/409305975/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/409308177",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-409308177",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 409308177,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTMwODE3Nw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-31T17:45:46Z",
        "updated_at": "2018-07-31T17:45:46Z",
        "author_association": "MEMBER",
        "body": "I have no strong feelings on this topic.  It looks like this issue needs two things:\r\n\r\n1.  Discussion to determine which policy is best\r\n2.  Someone to implement that policy\r\n\r\nI encourage people to discuss this topic further to determine what policy is best.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/409308177/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/409312063",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-409312063",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 409312063,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTMxMjA2Mw==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-07-31T17:58:02Z",
        "updated_at": "2018-07-31T17:58:02Z",
        "author_association": "MEMBER",
        "body": "The best immediate solution might be simply redirecting all warnings to logging during evaluation of a dask graph, e.g., with [`logging.captureWarnings`](https://docs.python.org/3/library/logging.html#logging.captureWarnings). This at least makes it easy to customize how warnings are handled by dask all in one place, and to silence warnings issued via dask without silencing other warnings.\r\n\r\nIt would possibly also make sense to set a default NullHandler (per [these instructions](https://docs.python.org/3.7/howto/logging.html#configuring-logging-for-a-library)), which would ensure that the warnings are accessible but not won't end up in stderr unless explicitly requested. Or we could leave setting up the NullHandler to user code.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/409312063/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/489643350",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-489643350",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 489643350,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTY0MzM1MA==",
        "user": {
            "login": "gerritholl",
            "id": 500246,
            "node_id": "MDQ6VXNlcjUwMDI0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/500246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gerritholl",
            "html_url": "https://github.com/gerritholl",
            "followers_url": "https://api.github.com/users/gerritholl/followers",
            "following_url": "https://api.github.com/users/gerritholl/following{/other_user}",
            "gists_url": "https://api.github.com/users/gerritholl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gerritholl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gerritholl/subscriptions",
            "organizations_url": "https://api.github.com/users/gerritholl/orgs",
            "repos_url": "https://api.github.com/users/gerritholl/repos",
            "events_url": "https://api.github.com/users/gerritholl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gerritholl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-06T14:34:06Z",
        "updated_at": "2019-05-06T14:34:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "It's not enough to manage `warnings.catch_warnings`, one would also need to manage `np.errstate`, since either can be used to silence a `RuntimeWarning`.  Perhaps not in the example at the OP, but if I have\r\n\r\n`np.array([1, 2, nan]) < 1.5`\r\n\r\nthen it's quite valid to use\r\n\r\n```\r\nwith np.errstate(invalid=\"ignore\"):\r\n    np.array([1, 2, nan]) < 1.5\r\n```\r\n\r\nUnfortunately, this will have no effect if we replace the array by a dask array.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/489643350/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/489646034",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-489646034",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 489646034,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTY0NjAzNA==",
        "user": {
            "login": "gerritholl",
            "id": 500246,
            "node_id": "MDQ6VXNlcjUwMDI0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/500246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gerritholl",
            "html_url": "https://github.com/gerritholl",
            "followers_url": "https://api.github.com/users/gerritholl/followers",
            "following_url": "https://api.github.com/users/gerritholl/following{/other_user}",
            "gists_url": "https://api.github.com/users/gerritholl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gerritholl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gerritholl/subscriptions",
            "organizations_url": "https://api.github.com/users/gerritholl/orgs",
            "repos_url": "https://api.github.com/users/gerritholl/repos",
            "events_url": "https://api.github.com/users/gerritholl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gerritholl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-06T14:41:35Z",
        "updated_at": "2019-05-06T14:41:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "From a user point of view, ideally I would like something that mimics the numpy `errstate` context manager closely, so that a user could write:\r\n\r\n```\r\nwith dask.errstate(invalid=\"ignore\"):\r\n    da = da.where(v <= 1.5)\r\n```\r\n\r\nI'm new to dask, but I imagine that dask would store a copy of `np.geterr()` with each task at submission time, then use this with `np.errstate()` when computing each task.  But that only works for cases that are covered by `np.errstate`, which `nanmean` is not; I suspect it may be more complicated to apply the same for warnings filters.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/489646034/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/491938017",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-491938017",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 491938017,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTkzODAxNw==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-13T18:38:46Z",
        "updated_at": "2019-05-13T18:38:46Z",
        "author_association": "MEMBER",
        "body": "That sounds like a good approach. Are you interested in working on this, @gerritholl?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/491938017/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/491952939",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-491952939",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 491952939,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTk1MjkzOQ==",
        "user": {
            "login": "gerritholl",
            "id": 500246,
            "node_id": "MDQ6VXNlcjUwMDI0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/500246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gerritholl",
            "html_url": "https://github.com/gerritholl",
            "followers_url": "https://api.github.com/users/gerritholl/followers",
            "following_url": "https://api.github.com/users/gerritholl/following{/other_user}",
            "gists_url": "https://api.github.com/users/gerritholl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gerritholl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gerritholl/subscriptions",
            "organizations_url": "https://api.github.com/users/gerritholl/orgs",
            "repos_url": "https://api.github.com/users/gerritholl/repos",
            "events_url": "https://api.github.com/users/gerritholl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gerritholl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-13T19:24:06Z",
        "updated_at": "2019-05-13T19:24:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "In principle, interested yes, but I can't allocate time to this right now (also because I would need to learn a lot more about dask first).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/491952939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/494456783",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-494456783",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 494456783,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDQ1Njc4Mw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-21T16:10:35Z",
        "updated_at": "2019-05-21T16:10:35Z",
        "author_association": "MEMBER",
        "body": "cc @jakirkham , you might find this interesting",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/494456783/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/494460843",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-494460843",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 494460843,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDQ2MDg0Mw==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-21T16:21:34Z",
        "updated_at": "2019-05-21T16:21:34Z",
        "author_association": "MEMBER",
        "body": "Sure I've been tracking this for a little bit.\r\n\r\nMy understanding is we are looking for a solution like [this]( https://github.com/dask/dask/issues/3245#issuecomment-489646034 ). @shoyer, would you be able to confirm if this matches what you are looking for?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/494460843/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/494476001",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-494476001",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 494476001,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDQ3NjAwMQ==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-05-21T17:04:45Z",
        "updated_at": "2019-05-21T17:04:45Z",
        "author_association": "MEMBER",
        "body": "@jakirkham Yes, a dask version of `np.errstate` would solve part of this problem.\r\n\r\nMore generally, we'd also like the ability to filter warnings more generally within a context manager, e.g., to handle cases like [this one](https://github.com/pydata/xarray/blob/66581084a89f75476b581ef74e5226eae2d62a84/xarray/core/duck_array_ops.py#L158) inside xarray:\r\n```python\r\n    with warnings.catch_warnings():\r\n        warnings.filterwarnings('ignore', \"In the future, 'NAT == x'\")\r\n\r\n        flag_array = (arr1 == arr2)\r\n```\r\n\r\nSo you might want something like `dask.catch_warnings()` as well.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/494476001/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/505523306",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-505523306",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 505523306,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTUyMzMwNg==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-25T16:35:13Z",
        "updated_at": "2019-06-25T16:35:13Z",
        "author_association": "MEMBER",
        "body": "We can probably set some sort of config option to handle warnings. These also can be set with a context manager. `dask.catch_warnings()` could then be a user friendly way of setting that config option.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/505523306/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/505526971",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-505526971",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 505526971,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTUyNjk3MQ==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-25T16:44:59Z",
        "updated_at": "2019-06-25T16:44:59Z",
        "author_association": "MEMBER",
        "body": "I wonder if dask could safely copy the active value of warnings.filters\ninto the graph directly rather than having its own configuration option.\n\nOn Tue, Jun 25, 2019 at 9:35 AM jakirkham <notifications@github.com> wrote:\n\n> We can probably set some sort of config option to handle warnings. These\n> also can be set with a context manager. dask.catch_warnings() could then\n> be a user friendly way of setting that config option.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3245?email_source=notifications&email_token=AAJJFVUKBBAAXVMJRO2F233P4JCMJA5CNFSM4ETPC7PKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODYQ2Y2Q#issuecomment-505523306>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAJJFVXHJ4ZKAEH6LZ2PN4LP4JCMJANCNFSM4ETPC7PA>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/505526971/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/505545963",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-505545963",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 505545963,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTU0NTk2Mw==",
        "user": {
            "login": "WeatherGod",
            "id": 291576,
            "node_id": "MDQ6VXNlcjI5MTU3Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/291576?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WeatherGod",
            "html_url": "https://github.com/WeatherGod",
            "followers_url": "https://api.github.com/users/WeatherGod/followers",
            "following_url": "https://api.github.com/users/WeatherGod/following{/other_user}",
            "gists_url": "https://api.github.com/users/WeatherGod/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WeatherGod/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WeatherGod/subscriptions",
            "organizations_url": "https://api.github.com/users/WeatherGod/orgs",
            "repos_url": "https://api.github.com/users/WeatherGod/repos",
            "events_url": "https://api.github.com/users/WeatherGod/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WeatherGod/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-25T17:35:10Z",
        "updated_at": "2019-06-25T17:35:10Z",
        "author_association": "NONE",
        "body": "+1 on this point. My original point isn't addressed here, and that is that\nwhen I write up some generic function that expects numpy-like arrays, I\nhave already been setting the errstate for numpy. Then along comes a dask\narray and all of the sudden, my errstate settings don't apply any more. I\ndon't want to have to import a dask package (and thereby have a dask\ndependency where I didn't have one before), and have to set the errstate\ntwice on the off-chance that one of my inputs is actually a dask array\nunder the hood.\n\nOn Tue, Jun 25, 2019 at 12:45 PM Stephan Hoyer <notifications@github.com>\nwrote:\n\n> I wonder if dask could safely copy the active value of warnings.filters\n> into the graph directly rather than having its own configuration option.\n>\n> On Tue, Jun 25, 2019 at 9:35 AM jakirkham <notifications@github.com>\n> wrote:\n>\n> > We can probably set some sort of config option to handle warnings. These\n> > also can be set with a context manager. dask.catch_warnings() could then\n> > be a user friendly way of setting that config option.\n> >\n> > \u2014\n> > You are receiving this because you were mentioned.\n> > Reply to this email directly, view it on GitHub\n> > <\n> https://github.com/dask/dask/issues/3245?email_source=notifications&email_token=AAJJFVUKBBAAXVMJRO2F233P4JCMJA5CNFSM4ETPC7PKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODYQ2Y2Q#issuecomment-505523306\n> >,\n> > or mute the thread\n> > <\n> https://github.com/notifications/unsubscribe-auth/AAJJFVXHJ4ZKAEH6LZ2PN4LP4JCMJANCNFSM4ETPC7PA\n> >\n> > .\n> >\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3245?email_source=notifications&email_token=AACHF6GJKFLH52BEB67TUN3P4JDRNA5CNFSM4ETPC7PKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODYQ3VOY#issuecomment-505526971>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AACHF6FE6S7FW5NRE43B5ZDP4JDRNANCNFSM4ETPC7PA>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/505545963/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/505548282",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-505548282",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 505548282,
        "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTU0ODI4Mg==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-06-25T17:41:27Z",
        "updated_at": "2019-06-25T17:41:27Z",
        "author_association": "MEMBER",
        "body": "We could definitely do this for NumPy with np.geterr. I don't know if\nwarnings.filters is a public API, though. Also there are potentially\nperformance implications to setting warnings filters in every task.\n\nOn Tue, Jun 25, 2019 at 10:35 AM Benjamin Root <notifications@github.com>\nwrote:\n\n> +1 on this point. My original point isn't addressed here, and that is that\n> when I write up some generic function that expects numpy-like arrays, I\n> have already been setting the errstate for numpy. Then along comes a dask\n> array and all of the sudden, my errstate settings don't apply any more. I\n> don't want to have to import a dask package (and thereby have a dask\n> dependency where I didn't have one before), and have to set the errstate\n> twice on the off-chance that one of my inputs is actually a dask array\n> under the hood.\n>\n> On Tue, Jun 25, 2019 at 12:45 PM Stephan Hoyer <notifications@github.com>\n> wrote:\n>\n> > I wonder if dask could safely copy the active value of warnings.filters\n> > into the graph directly rather than having its own configuration option.\n> >\n> > On Tue, Jun 25, 2019 at 9:35 AM jakirkham <notifications@github.com>\n> > wrote:\n> >\n> > > We can probably set some sort of config option to handle warnings.\n> These\n> > > also can be set with a context manager. dask.catch_warnings() could\n> then\n> > > be a user friendly way of setting that config option.\n> > >\n> > > \u2014\n> > > You are receiving this because you were mentioned.\n> > > Reply to this email directly, view it on GitHub\n> > > <\n> >\n> https://github.com/dask/dask/issues/3245?email_source=notifications&email_token=AAJJFVUKBBAAXVMJRO2F233P4JCMJA5CNFSM4ETPC7PKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODYQ2Y2Q#issuecomment-505523306\n> > >,\n> > > or mute the thread\n> > > <\n> >\n> https://github.com/notifications/unsubscribe-auth/AAJJFVXHJ4ZKAEH6LZ2PN4LP4JCMJANCNFSM4ETPC7PA\n> > >\n> > > .\n> > >\n> >\n> > \u2014\n> > You are receiving this because you commented.\n> > Reply to this email directly, view it on GitHub\n> > <\n> https://github.com/dask/dask/issues/3245?email_source=notifications&email_token=AACHF6GJKFLH52BEB67TUN3P4JDRNA5CNFSM4ETPC7PKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODYQ3VOY#issuecomment-505526971\n> >,\n> > or mute the thread\n> > <\n> https://github.com/notifications/unsubscribe-auth/AACHF6FE6S7FW5NRE43B5ZDP4JDRNANCNFSM4ETPC7PA\n> >\n> > .\n> >\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dask/dask/issues/3245?email_source=notifications&email_token=AAJJFVSV4ZJII3V5EXBJBFTP4JJNDA5CNFSM4ETPC7PKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODYRAJ2Y#issuecomment-505545963>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAJJFVTTVVUPRRBYBKHBCMDP4JJNDANCNFSM4ETPC7PA>\n> .\n>\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/505548282/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/615194760",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-615194760",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 615194760,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTE5NDc2MA==",
        "user": {
            "login": "astrofrog",
            "id": 314716,
            "node_id": "MDQ6VXNlcjMxNDcxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/314716?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/astrofrog",
            "html_url": "https://github.com/astrofrog",
            "followers_url": "https://api.github.com/users/astrofrog/followers",
            "following_url": "https://api.github.com/users/astrofrog/following{/other_user}",
            "gists_url": "https://api.github.com/users/astrofrog/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/astrofrog/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/astrofrog/subscriptions",
            "organizations_url": "https://api.github.com/users/astrofrog/orgs",
            "repos_url": "https://api.github.com/users/astrofrog/repos",
            "events_url": "https://api.github.com/users/astrofrog/events{/privacy}",
            "received_events_url": "https://api.github.com/users/astrofrog/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-17T11:30:03Z",
        "updated_at": "2020-04-17T13:05:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "Just wanted to add a +1 to this feature request! For me having a dask seterr for numpy equivalents (e.g. ``da.nansum``) would already be a huge improvement.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/615194760/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/685264586",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-685264586",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 685264586,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTI2NDU4Ng==",
        "user": {
            "login": "jrdzha",
            "id": 12738689,
            "node_id": "MDQ6VXNlcjEyNzM4Njg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/12738689?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrdzha",
            "html_url": "https://github.com/jrdzha",
            "followers_url": "https://api.github.com/users/jrdzha/followers",
            "following_url": "https://api.github.com/users/jrdzha/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrdzha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrdzha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrdzha/subscriptions",
            "organizations_url": "https://api.github.com/users/jrdzha/orgs",
            "repos_url": "https://api.github.com/users/jrdzha/repos",
            "events_url": "https://api.github.com/users/jrdzha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrdzha/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-02T03:17:39Z",
        "updated_at": "2020-09-02T03:17:39Z",
        "author_association": "NONE",
        "body": "+1 here as well.. but am wondering if theres a way to suppress general warnings beyond those generated by np",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/685264586/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/697968911",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-697968911",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 697968911,
        "node_id": "MDEyOklzc3VlQ29tbWVudDY5Nzk2ODkxMQ==",
        "user": {
            "login": "miroenev",
            "id": 8701332,
            "node_id": "MDQ6VXNlcjg3MDEzMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8701332?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/miroenev",
            "html_url": "https://github.com/miroenev",
            "followers_url": "https://api.github.com/users/miroenev/followers",
            "following_url": "https://api.github.com/users/miroenev/following{/other_user}",
            "gists_url": "https://api.github.com/users/miroenev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/miroenev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/miroenev/subscriptions",
            "organizations_url": "https://api.github.com/users/miroenev/orgs",
            "repos_url": "https://api.github.com/users/miroenev/repos",
            "events_url": "https://api.github.com/users/miroenev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/miroenev/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-09-23T20:57:55Z",
        "updated_at": "2020-09-23T20:57:55Z",
        "author_association": "NONE",
        "body": "+1",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/697968911/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/904048307",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-904048307",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 904048307,
        "node_id": "IC_kwDOAbcwm8414q6z",
        "user": {
            "login": "adriesse",
            "id": 9001027,
            "node_id": "MDQ6VXNlcjkwMDEwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9001027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adriesse",
            "html_url": "https://github.com/adriesse",
            "followers_url": "https://api.github.com/users/adriesse/followers",
            "following_url": "https://api.github.com/users/adriesse/following{/other_user}",
            "gists_url": "https://api.github.com/users/adriesse/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adriesse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adriesse/subscriptions",
            "organizations_url": "https://api.github.com/users/adriesse/orgs",
            "repos_url": "https://api.github.com/users/adriesse/repos",
            "events_url": "https://api.github.com/users/adriesse/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adriesse/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-23T19:16:59Z",
        "updated_at": "2021-08-23T19:16:59Z",
        "author_association": "NONE",
        "body": "+1",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/904048307/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/904155919",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-904155919",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 904155919,
        "node_id": "IC_kwDOAbcwm8415FMP",
        "user": {
            "login": "max-sixty",
            "id": 5635139,
            "node_id": "MDQ6VXNlcjU2MzUxMzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5635139?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/max-sixty",
            "html_url": "https://github.com/max-sixty",
            "followers_url": "https://api.github.com/users/max-sixty/followers",
            "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
            "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
            "organizations_url": "https://api.github.com/users/max-sixty/orgs",
            "repos_url": "https://api.github.com/users/max-sixty/repos",
            "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/max-sixty/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-08-23T21:46:34Z",
        "updated_at": "2021-08-23T21:46:34Z",
        "author_association": "NONE",
        "body": "(I added and deleted a comment because I thought this was the issue on the xarray repo, apologies)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/904155919/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1073245768",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-1073245768",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 1073245768,
        "node_id": "IC_kwDOAbcwm84_-G5I",
        "user": {
            "login": "fingoldo",
            "id": 16359856,
            "node_id": "MDQ6VXNlcjE2MzU5ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16359856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fingoldo",
            "html_url": "https://github.com/fingoldo",
            "followers_url": "https://api.github.com/users/fingoldo/followers",
            "following_url": "https://api.github.com/users/fingoldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/fingoldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fingoldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fingoldo/subscriptions",
            "organizations_url": "https://api.github.com/users/fingoldo/orgs",
            "repos_url": "https://api.github.com/users/fingoldo/repos",
            "events_url": "https://api.github.com/users/fingoldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fingoldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-20T12:56:59Z",
        "updated_at": "2022-03-20T12:56:59Z",
        "author_association": "NONE",
        "body": "Any solution? There are huge logs of such warnings in the ipython notebook...",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1073245768/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1228645784",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-1228645784",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 1228645784,
        "node_id": "IC_kwDOAbcwm85JO6WY",
        "user": {
            "login": "CptOrange16",
            "id": 4366792,
            "node_id": "MDQ6VXNlcjQzNjY3OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4366792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CptOrange16",
            "html_url": "https://github.com/CptOrange16",
            "followers_url": "https://api.github.com/users/CptOrange16/followers",
            "following_url": "https://api.github.com/users/CptOrange16/following{/other_user}",
            "gists_url": "https://api.github.com/users/CptOrange16/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CptOrange16/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CptOrange16/subscriptions",
            "organizations_url": "https://api.github.com/users/CptOrange16/orgs",
            "repos_url": "https://api.github.com/users/CptOrange16/repos",
            "events_url": "https://api.github.com/users/CptOrange16/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CptOrange16/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-08-26T15:35:19Z",
        "updated_at": "2022-08-26T15:35:19Z",
        "author_association": "NONE",
        "body": "+1 on this issue, the the error logs are growing a lot because of the warning message",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1228645784/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1246850728",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-1246850728",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 1246850728,
        "node_id": "IC_kwDOAbcwm85KUW6o",
        "user": {
            "login": "vnoel",
            "id": 731499,
            "node_id": "MDQ6VXNlcjczMTQ5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/731499?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vnoel",
            "html_url": "https://github.com/vnoel",
            "followers_url": "https://api.github.com/users/vnoel/followers",
            "following_url": "https://api.github.com/users/vnoel/following{/other_user}",
            "gists_url": "https://api.github.com/users/vnoel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vnoel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vnoel/subscriptions",
            "organizations_url": "https://api.github.com/users/vnoel/orgs",
            "repos_url": "https://api.github.com/users/vnoel/repos",
            "events_url": "https://api.github.com/users/vnoel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vnoel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-14T14:27:53Z",
        "updated_at": "2022-09-14T14:27:53Z",
        "author_association": "NONE",
        "body": "When running my code I am getting lots of warnings like \"dask/core.py:119: RuntimeWarning: invalid value encountered in true_divide\". From the discussion above I understand there is currently no way to silence those warnings (np.seterr(invalid='ignore') does not work). Is that correct?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1246850728/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1482758969",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-1482758969",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 1482758969,
        "node_id": "IC_kwDOAbcwm85YYRs5",
        "user": {
            "login": "bertcoerver",
            "id": 18460767,
            "node_id": "MDQ6VXNlcjE4NDYwNzY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18460767?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bertcoerver",
            "html_url": "https://github.com/bertcoerver",
            "followers_url": "https://api.github.com/users/bertcoerver/followers",
            "following_url": "https://api.github.com/users/bertcoerver/following{/other_user}",
            "gists_url": "https://api.github.com/users/bertcoerver/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bertcoerver/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bertcoerver/subscriptions",
            "organizations_url": "https://api.github.com/users/bertcoerver/orgs",
            "repos_url": "https://api.github.com/users/bertcoerver/repos",
            "events_url": "https://api.github.com/users/bertcoerver/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bertcoerver/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-24T12:59:46Z",
        "updated_at": "2023-03-24T12:59:46Z",
        "author_association": "NONE",
        "body": "Im getting warnings too: \"RuntimeWarning: invalid value encountered in cve2\". \r\n\r\n`cve2` is a (guvectorized) function defined by myself which uses `np.nanmean` and which I call using `xr.apply_ufunc`. \r\n\r\nIs there any way to silence these warnings?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1482758969/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1483565983",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-1483565983",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 1483565983,
        "node_id": "IC_kwDOAbcwm85YbWuf",
        "user": {
            "login": "j-bennet",
            "id": 637013,
            "node_id": "MDQ6VXNlcjYzNzAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/637013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-bennet",
            "html_url": "https://github.com/j-bennet",
            "followers_url": "https://api.github.com/users/j-bennet/followers",
            "following_url": "https://api.github.com/users/j-bennet/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-bennet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-bennet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-bennet/subscriptions",
            "organizations_url": "https://api.github.com/users/j-bennet/orgs",
            "repos_url": "https://api.github.com/users/j-bennet/repos",
            "events_url": "https://api.github.com/users/j-bennet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-bennet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-24T23:15:30Z",
        "updated_at": "2023-03-24T23:15:30Z",
        "author_association": "MEMBER",
        "body": "@bertcoerver Since you're defining `cve2` yourself, you can catch warnings before `np.nanmean` is called, just like it's done here:\r\n\r\nhttps://github.com/dask/dask/pull/9916/files#diff-b60d0c0c32d24414e50ffbedb190c9e227b6b7db7e4727d1121b2e6bde68073fR645-R649",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1483565983/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1483765782",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-1483765782",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 1483765782,
        "node_id": "IC_kwDOAbcwm85YcHgW",
        "user": {
            "login": "bertcoerver",
            "id": 18460767,
            "node_id": "MDQ6VXNlcjE4NDYwNzY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18460767?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bertcoerver",
            "html_url": "https://github.com/bertcoerver",
            "followers_url": "https://api.github.com/users/bertcoerver/followers",
            "following_url": "https://api.github.com/users/bertcoerver/following{/other_user}",
            "gists_url": "https://api.github.com/users/bertcoerver/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bertcoerver/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bertcoerver/subscriptions",
            "organizations_url": "https://api.github.com/users/bertcoerver/orgs",
            "repos_url": "https://api.github.com/users/bertcoerver/repos",
            "events_url": "https://api.github.com/users/bertcoerver/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bertcoerver/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-03-25T08:42:37Z",
        "updated_at": "2023-03-25T08:42:37Z",
        "author_association": "NONE",
        "body": "Thanks @j-bennet but I tried that and doesnt work because Numba doesnt like it. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1483765782/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1508363296",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-1508363296",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 1508363296,
        "node_id": "IC_kwDOAbcwm85Z58wg",
        "user": {
            "login": "vnoel",
            "id": 731499,
            "node_id": "MDQ6VXNlcjczMTQ5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/731499?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vnoel",
            "html_url": "https://github.com/vnoel",
            "followers_url": "https://api.github.com/users/vnoel/followers",
            "following_url": "https://api.github.com/users/vnoel/following{/other_user}",
            "gists_url": "https://api.github.com/users/vnoel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vnoel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vnoel/subscriptions",
            "organizations_url": "https://api.github.com/users/vnoel/orgs",
            "repos_url": "https://api.github.com/users/vnoel/repos",
            "events_url": "https://api.github.com/users/vnoel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vnoel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-14T11:26:44Z",
        "updated_at": "2023-04-14T11:27:25Z",
        "author_association": "NONE",
        "body": "I am sorry to be a pain, but this issue is making my Jupyter notebooks really messy. The useful output is getting hard to find among the warnings. It's getting hard to work this way.\r\n![Capture d\u2019e\u0301cran 2023-04-14 a\u0300 13 23 55](https://user-images.githubusercontent.com/731499/232031672-fc8eda54-420e-41f7-b5ca-9cfd930130e1.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1508363296/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1509019977",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-1509019977",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 1509019977,
        "node_id": "IC_kwDOAbcwm85Z8dFJ",
        "user": {
            "login": "j-bennet",
            "id": 637013,
            "node_id": "MDQ6VXNlcjYzNzAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/637013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-bennet",
            "html_url": "https://github.com/j-bennet",
            "followers_url": "https://api.github.com/users/j-bennet/followers",
            "following_url": "https://api.github.com/users/j-bennet/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-bennet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-bennet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-bennet/subscriptions",
            "organizations_url": "https://api.github.com/users/j-bennet/orgs",
            "repos_url": "https://api.github.com/users/j-bennet/repos",
            "events_url": "https://api.github.com/users/j-bennet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-bennet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-14T17:51:30Z",
        "updated_at": "2023-04-14T17:51:30Z",
        "author_association": "MEMBER",
        "body": "@vnoel Which function are you getting those from?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1509019977/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1512802555",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-1512802555",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 1512802555,
        "node_id": "IC_kwDOAbcwm85aK4j7",
        "user": {
            "login": "vnoel",
            "id": 731499,
            "node_id": "MDQ6VXNlcjczMTQ5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/731499?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vnoel",
            "html_url": "https://github.com/vnoel",
            "followers_url": "https://api.github.com/users/vnoel/followers",
            "following_url": "https://api.github.com/users/vnoel/following{/other_user}",
            "gists_url": "https://api.github.com/users/vnoel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vnoel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vnoel/subscriptions",
            "organizations_url": "https://api.github.com/users/vnoel/orgs",
            "repos_url": "https://api.github.com/users/vnoel/repos",
            "events_url": "https://api.github.com/users/vnoel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vnoel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-18T10:05:24Z",
        "updated_at": "2023-04-18T10:45:40Z",
        "author_association": "NONE",
        "body": "@j-bennet I am reading a lot of netCDF files with open_mfdataset() into a single dataset, and then dividing one of the dataset variables by another variable of the dataset. \r\n\r\nBy following your advice above I've found I can silence the warnings by wrapping commands that do the division with \r\n```python\r\nimport warnings\r\nwith warnings.catch_warnings():\r\n    warnings.filterwarnings('ignore', 'invalid value encountered in true_divide', RuntimeWarning)\r\n```\r\nMany thanks for pointing me in that direction! Unfortunately it's not a very convenient solution when doing data exploration with Jupyter -- it means adding at least two lines to any Jupyter cell that contains code which might do a division...\r\n\r\nIs there a way to request warning filtering once at the beginning of a notebook?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1512802555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1513215688",
        "html_url": "https://github.com/dask/dask/issues/3245#issuecomment-1513215688",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3245",
        "id": 1513215688,
        "node_id": "IC_kwDOAbcwm85aMdbI",
        "user": {
            "login": "j-bennet",
            "id": 637013,
            "node_id": "MDQ6VXNlcjYzNzAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/637013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-bennet",
            "html_url": "https://github.com/j-bennet",
            "followers_url": "https://api.github.com/users/j-bennet/followers",
            "following_url": "https://api.github.com/users/j-bennet/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-bennet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-bennet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-bennet/subscriptions",
            "organizations_url": "https://api.github.com/users/j-bennet/orgs",
            "repos_url": "https://api.github.com/users/j-bennet/repos",
            "events_url": "https://api.github.com/users/j-bennet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-bennet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-18T14:01:56Z",
        "updated_at": "2023-04-18T14:01:56Z",
        "author_association": "MEMBER",
        "body": "@vnoel \r\n\r\n> Is there a way to request warning filtering once at the beginning of a notebook?\r\n\r\nIt's possible to ignore warnings globally in a notebook, by setting the PYTHONWARNINGS env var:\r\n\r\n```python\r\n%env PYTHONWARNINGS=ignore\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1513215688/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]