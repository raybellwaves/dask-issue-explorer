{
    "url": "https://api.github.com/repos/dask/dask/issues/9220",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9220/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9220/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9220/events",
    "html_url": "https://github.com/dask/dask/issues/9220",
    "id": 1285849774,
    "node_id": "I_kwDOAbcwm85MpIKu",
    "number": 9220,
    "title": "pandas type stubs",
    "user": {
        "login": "crusaderky",
        "id": 6213168,
        "node_id": "MDQ6VXNlcjYyMTMxNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6213168?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/crusaderky",
        "html_url": "https://github.com/crusaderky",
        "followers_url": "https://api.github.com/users/crusaderky/followers",
        "following_url": "https://api.github.com/users/crusaderky/following{/other_user}",
        "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions",
        "organizations_url": "https://api.github.com/users/crusaderky/orgs",
        "repos_url": "https://api.github.com/users/crusaderky/repos",
        "events_url": "https://api.github.com/users/crusaderky/events{/privacy}",
        "received_events_url": "https://api.github.com/users/crusaderky/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 996497175,
            "node_id": "MDU6TGFiZWw5OTY0OTcxNzU=",
            "url": "https://api.github.com/repos/dask/dask/labels/good%20second%20issue",
            "name": "good second issue",
            "color": "5319e7",
            "default": false,
            "description": "Clearly described, educational, but less trivial than \"good first issue\"."
        },
        {
            "id": 3798450421,
            "node_id": "LA_kwDOAbcwm87iZ8D1",
            "url": "https://api.github.com/repos/dask/dask/labels/hygiene",
            "name": "hygiene",
            "color": "b5ccfa",
            "default": false,
            "description": "Improve code quality and reduce maintenance overhead"
        },
        {
            "id": 3798450422,
            "node_id": "LA_kwDOAbcwm87iZ8D2",
            "url": "https://api.github.com/repos/dask/dask/labels/p3",
            "name": "p3",
            "color": "ffff33",
            "default": false,
            "description": "Affects a small number of users or is largely cosmetic"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-06-27T13:57:27Z",
    "updated_at": "2022-12-06T18:00:13Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "We should add pandas-stubs to mypy type checks:\r\n```diff\r\n--- a/.pre-commit-config.yaml\r\n+++ b/.pre-commit-config.yaml\r\n@@ -46,6 +46,7 @@ repos:\r\n         args: []\r\n         additional_dependencies:\r\n           # Type stubs\r\n+          - pandas-stubs\r\n           - types-docutils\r\n```\r\nThe change at the moment causes mypy to produce a wealth of errors (see below).\r\n\r\nMatching work on distributed (https://github.com/dask/distributed/pull/6635) showed that using pandas-stubs is not quite a smooth ride yet. However, their benefit to dask/dask would be substantial; we should collaborate with/contribute to upstream to fix any issues.\r\n\r\n```\r\ndask/dataframe/_pyarrow_compat.py:142: error: Module has no attribute \"arrays\"; maybe \"array\"?\r\ndask/dataframe/_pyarrow_compat.py:143: error: Module has no attribute \"arrays\"; maybe \"array\"?\r\ndask/dataframe/_compat.py:19: error: Unsupported operand types for <= (\"Tuple[int, int, int]\" and \"None\")\r\ndask/dataframe/_compat.py:19: note: Left operand is of type \"Optional[Tuple[int, ...]]\"\r\ndask/dataframe/tests/test_pyarrow_compat.py:16: error: Module has no attribute \"arrays\"; maybe \"array\"?\r\ndask/array/core.py:5689: error: Incompatible return value type (got \"signedinteger[_64Bit]\", expected \"int\")\r\ndask/dataframe/core.py:4067: error: Incompatible types in assignment (expression has type \"Type[Index]\", base class \"Series\" defined the type as \"Type[TimestampSeries]\")\r\ndask/dataframe/shuffle.py:97: error: \"List[int]\" has no attribute \"tolist\"\r\ndask/dataframe/shuffle.py:98: error: \"List[int]\" has no attribute \"tolist\"\r\ndask/dataframe/shuffle.py:326: error: No overload variant of \"isna\" matches argument type \"Sequence[Any]\"\r\ndask/dataframe/shuffle.py:326: note: Possible overload variants:\r\ndask/dataframe/shuffle.py:326: note:     def isna(obj: DataFrame) -> DataFrame\r\ndask/dataframe/shuffle.py:326: note:     def isna(obj: Series[Any]) -> Series[bool]\r\ndask/dataframe/shuffle.py:326: note:     def isna(obj: Union[Index, List[Any], Union[ExtensionArray, ndarray[Any, Any]]]) -> ndarray[Any, Any]\r\ndask/dataframe/shuffle.py:326: note:     def isna(obj: Union[str, bytes, date, datetime, timedelta, bool, int, float, complex, Timestamp, Timedelta]) -> bool\r\ndask/dataframe/groupby.py:1390: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1397: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1404: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1410: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1420: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1430: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1436: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1464: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1474: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1482: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1492: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1518: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1576: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1582: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:1588: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:2078: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:2082: error: Module has no attribute \"GroupBy\"\r\ndask/dataframe/groupby.py:2119: error: Module has no attribute \"DataFrameGroupBy\"\r\ndask/dataframe/groupby.py:2126: error: Module has no attribute \"DataFrameGroupBy\"\r\ndask/dataframe/groupby.py:2156: error: Module has no attribute \"SeriesGroupBy\"\r\ndask/dataframe/groupby.py:2194: error: Module has no attribute \"SeriesGroupBy\"\r\ndask/dataframe/groupby.py:2205: error: Module has no attribute \"SeriesGroupBy\"\r\ndask/dataframe/groupby.py:2209: error: Module has no attribute \"SeriesGroupBy\"\r\ndask/dataframe/groupby.py:2219: error: Module has no attribute \"SeriesGroupBy\"\r\ndask/dataframe/groupby.py:2231: error: Module has no attribute \"SeriesGroupBy\"\r\ndask/dataframe/groupby.py:2245: error: Module has no attribute \"SeriesGroupBy\"\r\ndask/dataframe/tests/test_categorical.py:26: error: No overload variant of \"Series\" matches argument types \"range\", \"Categorical\"\r\ndask/dataframe/tests/test_categorical.py:26: note: Possible overload variants:\r\ndask/dataframe/tests/test_categorical.py:26: note:     def [S1 in (str, bytes, date, datetime, timedelta, bool, int, float, complex, Timestamp, Timedelta, datetime64)] __new__(cls, data: DatetimeIndex, index: Union[str, int, Series[Any], List[Any], Index] = ..., dtype: Any = ..., name: Optional[Hashable] = ..., copy: bool = ..., fastpath: bool = ...) -> TimestampSeries\r\ndask/dataframe/tests/test_categorical.py:26: note:     def [S1 in (str, bytes, date, datetime, timedelta, bool, int, float, complex, Timestamp, Timedelta, datetime64)] __new__(cls, data: object, dtype: Type[S1], index: Union[str, int, Series[Any], List[Any], Index] = ..., name: Optional[Hashable] = ..., copy: bool = ..., fastpath: bool = ...) -> Series[S1]\r\ndask/dataframe/tests/test_categorical.py:26: note:     def [S1 in (str, bytes, date, datetime, timedelta, bool, int, float, complex, Timestamp, Timedelta, datetime64)] __new__(cls, data: object = ..., index: Union[str, int, Series[Any], List[Any], Index] = ..., dtype: Any = ..., name: Optional[Hashable] = ..., copy: bool = ..., fastpath: bool = ...) -> Series[Any]\r\ndask/dataframe/tests/test_hyperloglog.py:61: error: No overload variant of \"Series\" matches argument types \"ndarray[Any, dtype[floating[_64Bit]]]\", \"ndarray[Any, dtype[floating[_64Bit]]]\"\r\ndask/dataframe/tests/test_hyperloglog.py:61: note: Possible overload variants:\r\ndask/dataframe/tests/test_hyperloglog.py:61: note:     def [S1 in (str, bytes, date, datetime, timedelta, bool, int, float, complex, Timestamp, Timedelta, datetime64)] __new__(cls, data: DatetimeIndex, index: Union[str, int, Series[Any], List[Any], Index] = ..., dtype: Any = ..., name: Optional[Hashable] = ..., copy: bool = ..., fastpath: bool = ...) -> TimestampSeries\r\ndask/dataframe/tests/test_hyperloglog.py:61: note:     def [S1 in (str, bytes, date, datetime, timedelta, bool, int, float, complex, Timestamp, Timedelta, datetime64)] __new__(cls, data: object, dtype: Type[S1], index: Union[str, int, Series[Any], List[Any], Index] = ..., name: Optional[Hashable] = ..., copy: bool = ..., fastpath: bool = ...) -> Series[S1]\r\ndask/dataframe/tests/test_hyperloglog.py:61: note:     def [S1 in (str, bytes, date, datetime, timedelta, bool, int, float, complex, Timestamp, Timedelta, datetime64)] __new__(cls, data: object = ..., index: Union[str, int, Series[Any], List[Any], Index] = ..., dtype: Any = ..., name: Optional[Hashable] = ..., copy: bool = ..., fastpath: bool = ...) -> Series[Any]\r\ndask/dataframe/tests/test_hyperloglog.py:62: error: No overload variant of \"Series\" matches argument types \"ndarray[Any, dtype[floating[_64Bit]]]\", \"ndarray[Any, dtype[floating[_64Bit]]]\"\r\ndask/dataframe/tests/test_hyperloglog.py:62: note: Possible overload variants:\r\ndask/dataframe/tests/test_hyperloglog.py:62: note:     def [S1 in (str, bytes, date, datetime, timedelta, bool, int, float, complex, Timestamp, Timedelta, datetime64)] __new__(cls, data: DatetimeIndex, index: Union[str, int, Series[Any], List[Any], Index] = ..., dtype: Any = ..., name: Optional[Hashable] = ..., copy: bool = ..., fastpath: bool = ...) -> TimestampSeries\r\ndask/dataframe/tests/test_hyperloglog.py:62: note:     def [S1 in (str, bytes, date, datetime, timedelta, bool, int, float, complex, Timestamp, Timedelta, datetime64)] __new__(cls, data: object, dtype: Type[S1], index: Union[str, int, Series[Any], List[Any], Index] = ..., name: Optional[Hashable] = ..., copy: bool = ..., fastpath: bool = ...) -> Series[S1]\r\ndask/dataframe/tests/test_hyperloglog.py:62: note:     def [S1 in (str, bytes, date, datetime, timedelta, bool, int, float, complex, Timestamp, Timedelta, datetime64)] __new__(cls, data: object = ..., index: Union[str, int, Series[Any], List[Any], Index] = ..., dtype: Any = ..., name: Optional[Hashable] = ..., copy: bool = ..., fastpath: bool = ...) -> Series[Any]\r\nFound 38 errors in 9 files (checked 242 source files)\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9220/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9220/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}