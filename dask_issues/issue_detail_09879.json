{
    "url": "https://api.github.com/repos/dask/dask/issues/9879",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9879/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9879/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9879/events",
    "html_url": "https://github.com/dask/dask/issues/9879",
    "id": 1558639932,
    "node_id": "I_kwDOAbcwm85c5vU8",
    "number": 9879,
    "title": "Apply `dataframe.dtype_backend` configuration option globally ",
    "user": {
        "login": "jrbourbeau",
        "id": 11656932,
        "node_id": "MDQ6VXNlcjExNjU2OTMy",
        "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrbourbeau",
        "html_url": "https://github.com/jrbourbeau",
        "followers_url": "https://api.github.com/users/jrbourbeau/followers",
        "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
        "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
        "repos_url": "https://api.github.com/users/jrbourbeau/repos",
        "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2023-01-26T19:14:47Z",
    "updated_at": "2024-03-25T01:45:32Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "We recently added a `dataframe.dtype_backend` config option for specifying whether classic `numpy`-backed dtypes (e.g. `int64`, `float64`, etc.) or `pyarrow`-backed dtypes (e.g. `int64[pyarrow]`, `float64[pyarrow]`, etc.) should be used in a dask DataFrame.\r\n\r\nHowever, today `dataframe.dtype_backend` is only used in `dd.read_parquet`. To extend where `pyarrow` dtypes can be used, and arguably for a more intuitive UX (xref https://github.com/dask/dask/issues/9840), I think we want `dataframe.dtype_backend` to work with all methods for creating a dask DataFrame. That is, things like the following\r\n\r\n```python\r\nimport dask\r\nimport dask.dataframe as dd\r\n\r\n# Tell dask to use `pyarrow`-backed dtypes\r\ndask.config.set({\"dataframe.dtypes_backend\": \"pyarrow\"})\r\n\r\ndf = dd.read_csv(...)\r\ndf = dd.from_pandas(...)\r\ndf = dd.from_delayed(...)\r\n...\r\n```\r\n\r\nshould all return dask DataFrames backed by `pyarrow` dtypes.\r\n\r\nSome methods, like `read_parquet`, will want to have a specialized implementation for this. However, in cases where a specialized method isn't implemented, we should still automatically cast the dask DataFrame to use `pyarrow` dtypes when `dataframe.dtype_backend = \"pyarrrow\"`. For example, through an (optional) `map_partitions` call after our existing DataFrame creation logic. \r\n\r\ncc @rjzamora @phofl for visibility ",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9879/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9879/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}