[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/845916610",
        "html_url": "https://github.com/dask/dask/pull/7686#issuecomment-845916610",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7686",
        "id": 845916610,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg0NTkxNjYxMA==",
        "user": {
            "login": "bmerry",
            "id": 1963944,
            "node_id": "MDQ6VXNlcjE5NjM5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1963944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmerry",
            "html_url": "https://github.com/bmerry",
            "followers_url": "https://api.github.com/users/bmerry/followers",
            "following_url": "https://api.github.com/users/bmerry/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions",
            "organizations_url": "https://api.github.com/users/bmerry/orgs",
            "repos_url": "https://api.github.com/users/bmerry/repos",
            "events_url": "https://api.github.com/users/bmerry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmerry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-05-21T12:29:30Z",
        "updated_at": "2021-05-21T12:29:30Z",
        "author_association": "MEMBER",
        "body": "cc @rjzamora @dask/array ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/845916610/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/847903964",
        "html_url": "https://github.com/dask/dask/pull/7686#issuecomment-847903964",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7686",
        "id": 847903964,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzkwMzk2NA==",
        "user": {
            "login": "bmerry",
            "id": 1963944,
            "node_id": "MDQ6VXNlcjE5NjM5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1963944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmerry",
            "html_url": "https://github.com/bmerry",
            "followers_url": "https://api.github.com/users/bmerry/followers",
            "following_url": "https://api.github.com/users/bmerry/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions",
            "organizations_url": "https://api.github.com/users/bmerry/orgs",
            "repos_url": "https://api.github.com/users/bmerry/repos",
            "events_url": "https://api.github.com/users/bmerry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmerry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-05-25T14:10:53Z",
        "updated_at": "2021-05-25T14:10:53Z",
        "author_association": "MEMBER",
        "body": "@madsbk any tips on the serialization? If I understand correctly (which I'm not at all sure I do), `to_serialize` says \"serialize how you like on the client, but don't deserialize on the scheduler, pass it to the worker to deserialize.\" However, I don't know how to get the worker to do the deserialization: I end up with a `Serialize` (or `Serialized`, I forget) object in the graph instead of the original object. This might be because it's nested inside a task.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/847903964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/847931649",
        "html_url": "https://github.com/dask/dask/pull/7686#issuecomment-847931649",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7686",
        "id": 847931649,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzkzMTY0OQ==",
        "user": {
            "login": "madsbk",
            "id": 1041088,
            "node_id": "MDQ6VXNlcjEwNDEwODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1041088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/madsbk",
            "html_url": "https://github.com/madsbk",
            "followers_url": "https://api.github.com/users/madsbk/followers",
            "following_url": "https://api.github.com/users/madsbk/following{/other_user}",
            "gists_url": "https://api.github.com/users/madsbk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/madsbk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/madsbk/subscriptions",
            "organizations_url": "https://api.github.com/users/madsbk/orgs",
            "repos_url": "https://api.github.com/users/madsbk/repos",
            "events_url": "https://api.github.com/users/madsbk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/madsbk/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-05-25T14:45:47Z",
        "updated_at": "2021-05-25T14:49:46Z",
        "author_association": "MEMBER",
        "body": "> to_serialize says \"serialize how you like on the client, but don't deserialize on the scheduler, pass it to the worker to deserialize.\"\r\n\r\nYes this is correct. The worker should deserialize the data automatically but the serialization logic in Distributed is very messy so it is hard to know exactly why it doesn't happen :/\r\nOne way to make the worker deserialize a `to_serialize` object is to give the object as an argument to the materialized tasks. \r\n\r\nFYI: I am working on redesigning the serialization logic in Distributed, which will handle issues like this. E.g. the `to_serialize` function will be an optional flag to avoid unnecessary deserializations, it will not be required for correctness.\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/847931649/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/848624077",
        "html_url": "https://github.com/dask/dask/pull/7686#issuecomment-848624077",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7686",
        "id": 848624077,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg0ODYyNDA3Nw==",
        "user": {
            "login": "bmerry",
            "id": 1963944,
            "node_id": "MDQ6VXNlcjE5NjM5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1963944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmerry",
            "html_url": "https://github.com/bmerry",
            "followers_url": "https://api.github.com/users/bmerry/followers",
            "following_url": "https://api.github.com/users/bmerry/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions",
            "organizations_url": "https://api.github.com/users/bmerry/orgs",
            "repos_url": "https://api.github.com/users/bmerry/repos",
            "events_url": "https://api.github.com/users/bmerry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmerry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-05-26T09:37:19Z",
        "updated_at": "2021-05-26T09:37:19Z",
        "author_association": "MEMBER",
        "body": "> FYI: I am working on redesigning the serialization logic in Distributed, which will handle issues like this.\r\n\r\nSounds good. What's the timeframe, and is there a ticket I can watch so that I'll know when it's in place? If it's happening soon I might just leave this until then.\r\n\r\n> One way to make the worker deserialize a to_serialize object is to give the object as an argument to the materialized tasks.\r\n\r\nTo check that I understand you correctly: if X is a to_serialize object, and the layer materialization produces a task like this:\r\n```\r\n(func, X, 123)\r\n```\r\nit should work, whereas a task\r\n```\r\n(dict, [[\"key1\", X], [\"key2\", 123]])\r\n```\r\nmight not? (the latter is approximately what I'm currently doing, although there are two layers of dict involved).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/848624077/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/848758507",
        "html_url": "https://github.com/dask/dask/pull/7686#issuecomment-848758507",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7686",
        "id": 848758507,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg0ODc1ODUwNw==",
        "user": {
            "login": "bmerry",
            "id": 1963944,
            "node_id": "MDQ6VXNlcjE5NjM5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1963944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmerry",
            "html_url": "https://github.com/bmerry",
            "followers_url": "https://api.github.com/users/bmerry/followers",
            "following_url": "https://api.github.com/users/bmerry/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions",
            "organizations_url": "https://api.github.com/users/bmerry/orgs",
            "repos_url": "https://api.github.com/users/bmerry/repos",
            "events_url": "https://api.github.com/users/bmerry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmerry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-05-26T13:12:29Z",
        "updated_at": "2021-05-26T13:12:29Z",
        "author_association": "MEMBER",
        "body": "I've updated the PR with a different approach - see commit message of bc2b235 for details. @rjzamora I feel like this new approach might not be in the \"spirit\" of BlockwiseDep, in that I'm just using an empty BlockwiseDepDict to access the block index, and all the logic for processing that block index into an input to the task is handled by a wrapper function and some constant (indices is None) arguments to the Blockwise. Let me know if you think I should revert bc2b235.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/848758507/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/873601212",
        "html_url": "https://github.com/dask/dask/pull/7686#issuecomment-873601212",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7686",
        "id": 873601212,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzYwMTIxMg==",
        "user": {
            "login": "bmerry",
            "id": 1963944,
            "node_id": "MDQ6VXNlcjE5NjM5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1963944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmerry",
            "html_url": "https://github.com/bmerry",
            "followers_url": "https://api.github.com/users/bmerry/followers",
            "following_url": "https://api.github.com/users/bmerry/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions",
            "organizations_url": "https://api.github.com/users/bmerry/orgs",
            "repos_url": "https://api.github.com/users/bmerry/repos",
            "events_url": "https://api.github.com/users/bmerry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmerry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-04T14:22:52Z",
        "updated_at": "2021-07-04T14:22:52Z",
        "author_association": "MEMBER",
        "body": "I've added some extra tests, so I think this is ready for review. I'm still not sure if I'm on the right path with serialization - it seems a bit different to the related code.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/873601212/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/873615872",
        "html_url": "https://github.com/dask/dask/pull/7686#issuecomment-873615872",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7686",
        "id": 873615872,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg3MzYxNTg3Mg==",
        "user": {
            "login": "bmerry",
            "id": 1963944,
            "node_id": "MDQ6VXNlcjE5NjM5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1963944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmerry",
            "html_url": "https://github.com/bmerry",
            "followers_url": "https://api.github.com/users/bmerry/followers",
            "following_url": "https://api.github.com/users/bmerry/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmerry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmerry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmerry/subscriptions",
            "organizations_url": "https://api.github.com/users/bmerry/orgs",
            "repos_url": "https://api.github.com/users/bmerry/repos",
            "events_url": "https://api.github.com/users/bmerry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmerry/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-04T15:54:19Z",
        "updated_at": "2021-07-04T15:54:19Z",
        "author_association": "MEMBER",
        "body": "The failing tests seem to be flaky and not related to this PR.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/873615872/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]