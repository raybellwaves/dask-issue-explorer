[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/858213193",
        "html_url": "https://github.com/dask/dask/pull/7781#issuecomment-858213193",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7781",
        "id": 858213193,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1ODIxMzE5Mw==",
        "user": {
            "login": "ian-r-rose",
            "id": 5728311,
            "node_id": "MDQ6VXNlcjU3MjgzMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5728311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ian-r-rose",
            "html_url": "https://github.com/ian-r-rose",
            "followers_url": "https://api.github.com/users/ian-r-rose/followers",
            "following_url": "https://api.github.com/users/ian-r-rose/following{/other_user}",
            "gists_url": "https://api.github.com/users/ian-r-rose/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ian-r-rose/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ian-r-rose/subscriptions",
            "organizations_url": "https://api.github.com/users/ian-r-rose/orgs",
            "repos_url": "https://api.github.com/users/ian-r-rose/repos",
            "events_url": "https://api.github.com/users/ian-r-rose/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ian-r-rose/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-10T01:36:00Z",
        "updated_at": "2021-06-10T01:39:10Z",
        "author_association": "MEMBER",
        "body": "This is cool @BrianArbuckle. In your original issue you had a return value of `Delayed[T]`. That is nice because it more completely describes the signature of the decorator, and without it `T` is effectively an `Any` type. In fact, some type checkers will complain if you only use a `TypeVar`  once in a signature.\r\n\r\nHave you thought about typing `Delayed` as a `Generic[T]` so that the decorator can be completed? Of course, that would somewhat increase the scope of this PR :)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/858213193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/858225001",
        "html_url": "https://github.com/dask/dask/pull/7781#issuecomment-858225001",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7781",
        "id": 858225001,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1ODIyNTAwMQ==",
        "user": {
            "login": "BrianArbuckle",
            "id": 5581818,
            "node_id": "MDQ6VXNlcjU1ODE4MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5581818?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BrianArbuckle",
            "html_url": "https://github.com/BrianArbuckle",
            "followers_url": "https://api.github.com/users/BrianArbuckle/followers",
            "following_url": "https://api.github.com/users/BrianArbuckle/following{/other_user}",
            "gists_url": "https://api.github.com/users/BrianArbuckle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BrianArbuckle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BrianArbuckle/subscriptions",
            "organizations_url": "https://api.github.com/users/BrianArbuckle/orgs",
            "repos_url": "https://api.github.com/users/BrianArbuckle/repos",
            "events_url": "https://api.github.com/users/BrianArbuckle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BrianArbuckle/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-10T02:09:48Z",
        "updated_at": "2021-06-10T02:09:48Z",
        "author_association": "NONE",
        "body": "Hi @ian-r-rose, Thanks (@twoertwein had the great suggestion). I did not think of Generic[T].  I like the idea.  It seems like it might require its own class, or am I making it even more complicated? \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/858225001/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/858226025",
        "html_url": "https://github.com/dask/dask/pull/7781#issuecomment-858226025",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7781",
        "id": 858226025,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1ODIyNjAyNQ==",
        "user": {
            "login": "ian-r-rose",
            "id": 5728311,
            "node_id": "MDQ6VXNlcjU3MjgzMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5728311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ian-r-rose",
            "html_url": "https://github.com/ian-r-rose",
            "followers_url": "https://api.github.com/users/ian-r-rose/followers",
            "following_url": "https://api.github.com/users/ian-r-rose/following{/other_user}",
            "gists_url": "https://api.github.com/users/ian-r-rose/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ian-r-rose/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ian-r-rose/subscriptions",
            "organizations_url": "https://api.github.com/users/ian-r-rose/orgs",
            "repos_url": "https://api.github.com/users/ian-r-rose/repos",
            "events_url": "https://api.github.com/users/ian-r-rose/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ian-r-rose/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-10T02:13:07Z",
        "updated_at": "2021-06-10T02:13:07Z",
        "author_association": "MEMBER",
        "body": "> Hi @ian-r-rose, Thanks (@twoertwein had the great suggestion).\r\n\r\nOops, sorry, missed that the OP wasn't you.\r\n\r\n> I did not think of Generic[T]. I like the idea. It seems like it might require its own class, or am I making it even more complicated?\r\n\r\nTypically one would derive `Delayed` from `Generic[T]` and then annotate the class members with `T` where appropriate. I haven't fully thought it through, so I don't know how easy that will be.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/858226025/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/858226833",
        "html_url": "https://github.com/dask/dask/pull/7781#issuecomment-858226833",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7781",
        "id": 858226833,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1ODIyNjgzMw==",
        "user": {
            "login": "BrianArbuckle",
            "id": 5581818,
            "node_id": "MDQ6VXNlcjU1ODE4MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5581818?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BrianArbuckle",
            "html_url": "https://github.com/BrianArbuckle",
            "followers_url": "https://api.github.com/users/BrianArbuckle/followers",
            "following_url": "https://api.github.com/users/BrianArbuckle/following{/other_user}",
            "gists_url": "https://api.github.com/users/BrianArbuckle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BrianArbuckle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BrianArbuckle/subscriptions",
            "organizations_url": "https://api.github.com/users/BrianArbuckle/orgs",
            "repos_url": "https://api.github.com/users/BrianArbuckle/repos",
            "events_url": "https://api.github.com/users/BrianArbuckle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BrianArbuckle/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-10T02:15:28Z",
        "updated_at": "2021-06-10T02:15:28Z",
        "author_association": "NONE",
        "body": "@ian-r-rose, I did the PR but @twoertwein laid it out in the issue. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/858226833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/858285431",
        "html_url": "https://github.com/dask/dask/pull/7781#issuecomment-858285431",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7781",
        "id": 858285431,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1ODI4NTQzMQ==",
        "user": {
            "login": "twoertwein",
            "id": 6618166,
            "node_id": "MDQ6VXNlcjY2MTgxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6618166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/twoertwein",
            "html_url": "https://github.com/twoertwein",
            "followers_url": "https://api.github.com/users/twoertwein/followers",
            "following_url": "https://api.github.com/users/twoertwein/following{/other_user}",
            "gists_url": "https://api.github.com/users/twoertwein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/twoertwein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/twoertwein/subscriptions",
            "organizations_url": "https://api.github.com/users/twoertwein/orgs",
            "repos_url": "https://api.github.com/users/twoertwein/repos",
            "events_url": "https://api.github.com/users/twoertwein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/twoertwein/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-10T04:14:46Z",
        "updated_at": "2021-06-10T14:35:57Z",
        "author_association": "NONE",
        "body": "Given that `delayed` is itself wrapped in an un-annotated decorator (`@curry`)\r\nhttps://github.com/pytoolz/toolz/blob/10e40cbcfe67f188d0435bc7ebc18b9e98f0ca53/toolz/functoolz.py#L167\r\nthis PR will unfortunately not fix #7779 (but it would anyway be good to add type annotations wherever possible):\r\n\r\n```py\r\nfrom tlz import curry\r\n\r\n@curry\r\ndef test(a: int) -> str:\r\n    return \"\"\r\n```\r\nmypy: Untyped decorator makes function \"test\" untyped\r\npyright:  Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\r\n\r\n\r\nedit:\r\n\r\nI opened https://github.com/pytoolz/toolz/pull/516 Maybe a future version of `tlz` might have a `typed` curry :)",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/858285431/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/859921012",
        "html_url": "https://github.com/dask/dask/pull/7781#issuecomment-859921012",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7781",
        "id": 859921012,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTkyMTAxMg==",
        "user": {
            "login": "BrianArbuckle",
            "id": 5581818,
            "node_id": "MDQ6VXNlcjU1ODE4MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5581818?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BrianArbuckle",
            "html_url": "https://github.com/BrianArbuckle",
            "followers_url": "https://api.github.com/users/BrianArbuckle/followers",
            "following_url": "https://api.github.com/users/BrianArbuckle/following{/other_user}",
            "gists_url": "https://api.github.com/users/BrianArbuckle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BrianArbuckle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BrianArbuckle/subscriptions",
            "organizations_url": "https://api.github.com/users/BrianArbuckle/orgs",
            "repos_url": "https://api.github.com/users/BrianArbuckle/repos",
            "events_url": "https://api.github.com/users/BrianArbuckle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BrianArbuckle/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-11T21:31:58Z",
        "updated_at": "2021-06-14T14:23:32Z",
        "author_association": "NONE",
        "body": "> Given that `delayed` is itself wrapped in an un-annotated decorator (`@curry`)\r\n> https://github.com/pytoolz/toolz/blob/10e40cbcfe67f188d0435bc7ebc18b9e98f0ca53/toolz/functoolz.py#L167\r\n> this PR will unfortunately not fix #7779 (but it would anyway be good to add type annotations wherever possible):\r\n\r\nI will have some time those evening to dive in. @twoertwein Does the fact that this won't fix #7779 mean that I should commit these changes to another \"issue,\" or can I continue to make commits to my current fork?  Also, would the PR be excepted in light of the non-fix for #7779? I was eager to implement some ideas that you and @crusaderky  mentioned. Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/859921012/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/866989894",
        "html_url": "https://github.com/dask/dask/pull/7781#issuecomment-866989894",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7781",
        "id": 866989894,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg2Njk4OTg5NA==",
        "user": {
            "login": "crusaderky",
            "id": 6213168,
            "node_id": "MDQ6VXNlcjYyMTMxNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6213168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crusaderky",
            "html_url": "https://github.com/crusaderky",
            "followers_url": "https://api.github.com/users/crusaderky/followers",
            "following_url": "https://api.github.com/users/crusaderky/following{/other_user}",
            "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions",
            "organizations_url": "https://api.github.com/users/crusaderky/orgs",
            "repos_url": "https://api.github.com/users/crusaderky/repos",
            "events_url": "https://api.github.com/users/crusaderky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crusaderky/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-23T16:33:48Z",
        "updated_at": "2021-06-23T16:33:48Z",
        "author_association": "MEMBER",
        "body": "The latest incarnation of this PR does not seem to do anything useful to me; that's not how Generic works.\r\nYou can realise this yourself by running sample user code through mypy.\r\n\r\nThe Delayed class is supposed to subclass Generic[T]:\r\n\r\n```\r\ndef delayed(x: T) -> Delayed[T]: ...\r\nclass Delayed(Generic[T]):\r\n    def compute(self) -> T: ...\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/866989894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/926766579",
        "html_url": "https://github.com/dask/dask/pull/7781#issuecomment-926766579",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7781",
        "id": 926766579,
        "node_id": "IC_kwDOAbcwm843PVXz",
        "user": {
            "login": "ncclementi",
            "id": 7526622,
            "node_id": "MDQ6VXNlcjc1MjY2MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7526622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ncclementi",
            "html_url": "https://github.com/ncclementi",
            "followers_url": "https://api.github.com/users/ncclementi/followers",
            "following_url": "https://api.github.com/users/ncclementi/following{/other_user}",
            "gists_url": "https://api.github.com/users/ncclementi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ncclementi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ncclementi/subscriptions",
            "organizations_url": "https://api.github.com/users/ncclementi/orgs",
            "repos_url": "https://api.github.com/users/ncclementi/repos",
            "events_url": "https://api.github.com/users/ncclementi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ncclementi/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-24T16:32:10Z",
        "updated_at": "2021-09-24T16:32:10Z",
        "author_association": "MEMBER",
        "body": "@BrianArbuckle and @crusaderky Checkin in here, could you update on the status of this PR, is this ready to go, or are there still some pending fixes? ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/926766579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/926766595",
        "html_url": "https://github.com/dask/dask/pull/7781#issuecomment-926766595",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7781",
        "id": 926766595,
        "node_id": "IC_kwDOAbcwm843PVYD",
        "user": {
            "login": "GPUtester",
            "id": 38199262,
            "node_id": "MDQ6VXNlcjM4MTk5MjYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/38199262?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GPUtester",
            "html_url": "https://github.com/GPUtester",
            "followers_url": "https://api.github.com/users/GPUtester/followers",
            "following_url": "https://api.github.com/users/GPUtester/following{/other_user}",
            "gists_url": "https://api.github.com/users/GPUtester/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GPUtester/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GPUtester/subscriptions",
            "organizations_url": "https://api.github.com/users/GPUtester/orgs",
            "repos_url": "https://api.github.com/users/GPUtester/repos",
            "events_url": "https://api.github.com/users/GPUtester/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GPUtester/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-24T16:32:11Z",
        "updated_at": "2021-09-24T16:32:11Z",
        "author_association": "COLLABORATOR",
        "body": "Can one of the admins verify this patch?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/926766595/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/927433039",
        "html_url": "https://github.com/dask/dask/pull/7781#issuecomment-927433039",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7781",
        "id": 927433039,
        "node_id": "IC_kwDOAbcwm843R4FP",
        "user": {
            "login": "BrianArbuckle",
            "id": 5581818,
            "node_id": "MDQ6VXNlcjU1ODE4MTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5581818?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BrianArbuckle",
            "html_url": "https://github.com/BrianArbuckle",
            "followers_url": "https://api.github.com/users/BrianArbuckle/followers",
            "following_url": "https://api.github.com/users/BrianArbuckle/following{/other_user}",
            "gists_url": "https://api.github.com/users/BrianArbuckle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BrianArbuckle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BrianArbuckle/subscriptions",
            "organizations_url": "https://api.github.com/users/BrianArbuckle/orgs",
            "repos_url": "https://api.github.com/users/BrianArbuckle/repos",
            "events_url": "https://api.github.com/users/BrianArbuckle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BrianArbuckle/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-27T01:26:16Z",
        "updated_at": "2021-09-27T01:26:16Z",
        "author_association": "NONE",
        "body": "Hi @ncclementi I was under the impression that these changes would need to go deeper into the codebase. I took a crack at it after my last PR, and am not sure of a solution to the Generic issue. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/927433039/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/929283916",
        "html_url": "https://github.com/dask/dask/pull/7781#issuecomment-929283916",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7781",
        "id": 929283916,
        "node_id": "IC_kwDOAbcwm843Y79M",
        "user": {
            "login": "crusaderky",
            "id": 6213168,
            "node_id": "MDQ6VXNlcjYyMTMxNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6213168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crusaderky",
            "html_url": "https://github.com/crusaderky",
            "followers_url": "https://api.github.com/users/crusaderky/followers",
            "following_url": "https://api.github.com/users/crusaderky/following{/other_user}",
            "gists_url": "https://api.github.com/users/crusaderky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crusaderky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crusaderky/subscriptions",
            "organizations_url": "https://api.github.com/users/crusaderky/orgs",
            "repos_url": "https://api.github.com/users/crusaderky/repos",
            "events_url": "https://api.github.com/users/crusaderky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crusaderky/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-28T14:27:11Z",
        "updated_at": "2021-09-28T14:27:11Z",
        "author_association": "MEMBER",
        "body": "@ncclementi this PR would need to be heavily revisited before it can be merged.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/929283916/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1059722219",
        "html_url": "https://github.com/dask/dask/pull/7781#issuecomment-1059722219",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/7781",
        "id": 1059722219,
        "node_id": "IC_kwDOAbcwm84_KhPr",
        "user": {
            "login": "blindgaenger",
            "id": 14903,
            "node_id": "MDQ6VXNlcjE0OTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/14903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blindgaenger",
            "html_url": "https://github.com/blindgaenger",
            "followers_url": "https://api.github.com/users/blindgaenger/followers",
            "following_url": "https://api.github.com/users/blindgaenger/following{/other_user}",
            "gists_url": "https://api.github.com/users/blindgaenger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blindgaenger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blindgaenger/subscriptions",
            "organizations_url": "https://api.github.com/users/blindgaenger/orgs",
            "repos_url": "https://api.github.com/users/blindgaenger/repos",
            "events_url": "https://api.github.com/users/blindgaenger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blindgaenger/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-03-05T08:40:10Z",
        "updated_at": "2022-03-05T08:40:10Z",
        "author_association": "NONE",
        "body": "It seems that this PR has been stuck for a while. I don't know how far this should go, but as already mentioned `Delayed` must accept a generic type.\r\n\r\nThese are my local typings that work with pyright. Please note that I am using `ParamSpec` from [PEP 612](https://www.python.org/dev/peps/pep-0612/), which mypy still seems to have problems with.\r\n\r\n```python\r\nfrom collections.abc import Hashable\r\nfrom typing import Callable, Generic, Optional, ParamSpec, TypeVar\r\n\r\nfrom dask.delayed import Delayed\r\n\r\nT = TypeVar('T')\r\n\r\n\r\n# Just mocking the type here to make this example work.\r\n# Delayed should extend Generic[T] directly.\r\nclass GenericDelayed(Delayed, Generic[T]):\r\n    def compute(self, **kwargs) -> T:\r\n        ...\r\n\r\n\r\nP = ParamSpec('P')\r\nR = TypeVar('R')\r\n\r\n\r\ndef delayed(\r\n    obj: Callable[P, R],\r\n    name: Optional[str | Hashable] = None,\r\n    pure: Optional[bool] = None,\r\n    nout: Optional[int] = None,\r\n    traverse: bool = True,\r\n) -> Callable[P, GenericDelayed[R]]: ...\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1059722219/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]