[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1256580708",
        "html_url": "https://github.com/dask/dask/issues/9515#issuecomment-1256580708",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9515",
        "id": 1256580708,
        "node_id": "IC_kwDOAbcwm85K5eZk",
        "user": {
            "login": "ian-r-rose",
            "id": 5728311,
            "node_id": "MDQ6VXNlcjU3MjgzMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5728311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ian-r-rose",
            "html_url": "https://github.com/ian-r-rose",
            "followers_url": "https://api.github.com/users/ian-r-rose/followers",
            "following_url": "https://api.github.com/users/ian-r-rose/following{/other_user}",
            "gists_url": "https://api.github.com/users/ian-r-rose/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ian-r-rose/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ian-r-rose/subscriptions",
            "organizations_url": "https://api.github.com/users/ian-r-rose/orgs",
            "repos_url": "https://api.github.com/users/ian-r-rose/repos",
            "events_url": "https://api.github.com/users/ian-r-rose/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ian-r-rose/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-23T19:12:16Z",
        "updated_at": "2022-09-23T19:12:16Z",
        "author_association": "MEMBER",
        "body": "Thanks for the report @rjzamora. Sigh, it seems like it's probably related to #9486 ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1256580708/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1256786871",
        "html_url": "https://github.com/dask/dask/issues/9515#issuecomment-1256786871",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9515",
        "id": 1256786871,
        "node_id": "IC_kwDOAbcwm85K6Qu3",
        "user": {
            "login": "ian-r-rose",
            "id": 5728311,
            "node_id": "MDQ6VXNlcjU3MjgzMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5728311?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ian-r-rose",
            "html_url": "https://github.com/ian-r-rose",
            "followers_url": "https://api.github.com/users/ian-r-rose/followers",
            "following_url": "https://api.github.com/users/ian-r-rose/following{/other_user}",
            "gists_url": "https://api.github.com/users/ian-r-rose/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ian-r-rose/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ian-r-rose/subscriptions",
            "organizations_url": "https://api.github.com/users/ian-r-rose/orgs",
            "repos_url": "https://api.github.com/users/ian-r-rose/repos",
            "events_url": "https://api.github.com/users/ian-r-rose/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ian-r-rose/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-09-23T23:11:29Z",
        "updated_at": "2022-09-23T23:11:29Z",
        "author_association": "MEMBER",
        "body": "I looked into this a bit more, and came up with a pandas-only reproducer. As in the title, this only occurs for categorical columns when `sort=False`. If we groupby with that setup, the categoricals are reordered in such a way that they lock in the insertion order.\r\n\r\n```python\r\nimport pandas\r\n\r\ndf = pandas.DataFrame({\"a\": [1, 2, 3, 4], \"b\": [\"B\", \"B\", \"A\", \"A\"]}).astype({\"b\": \"category\"})\r\n\r\ndf.groupby(\"b\", sort=False).count().index.sort_values() \r\n# CategoricalIndex(['B', 'A'], categories=['B', 'A'], ordered=False, dtype='category', name='b')\r\n```\r\nTo me, this is surprising behavior, and could be considered a bug in pandas. I manually tried avoiding the code snippet that @mroeschke pointed at in https://github.com/pandas-dev/pandas/issues/48749, and that seemed to fix the issue. Since `sort=False`, I suppose it's pandas' prerogative to produce the categories in whatever way it wants. However, the dtype still does have `ordered=False`, so I'd still expect to be able to do a natural sort after the groupby/agg, and a natural `sort_values()` still works on the initial column. So it still seems fishy to me.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1256786871/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]