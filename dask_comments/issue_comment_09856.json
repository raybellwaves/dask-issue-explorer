[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1405563665",
        "html_url": "https://github.com/dask/dask/issues/9856#issuecomment-1405563665",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9856",
        "id": 1405563665,
        "node_id": "IC_kwDOAbcwm85TxzMR",
        "user": {
            "login": "j-bennet",
            "id": 637013,
            "node_id": "MDQ6VXNlcjYzNzAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/637013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-bennet",
            "html_url": "https://github.com/j-bennet",
            "followers_url": "https://api.github.com/users/j-bennet/followers",
            "following_url": "https://api.github.com/users/j-bennet/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-bennet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-bennet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-bennet/subscriptions",
            "organizations_url": "https://api.github.com/users/j-bennet/orgs",
            "repos_url": "https://api.github.com/users/j-bennet/repos",
            "events_url": "https://api.github.com/users/j-bennet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-bennet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-26T19:58:32Z",
        "updated_at": "2023-01-26T19:58:32Z",
        "author_association": "MEMBER",
        "body": "@te-x It could be a nice shortcut, but it would only work for `pyarrow`, and it's already easy enough to flatten after reading. According to `fastparquet` [documentation](https://fastparquet.readthedocs.io/en/latest/details.html#reading-nested-schema), it flattens the nested schema on read, and as far as I can tell, there's still no support in `fastparquet` to write nested schemas (@martindurant, please correct me if I'm wrong).",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1405563665/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1405984284",
        "html_url": "https://github.com/dask/dask/issues/9856#issuecomment-1405984284",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9856",
        "id": 1405984284,
        "node_id": "IC_kwDOAbcwm85TzZ4c",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-27T03:55:36Z",
        "updated_at": "2023-01-27T03:55:36Z",
        "author_association": "MEMBER",
        "body": "Yes, fastparquet will flatten, giving field names like \"parent_id.higher\" for the example.\r\n\r\nPandas does not support nested schemas, so no writing :). I *guess* you could try to infer it from the dotted name or provide the desired nested schema in some other way; would not be hard to implement, but does not exist now.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1405984284/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1406383515",
        "html_url": "https://github.com/dask/dask/issues/9856#issuecomment-1406383515",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9856",
        "id": 1406383515,
        "node_id": "IC_kwDOAbcwm85T07Wb",
        "user": {
            "login": "FilipeTeixeira-TomTom",
            "id": 79454042,
            "node_id": "MDQ6VXNlcjc5NDU0MDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/79454042?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FilipeTeixeira-TomTom",
            "html_url": "https://github.com/FilipeTeixeira-TomTom",
            "followers_url": "https://api.github.com/users/FilipeTeixeira-TomTom/followers",
            "following_url": "https://api.github.com/users/FilipeTeixeira-TomTom/following{/other_user}",
            "gists_url": "https://api.github.com/users/FilipeTeixeira-TomTom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FilipeTeixeira-TomTom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FilipeTeixeira-TomTom/subscriptions",
            "organizations_url": "https://api.github.com/users/FilipeTeixeira-TomTom/orgs",
            "repos_url": "https://api.github.com/users/FilipeTeixeira-TomTom/repos",
            "events_url": "https://api.github.com/users/FilipeTeixeira-TomTom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FilipeTeixeira-TomTom/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-27T11:42:24Z",
        "updated_at": "2023-01-27T11:42:24Z",
        "author_association": "NONE",
        "body": "I realize this is not the place to get support, but I didn't know it was already easy to flatten after reading! Could you please point towards some documentation, preferably with pyarrow? As far as I know the only way to read parquet into dask is with the `read_parquet` method, which gives you a dask `DataFrame`, not a `pyarrow.Table`. Thank you!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1406383515/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1406573861",
        "html_url": "https://github.com/dask/dask/issues/9856#issuecomment-1406573861",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9856",
        "id": 1406573861,
        "node_id": "IC_kwDOAbcwm85T1p0l",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-27T14:23:24Z",
        "updated_at": "2023-01-27T14:23:24Z",
        "author_association": "MEMBER",
        "body": "I only spoke for fastparquet. ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1406573861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1407089373",
        "html_url": "https://github.com/dask/dask/issues/9856#issuecomment-1407089373",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9856",
        "id": 1407089373,
        "node_id": "IC_kwDOAbcwm85T3nrd",
        "user": {
            "login": "j-bennet",
            "id": 637013,
            "node_id": "MDQ6VXNlcjYzNzAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/637013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-bennet",
            "html_url": "https://github.com/j-bennet",
            "followers_url": "https://api.github.com/users/j-bennet/followers",
            "following_url": "https://api.github.com/users/j-bennet/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-bennet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-bennet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-bennet/subscriptions",
            "organizations_url": "https://api.github.com/users/j-bennet/orgs",
            "repos_url": "https://api.github.com/users/j-bennet/repos",
            "events_url": "https://api.github.com/users/j-bennet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-bennet/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-27T21:24:58Z",
        "updated_at": "2023-01-27T23:29:33Z",
        "author_association": "MEMBER",
        "body": "@FilipeTeixeira-TomTom Sorry, I meant to say that it's already easy enough to flatten after reading if you're using `pyarrow` directly for reading, not `dask`:\r\n\r\n```python\r\nIn [1]: import pyarrow.parquet as pq\r\n\r\nIn [2]: tb = pq.read_table('test.parquet')\r\n\r\nIn [3]: tb.to_pandas()\r\nOut[3]:\r\n                                                name state gender\r\n0  {'firstname': 'James', 'middlename': None, 'la...    OH      M\r\n1  {'firstname': 'Anna', 'middlename': 'Rose', 'l...    NY      F\r\n2  {'firstname': 'Julia', 'middlename': '', 'last...    OH      F\r\n3  {'firstname': 'Maria', 'middlename': 'Anne', '...    NY      M\r\n4  {'firstname': 'Jen', 'middlename': 'Mary', 'la...    NY      M\r\n5  {'firstname': 'Mike', 'middlename': 'Mary', 'l...    OH      M\r\n\r\nIn [4]: tb.flatten().to_pandas()\r\nOut[4]:\r\n  name.firstname name.middlename name.lastname state gender\r\n0          James            None         Smith    OH      M\r\n1           Anna            Rose                  NY      F\r\n2          Julia                      Williams    OH      F\r\n3          Maria            Anne         Jones    NY      M\r\n4            Jen            Mary         Brown    NY      M\r\n5           Mike            Mary      Williams    OH      M\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1407089373/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1407105575",
        "html_url": "https://github.com/dask/dask/issues/9856#issuecomment-1407105575",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9856",
        "id": 1407105575,
        "node_id": "IC_kwDOAbcwm85T3ron",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-27T21:44:44Z",
        "updated_at": "2023-01-27T21:44:44Z",
        "author_association": "MEMBER",
        "body": "I think the point was, that dask does not call `flatten()`, but some form of `to_pandas()` immediately, which goes through the wasteful process of producing a dict per row.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1407105575/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1408388314",
        "html_url": "https://github.com/dask/dask/issues/9856#issuecomment-1408388314",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9856",
        "id": 1408388314,
        "node_id": "IC_kwDOAbcwm85T8kza",
        "user": {
            "login": "te-x",
            "id": 5640701,
            "node_id": "MDQ6VXNlcjU2NDA3MDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5640701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/te-x",
            "html_url": "https://github.com/te-x",
            "followers_url": "https://api.github.com/users/te-x/followers",
            "following_url": "https://api.github.com/users/te-x/following{/other_user}",
            "gists_url": "https://api.github.com/users/te-x/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/te-x/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/te-x/subscriptions",
            "organizations_url": "https://api.github.com/users/te-x/orgs",
            "repos_url": "https://api.github.com/users/te-x/repos",
            "events_url": "https://api.github.com/users/te-x/events{/privacy}",
            "received_events_url": "https://api.github.com/users/te-x/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-30T10:42:21Z",
        "updated_at": "2023-01-30T10:43:31Z",
        "author_association": "NONE",
        "body": "My point was more that in order to use pyarrows' flatten method I need to load the entire dataset to memory, which I cannot do.\r\n\r\nCorrect me if I'm wrong, but my understanding was that if I use `split_row_groups` or some `chunksize`, then only a \"small\" ammount of data will be loaded into memory by the thread that will work on it. To define the work that needs to be done, the schema might be necessary:\r\n\r\n```python\r\na = dd.read_parquet('a.parquet',\r\n                    flatten=True, # this option does not exist\r\n                    split_row_groups=True)\r\n\r\nb = dd.read_parquet('b.parquet',\r\n                    flatten=True,\r\n                    split_row_groups=True)\r\n\r\nmerged = a.merge(b,\r\n         left_on=['child_id.higher', 'child_id.lower'],\r\n         right_on=['parent_id.higher', 'parent_id.lower'],\r\n         suffixes=['_a', '_b'])\r\n\r\nmerged.compute().to_csv('merged.csv')\r\n```\r\n\r\nLet's say both `a` and `b` are too large for my memory but they have relatively small row groups. Don't I need something like what I metioned above to be able to use these column names? Is there already an alternative way of doing this?\r\n\r\nThanks for the discussion!",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1408388314/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/1408926456",
        "html_url": "https://github.com/dask/dask/issues/9856#issuecomment-1408926456",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/9856",
        "id": 1408926456,
        "node_id": "IC_kwDOAbcwm85T-oL4",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-30T16:19:22Z",
        "updated_at": "2023-01-30T16:19:22Z",
        "author_association": "MEMBER",
        "body": "You are completely right, it is the option of passing through `flatten` to pyarrow via dask.dataframe's API that does not exist. If it did, indeed you could process row-group by row-group, which is probably small enough for your memory. So use fastparquet as the engine, or push for a fix. I don't know how complicated it would be to implement.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/1408926456/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]