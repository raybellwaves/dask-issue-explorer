[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/736643339",
        "html_url": "https://github.com/dask/dask/issues/6910#issuecomment-736643339",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6910",
        "id": 736643339,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczNjY0MzMzOQ==",
        "user": {
            "login": "jsignell",
            "id": 4806877,
            "node_id": "MDQ6VXNlcjQ4MDY4Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4806877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsignell",
            "html_url": "https://github.com/jsignell",
            "followers_url": "https://api.github.com/users/jsignell/followers",
            "following_url": "https://api.github.com/users/jsignell/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsignell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsignell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsignell/subscriptions",
            "organizations_url": "https://api.github.com/users/jsignell/orgs",
            "repos_url": "https://api.github.com/users/jsignell/repos",
            "events_url": "https://api.github.com/users/jsignell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsignell/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-01T15:55:43Z",
        "updated_at": "2020-12-01T15:55:43Z",
        "author_association": "MEMBER",
        "body": "Thank you for opening this! I can reproduce. I find it interesting that this only happens when distributed is used. If you take out:\r\n\r\n```python\r\n# from dask.distributed import Client\r\n\r\n# client = Client()\r\n```\r\n\r\neverything works as expected. This leads me to think that the issue is in distributed rather than dask itself. I am having trouble tracking down where this replacement happens though. I suspect this has to do with some ongoing work on `HighLevelGraphs` @jrbourbeau ",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/736643339/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/736737023",
        "html_url": "https://github.com/dask/dask/issues/6910#issuecomment-736737023",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6910",
        "id": 736737023,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczNjczNzAyMw==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-01T18:29:07Z",
        "updated_at": "2020-12-01T18:29:07Z",
        "author_association": "MEMBER",
        "body": "Note that if you put your class definitions inside a module, rather than defined in `__main__`, then things seem to work OK. This can be a workaround.\r\n\r\n```\r\nfrom temp2 import my_function, MyClass\r\n\r\nif __name__ == \"__main__\":\r\n    client = Client()\r\n    my_object = MyClass()\r\n    results = []\r\n\r\n    for i in range(2):\r\n        results.append(delayed(my_function)(my_object))\r\n\r\n    print('before', MyClass.__module__)\r\n    results = compute(*results)\r\n    print('after', MyClass.__module__)\r\n    print('after', results[0].__module__)\r\n    client.close()\r\n```\r\n->\r\n```\r\nbefore temp2\r\nafter temp2\r\nafter temp2\r\n```\r\nso this is a cloudpickle-specific behaviour. Still looking.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/736737023/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/736744642",
        "html_url": "https://github.com/dask/dask/issues/6910#issuecomment-736744642",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6910",
        "id": 736744642,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczNjc0NDY0Mg==",
        "user": {
            "login": "gioxc88",
            "id": 41852601,
            "node_id": "MDQ6VXNlcjQxODUyNjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/41852601?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gioxc88",
            "html_url": "https://github.com/gioxc88",
            "followers_url": "https://api.github.com/users/gioxc88/followers",
            "following_url": "https://api.github.com/users/gioxc88/following{/other_user}",
            "gists_url": "https://api.github.com/users/gioxc88/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gioxc88/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gioxc88/subscriptions",
            "organizations_url": "https://api.github.com/users/gioxc88/orgs",
            "repos_url": "https://api.github.com/users/gioxc88/repos",
            "events_url": "https://api.github.com/users/gioxc88/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gioxc88/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-01T18:43:54Z",
        "updated_at": "2020-12-01T18:43:54Z",
        "author_association": "NONE",
        "body": "> Note that if you put your class definitions inside a module, rather than defined in `__main__`, then things seem to work OK. This can be a workaround.\r\n> \r\n> ```\r\n> from temp2 import my_function, MyClass\r\n> \r\n> if __name__ == \"__main__\":\r\n>     client = Client()\r\n>     my_object = MyClass()\r\n>     results = []\r\n> \r\n>     for i in range(2):\r\n>         results.append(delayed(my_function)(my_object))\r\n> \r\n>     print('before', MyClass.__module__)\r\n>     results = compute(*results)\r\n>     print('after', MyClass.__module__)\r\n>     print('after', results[0].__module__)\r\n>     client.close()\r\n> ```\r\n> \r\n> ->\r\n> \r\n> ```\r\n> before temp2\r\n> after temp2\r\n> after temp2\r\n> ```\r\n> \r\n> so this is a cloudpickle-specific behaviour. Still looking.\r\n\r\nThank you, I was aware of that, sorry for not specifying it in the op.\r\n\r\nIn fact it was a user of my package to report this issue because I always use to import decorated classes form the package modules whereas the users tend to construct the classes in the main module.\r\n\r\nThank you for looking into this\r\nGio",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/736744642/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/736842673",
        "html_url": "https://github.com/dask/dask/issues/6910#issuecomment-736842673",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/6910",
        "id": 736842673,
        "node_id": "MDEyOklzc3VlQ29tbWVudDczNjg0MjY3Mw==",
        "user": {
            "login": "martindurant",
            "id": 6042212,
            "node_id": "MDQ6VXNlcjYwNDIyMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6042212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martindurant",
            "html_url": "https://github.com/martindurant",
            "followers_url": "https://api.github.com/users/martindurant/followers",
            "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
            "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
            "organizations_url": "https://api.github.com/users/martindurant/orgs",
            "repos_url": "https://api.github.com/users/martindurant/repos",
            "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martindurant/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-12-01T21:50:36Z",
        "updated_at": "2020-12-01T21:50:36Z",
        "author_association": "MEMBER",
        "body": "I can confirm that the rename happens using cloudpickle deser of the class, but I don't yet know what you can do about it. It can be suppressed by using a metaclass...\r\n```\r\nclass MetaClass(type):\r\n    @property\r\n    def __module__(cls):\r\n        return \"__main__\"\r\n\r\n    @__module__.setter\r\n    def __module__(cls, *args):\r\n        pass\r\n\r\n@class_decorator\r\nclass MyClass(metaclass=MetaClass):\r\n    ...\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/736842673/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]