[
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396725277",
        "html_url": "https://github.com/dask/dask/issues/3587#issuecomment-396725277",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3587",
        "id": 396725277,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjcyNTI3Nw==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T20:37:43Z",
        "updated_at": "2018-06-12T20:37:43Z",
        "author_association": "MEMBER",
        "body": "@jakirkham @shoyer any thoughts or concerns on this topic?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396725277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396729211",
        "html_url": "https://github.com/dask/dask/issues/3587#issuecomment-396729211",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3587",
        "id": 396729211,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjcyOTIxMQ==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T20:50:28Z",
        "updated_at": "2018-06-12T20:50:28Z",
        "author_association": "MEMBER",
        "body": "I think the big challenge here is that completely flexible automatic rechunking only makes sense if your dataset can fit into memory without streaming or can be transparently spilled to disk.\r\n\r\nMy understanding is that this currently works well with the distributed scheduler, but the multi-threaded scheduler could fall flat on its face. We still target the multi-threaded scheduler as a baseline in dask.array, so defaulting to `chunk=True` would potentially be problematic.\r\n\r\nSome possible solutions:\r\n- Add spilling to disk to the multi-threaded scheduler.\r\n- `rechunk` only defaults to True if using dask distributed -- maybe set via the config module?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396729211/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396730086",
        "html_url": "https://github.com/dask/dask/issues/3587#issuecomment-396730086",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3587",
        "id": 396730086,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjczMDA4Ng==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T20:53:22Z",
        "updated_at": "2018-06-12T20:53:22Z",
        "author_association": "MEMBER",
        "body": "> I think the big challenge here is that completely flexible automatic rechunking only makes sense if your dataset can fit into memory without streaming or can be transparently spilled to disk.\r\n\r\nThis is true in the pathological `rechunk((n, 1)).rechunk((1, n))` case but is not true otherwise.  Actually I've found that rechunking before atop operations that have inner and outer products (like tensordot) is often necessary to get good memory performance.\r\n\r\nI believe that in all of the operations I mention above, rechunking only helps.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396730086/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396730685",
        "html_url": "https://github.com/dask/dask/issues/3587#issuecomment-396730685",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3587",
        "id": 396730685,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjczMDY4NQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T20:55:22Z",
        "updated_at": "2018-06-12T20:55:22Z",
        "author_association": "MEMBER",
        "body": "> but is not true otherwise\r\n\r\nShould be \r\n\r\n> but is not universally true, nor necessarily the common case",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396730685/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396732251",
        "html_url": "https://github.com/dask/dask/issues/3587#issuecomment-396732251",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3587",
        "id": 396732251,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjczMjI1MQ==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T21:00:36Z",
        "updated_at": "2018-06-12T21:00:36Z",
        "author_association": "MEMBER",
        "body": "For something like mean, rechunking along the aggregated dimension could improve performance (probably not enough to pay for rechunking), but would also mean the operation could no longer be done in a streaming way. This would be a bad idea.\r\n\r\nFor operations like tensordot, you can't really do them in a streaming way across summed dimensions anyways, so it's probably fine to automatically rechunk.\r\n\r\nAs long as we stick to those sort of operations for `rechunk=True` I think that would be fine.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396732251/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396736169",
        "html_url": "https://github.com/dask/dask/issues/3587#issuecomment-396736169",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3587",
        "id": 396736169,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjczNjE2OQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T21:14:18Z",
        "updated_at": "2018-06-12T21:14:18Z",
        "author_association": "MEMBER",
        "body": "Yeah, what I'm hearing is that \"we shouldn't automatically rechunk when it might negatively impact streamability\".  I agree with that as a restriction.\r\n\r\nDo you have any thoughts or concerns about the suggested API?\r\n\r\nDo you have any thoughts on whether or not this should be automatic?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396736169/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396761210",
        "html_url": "https://github.com/dask/dask/issues/3587#issuecomment-396761210",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3587",
        "id": 396761210,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njc2MTIxMA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T23:00:53Z",
        "updated_at": "2018-06-12T23:00:53Z",
        "author_association": "MEMBER",
        "body": "Just to make sure I understand, is the \"otherwise...\"  statement above meant to be part of item 3 or is it suppose to be item 4?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396761210/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396764504",
        "html_url": "https://github.com/dask/dask/issues/3587#issuecomment-396764504",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3587",
        "id": 396764504,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njc2NDUwNA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T23:19:03Z",
        "updated_at": "2018-06-12T23:19:03Z",
        "author_association": "MEMBER",
        "body": "Generally this sounds ok (aside from the points @shoyer already raised).\r\n\r\nMight include a warning if automatic rechunking is going to be problematic (though we mostly do this anyways). Would just be sure there is a warning for problematic cases anywhere we are automatically rechunking.\r\n\r\nOn the API point it would be good to understand what saying `'10MB'` means. For example, is this a hard limit or does it have some error bars around it? What is the behavior if it can't quite make this limit?\r\n\r\nHow do we handle functions that already do some rechunking as it is required (e.g. [`apply_along_axis`]( https://github.com/dask/dask/blob/0.17.5/dask/array/routines.py#L313-L316 ), [`gufunc`s]( https://github.com/dask/dask/blob/946832ff3ec5b48718cc7aad07a556ff554dea9d/dask/array/gufunc.py#L94-L98 ), or others)?",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396764504/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396767085",
        "html_url": "https://github.com/dask/dask/issues/3587#issuecomment-396767085",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3587",
        "id": 396767085,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njc2NzA4NQ==",
        "user": {
            "login": "shoyer",
            "id": 1217238,
            "node_id": "MDQ6VXNlcjEyMTcyMzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1217238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shoyer",
            "html_url": "https://github.com/shoyer",
            "followers_url": "https://api.github.com/users/shoyer/followers",
            "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
            "organizations_url": "https://api.github.com/users/shoyer/orgs",
            "repos_url": "https://api.github.com/users/shoyer/repos",
            "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shoyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-12T23:33:59Z",
        "updated_at": "2018-06-12T23:33:59Z",
        "author_association": "MEMBER",
        "body": "> This is true in the pathological rechunk((n, 1)).rechunk((1, n)) case but is not true otherwise.\r\n\r\nThinking about this again, I think this could potentially be pretty common with `apply_gufunc` (e.g., for a combination of time-series and image based analyses of a movie).\r\n\r\nIndeed, we explicitly chose not to rechunk by default in `apply_gufunc` because crashing with out of memory errors is a really bad experience for users -- even though the operation cannot possibly succeed unless it does a rechunk.\r\n\r\nIn my mind, this leans toward keeping rechunking explicit and opt-in (at least with the threaded scheduler). Unfortunately, dask.array doesn't know which chunks exist merely for efficient parallelism and which chunks are fundamental to how data is stored, so the best choice is probably not to guess at all.",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396767085/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/dask/dask/issues/comments/396898091",
        "html_url": "https://github.com/dask/dask/issues/3587#issuecomment-396898091",
        "issue_url": "https://api.github.com/repos/dask/dask/issues/3587",
        "id": 396898091,
        "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njg5ODA5MQ==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2018-06-13T10:58:31Z",
        "updated_at": "2018-06-13T10:58:31Z",
        "author_association": "MEMBER",
        "body": "> In my mind, this leans toward keeping rechunking explicit and opt-in (at least with the threaded scheduler). Unfortunately, dask.array doesn't know which chunks exist merely for efficient parallelism and which chunks are fundamental to how data is stored, so the best choice is probably not to guess at all.\r\n\r\nSo we can still keep rechunking explicit and opt-in by setting the default value to `False`.  However by having this as a keyword on the function we remove the burden from the user on how best to rechunk.  Either we say \"rechunk your data so that all core dimensions have one chunk\" and expect them to understand how to do this, or we say \"try passing `rechunk=True`\".",
        "reactions": {
            "url": "https://api.github.com/repos/dask/dask/issues/comments/396898091/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]