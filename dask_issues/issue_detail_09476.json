{
    "url": "https://api.github.com/repos/dask/dask/issues/9476",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9476/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9476/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9476/events",
    "html_url": "https://github.com/dask/dask/issues/9476",
    "id": 1366903902,
    "node_id": "I_kwDOAbcwm85ReUxe",
    "number": 9476,
    "title": "Add `dtypes=` option to `read_parquet`",
    "user": {
        "login": "jrbourbeau",
        "id": 11656932,
        "node_id": "MDQ6VXNlcjExNjU2OTMy",
        "avatar_url": "https://avatars.githubusercontent.com/u/11656932?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrbourbeau",
        "html_url": "https://github.com/jrbourbeau",
        "followers_url": "https://api.github.com/users/jrbourbeau/followers",
        "following_url": "https://api.github.com/users/jrbourbeau/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrbourbeau/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrbourbeau/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrbourbeau/subscriptions",
        "organizations_url": "https://api.github.com/users/jrbourbeau/orgs",
        "repos_url": "https://api.github.com/users/jrbourbeau/repos",
        "events_url": "https://api.github.com/users/jrbourbeau/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrbourbeau/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 2949099791,
            "node_id": "MDU6TGFiZWwyOTQ5MDk5Nzkx",
            "url": "https://api.github.com/repos/dask/dask/labels/parquet",
            "name": "parquet",
            "color": "77A66C",
            "default": false,
            "description": ""
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3798602129,
            "node_id": "LA_kwDOAbcwm87iahGR",
            "url": "https://api.github.com/repos/dask/dask/labels/enhancement",
            "name": "enhancement",
            "color": "C2E0C6",
            "default": true,
            "description": "Improve existing functionality or make things work better"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2022-09-08T19:44:14Z",
    "updated_at": "2024-05-27T01:47:37Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Similar to `dd.read_csv`, we should consider making it easy for users to optionally specify `dtype`s when using `dd.read_parquet`. \r\n\r\n@rjzamora and I were running computations on parquet datasets that have some columns stored as `category` dtypes. However, it's known that `category` dtypes can be inefficient in some cases (for example https://github.com/dask/dask/issues/9392) so we wanted to, in this particular case, use `pyarrow[string]` `dtype` instead. This is possible today using `DataFrame.astype(...)`, which is what we used, but we thought it would be more straightforward for users to pass in `dtypes={\"col-name\": \"string[pyarrow]\"}` instead. This would also have the added benefit of being able to pass the desired `dtype` directly to the parquet read calls. \r\n\r\nWe currently read in a parquet schema already and then pass that down to the I/O call. To support a `dtype=` keyword, one approach would be to take the user-provided `dtype=` specification, convert it to a `pyarrow.Schema` object, and then merge that with the `Schema` object we get from looking at the parquet metadata on disk. That merged schema object is the one we would then use when performing parquet read calls.  ",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9476/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9476/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}