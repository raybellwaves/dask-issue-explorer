{
    "url": "https://api.github.com/repos/dask/dask/issues/9093",
    "repository_url": "https://api.github.com/repos/dask/dask",
    "labels_url": "https://api.github.com/repos/dask/dask/issues/9093/labels{/name}",
    "comments_url": "https://api.github.com/repos/dask/dask/issues/9093/comments",
    "events_url": "https://api.github.com/repos/dask/dask/issues/9093/events",
    "html_url": "https://github.com/dask/dask/issues/9093",
    "id": 1237393141,
    "node_id": "I_kwDOAbcwm85JwR71",
    "number": 9093,
    "title": "`GroupBy.agg()` fails when grouping by all columns",
    "user": {
        "login": "charlesbluca",
        "id": 20627856,
        "node_id": "MDQ6VXNlcjIwNjI3ODU2",
        "avatar_url": "https://avatars.githubusercontent.com/u/20627856?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/charlesbluca",
        "html_url": "https://github.com/charlesbluca",
        "followers_url": "https://api.github.com/users/charlesbluca/followers",
        "following_url": "https://api.github.com/users/charlesbluca/following{/other_user}",
        "gists_url": "https://api.github.com/users/charlesbluca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/charlesbluca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/charlesbluca/subscriptions",
        "organizations_url": "https://api.github.com/users/charlesbluca/orgs",
        "repos_url": "https://api.github.com/users/charlesbluca/repos",
        "events_url": "https://api.github.com/users/charlesbluca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/charlesbluca/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 242862289,
            "node_id": "MDU6TGFiZWwyNDI4NjIyODk=",
            "url": "https://api.github.com/repos/dask/dask/labels/dataframe",
            "name": "dataframe",
            "color": "fbca04",
            "default": false,
            "description": null
        },
        {
            "id": 3468123446,
            "node_id": "LA_kwDOAbcwm87Ot102",
            "url": "https://api.github.com/repos/dask/dask/labels/needs%20attention",
            "name": "needs attention",
            "color": "6d626c",
            "default": false,
            "description": "It's been a while since this was pushed on. Needs attention from the owner or a maintainer."
        },
        {
            "id": 3798450413,
            "node_id": "LA_kwDOAbcwm87iZ8Dt",
            "url": "https://api.github.com/repos/dask/dask/labels/bug",
            "name": "bug",
            "color": "faadaf",
            "default": true,
            "description": "Something is broken"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2022-05-16T16:19:49Z",
    "updated_at": "2022-06-20T02:12:57Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "<!-- Please include a self-contained copy-pastable example that generates the issue if possible.\r\n\r\nPlease be concise with code posted. See guidelines below on how to provide a good bug report:\r\n\r\n- Craft Minimal Bug Reports http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports\r\n- Minimal Complete Verifiable Examples https://stackoverflow.com/help/mcve\r\n\r\nBug reports that follow these guidelines are easier to diagnose, and so are often handled much more quickly.\r\n-->\r\n\r\n**What happened**:\r\nWhile attempting to compute a groupby aggregation on all columns using `agg`, I either get the incorrect result (single-column case), or run into the following stacktrace (multi-column case):\r\n\r\n```\r\n*** ValueError: Metadata inference failed in `_agg_finalize`.\r\n\r\nYou have supplied a custom function and Dask is unable to \r\ndetermine the type of output that that function returns. \r\n\r\nTo resolve this please provide a meta= keyword.\r\nThe docstring of the Dask function you ran should have more information.\r\n\r\nOriginal error is below:\r\n------------------------\r\nValueError('multiple levels only valid with MultiIndex')\r\n\r\nTraceback:\r\n---------\r\n  File \"/datasets/charlesb/dev/rapids/dask/dask/dataframe/utils.py\", line 182, in raise_on_meta_error\r\n    yield\r\n  File \"/datasets/charlesb/dev/rapids/dask/dask/dataframe/core.py\", line 6337, in _emulate\r\n    return func(*_extract_meta(args, True), **_extract_meta(kwargs, True))\r\n  File \"/datasets/charlesb/dev/rapids/dask/dask/dataframe/groupby.py\", line 977, in _agg_finalize\r\n    df = _groupby_apply_funcs(\r\n  File \"/datasets/charlesb/dev/rapids/dask/dask/dataframe/groupby.py\", line 943, in _groupby_apply_funcs\r\n    grouped = _groupby_raise_unaligned(df, **kwargs)\r\n  File \"/datasets/charlesb/dev/rapids/dask/dask/dataframe/groupby.py\", line 159, in _groupby_raise_unaligned\r\n    return df.groupby(**kwargs)\r\n  File \"/datasets/charlesb/dev/rapids/compose/etc/conda/cuda_11.5/envs/rapids/lib/python3.9/site-packages/pandas/core/frame.py\", line 7631, in groupby\r\n    return DataFrameGroupBy(\r\n  File \"/datasets/charlesb/dev/rapids/compose/etc/conda/cuda_11.5/envs/rapids/lib/python3.9/site-packages/pandas/core/groupby/groupby.py\", line 889, in __init__\r\n    grouper, exclusions, obj = get_grouper(\r\n  File \"/datasets/charlesb/dev/rapids/compose/etc/conda/cuda_11.5/envs/rapids/lib/python3.9/site-packages/pandas/core/groupby/grouper.py\", line 746, in get_grouper\r\n    raise ValueError(\"multiple levels only valid with MultiIndex\")\r\n(Pdb) pdf.groupby([\"x\", \"y\"]).agg(\"min\").reset_index()\r\n      x         y\r\n0     0 -4.096571\r\n1     0 -3.809079\r\n2     0 -3.673187\r\n3     0 -3.585573\r\n4     0 -3.118980\r\n...  ..       ...\r\n9995  4  2.692826\r\n9996  4  2.735398\r\n9997  4  2.884176\r\n9998  4  2.899671\r\n9999  4  3.113834\r\n\r\n[10000 rows x 2 columns]\r\n(Pdb) ddf.groupby([\"x\", \"y\"]).agg(\"min\")\r\n*** ValueError: Metadata inference failed in `_agg_finalize`.\r\n\r\nYou have supplied a custom function and Dask is unable to \r\ndetermine the type of output that that function returns. \r\n\r\nTo resolve this please provide a meta= keyword.\r\nThe docstring of the Dask function you ran should have more information.\r\n\r\nOriginal error is below:\r\n------------------------\r\nValueError('multiple levels only valid with MultiIndex')\r\n\r\nTraceback:\r\n---------\r\n  File \"/datasets/charlesb/dev/rapids/dask/dask/dataframe/utils.py\", line 182, in raise_on_meta_error\r\n    yield\r\n  File \"/datasets/charlesb/dev/rapids/dask/dask/dataframe/core.py\", line 6337, in _emulate\r\n    return func(*_extract_meta(args, True), **_extract_meta(kwargs, True))\r\n  File \"/datasets/charlesb/dev/rapids/dask/dask/dataframe/groupby.py\", line 977, in _agg_finalize\r\n    df = _groupby_apply_funcs(\r\n  File \"/datasets/charlesb/dev/rapids/dask/dask/dataframe/groupby.py\", line 943, in _groupby_apply_funcs\r\n    grouped = _groupby_raise_unaligned(df, **kwargs)\r\n  File \"/datasets/charlesb/dev/rapids/dask/dask/dataframe/groupby.py\", line 159, in _groupby_raise_unaligned\r\n    return df.groupby(**kwargs)\r\n  File \"/datasets/charlesb/dev/rapids/compose/etc/conda/cuda_11.5/envs/rapids/lib/python3.9/site-packages/pandas/core/frame.py\", line 7631, in groupby\r\n    return DataFrameGroupBy(\r\n  File \"/datasets/charlesb/dev/rapids/compose/etc/conda/cuda_11.5/envs/rapids/lib/python3.9/site-packages/pandas/core/groupby/groupby.py\", line 889, in __init__\r\n    grouper, exclusions, obj = get_grouper(\r\n  File \"/datasets/charlesb/dev/rapids/compose/etc/conda/cuda_11.5/envs/rapids/lib/python3.9/site-packages/pandas/core/groupby/grouper.py\", line 746, in get_grouper\r\n    raise ValueError(\"multiple levels only valid with MultiIndex\")\r\n```\r\n\r\n**What you expected to happen**:\r\nI would assume doing a groupby `agg` on all columns would give me an empty dataframe, with an `Index` of all groups; this works on Pandas and also works when using the equivalent aggregation method. \r\n\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\nSingle-column case:\r\n\r\n```python\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\n\r\npdf = pd.DataFrame(\r\n    {\r\n        \"x\": list(range(10)),\r\n    }\r\n)\r\n\r\nddf = dd.from_pandas(pdf, npartitions=5)\r\n\r\ndd.assert_eq(\r\n    pdf.groupby([\"x\"]).min(),\r\n    ddf.groupby([\"x\"]).min()\r\n)\r\n\r\ndd.assert_eq(                       # DataFrame shape mismatch\r\n    pdf.groupby([\"x\"]).agg(\"min\"),  # [left]:  (10, 0)\r\n    ddf.groupby([\"x\"]).agg(\"min\")   # [right]: (0, 0)\r\n)\r\n```\r\n\r\nMulti-column case:\r\n\r\n```python\r\nimport dask.dataframe as dd\r\nimport pandas as pd\r\n\r\npdf = pd.DataFrame(\r\n    {\r\n        \"x\": list(range(10)),\r\n        \"y\": list(range(10, 20)),\r\n    }\r\n)\r\n\r\nddf = dd.from_pandas(pdf, npartitions=5)\r\n\r\n\r\npdf.groupby([\"x\", \"y\"]).agg(\"min\")\r\nddf.groupby([\"x\", \"y\"]).min()\r\nddf.groupby([\"x\", \"y\"]).agg(\"min\")  # errors\r\n```\r\n\r\n\r\n**Anything else we need to know?**:\r\nEncountered this while working on implementing this functionality for dask-cudf; see https://github.com/rapidsai/cudf/issues/10863 for more context.\r\n\r\n**Environment**:\r\n\r\n- Dask version: latest `main`\r\n- Python version: 3.9\r\n- Operating System: ubuntu 20.04\r\n- Install method (conda, pip, source): source",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/dask/dask/issues/9093/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/dask/dask/issues/9093/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}